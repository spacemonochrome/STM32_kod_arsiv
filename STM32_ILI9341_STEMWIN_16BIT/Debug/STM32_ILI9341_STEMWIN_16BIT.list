
STM32_ILI9341_STEMWIN_16BIT.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000fc08  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002e5c  0800fd90  0800fd90  0001fd90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08012bec  08012bec  000301f8  2**0
                  CONTENTS
  4 .ARM          00000008  08012bec  08012bec  00022bec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08012bf4  08012bf4  000301f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08012bf4  08012bf4  00022bf4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08012bf8  08012bf8  00022bf8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001f8  20000000  08012bfc  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00002c34  200001f8  08012df4  000301f8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20002e2c  08012df4  00032e2c  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  000301f8  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001076e  00000000  00000000  00030226  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00001e68  00000000  00000000  00040994  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000007b8  00000000  00000000  00042800  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000006b0  00000000  00000000  00042fb8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000238d2  00000000  00000000  00043668  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00007e31  00000000  00000000  00066f3a  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000d19bd  00000000  00000000  0006ed6b  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      000000fd  00000000  00000000  00140728  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001de8  00000000  00000000  00140828  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	200001f8 	.word	0x200001f8
 80001a4:	00000000 	.word	0x00000000
 80001a8:	0800fd78 	.word	0x0800fd78

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	200001fc 	.word	0x200001fc
 80001c4:	0800fd78 	.word	0x0800fd78

080001c8 <strlen>:
 80001c8:	4603      	mov	r3, r0
 80001ca:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001ce:	2a00      	cmp	r2, #0
 80001d0:	d1fb      	bne.n	80001ca <strlen+0x2>
 80001d2:	1a18      	subs	r0, r3, r0
 80001d4:	3801      	subs	r0, #1
 80001d6:	4770      	bx	lr

080001d8 <__aeabi_uldivmod>:
 80001d8:	b953      	cbnz	r3, 80001f0 <__aeabi_uldivmod+0x18>
 80001da:	b94a      	cbnz	r2, 80001f0 <__aeabi_uldivmod+0x18>
 80001dc:	2900      	cmp	r1, #0
 80001de:	bf08      	it	eq
 80001e0:	2800      	cmpeq	r0, #0
 80001e2:	bf1c      	itt	ne
 80001e4:	f04f 31ff 	movne.w	r1, #4294967295
 80001e8:	f04f 30ff 	movne.w	r0, #4294967295
 80001ec:	f000 b972 	b.w	80004d4 <__aeabi_idiv0>
 80001f0:	f1ad 0c08 	sub.w	ip, sp, #8
 80001f4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001f8:	f000 f806 	bl	8000208 <__udivmoddi4>
 80001fc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000200:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000204:	b004      	add	sp, #16
 8000206:	4770      	bx	lr

08000208 <__udivmoddi4>:
 8000208:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800020c:	9e08      	ldr	r6, [sp, #32]
 800020e:	4604      	mov	r4, r0
 8000210:	4688      	mov	r8, r1
 8000212:	2b00      	cmp	r3, #0
 8000214:	d14b      	bne.n	80002ae <__udivmoddi4+0xa6>
 8000216:	428a      	cmp	r2, r1
 8000218:	4615      	mov	r5, r2
 800021a:	d967      	bls.n	80002ec <__udivmoddi4+0xe4>
 800021c:	fab2 f282 	clz	r2, r2
 8000220:	b14a      	cbz	r2, 8000236 <__udivmoddi4+0x2e>
 8000222:	f1c2 0720 	rsb	r7, r2, #32
 8000226:	fa01 f302 	lsl.w	r3, r1, r2
 800022a:	fa20 f707 	lsr.w	r7, r0, r7
 800022e:	4095      	lsls	r5, r2
 8000230:	ea47 0803 	orr.w	r8, r7, r3
 8000234:	4094      	lsls	r4, r2
 8000236:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 800023a:	0c23      	lsrs	r3, r4, #16
 800023c:	fbb8 f7fe 	udiv	r7, r8, lr
 8000240:	fa1f fc85 	uxth.w	ip, r5
 8000244:	fb0e 8817 	mls	r8, lr, r7, r8
 8000248:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800024c:	fb07 f10c 	mul.w	r1, r7, ip
 8000250:	4299      	cmp	r1, r3
 8000252:	d909      	bls.n	8000268 <__udivmoddi4+0x60>
 8000254:	18eb      	adds	r3, r5, r3
 8000256:	f107 30ff 	add.w	r0, r7, #4294967295
 800025a:	f080 811b 	bcs.w	8000494 <__udivmoddi4+0x28c>
 800025e:	4299      	cmp	r1, r3
 8000260:	f240 8118 	bls.w	8000494 <__udivmoddi4+0x28c>
 8000264:	3f02      	subs	r7, #2
 8000266:	442b      	add	r3, r5
 8000268:	1a5b      	subs	r3, r3, r1
 800026a:	b2a4      	uxth	r4, r4
 800026c:	fbb3 f0fe 	udiv	r0, r3, lr
 8000270:	fb0e 3310 	mls	r3, lr, r0, r3
 8000274:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000278:	fb00 fc0c 	mul.w	ip, r0, ip
 800027c:	45a4      	cmp	ip, r4
 800027e:	d909      	bls.n	8000294 <__udivmoddi4+0x8c>
 8000280:	192c      	adds	r4, r5, r4
 8000282:	f100 33ff 	add.w	r3, r0, #4294967295
 8000286:	f080 8107 	bcs.w	8000498 <__udivmoddi4+0x290>
 800028a:	45a4      	cmp	ip, r4
 800028c:	f240 8104 	bls.w	8000498 <__udivmoddi4+0x290>
 8000290:	3802      	subs	r0, #2
 8000292:	442c      	add	r4, r5
 8000294:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000298:	eba4 040c 	sub.w	r4, r4, ip
 800029c:	2700      	movs	r7, #0
 800029e:	b11e      	cbz	r6, 80002a8 <__udivmoddi4+0xa0>
 80002a0:	40d4      	lsrs	r4, r2
 80002a2:	2300      	movs	r3, #0
 80002a4:	e9c6 4300 	strd	r4, r3, [r6]
 80002a8:	4639      	mov	r1, r7
 80002aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002ae:	428b      	cmp	r3, r1
 80002b0:	d909      	bls.n	80002c6 <__udivmoddi4+0xbe>
 80002b2:	2e00      	cmp	r6, #0
 80002b4:	f000 80eb 	beq.w	800048e <__udivmoddi4+0x286>
 80002b8:	2700      	movs	r7, #0
 80002ba:	e9c6 0100 	strd	r0, r1, [r6]
 80002be:	4638      	mov	r0, r7
 80002c0:	4639      	mov	r1, r7
 80002c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002c6:	fab3 f783 	clz	r7, r3
 80002ca:	2f00      	cmp	r7, #0
 80002cc:	d147      	bne.n	800035e <__udivmoddi4+0x156>
 80002ce:	428b      	cmp	r3, r1
 80002d0:	d302      	bcc.n	80002d8 <__udivmoddi4+0xd0>
 80002d2:	4282      	cmp	r2, r0
 80002d4:	f200 80fa 	bhi.w	80004cc <__udivmoddi4+0x2c4>
 80002d8:	1a84      	subs	r4, r0, r2
 80002da:	eb61 0303 	sbc.w	r3, r1, r3
 80002de:	2001      	movs	r0, #1
 80002e0:	4698      	mov	r8, r3
 80002e2:	2e00      	cmp	r6, #0
 80002e4:	d0e0      	beq.n	80002a8 <__udivmoddi4+0xa0>
 80002e6:	e9c6 4800 	strd	r4, r8, [r6]
 80002ea:	e7dd      	b.n	80002a8 <__udivmoddi4+0xa0>
 80002ec:	b902      	cbnz	r2, 80002f0 <__udivmoddi4+0xe8>
 80002ee:	deff      	udf	#255	; 0xff
 80002f0:	fab2 f282 	clz	r2, r2
 80002f4:	2a00      	cmp	r2, #0
 80002f6:	f040 808f 	bne.w	8000418 <__udivmoddi4+0x210>
 80002fa:	1b49      	subs	r1, r1, r5
 80002fc:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000300:	fa1f f885 	uxth.w	r8, r5
 8000304:	2701      	movs	r7, #1
 8000306:	fbb1 fcfe 	udiv	ip, r1, lr
 800030a:	0c23      	lsrs	r3, r4, #16
 800030c:	fb0e 111c 	mls	r1, lr, ip, r1
 8000310:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000314:	fb08 f10c 	mul.w	r1, r8, ip
 8000318:	4299      	cmp	r1, r3
 800031a:	d907      	bls.n	800032c <__udivmoddi4+0x124>
 800031c:	18eb      	adds	r3, r5, r3
 800031e:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000322:	d202      	bcs.n	800032a <__udivmoddi4+0x122>
 8000324:	4299      	cmp	r1, r3
 8000326:	f200 80cd 	bhi.w	80004c4 <__udivmoddi4+0x2bc>
 800032a:	4684      	mov	ip, r0
 800032c:	1a59      	subs	r1, r3, r1
 800032e:	b2a3      	uxth	r3, r4
 8000330:	fbb1 f0fe 	udiv	r0, r1, lr
 8000334:	fb0e 1410 	mls	r4, lr, r0, r1
 8000338:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 800033c:	fb08 f800 	mul.w	r8, r8, r0
 8000340:	45a0      	cmp	r8, r4
 8000342:	d907      	bls.n	8000354 <__udivmoddi4+0x14c>
 8000344:	192c      	adds	r4, r5, r4
 8000346:	f100 33ff 	add.w	r3, r0, #4294967295
 800034a:	d202      	bcs.n	8000352 <__udivmoddi4+0x14a>
 800034c:	45a0      	cmp	r8, r4
 800034e:	f200 80b6 	bhi.w	80004be <__udivmoddi4+0x2b6>
 8000352:	4618      	mov	r0, r3
 8000354:	eba4 0408 	sub.w	r4, r4, r8
 8000358:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 800035c:	e79f      	b.n	800029e <__udivmoddi4+0x96>
 800035e:	f1c7 0c20 	rsb	ip, r7, #32
 8000362:	40bb      	lsls	r3, r7
 8000364:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000368:	ea4e 0e03 	orr.w	lr, lr, r3
 800036c:	fa01 f407 	lsl.w	r4, r1, r7
 8000370:	fa20 f50c 	lsr.w	r5, r0, ip
 8000374:	fa21 f30c 	lsr.w	r3, r1, ip
 8000378:	ea4f 481e 	mov.w	r8, lr, lsr #16
 800037c:	4325      	orrs	r5, r4
 800037e:	fbb3 f9f8 	udiv	r9, r3, r8
 8000382:	0c2c      	lsrs	r4, r5, #16
 8000384:	fb08 3319 	mls	r3, r8, r9, r3
 8000388:	fa1f fa8e 	uxth.w	sl, lr
 800038c:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000390:	fb09 f40a 	mul.w	r4, r9, sl
 8000394:	429c      	cmp	r4, r3
 8000396:	fa02 f207 	lsl.w	r2, r2, r7
 800039a:	fa00 f107 	lsl.w	r1, r0, r7
 800039e:	d90b      	bls.n	80003b8 <__udivmoddi4+0x1b0>
 80003a0:	eb1e 0303 	adds.w	r3, lr, r3
 80003a4:	f109 30ff 	add.w	r0, r9, #4294967295
 80003a8:	f080 8087 	bcs.w	80004ba <__udivmoddi4+0x2b2>
 80003ac:	429c      	cmp	r4, r3
 80003ae:	f240 8084 	bls.w	80004ba <__udivmoddi4+0x2b2>
 80003b2:	f1a9 0902 	sub.w	r9, r9, #2
 80003b6:	4473      	add	r3, lr
 80003b8:	1b1b      	subs	r3, r3, r4
 80003ba:	b2ad      	uxth	r5, r5
 80003bc:	fbb3 f0f8 	udiv	r0, r3, r8
 80003c0:	fb08 3310 	mls	r3, r8, r0, r3
 80003c4:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 80003c8:	fb00 fa0a 	mul.w	sl, r0, sl
 80003cc:	45a2      	cmp	sl, r4
 80003ce:	d908      	bls.n	80003e2 <__udivmoddi4+0x1da>
 80003d0:	eb1e 0404 	adds.w	r4, lr, r4
 80003d4:	f100 33ff 	add.w	r3, r0, #4294967295
 80003d8:	d26b      	bcs.n	80004b2 <__udivmoddi4+0x2aa>
 80003da:	45a2      	cmp	sl, r4
 80003dc:	d969      	bls.n	80004b2 <__udivmoddi4+0x2aa>
 80003de:	3802      	subs	r0, #2
 80003e0:	4474      	add	r4, lr
 80003e2:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 80003e6:	fba0 8902 	umull	r8, r9, r0, r2
 80003ea:	eba4 040a 	sub.w	r4, r4, sl
 80003ee:	454c      	cmp	r4, r9
 80003f0:	46c2      	mov	sl, r8
 80003f2:	464b      	mov	r3, r9
 80003f4:	d354      	bcc.n	80004a0 <__udivmoddi4+0x298>
 80003f6:	d051      	beq.n	800049c <__udivmoddi4+0x294>
 80003f8:	2e00      	cmp	r6, #0
 80003fa:	d069      	beq.n	80004d0 <__udivmoddi4+0x2c8>
 80003fc:	ebb1 050a 	subs.w	r5, r1, sl
 8000400:	eb64 0403 	sbc.w	r4, r4, r3
 8000404:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000408:	40fd      	lsrs	r5, r7
 800040a:	40fc      	lsrs	r4, r7
 800040c:	ea4c 0505 	orr.w	r5, ip, r5
 8000410:	e9c6 5400 	strd	r5, r4, [r6]
 8000414:	2700      	movs	r7, #0
 8000416:	e747      	b.n	80002a8 <__udivmoddi4+0xa0>
 8000418:	f1c2 0320 	rsb	r3, r2, #32
 800041c:	fa20 f703 	lsr.w	r7, r0, r3
 8000420:	4095      	lsls	r5, r2
 8000422:	fa01 f002 	lsl.w	r0, r1, r2
 8000426:	fa21 f303 	lsr.w	r3, r1, r3
 800042a:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 800042e:	4338      	orrs	r0, r7
 8000430:	0c01      	lsrs	r1, r0, #16
 8000432:	fbb3 f7fe 	udiv	r7, r3, lr
 8000436:	fa1f f885 	uxth.w	r8, r5
 800043a:	fb0e 3317 	mls	r3, lr, r7, r3
 800043e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000442:	fb07 f308 	mul.w	r3, r7, r8
 8000446:	428b      	cmp	r3, r1
 8000448:	fa04 f402 	lsl.w	r4, r4, r2
 800044c:	d907      	bls.n	800045e <__udivmoddi4+0x256>
 800044e:	1869      	adds	r1, r5, r1
 8000450:	f107 3cff 	add.w	ip, r7, #4294967295
 8000454:	d22f      	bcs.n	80004b6 <__udivmoddi4+0x2ae>
 8000456:	428b      	cmp	r3, r1
 8000458:	d92d      	bls.n	80004b6 <__udivmoddi4+0x2ae>
 800045a:	3f02      	subs	r7, #2
 800045c:	4429      	add	r1, r5
 800045e:	1acb      	subs	r3, r1, r3
 8000460:	b281      	uxth	r1, r0
 8000462:	fbb3 f0fe 	udiv	r0, r3, lr
 8000466:	fb0e 3310 	mls	r3, lr, r0, r3
 800046a:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800046e:	fb00 f308 	mul.w	r3, r0, r8
 8000472:	428b      	cmp	r3, r1
 8000474:	d907      	bls.n	8000486 <__udivmoddi4+0x27e>
 8000476:	1869      	adds	r1, r5, r1
 8000478:	f100 3cff 	add.w	ip, r0, #4294967295
 800047c:	d217      	bcs.n	80004ae <__udivmoddi4+0x2a6>
 800047e:	428b      	cmp	r3, r1
 8000480:	d915      	bls.n	80004ae <__udivmoddi4+0x2a6>
 8000482:	3802      	subs	r0, #2
 8000484:	4429      	add	r1, r5
 8000486:	1ac9      	subs	r1, r1, r3
 8000488:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 800048c:	e73b      	b.n	8000306 <__udivmoddi4+0xfe>
 800048e:	4637      	mov	r7, r6
 8000490:	4630      	mov	r0, r6
 8000492:	e709      	b.n	80002a8 <__udivmoddi4+0xa0>
 8000494:	4607      	mov	r7, r0
 8000496:	e6e7      	b.n	8000268 <__udivmoddi4+0x60>
 8000498:	4618      	mov	r0, r3
 800049a:	e6fb      	b.n	8000294 <__udivmoddi4+0x8c>
 800049c:	4541      	cmp	r1, r8
 800049e:	d2ab      	bcs.n	80003f8 <__udivmoddi4+0x1f0>
 80004a0:	ebb8 0a02 	subs.w	sl, r8, r2
 80004a4:	eb69 020e 	sbc.w	r2, r9, lr
 80004a8:	3801      	subs	r0, #1
 80004aa:	4613      	mov	r3, r2
 80004ac:	e7a4      	b.n	80003f8 <__udivmoddi4+0x1f0>
 80004ae:	4660      	mov	r0, ip
 80004b0:	e7e9      	b.n	8000486 <__udivmoddi4+0x27e>
 80004b2:	4618      	mov	r0, r3
 80004b4:	e795      	b.n	80003e2 <__udivmoddi4+0x1da>
 80004b6:	4667      	mov	r7, ip
 80004b8:	e7d1      	b.n	800045e <__udivmoddi4+0x256>
 80004ba:	4681      	mov	r9, r0
 80004bc:	e77c      	b.n	80003b8 <__udivmoddi4+0x1b0>
 80004be:	3802      	subs	r0, #2
 80004c0:	442c      	add	r4, r5
 80004c2:	e747      	b.n	8000354 <__udivmoddi4+0x14c>
 80004c4:	f1ac 0c02 	sub.w	ip, ip, #2
 80004c8:	442b      	add	r3, r5
 80004ca:	e72f      	b.n	800032c <__udivmoddi4+0x124>
 80004cc:	4638      	mov	r0, r7
 80004ce:	e708      	b.n	80002e2 <__udivmoddi4+0xda>
 80004d0:	4637      	mov	r7, r6
 80004d2:	e6e9      	b.n	80002a8 <__udivmoddi4+0xa0>

080004d4 <__aeabi_idiv0>:
 80004d4:	4770      	bx	lr
 80004d6:	bf00      	nop

080004d8 <GUI_X_Config>:
*
* Purpose:
*   Called during the initialization process in order to set up the
*   available memory for the GUI.
*/
void GUI_X_Config(void) {
 80004d8:	b580      	push	{r7, lr}
 80004da:	af00      	add	r7, sp, #0
  //
  static U32 aMemory[GUI_NUMBYTES / 4];
  //
  // Assign memory to emWin
  //
  GUI_ALLOC_AssignMemory(aMemory, GUI_NUMBYTES);
 80004dc:	f44f 5120 	mov.w	r1, #10240	; 0x2800
 80004e0:	4803      	ldr	r0, [pc, #12]	; (80004f0 <GUI_X_Config+0x18>)
 80004e2:	f00a ffe7 	bl	800b4b4 <GUI_ALLOC_AssignMemory>
  //
  // Set default font
  //
  GUI_SetDefaultFont(GUI_FONT_6X8);
 80004e6:	4803      	ldr	r0, [pc, #12]	; (80004f4 <GUI_X_Config+0x1c>)
 80004e8:	f00a f912 	bl	800a710 <GUI_SetDefaultFont>
}
 80004ec:	bf00      	nop
 80004ee:	bd80      	pop	{r7, pc}
 80004f0:	20000214 	.word	0x20000214
 80004f4:	0800ff4c 	.word	0x0800ff4c

080004f8 <GUI_X_GetTime>:
  Some timing dependent routines require a GetTime
  and delay function. Default time unit (tick), normally is
  1 ms.
*/

GUI_TIMER_TIME GUI_X_GetTime(void) { 
 80004f8:	b480      	push	{r7}
 80004fa:	af00      	add	r7, sp, #0
  return OS_TimeMS; 
 80004fc:	4b03      	ldr	r3, [pc, #12]	; (800050c <GUI_X_GetTime+0x14>)
 80004fe:	681b      	ldr	r3, [r3, #0]
}
 8000500:	4618      	mov	r0, r3
 8000502:	46bd      	mov	sp, r7
 8000504:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000508:	4770      	bx	lr
 800050a:	bf00      	nop
 800050c:	20002bd0 	.word	0x20002bd0

08000510 <GUI_X_Init>:
*     GUI_X_Init() is called from GUI_Init is a possibility to init
*     some hardware which needs to be up and running before the GUI.
*     If not required, leave this routine blank.
*/

void GUI_X_Init(void) {}
 8000510:	b480      	push	{r7}
 8000512:	af00      	add	r7, sp, #0
 8000514:	bf00      	nop
 8000516:	46bd      	mov	sp, r7
 8000518:	f85d 7b04 	ldr.w	r7, [sp], #4
 800051c:	4770      	bx	lr

0800051e <LcdWriteReg>:
*
* Function description:
*   Sets display register
*/
static void LcdWriteReg(U16 Data)
{
 800051e:	b480      	push	{r7}
 8000520:	b083      	sub	sp, #12
 8000522:	af00      	add	r7, sp, #0
 8000524:	4603      	mov	r3, r0
 8000526:	80fb      	strh	r3, [r7, #6]
	LCD_REG = Data;
 8000528:	f04f 42c0 	mov.w	r2, #1610612736	; 0x60000000
 800052c:	88fb      	ldrh	r3, [r7, #6]
 800052e:	8013      	strh	r3, [r2, #0]
}
 8000530:	bf00      	nop
 8000532:	370c      	adds	r7, #12
 8000534:	46bd      	mov	sp, r7
 8000536:	f85d 7b04 	ldr.w	r7, [sp], #4
 800053a:	4770      	bx	lr

0800053c <LcdWriteData>:
*
* Function description:
*   Writes a value to a display register
*/
static void LcdWriteData(U16 Data)
{
 800053c:	b480      	push	{r7}
 800053e:	b083      	sub	sp, #12
 8000540:	af00      	add	r7, sp, #0
 8000542:	4603      	mov	r3, r0
 8000544:	80fb      	strh	r3, [r7, #6]
	LCD_RAM = Data;
 8000546:	4a04      	ldr	r2, [pc, #16]	; (8000558 <LcdWriteData+0x1c>)
 8000548:	88fb      	ldrh	r3, [r7, #6]
 800054a:	8013      	strh	r3, [r2, #0]
}
 800054c:	bf00      	nop
 800054e:	370c      	adds	r7, #12
 8000550:	46bd      	mov	sp, r7
 8000552:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000556:	4770      	bx	lr
 8000558:	60020000 	.word	0x60020000

0800055c <LcdWriteDataMultiple>:
*       LcdWriteDataMultiple
*
* Function description:
*   Writes multiple values to a display register.
*/
static void LcdWriteDataMultiple(U16 * pData, int NumItems) {
 800055c:	b480      	push	{r7}
 800055e:	b083      	sub	sp, #12
 8000560:	af00      	add	r7, sp, #0
 8000562:	6078      	str	r0, [r7, #4]
 8000564:	6039      	str	r1, [r7, #0]

	while (NumItems--)
 8000566:	e005      	b.n	8000574 <LcdWriteDataMultiple+0x18>
	{
		LCD_RAM = *pData++;
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	1c9a      	adds	r2, r3, #2
 800056c:	607a      	str	r2, [r7, #4]
 800056e:	4a07      	ldr	r2, [pc, #28]	; (800058c <LcdWriteDataMultiple+0x30>)
 8000570:	881b      	ldrh	r3, [r3, #0]
 8000572:	8013      	strh	r3, [r2, #0]
	while (NumItems--)
 8000574:	683b      	ldr	r3, [r7, #0]
 8000576:	1e5a      	subs	r2, r3, #1
 8000578:	603a      	str	r2, [r7, #0]
 800057a:	2b00      	cmp	r3, #0
 800057c:	d1f4      	bne.n	8000568 <LcdWriteDataMultiple+0xc>
	}
}
 800057e:	bf00      	nop
 8000580:	370c      	adds	r7, #12
 8000582:	46bd      	mov	sp, r7
 8000584:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000588:	4770      	bx	lr
 800058a:	bf00      	nop
 800058c:	60020000 	.word	0x60020000

08000590 <LcdInit>:
  while (NumItems--) {
    // ... TBD by user
  }
}

void LcdInit(void) {
 8000590:	b580      	push	{r7, lr}
 8000592:	af00      	add	r7, sp, #0

    HAL_Delay(5);
 8000594:	2005      	movs	r0, #5
 8000596:	f000 fdad 	bl	80010f4 <HAL_Delay>

    LcdWriteReg(ILI9341_DISPLAY_OFF);
 800059a:	2028      	movs	r0, #40	; 0x28
 800059c:	f7ff ffbf 	bl	800051e <LcdWriteReg>

    LcdWriteReg(ILI9341_POWERA);
 80005a0:	20cb      	movs	r0, #203	; 0xcb
 80005a2:	f7ff ffbc 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x39);
 80005a6:	2039      	movs	r0, #57	; 0x39
 80005a8:	f7ff ffc8 	bl	800053c <LcdWriteData>
    LcdWriteData(0x2C);
 80005ac:	202c      	movs	r0, #44	; 0x2c
 80005ae:	f7ff ffc5 	bl	800053c <LcdWriteData>
    LcdWriteData(0x00);
 80005b2:	2000      	movs	r0, #0
 80005b4:	f7ff ffc2 	bl	800053c <LcdWriteData>
    LcdWriteData(0x34);
 80005b8:	2034      	movs	r0, #52	; 0x34
 80005ba:	f7ff ffbf 	bl	800053c <LcdWriteData>
    LcdWriteData(0x02);
 80005be:	2002      	movs	r0, #2
 80005c0:	f7ff ffbc 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_POWERB);
 80005c4:	20cf      	movs	r0, #207	; 0xcf
 80005c6:	f7ff ffaa 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x00);
 80005ca:	2000      	movs	r0, #0
 80005cc:	f7ff ffb6 	bl	800053c <LcdWriteData>
    LcdWriteData(0xC1);
 80005d0:	20c1      	movs	r0, #193	; 0xc1
 80005d2:	f7ff ffb3 	bl	800053c <LcdWriteData>
    LcdWriteData(0x30);
 80005d6:	2030      	movs	r0, #48	; 0x30
 80005d8:	f7ff ffb0 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_DTCA);
 80005dc:	20e8      	movs	r0, #232	; 0xe8
 80005de:	f7ff ff9e 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x85);
 80005e2:	2085      	movs	r0, #133	; 0x85
 80005e4:	f7ff ffaa 	bl	800053c <LcdWriteData>
    LcdWriteData(0x00);
 80005e8:	2000      	movs	r0, #0
 80005ea:	f7ff ffa7 	bl	800053c <LcdWriteData>
    LcdWriteData(0x78);
 80005ee:	2078      	movs	r0, #120	; 0x78
 80005f0:	f7ff ffa4 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_DTCB);
 80005f4:	20ea      	movs	r0, #234	; 0xea
 80005f6:	f7ff ff92 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x00);
 80005fa:	2000      	movs	r0, #0
 80005fc:	f7ff ff9e 	bl	800053c <LcdWriteData>
    LcdWriteData(0x00);
 8000600:	2000      	movs	r0, #0
 8000602:	f7ff ff9b 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_POWER_SEQ);
 8000606:	20ed      	movs	r0, #237	; 0xed
 8000608:	f7ff ff89 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x64);
 800060c:	2064      	movs	r0, #100	; 0x64
 800060e:	f7ff ff95 	bl	800053c <LcdWriteData>
    LcdWriteData(0x03);
 8000612:	2003      	movs	r0, #3
 8000614:	f7ff ff92 	bl	800053c <LcdWriteData>
    LcdWriteData(0x12);
 8000618:	2012      	movs	r0, #18
 800061a:	f7ff ff8f 	bl	800053c <LcdWriteData>
    LcdWriteData(0x81);
 800061e:	2081      	movs	r0, #129	; 0x81
 8000620:	f7ff ff8c 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_PRC);
 8000624:	20f7      	movs	r0, #247	; 0xf7
 8000626:	f7ff ff7a 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x20);
 800062a:	2020      	movs	r0, #32
 800062c:	f7ff ff86 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_POWER1);
 8000630:	20c0      	movs	r0, #192	; 0xc0
 8000632:	f7ff ff74 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x23);
 8000636:	2023      	movs	r0, #35	; 0x23
 8000638:	f7ff ff80 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_POWER2);
 800063c:	20c1      	movs	r0, #193	; 0xc1
 800063e:	f7ff ff6e 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x10);
 8000642:	2010      	movs	r0, #16
 8000644:	f7ff ff7a 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_VCOM1);
 8000648:	20c5      	movs	r0, #197	; 0xc5
 800064a:	f7ff ff68 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x3E);
 800064e:	203e      	movs	r0, #62	; 0x3e
 8000650:	f7ff ff74 	bl	800053c <LcdWriteData>
    LcdWriteData(0x28);
 8000654:	2028      	movs	r0, #40	; 0x28
 8000656:	f7ff ff71 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_VCOM2);
 800065a:	20c7      	movs	r0, #199	; 0xc7
 800065c:	f7ff ff5f 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x86);
 8000660:	2086      	movs	r0, #134	; 0x86
 8000662:	f7ff ff6b 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_MAC);
 8000666:	2036      	movs	r0, #54	; 0x36
 8000668:	f7ff ff59 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x48);
 800066c:	2048      	movs	r0, #72	; 0x48
 800066e:	f7ff ff65 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_PIXEL_FORMAT);
 8000672:	203a      	movs	r0, #58	; 0x3a
 8000674:	f7ff ff53 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x55);
 8000678:	2055      	movs	r0, #85	; 0x55
 800067a:	f7ff ff5f 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_FRC);
 800067e:	20b1      	movs	r0, #177	; 0xb1
 8000680:	f7ff ff4d 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x00);
 8000684:	2000      	movs	r0, #0
 8000686:	f7ff ff59 	bl	800053c <LcdWriteData>
    LcdWriteData(0x18);
 800068a:	2018      	movs	r0, #24
 800068c:	f7ff ff56 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_DFC);
 8000690:	20b6      	movs	r0, #182	; 0xb6
 8000692:	f7ff ff44 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x08);
 8000696:	2008      	movs	r0, #8
 8000698:	f7ff ff50 	bl	800053c <LcdWriteData>
    LcdWriteData(0x82);
 800069c:	2082      	movs	r0, #130	; 0x82
 800069e:	f7ff ff4d 	bl	800053c <LcdWriteData>
    LcdWriteData(0x27);
 80006a2:	2027      	movs	r0, #39	; 0x27
 80006a4:	f7ff ff4a 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_3GAMMA_EN);
 80006a8:	20f2      	movs	r0, #242	; 0xf2
 80006aa:	f7ff ff38 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x00);
 80006ae:	2000      	movs	r0, #0
 80006b0:	f7ff ff44 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_COLUMN_ADDR);
 80006b4:	202a      	movs	r0, #42	; 0x2a
 80006b6:	f7ff ff32 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x00);
 80006ba:	2000      	movs	r0, #0
 80006bc:	f7ff ff3e 	bl	800053c <LcdWriteData>
    LcdWriteData(0x00);
 80006c0:	2000      	movs	r0, #0
 80006c2:	f7ff ff3b 	bl	800053c <LcdWriteData>
    LcdWriteData(0x00);
 80006c6:	2000      	movs	r0, #0
 80006c8:	f7ff ff38 	bl	800053c <LcdWriteData>
    LcdWriteData(0xEF);
 80006cc:	20ef      	movs	r0, #239	; 0xef
 80006ce:	f7ff ff35 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_PAGE_ADDR);
 80006d2:	202b      	movs	r0, #43	; 0x2b
 80006d4:	f7ff ff23 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x00);
 80006d8:	2000      	movs	r0, #0
 80006da:	f7ff ff2f 	bl	800053c <LcdWriteData>
    LcdWriteData(0x00);
 80006de:	2000      	movs	r0, #0
 80006e0:	f7ff ff2c 	bl	800053c <LcdWriteData>
    LcdWriteData(0x01);
 80006e4:	2001      	movs	r0, #1
 80006e6:	f7ff ff29 	bl	800053c <LcdWriteData>
    LcdWriteData(0x3F);
 80006ea:	203f      	movs	r0, #63	; 0x3f
 80006ec:	f7ff ff26 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_GAMMA);
 80006f0:	2026      	movs	r0, #38	; 0x26
 80006f2:	f7ff ff14 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x01);
 80006f6:	2001      	movs	r0, #1
 80006f8:	f7ff ff20 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_PGAMMA);
 80006fc:	20e0      	movs	r0, #224	; 0xe0
 80006fe:	f7ff ff0e 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x0F);
 8000702:	200f      	movs	r0, #15
 8000704:	f7ff ff1a 	bl	800053c <LcdWriteData>
    LcdWriteData(0x31);
 8000708:	2031      	movs	r0, #49	; 0x31
 800070a:	f7ff ff17 	bl	800053c <LcdWriteData>
    LcdWriteData(0x2B);
 800070e:	202b      	movs	r0, #43	; 0x2b
 8000710:	f7ff ff14 	bl	800053c <LcdWriteData>
    LcdWriteData(0x0C);
 8000714:	200c      	movs	r0, #12
 8000716:	f7ff ff11 	bl	800053c <LcdWriteData>
    LcdWriteData(0x0E);
 800071a:	200e      	movs	r0, #14
 800071c:	f7ff ff0e 	bl	800053c <LcdWriteData>
    LcdWriteData(0x08);
 8000720:	2008      	movs	r0, #8
 8000722:	f7ff ff0b 	bl	800053c <LcdWriteData>
    LcdWriteData(0x4E);
 8000726:	204e      	movs	r0, #78	; 0x4e
 8000728:	f7ff ff08 	bl	800053c <LcdWriteData>
    LcdWriteData(0xF1);
 800072c:	20f1      	movs	r0, #241	; 0xf1
 800072e:	f7ff ff05 	bl	800053c <LcdWriteData>
    LcdWriteData(0x37);
 8000732:	2037      	movs	r0, #55	; 0x37
 8000734:	f7ff ff02 	bl	800053c <LcdWriteData>
    LcdWriteData(0x07);
 8000738:	2007      	movs	r0, #7
 800073a:	f7ff feff 	bl	800053c <LcdWriteData>
    LcdWriteData(0x10);
 800073e:	2010      	movs	r0, #16
 8000740:	f7ff fefc 	bl	800053c <LcdWriteData>
    LcdWriteData(0x03);
 8000744:	2003      	movs	r0, #3
 8000746:	f7ff fef9 	bl	800053c <LcdWriteData>
    LcdWriteData(0x0E);
 800074a:	200e      	movs	r0, #14
 800074c:	f7ff fef6 	bl	800053c <LcdWriteData>
    LcdWriteData(0x09);
 8000750:	2009      	movs	r0, #9
 8000752:	f7ff fef3 	bl	800053c <LcdWriteData>
    LcdWriteData(0x00);
 8000756:	2000      	movs	r0, #0
 8000758:	f7ff fef0 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_NGAMMA);
 800075c:	20e1      	movs	r0, #225	; 0xe1
 800075e:	f7ff fede 	bl	800051e <LcdWriteReg>
    LcdWriteData(0x00);
 8000762:	2000      	movs	r0, #0
 8000764:	f7ff feea 	bl	800053c <LcdWriteData>
    LcdWriteData(0x0E);
 8000768:	200e      	movs	r0, #14
 800076a:	f7ff fee7 	bl	800053c <LcdWriteData>
    LcdWriteData(0x14);
 800076e:	2014      	movs	r0, #20
 8000770:	f7ff fee4 	bl	800053c <LcdWriteData>
    LcdWriteData(0x03);
 8000774:	2003      	movs	r0, #3
 8000776:	f7ff fee1 	bl	800053c <LcdWriteData>
    LcdWriteData(0x11);
 800077a:	2011      	movs	r0, #17
 800077c:	f7ff fede 	bl	800053c <LcdWriteData>
    LcdWriteData(0x07);
 8000780:	2007      	movs	r0, #7
 8000782:	f7ff fedb 	bl	800053c <LcdWriteData>
    LcdWriteData(0x31);
 8000786:	2031      	movs	r0, #49	; 0x31
 8000788:	f7ff fed8 	bl	800053c <LcdWriteData>
    LcdWriteData(0xC1);
 800078c:	20c1      	movs	r0, #193	; 0xc1
 800078e:	f7ff fed5 	bl	800053c <LcdWriteData>
    LcdWriteData(0x48);
 8000792:	2048      	movs	r0, #72	; 0x48
 8000794:	f7ff fed2 	bl	800053c <LcdWriteData>
    LcdWriteData(0x08);
 8000798:	2008      	movs	r0, #8
 800079a:	f7ff fecf 	bl	800053c <LcdWriteData>
    LcdWriteData(0x0F);
 800079e:	200f      	movs	r0, #15
 80007a0:	f7ff fecc 	bl	800053c <LcdWriteData>
    LcdWriteData(0x0C);
 80007a4:	200c      	movs	r0, #12
 80007a6:	f7ff fec9 	bl	800053c <LcdWriteData>
    LcdWriteData(0x31);
 80007aa:	2031      	movs	r0, #49	; 0x31
 80007ac:	f7ff fec6 	bl	800053c <LcdWriteData>
    LcdWriteData(0x36);
 80007b0:	2036      	movs	r0, #54	; 0x36
 80007b2:	f7ff fec3 	bl	800053c <LcdWriteData>
    LcdWriteData(0x0F);
 80007b6:	200f      	movs	r0, #15
 80007b8:	f7ff fec0 	bl	800053c <LcdWriteData>

    LcdWriteReg(ILI9341_SLEEP_OUT);
 80007bc:	2011      	movs	r0, #17
 80007be:	f7ff feae 	bl	800051e <LcdWriteReg>
    HAL_Delay(100);
 80007c2:	2064      	movs	r0, #100	; 0x64
 80007c4:	f000 fc96 	bl	80010f4 <HAL_Delay>

    LcdWriteReg(ILI9341_DISPLAY_ON);
 80007c8:	2029      	movs	r0, #41	; 0x29
 80007ca:	f7ff fea8 	bl	800051e <LcdWriteReg>
    LcdWriteReg(ILI9341_GRAM);
 80007ce:	202c      	movs	r0, #44	; 0x2c
 80007d0:	f7ff fea5 	bl	800051e <LcdWriteReg>

}
 80007d4:	bf00      	nop
 80007d6:	bd80      	pop	{r7, pc}

080007d8 <LCD_X_Config>:
* Function description:
*   Called during the initialization process in order to set up the
*   display driver configuration.
*
*/
void LCD_X_Config(void) {
 80007d8:	b580      	push	{r7, lr}
 80007da:	b0a0      	sub	sp, #128	; 0x80
 80007dc:	af00      	add	r7, sp, #0
  GUI_DEVICE * pDevice;
  CONFIG_FLEXCOLOR Config = {0};
 80007de:	f107 0368 	add.w	r3, r7, #104	; 0x68
 80007e2:	2200      	movs	r2, #0
 80007e4:	601a      	str	r2, [r3, #0]
 80007e6:	605a      	str	r2, [r3, #4]
 80007e8:	609a      	str	r2, [r3, #8]
 80007ea:	60da      	str	r2, [r3, #12]
 80007ec:	611a      	str	r2, [r3, #16]
  GUI_PORT_API PortAPI = {0};
 80007ee:	463b      	mov	r3, r7
 80007f0:	2268      	movs	r2, #104	; 0x68
 80007f2:	2100      	movs	r1, #0
 80007f4:	4618      	mov	r0, r3
 80007f6:	f00f fa71 	bl	800fcdc <memset>
  //
  // Set display driver and color conversion
  //
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_M565, 0, 0);//16bit color flexcolor driver
 80007fa:	2300      	movs	r3, #0
 80007fc:	2200      	movs	r2, #0
 80007fe:	4914      	ldr	r1, [pc, #80]	; (8000850 <LCD_X_Config+0x78>)
 8000800:	4814      	ldr	r0, [pc, #80]	; (8000854 <LCD_X_Config+0x7c>)
 8000802:	f009 ff07 	bl	800a614 <GUI_DEVICE_CreateAndLink>
 8000806:	67f8      	str	r0, [r7, #124]	; 0x7c
  //
  // Display driver configuration, required for Lin-driver
  //
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 8000808:	f44f 72a0 	mov.w	r2, #320	; 0x140
 800080c:	21f0      	movs	r1, #240	; 0xf0
 800080e:	2000      	movs	r0, #0
 8000810:	f007 fe22 	bl	8008458 <LCD_SetSizeEx>
  LCD_SetVSizeEx(0, VXSIZE_PHYS, VYSIZE_PHYS);
 8000814:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8000818:	21f0      	movs	r1, #240	; 0xf0
 800081a:	2000      	movs	r0, #0
 800081c:	f007 fe04 	bl	8008428 <LCD_SetVSizeEx>
  //
  // Orientation
  //
  Config.Orientation = GUI_SWAP_XY;
 8000820:	2304      	movs	r3, #4
 8000822:	673b      	str	r3, [r7, #112]	; 0x70
  GUIDRV_FlexColor_Config(pDevice, &Config);
 8000824:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8000828:	4619      	mov	r1, r3
 800082a:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 800082c:	f007 fd9b 	bl	8008366 <GUIDRV_FlexColor_Config>
  //
  // Set controller and operation mode
  //
  PortAPI.pfWrite16_A0  = LcdWriteReg;
 8000830:	4b09      	ldr	r3, [pc, #36]	; (8000858 <LCD_X_Config+0x80>)
 8000832:	623b      	str	r3, [r7, #32]
  PortAPI.pfWrite16_A1  = LcdWriteData;
 8000834:	4b09      	ldr	r3, [pc, #36]	; (800085c <LCD_X_Config+0x84>)
 8000836:	627b      	str	r3, [r7, #36]	; 0x24
  PortAPI.pfWriteM16_A1 = LcdWriteDataMultiple;
 8000838:	4b09      	ldr	r3, [pc, #36]	; (8000860 <LCD_X_Config+0x88>)
 800083a:	62fb      	str	r3, [r7, #44]	; 0x2c


  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66709, GUIDRV_FLEXCOLOR_M16C0B16);//ILI9341, 16bit color, 16 bit bus, no cache
 800083c:	4639      	mov	r1, r7
 800083e:	4b09      	ldr	r3, [pc, #36]	; (8000864 <LCD_X_Config+0x8c>)
 8000840:	4a09      	ldr	r2, [pc, #36]	; (8000868 <LCD_X_Config+0x90>)
 8000842:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 8000844:	f007 fdad 	bl	80083a2 <GUIDRV_FlexColor_SetFunc>
}
 8000848:	bf00      	nop
 800084a:	3780      	adds	r7, #128	; 0x80
 800084c:	46bd      	mov	sp, r7
 800084e:	bd80      	pop	{r7, pc}
 8000850:	08012044 	.word	0x08012044
 8000854:	08011e90 	.word	0x08011e90
 8000858:	0800051f 	.word	0x0800051f
 800085c:	0800053d 	.word	0x0800053d
 8000860:	0800055d 	.word	0x0800055d
 8000864:	08007d29 	.word	0x08007d29
 8000868:	0800768d 	.word	0x0800768d

0800086c <LCD_X_DisplayDriver>:
* Return Value:
*   < -1 - Error
*     -1 - Command not handled
*      0 - Ok
*/
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
 800086c:	b580      	push	{r7, lr}
 800086e:	b086      	sub	sp, #24
 8000870:	af00      	add	r7, sp, #0
 8000872:	60f8      	str	r0, [r7, #12]
 8000874:	60b9      	str	r1, [r7, #8]
 8000876:	607a      	str	r2, [r7, #4]
  int r;
  (void) LayerIndex;
  (void) pData;
  
  switch (Cmd) {
 8000878:	68bb      	ldr	r3, [r7, #8]
 800087a:	2b01      	cmp	r3, #1
 800087c:	d103      	bne.n	8000886 <LCD_X_DisplayDriver+0x1a>
  case LCD_X_INITCONTROLLER: {
	LcdInit();	//ili9341 init code
 800087e:	f7ff fe87 	bl	8000590 <LcdInit>
    return 0;
 8000882:	2300      	movs	r3, #0
 8000884:	e003      	b.n	800088e <LCD_X_DisplayDriver+0x22>
  }
  default:
    r = -1;
 8000886:	f04f 33ff 	mov.w	r3, #4294967295
 800088a:	617b      	str	r3, [r7, #20]
  }
  return r;
 800088c:	697b      	ldr	r3, [r7, #20]
}
 800088e:	4618      	mov	r0, r3
 8000890:	3718      	adds	r7, #24
 8000892:	46bd      	mov	sp, r7
 8000894:	bd80      	pop	{r7, pc}
	...

08000898 <_cbDialog>:

/*********************************************************************
*
*       _cbDialog
*/
static void _cbDialog(WM_MESSAGE * pMsg) {
 8000898:	b580      	push	{r7, lr}
 800089a:	b084      	sub	sp, #16
 800089c:	af00      	add	r7, sp, #0
 800089e:	6078      	str	r0, [r7, #4]
  WM_HWIN hItem;
  // USER START (Optionally insert additional variables)
  // USER END

  switch (pMsg->MsgId) {
 80008a0:	687b      	ldr	r3, [r7, #4]
 80008a2:	681b      	ldr	r3, [r3, #0]
 80008a4:	2b1d      	cmp	r3, #29
 80008a6:	d118      	bne.n	80008da <_cbDialog+0x42>
  case WM_INIT_DIALOG:
    //
    // Initialization of 'ADC Value:'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_0);
 80008a8:	687b      	ldr	r3, [r7, #4]
 80008aa:	685b      	ldr	r3, [r3, #4]
 80008ac:	f640 0102 	movw	r1, #2050	; 0x802
 80008b0:	4618      	mov	r0, r3
 80008b2:	f003 ffad 	bl	8004810 <WM_GetDialogItem>
 80008b6:	60f8      	str	r0, [r7, #12]
    TEXT_SetFont(hItem, GUI_FONT_13_1);
 80008b8:	490c      	ldr	r1, [pc, #48]	; (80008ec <_cbDialog+0x54>)
 80008ba:	68f8      	ldr	r0, [r7, #12]
 80008bc:	f002 f8cb 	bl	8002a56 <TEXT_SetFont>
    //
    // Initialization of 'Text'
    //
    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1);
 80008c0:	687b      	ldr	r3, [r7, #4]
 80008c2:	685b      	ldr	r3, [r3, #4]
 80008c4:	f640 0103 	movw	r1, #2051	; 0x803
 80008c8:	4618      	mov	r0, r3
 80008ca:	f003 ffa1 	bl	8004810 <WM_GetDialogItem>
 80008ce:	60f8      	str	r0, [r7, #12]
    TEXT_SetFont(hItem, GUI_FONT_20_ASCII);
 80008d0:	4907      	ldr	r1, [pc, #28]	; (80008f0 <_cbDialog+0x58>)
 80008d2:	68f8      	ldr	r0, [r7, #12]
 80008d4:	f002 f8bf 	bl	8002a56 <TEXT_SetFont>
    // USER START (Optionally insert additional code for further widget initialization)
    // USER END
    break;
 80008d8:	e003      	b.n	80008e2 <_cbDialog+0x4a>
  // USER START (Optionally insert additional message handling)
  // USER END
  default:
    WM_DefaultProc(pMsg);
 80008da:	6878      	ldr	r0, [r7, #4]
 80008dc:	f005 fc0a 	bl	80060f4 <WM_DefaultProc>
    break;
 80008e0:	bf00      	nop
  }
}
 80008e2:	bf00      	nop
 80008e4:	3710      	adds	r7, #16
 80008e6:	46bd      	mov	sp, r7
 80008e8:	bd80      	pop	{r7, pc}
 80008ea:	bf00      	nop
 80008ec:	08011774 	.word	0x08011774
 80008f0:	08010f30 	.word	0x08010f30

080008f4 <MainLCDTask>:
*/
/*********************************************************************
*
*       CreateSTemWin_Demo
*/
WM_HWIN MainLCDTask(void) {
 80008f4:	b580      	push	{r7, lr}
 80008f6:	b090      	sub	sp, #64	; 0x40
 80008f8:	af02      	add	r7, sp, #8
  char i=0,x=0;
 80008fa:	2300      	movs	r3, #0
 80008fc:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8000900:	2300      	movs	r3, #0
 8000902:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
  WM_HWIN hGraph;
  PROGBAR_Handle   	hPbar;
  TEXT_Handle	   	hText1,hText2;
  GRAPH_DATA_Handle hData;

  hWin = GUI_CreateDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), _cbDialog, WM_HBKWIN, 0, 0);
 8000906:	f003 ff1d 	bl	8004744 <WM_GetDesktopWindow>
 800090a:	4602      	mov	r2, r0
 800090c:	2300      	movs	r3, #0
 800090e:	9301      	str	r3, [sp, #4]
 8000910:	2300      	movs	r3, #0
 8000912:	9300      	str	r3, [sp, #0]
 8000914:	4613      	mov	r3, r2
 8000916:	4a4c      	ldr	r2, [pc, #304]	; (8000a48 <MainLCDTask+0x154>)
 8000918:	2106      	movs	r1, #6
 800091a:	484c      	ldr	r0, [pc, #304]	; (8000a4c <MainLCDTask+0x158>)
 800091c:	f003 fb72 	bl	8004004 <GUI_CreateDialogBox>
 8000920:	62f8      	str	r0, [r7, #44]	; 0x2c

  hPbar = WM_GetDialogItem(hWin, ID_PROGBAR_0);
 8000922:	f640 0104 	movw	r1, #2052	; 0x804
 8000926:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000928:	f003 ff72 	bl	8004810 <WM_GetDialogItem>
 800092c:	62b8      	str	r0, [r7, #40]	; 0x28

  hText1 = WM_GetDialogItem(hWin, ID_TEXT_1);
 800092e:	f640 0103 	movw	r1, #2051	; 0x803
 8000932:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000934:	f003 ff6c 	bl	8004810 <WM_GetDialogItem>
 8000938:	6278      	str	r0, [r7, #36]	; 0x24

  hText2 = WM_GetDialogItem(hWin, ID_TEXT_2);
 800093a:	f640 0105 	movw	r1, #2053	; 0x805
 800093e:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000940:	f003 ff66 	bl	8004810 <WM_GetDialogItem>
 8000944:	6238      	str	r0, [r7, #32]

  hGraph = WM_GetDialogItem(hWin, ID_GRAPH_0);
 8000946:	f640 0101 	movw	r1, #2049	; 0x801
 800094a:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800094c:	f003 ff60 	bl	8004810 <WM_GetDialogItem>
 8000950:	61f8      	str	r0, [r7, #28]


  hData = GRAPH_DATA_YT_Create(GUI_RED, 200, NULL, 0);
 8000952:	2300      	movs	r3, #0
 8000954:	2200      	movs	r2, #0
 8000956:	21c8      	movs	r1, #200	; 0xc8
 8000958:	483d      	ldr	r0, [pc, #244]	; (8000a50 <MainLCDTask+0x15c>)
 800095a:	f002 fb4b 	bl	8002ff4 <GRAPH_DATA_YT_Create>
 800095e:	61b8      	str	r0, [r7, #24]
  GRAPH_DATA_YT_SetAlign(hData, GRAPH_ALIGN_LEFT);
 8000960:	2101      	movs	r1, #1
 8000962:	69b8      	ldr	r0, [r7, #24]
 8000964:	f002 fb9d 	bl	80030a2 <GRAPH_DATA_YT_SetAlign>
  GRAPH_AttachData(hGraph, hData);
 8000968:	69b9      	ldr	r1, [r7, #24]
 800096a:	69f8      	ldr	r0, [r7, #28]
 800096c:	f002 ff67 	bl	800383e <GRAPH_AttachData>

  GRAPH_SetGridVis(hGraph, 1);
 8000970:	2101      	movs	r1, #1
 8000972:	69f8      	ldr	r0, [r7, #28]
 8000974:	f002 ff85 	bl	8003882 <GRAPH_SetGridVis>
  GRAPH_SetBorder(hGraph, 30, 0, 0, 0);
 8000978:	2300      	movs	r3, #0
 800097a:	9300      	str	r3, [sp, #0]
 800097c:	2300      	movs	r3, #0
 800097e:	2200      	movs	r2, #0
 8000980:	211e      	movs	r1, #30
 8000982:	69f8      	ldr	r0, [r7, #28]
 8000984:	f002 ff95 	bl	80038b2 <GRAPH_SetBorder>

  while(1)
  {
	 PROGBAR_SetValue(hPbar, i++);
 8000988:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800098c:	1c5a      	adds	r2, r3, #1
 800098e:	f887 2037 	strb.w	r2, [r7, #55]	; 0x37
 8000992:	4619      	mov	r1, r3
 8000994:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8000996:	f002 f9ca 	bl	8002d2e <PROGBAR_SetValue>
     if(i>100) i = 0;
 800099a:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800099e:	2b64      	cmp	r3, #100	; 0x64
 80009a0:	d902      	bls.n	80009a8 <MainLCDTask+0xb4>
 80009a2:	2300      	movs	r3, #0
 80009a4:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37

     HAL_ADC_Start(&hadc1);
 80009a8:	482a      	ldr	r0, [pc, #168]	; (8000a54 <MainLCDTask+0x160>)
 80009aa:	f000 fc09 	bl	80011c0 <HAL_ADC_Start>
     HAL_ADC_PollForConversion(&hadc1, 50);
 80009ae:	2132      	movs	r1, #50	; 0x32
 80009b0:	4828      	ldr	r0, [pc, #160]	; (8000a54 <MainLCDTask+0x160>)
 80009b2:	f000 fcfe 	bl	80013b2 <HAL_ADC_PollForConversion>
     ADC_Value = HAL_ADC_GetValue(&hadc1);
 80009b6:	4827      	ldr	r0, [pc, #156]	; (8000a54 <MainLCDTask+0x160>)
 80009b8:	f000 fd7f 	bl	80014ba <HAL_ADC_GetValue>
 80009bc:	4603      	mov	r3, r0
 80009be:	617b      	str	r3, [r7, #20]
     HAL_ADC_Stop(&hadc1);
 80009c0:	4824      	ldr	r0, [pc, #144]	; (8000a54 <MainLCDTask+0x160>)
 80009c2:	f000 fcc3 	bl	800134c <HAL_ADC_Stop>
     itoa(ADC_Value,str,10);
 80009c6:	463b      	mov	r3, r7
 80009c8:	220a      	movs	r2, #10
 80009ca:	4619      	mov	r1, r3
 80009cc:	6978      	ldr	r0, [r7, #20]
 80009ce:	f00f f95f 	bl	800fc90 <itoa>
     TEXT_SetText(hText1, str);
 80009d2:	463b      	mov	r3, r7
 80009d4:	4619      	mov	r1, r3
 80009d6:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80009d8:	f002 f850 	bl	8002a7c <TEXT_SetText>

     itoa(StopTime,str,10);
 80009dc:	463b      	mov	r3, r7
 80009de:	220a      	movs	r2, #10
 80009e0:	4619      	mov	r1, r3
 80009e2:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80009e4:	f00f f954 	bl	800fc90 <itoa>
     TEXT_SetText(hText2, str);
 80009e8:	463b      	mov	r3, r7
 80009ea:	4619      	mov	r1, r3
 80009ec:	6a38      	ldr	r0, [r7, #32]
 80009ee:	f002 f845 	bl	8002a7c <TEXT_SetText>

     x++;
 80009f2:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 80009f6:	3301      	adds	r3, #1
 80009f8:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
     if(x>200)
 80009fc:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8000a00:	2bc8      	cmp	r3, #200	; 0xc8
 8000a02:	d905      	bls.n	8000a10 <MainLCDTask+0x11c>
     {
    	 x=0;
 8000a04:	2300      	movs	r3, #0
 8000a06:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
    	 GRAPH_DATA_YT_Clear(hData);
 8000a0a:	69b8      	ldr	r0, [r7, #24]
 8000a0c:	f002 fb5d 	bl	80030ca <GRAPH_DATA_YT_Clear>
     }

     GRAPH_DATA_YT_AddValue(hData, ADC_Value/20);
 8000a10:	697b      	ldr	r3, [r7, #20]
 8000a12:	4a11      	ldr	r2, [pc, #68]	; (8000a58 <MainLCDTask+0x164>)
 8000a14:	fb82 1203 	smull	r1, r2, r2, r3
 8000a18:	10d2      	asrs	r2, r2, #3
 8000a1a:	17db      	asrs	r3, r3, #31
 8000a1c:	1ad3      	subs	r3, r2, r3
 8000a1e:	b21b      	sxth	r3, r3
 8000a20:	4619      	mov	r1, r3
 8000a22:	69b8      	ldr	r0, [r7, #24]
 8000a24:	f002 fb22 	bl	800306c <GRAPH_DATA_YT_AddValue>


	 HAL_Delay(100);
 8000a28:	2064      	movs	r0, #100	; 0x64
 8000a2a:	f000 fb63 	bl	80010f4 <HAL_Delay>

	 StartTime = HAL_GetTick();
 8000a2e:	f000 fb55 	bl	80010dc <HAL_GetTick>
 8000a32:	4603      	mov	r3, r0
 8000a34:	613b      	str	r3, [r7, #16]
	 GUI_Exec();
 8000a36:	f00a f85f 	bl	800aaf8 <GUI_Exec>
	 StopTime = HAL_GetTick() - StartTime;
 8000a3a:	f000 fb4f 	bl	80010dc <HAL_GetTick>
 8000a3e:	4602      	mov	r2, r0
 8000a40:	693b      	ldr	r3, [r7, #16]
 8000a42:	1ad3      	subs	r3, r2, r3
 8000a44:	633b      	str	r3, [r7, #48]	; 0x30
  {
 8000a46:	e79f      	b.n	8000988 <MainLCDTask+0x94>
 8000a48:	08000899 	.word	0x08000899
 8000a4c:	0800fe0c 	.word	0x0800fe0c
 8000a50:	ffff0000 	.word	0xffff0000
 8000a54:	20002c2c 	.word	0x20002c2c
 8000a58:	66666667 	.word	0x66666667

08000a5c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000a5c:	b580      	push	{r7, lr}
 8000a5e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000a60:	f000 fad6 	bl	8001010 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000a64:	f000 f80e 	bl	8000a84 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000a68:	f000 f8dc 	bl	8000c24 <MX_GPIO_Init>
  MX_ADC1_Init();
 8000a6c:	f000 f874 	bl	8000b58 <MX_ADC1_Init>
  MX_CRC_Init();
 8000a70:	f000 f8c4 	bl	8000bfc <MX_CRC_Init>
  MX_FSMC_Init();
 8000a74:	f000 f91a 	bl	8000cac <MX_FSMC_Init>
  /* USER CODE BEGIN 2 */
  GUI_Init();
 8000a78:	f009 febc 	bl	800a7f4 <GUI_Init>
  MainLCDTask();
 8000a7c:	f7ff ff3a 	bl	80008f4 <MainLCDTask>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000a80:	e7fe      	b.n	8000a80 <main+0x24>
	...

08000a84 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000a84:	b580      	push	{r7, lr}
 8000a86:	b094      	sub	sp, #80	; 0x50
 8000a88:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000a8a:	f107 0320 	add.w	r3, r7, #32
 8000a8e:	2230      	movs	r2, #48	; 0x30
 8000a90:	2100      	movs	r1, #0
 8000a92:	4618      	mov	r0, r3
 8000a94:	f00f f922 	bl	800fcdc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000a98:	f107 030c 	add.w	r3, r7, #12
 8000a9c:	2200      	movs	r2, #0
 8000a9e:	601a      	str	r2, [r3, #0]
 8000aa0:	605a      	str	r2, [r3, #4]
 8000aa2:	609a      	str	r2, [r3, #8]
 8000aa4:	60da      	str	r2, [r3, #12]
 8000aa6:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000aa8:	2300      	movs	r3, #0
 8000aaa:	60bb      	str	r3, [r7, #8]
 8000aac:	4b28      	ldr	r3, [pc, #160]	; (8000b50 <SystemClock_Config+0xcc>)
 8000aae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000ab0:	4a27      	ldr	r2, [pc, #156]	; (8000b50 <SystemClock_Config+0xcc>)
 8000ab2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000ab6:	6413      	str	r3, [r2, #64]	; 0x40
 8000ab8:	4b25      	ldr	r3, [pc, #148]	; (8000b50 <SystemClock_Config+0xcc>)
 8000aba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000abc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000ac0:	60bb      	str	r3, [r7, #8]
 8000ac2:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ac4:	2300      	movs	r3, #0
 8000ac6:	607b      	str	r3, [r7, #4]
 8000ac8:	4b22      	ldr	r3, [pc, #136]	; (8000b54 <SystemClock_Config+0xd0>)
 8000aca:	681b      	ldr	r3, [r3, #0]
 8000acc:	4a21      	ldr	r2, [pc, #132]	; (8000b54 <SystemClock_Config+0xd0>)
 8000ace:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000ad2:	6013      	str	r3, [r2, #0]
 8000ad4:	4b1f      	ldr	r3, [pc, #124]	; (8000b54 <SystemClock_Config+0xd0>)
 8000ad6:	681b      	ldr	r3, [r3, #0]
 8000ad8:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000adc:	607b      	str	r3, [r7, #4]
 8000ade:	687b      	ldr	r3, [r7, #4]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000ae0:	2301      	movs	r3, #1
 8000ae2:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000ae4:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000ae8:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000aea:	2302      	movs	r3, #2
 8000aec:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000aee:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8000af2:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000af4:	2304      	movs	r3, #4
 8000af6:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 8000af8:	23a8      	movs	r3, #168	; 0xa8
 8000afa:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000afc:	2302      	movs	r3, #2
 8000afe:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8000b00:	2304      	movs	r3, #4
 8000b02:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b04:	f107 0320 	add.w	r3, r7, #32
 8000b08:	4618      	mov	r0, r3
 8000b0a:	f001 f99d 	bl	8001e48 <HAL_RCC_OscConfig>
 8000b0e:	4603      	mov	r3, r0
 8000b10:	2b00      	cmp	r3, #0
 8000b12:	d001      	beq.n	8000b18 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8000b14:	f000 f92a 	bl	8000d6c <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000b18:	230f      	movs	r3, #15
 8000b1a:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000b1c:	2302      	movs	r3, #2
 8000b1e:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000b20:	2300      	movs	r3, #0
 8000b22:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b24:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8000b28:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b2a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000b2e:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b30:	f107 030c 	add.w	r3, r7, #12
 8000b34:	2105      	movs	r1, #5
 8000b36:	4618      	mov	r0, r3
 8000b38:	f001 fbf6 	bl	8002328 <HAL_RCC_ClockConfig>
 8000b3c:	4603      	mov	r3, r0
 8000b3e:	2b00      	cmp	r3, #0
 8000b40:	d001      	beq.n	8000b46 <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8000b42:	f000 f913 	bl	8000d6c <Error_Handler>
  }
}
 8000b46:	bf00      	nop
 8000b48:	3750      	adds	r7, #80	; 0x50
 8000b4a:	46bd      	mov	sp, r7
 8000b4c:	bd80      	pop	{r7, pc}
 8000b4e:	bf00      	nop
 8000b50:	40023800 	.word	0x40023800
 8000b54:	40007000 	.word	0x40007000

08000b58 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000b58:	b580      	push	{r7, lr}
 8000b5a:	b084      	sub	sp, #16
 8000b5c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000b5e:	463b      	mov	r3, r7
 8000b60:	2200      	movs	r2, #0
 8000b62:	601a      	str	r2, [r3, #0]
 8000b64:	605a      	str	r2, [r3, #4]
 8000b66:	609a      	str	r2, [r3, #8]
 8000b68:	60da      	str	r2, [r3, #12]
  /* USER CODE BEGIN ADC1_Init 1 */

  /* USER CODE END ADC1_Init 1 */
  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8000b6a:	4b21      	ldr	r3, [pc, #132]	; (8000bf0 <MX_ADC1_Init+0x98>)
 8000b6c:	4a21      	ldr	r2, [pc, #132]	; (8000bf4 <MX_ADC1_Init+0x9c>)
 8000b6e:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8000b70:	4b1f      	ldr	r3, [pc, #124]	; (8000bf0 <MX_ADC1_Init+0x98>)
 8000b72:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8000b76:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000b78:	4b1d      	ldr	r3, [pc, #116]	; (8000bf0 <MX_ADC1_Init+0x98>)
 8000b7a:	2200      	movs	r2, #0
 8000b7c:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8000b7e:	4b1c      	ldr	r3, [pc, #112]	; (8000bf0 <MX_ADC1_Init+0x98>)
 8000b80:	2200      	movs	r2, #0
 8000b82:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000b84:	4b1a      	ldr	r3, [pc, #104]	; (8000bf0 <MX_ADC1_Init+0x98>)
 8000b86:	2200      	movs	r2, #0
 8000b88:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000b8a:	4b19      	ldr	r3, [pc, #100]	; (8000bf0 <MX_ADC1_Init+0x98>)
 8000b8c:	2200      	movs	r2, #0
 8000b8e:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000b92:	4b17      	ldr	r3, [pc, #92]	; (8000bf0 <MX_ADC1_Init+0x98>)
 8000b94:	2200      	movs	r2, #0
 8000b96:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000b98:	4b15      	ldr	r3, [pc, #84]	; (8000bf0 <MX_ADC1_Init+0x98>)
 8000b9a:	4a17      	ldr	r2, [pc, #92]	; (8000bf8 <MX_ADC1_Init+0xa0>)
 8000b9c:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000b9e:	4b14      	ldr	r3, [pc, #80]	; (8000bf0 <MX_ADC1_Init+0x98>)
 8000ba0:	2200      	movs	r2, #0
 8000ba2:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8000ba4:	4b12      	ldr	r3, [pc, #72]	; (8000bf0 <MX_ADC1_Init+0x98>)
 8000ba6:	2201      	movs	r2, #1
 8000ba8:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8000baa:	4b11      	ldr	r3, [pc, #68]	; (8000bf0 <MX_ADC1_Init+0x98>)
 8000bac:	2200      	movs	r2, #0
 8000bae:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000bb2:	4b0f      	ldr	r3, [pc, #60]	; (8000bf0 <MX_ADC1_Init+0x98>)
 8000bb4:	2201      	movs	r2, #1
 8000bb6:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000bb8:	480d      	ldr	r0, [pc, #52]	; (8000bf0 <MX_ADC1_Init+0x98>)
 8000bba:	f000 fabd 	bl	8001138 <HAL_ADC_Init>
 8000bbe:	4603      	mov	r3, r0
 8000bc0:	2b00      	cmp	r3, #0
 8000bc2:	d001      	beq.n	8000bc8 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8000bc4:	f000 f8d2 	bl	8000d6c <Error_Handler>
  }
  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8000bc8:	2300      	movs	r3, #0
 8000bca:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8000bcc:	2301      	movs	r3, #1
 8000bce:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000bd0:	2300      	movs	r3, #0
 8000bd2:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000bd4:	463b      	mov	r3, r7
 8000bd6:	4619      	mov	r1, r3
 8000bd8:	4805      	ldr	r0, [pc, #20]	; (8000bf0 <MX_ADC1_Init+0x98>)
 8000bda:	f000 fc7b 	bl	80014d4 <HAL_ADC_ConfigChannel>
 8000bde:	4603      	mov	r3, r0
 8000be0:	2b00      	cmp	r3, #0
 8000be2:	d001      	beq.n	8000be8 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8000be4:	f000 f8c2 	bl	8000d6c <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000be8:	bf00      	nop
 8000bea:	3710      	adds	r7, #16
 8000bec:	46bd      	mov	sp, r7
 8000bee:	bd80      	pop	{r7, pc}
 8000bf0:	20002c2c 	.word	0x20002c2c
 8000bf4:	40012000 	.word	0x40012000
 8000bf8:	0f000001 	.word	0x0f000001

08000bfc <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8000bfc:	b580      	push	{r7, lr}
 8000bfe:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8000c00:	4b06      	ldr	r3, [pc, #24]	; (8000c1c <MX_CRC_Init+0x20>)
 8000c02:	4a07      	ldr	r2, [pc, #28]	; (8000c20 <MX_CRC_Init+0x24>)
 8000c04:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000c06:	4805      	ldr	r0, [pc, #20]	; (8000c1c <MX_CRC_Init+0x20>)
 8000c08:	f000 ff67 	bl	8001ada <HAL_CRC_Init>
 8000c0c:	4603      	mov	r3, r0
 8000c0e:	2b00      	cmp	r3, #0
 8000c10:	d001      	beq.n	8000c16 <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 8000c12:	f000 f8ab 	bl	8000d6c <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8000c16:	bf00      	nop
 8000c18:	bd80      	pop	{r7, pc}
 8000c1a:	bf00      	nop
 8000c1c:	20002bd4 	.word	0x20002bd4
 8000c20:	40023000 	.word	0x40023000

08000c24 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000c24:	b480      	push	{r7}
 8000c26:	b085      	sub	sp, #20
 8000c28:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000c2a:	2300      	movs	r3, #0
 8000c2c:	60fb      	str	r3, [r7, #12]
 8000c2e:	4b1e      	ldr	r3, [pc, #120]	; (8000ca8 <MX_GPIO_Init+0x84>)
 8000c30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c32:	4a1d      	ldr	r2, [pc, #116]	; (8000ca8 <MX_GPIO_Init+0x84>)
 8000c34:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c38:	6313      	str	r3, [r2, #48]	; 0x30
 8000c3a:	4b1b      	ldr	r3, [pc, #108]	; (8000ca8 <MX_GPIO_Init+0x84>)
 8000c3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c3e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000c42:	60fb      	str	r3, [r7, #12]
 8000c44:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000c46:	2300      	movs	r3, #0
 8000c48:	60bb      	str	r3, [r7, #8]
 8000c4a:	4b17      	ldr	r3, [pc, #92]	; (8000ca8 <MX_GPIO_Init+0x84>)
 8000c4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c4e:	4a16      	ldr	r2, [pc, #88]	; (8000ca8 <MX_GPIO_Init+0x84>)
 8000c50:	f043 0301 	orr.w	r3, r3, #1
 8000c54:	6313      	str	r3, [r2, #48]	; 0x30
 8000c56:	4b14      	ldr	r3, [pc, #80]	; (8000ca8 <MX_GPIO_Init+0x84>)
 8000c58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c5a:	f003 0301 	and.w	r3, r3, #1
 8000c5e:	60bb      	str	r3, [r7, #8]
 8000c60:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000c62:	2300      	movs	r3, #0
 8000c64:	607b      	str	r3, [r7, #4]
 8000c66:	4b10      	ldr	r3, [pc, #64]	; (8000ca8 <MX_GPIO_Init+0x84>)
 8000c68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c6a:	4a0f      	ldr	r2, [pc, #60]	; (8000ca8 <MX_GPIO_Init+0x84>)
 8000c6c:	f043 0310 	orr.w	r3, r3, #16
 8000c70:	6313      	str	r3, [r2, #48]	; 0x30
 8000c72:	4b0d      	ldr	r3, [pc, #52]	; (8000ca8 <MX_GPIO_Init+0x84>)
 8000c74:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c76:	f003 0310 	and.w	r3, r3, #16
 8000c7a:	607b      	str	r3, [r7, #4]
 8000c7c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c7e:	2300      	movs	r3, #0
 8000c80:	603b      	str	r3, [r7, #0]
 8000c82:	4b09      	ldr	r3, [pc, #36]	; (8000ca8 <MX_GPIO_Init+0x84>)
 8000c84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c86:	4a08      	ldr	r2, [pc, #32]	; (8000ca8 <MX_GPIO_Init+0x84>)
 8000c88:	f043 0308 	orr.w	r3, r3, #8
 8000c8c:	6313      	str	r3, [r2, #48]	; 0x30
 8000c8e:	4b06      	ldr	r3, [pc, #24]	; (8000ca8 <MX_GPIO_Init+0x84>)
 8000c90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c92:	f003 0308 	and.w	r3, r3, #8
 8000c96:	603b      	str	r3, [r7, #0]
 8000c98:	683b      	ldr	r3, [r7, #0]

}
 8000c9a:	bf00      	nop
 8000c9c:	3714      	adds	r7, #20
 8000c9e:	46bd      	mov	sp, r7
 8000ca0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ca4:	4770      	bx	lr
 8000ca6:	bf00      	nop
 8000ca8:	40023800 	.word	0x40023800

08000cac <MX_FSMC_Init>:

/* FSMC initialization function */
static void MX_FSMC_Init(void)
{
 8000cac:	b580      	push	{r7, lr}
 8000cae:	b088      	sub	sp, #32
 8000cb0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN FSMC_Init 0 */

  /* USER CODE END FSMC_Init 0 */

  FSMC_NORSRAM_TimingTypeDef Timing = {0};
 8000cb2:	1d3b      	adds	r3, r7, #4
 8000cb4:	2200      	movs	r2, #0
 8000cb6:	601a      	str	r2, [r3, #0]
 8000cb8:	605a      	str	r2, [r3, #4]
 8000cba:	609a      	str	r2, [r3, #8]
 8000cbc:	60da      	str	r2, [r3, #12]
 8000cbe:	611a      	str	r2, [r3, #16]
 8000cc0:	615a      	str	r2, [r3, #20]
 8000cc2:	619a      	str	r2, [r3, #24]

  /* USER CODE END FSMC_Init 1 */

  /** Perform the SRAM1 memory initialization sequence
  */
  hsram1.Instance = FSMC_NORSRAM_DEVICE;
 8000cc4:	4b27      	ldr	r3, [pc, #156]	; (8000d64 <MX_FSMC_Init+0xb8>)
 8000cc6:	f04f 4220 	mov.w	r2, #2684354560	; 0xa0000000
 8000cca:	601a      	str	r2, [r3, #0]
  hsram1.Extended = FSMC_NORSRAM_EXTENDED_DEVICE;
 8000ccc:	4b25      	ldr	r3, [pc, #148]	; (8000d64 <MX_FSMC_Init+0xb8>)
 8000cce:	4a26      	ldr	r2, [pc, #152]	; (8000d68 <MX_FSMC_Init+0xbc>)
 8000cd0:	605a      	str	r2, [r3, #4]
  /* hsram1.Init */
  hsram1.Init.NSBank = FSMC_NORSRAM_BANK1;
 8000cd2:	4b24      	ldr	r3, [pc, #144]	; (8000d64 <MX_FSMC_Init+0xb8>)
 8000cd4:	2200      	movs	r2, #0
 8000cd6:	609a      	str	r2, [r3, #8]
  hsram1.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
 8000cd8:	4b22      	ldr	r3, [pc, #136]	; (8000d64 <MX_FSMC_Init+0xb8>)
 8000cda:	2200      	movs	r2, #0
 8000cdc:	60da      	str	r2, [r3, #12]
  hsram1.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
 8000cde:	4b21      	ldr	r3, [pc, #132]	; (8000d64 <MX_FSMC_Init+0xb8>)
 8000ce0:	2200      	movs	r2, #0
 8000ce2:	611a      	str	r2, [r3, #16]
  hsram1.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
 8000ce4:	4b1f      	ldr	r3, [pc, #124]	; (8000d64 <MX_FSMC_Init+0xb8>)
 8000ce6:	2210      	movs	r2, #16
 8000ce8:	615a      	str	r2, [r3, #20]
  hsram1.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
 8000cea:	4b1e      	ldr	r3, [pc, #120]	; (8000d64 <MX_FSMC_Init+0xb8>)
 8000cec:	2200      	movs	r2, #0
 8000cee:	619a      	str	r2, [r3, #24]
  hsram1.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
 8000cf0:	4b1c      	ldr	r3, [pc, #112]	; (8000d64 <MX_FSMC_Init+0xb8>)
 8000cf2:	2200      	movs	r2, #0
 8000cf4:	61da      	str	r2, [r3, #28]
  hsram1.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
 8000cf6:	4b1b      	ldr	r3, [pc, #108]	; (8000d64 <MX_FSMC_Init+0xb8>)
 8000cf8:	2200      	movs	r2, #0
 8000cfa:	621a      	str	r2, [r3, #32]
  hsram1.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
 8000cfc:	4b19      	ldr	r3, [pc, #100]	; (8000d64 <MX_FSMC_Init+0xb8>)
 8000cfe:	2200      	movs	r2, #0
 8000d00:	625a      	str	r2, [r3, #36]	; 0x24
  hsram1.Init.WriteOperation = FSMC_WRITE_OPERATION_ENABLE;
 8000d02:	4b18      	ldr	r3, [pc, #96]	; (8000d64 <MX_FSMC_Init+0xb8>)
 8000d04:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000d08:	629a      	str	r2, [r3, #40]	; 0x28
  hsram1.Init.WaitSignal = FSMC_WAIT_SIGNAL_DISABLE;
 8000d0a:	4b16      	ldr	r3, [pc, #88]	; (8000d64 <MX_FSMC_Init+0xb8>)
 8000d0c:	2200      	movs	r2, #0
 8000d0e:	62da      	str	r2, [r3, #44]	; 0x2c
  hsram1.Init.ExtendedMode = FSMC_EXTENDED_MODE_DISABLE;
 8000d10:	4b14      	ldr	r3, [pc, #80]	; (8000d64 <MX_FSMC_Init+0xb8>)
 8000d12:	2200      	movs	r2, #0
 8000d14:	631a      	str	r2, [r3, #48]	; 0x30
  hsram1.Init.AsynchronousWait = FSMC_ASYNCHRONOUS_WAIT_DISABLE;
 8000d16:	4b13      	ldr	r3, [pc, #76]	; (8000d64 <MX_FSMC_Init+0xb8>)
 8000d18:	2200      	movs	r2, #0
 8000d1a:	635a      	str	r2, [r3, #52]	; 0x34
  hsram1.Init.WriteBurst = FSMC_WRITE_BURST_DISABLE;
 8000d1c:	4b11      	ldr	r3, [pc, #68]	; (8000d64 <MX_FSMC_Init+0xb8>)
 8000d1e:	2200      	movs	r2, #0
 8000d20:	639a      	str	r2, [r3, #56]	; 0x38
  hsram1.Init.PageSize = FSMC_PAGE_SIZE_NONE;
 8000d22:	4b10      	ldr	r3, [pc, #64]	; (8000d64 <MX_FSMC_Init+0xb8>)
 8000d24:	2200      	movs	r2, #0
 8000d26:	645a      	str	r2, [r3, #68]	; 0x44
  /* Timing */
  Timing.AddressSetupTime = 15;
 8000d28:	230f      	movs	r3, #15
 8000d2a:	607b      	str	r3, [r7, #4]
  Timing.AddressHoldTime = 15;
 8000d2c:	230f      	movs	r3, #15
 8000d2e:	60bb      	str	r3, [r7, #8]
  Timing.DataSetupTime = 255;
 8000d30:	23ff      	movs	r3, #255	; 0xff
 8000d32:	60fb      	str	r3, [r7, #12]
  Timing.BusTurnAroundDuration = 15;
 8000d34:	230f      	movs	r3, #15
 8000d36:	613b      	str	r3, [r7, #16]
  Timing.CLKDivision = 16;
 8000d38:	2310      	movs	r3, #16
 8000d3a:	617b      	str	r3, [r7, #20]
  Timing.DataLatency = 17;
 8000d3c:	2311      	movs	r3, #17
 8000d3e:	61bb      	str	r3, [r7, #24]
  Timing.AccessMode = FSMC_ACCESS_MODE_A;
 8000d40:	2300      	movs	r3, #0
 8000d42:	61fb      	str	r3, [r7, #28]
  /* ExtTiming */

  if (HAL_SRAM_Init(&hsram1, &Timing, NULL) != HAL_OK)
 8000d44:	1d3b      	adds	r3, r7, #4
 8000d46:	2200      	movs	r2, #0
 8000d48:	4619      	mov	r1, r3
 8000d4a:	4806      	ldr	r0, [pc, #24]	; (8000d64 <MX_FSMC_Init+0xb8>)
 8000d4c:	f001 fcaa 	bl	80026a4 <HAL_SRAM_Init>
 8000d50:	4603      	mov	r3, r0
 8000d52:	2b00      	cmp	r3, #0
 8000d54:	d001      	beq.n	8000d5a <MX_FSMC_Init+0xae>
  {
    Error_Handler( );
 8000d56:	f000 f809 	bl	8000d6c <Error_Handler>
  }

  /* USER CODE BEGIN FSMC_Init 2 */

  /* USER CODE END FSMC_Init 2 */
}
 8000d5a:	bf00      	nop
 8000d5c:	3720      	adds	r7, #32
 8000d5e:	46bd      	mov	sp, r7
 8000d60:	bd80      	pop	{r7, pc}
 8000d62:	bf00      	nop
 8000d64:	20002bdc 	.word	0x20002bdc
 8000d68:	a0000104 	.word	0xa0000104

08000d6c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000d6c:	b480      	push	{r7}
 8000d6e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000d70:	b672      	cpsid	i
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000d72:	e7fe      	b.n	8000d72 <Error_Handler+0x6>

08000d74 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000d74:	b480      	push	{r7}
 8000d76:	b083      	sub	sp, #12
 8000d78:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000d7a:	2300      	movs	r3, #0
 8000d7c:	607b      	str	r3, [r7, #4]
 8000d7e:	4b10      	ldr	r3, [pc, #64]	; (8000dc0 <HAL_MspInit+0x4c>)
 8000d80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d82:	4a0f      	ldr	r2, [pc, #60]	; (8000dc0 <HAL_MspInit+0x4c>)
 8000d84:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000d88:	6453      	str	r3, [r2, #68]	; 0x44
 8000d8a:	4b0d      	ldr	r3, [pc, #52]	; (8000dc0 <HAL_MspInit+0x4c>)
 8000d8c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d8e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000d92:	607b      	str	r3, [r7, #4]
 8000d94:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000d96:	2300      	movs	r3, #0
 8000d98:	603b      	str	r3, [r7, #0]
 8000d9a:	4b09      	ldr	r3, [pc, #36]	; (8000dc0 <HAL_MspInit+0x4c>)
 8000d9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000d9e:	4a08      	ldr	r2, [pc, #32]	; (8000dc0 <HAL_MspInit+0x4c>)
 8000da0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000da4:	6413      	str	r3, [r2, #64]	; 0x40
 8000da6:	4b06      	ldr	r3, [pc, #24]	; (8000dc0 <HAL_MspInit+0x4c>)
 8000da8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000daa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000dae:	603b      	str	r3, [r7, #0]
 8000db0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000db2:	bf00      	nop
 8000db4:	370c      	adds	r7, #12
 8000db6:	46bd      	mov	sp, r7
 8000db8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dbc:	4770      	bx	lr
 8000dbe:	bf00      	nop
 8000dc0:	40023800 	.word	0x40023800

08000dc4 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8000dc4:	b580      	push	{r7, lr}
 8000dc6:	b08a      	sub	sp, #40	; 0x28
 8000dc8:	af00      	add	r7, sp, #0
 8000dca:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000dcc:	f107 0314 	add.w	r3, r7, #20
 8000dd0:	2200      	movs	r2, #0
 8000dd2:	601a      	str	r2, [r3, #0]
 8000dd4:	605a      	str	r2, [r3, #4]
 8000dd6:	609a      	str	r2, [r3, #8]
 8000dd8:	60da      	str	r2, [r3, #12]
 8000dda:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8000ddc:	687b      	ldr	r3, [r7, #4]
 8000dde:	681b      	ldr	r3, [r3, #0]
 8000de0:	4a17      	ldr	r2, [pc, #92]	; (8000e40 <HAL_ADC_MspInit+0x7c>)
 8000de2:	4293      	cmp	r3, r2
 8000de4:	d127      	bne.n	8000e36 <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8000de6:	2300      	movs	r3, #0
 8000de8:	613b      	str	r3, [r7, #16]
 8000dea:	4b16      	ldr	r3, [pc, #88]	; (8000e44 <HAL_ADC_MspInit+0x80>)
 8000dec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000dee:	4a15      	ldr	r2, [pc, #84]	; (8000e44 <HAL_ADC_MspInit+0x80>)
 8000df0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000df4:	6453      	str	r3, [r2, #68]	; 0x44
 8000df6:	4b13      	ldr	r3, [pc, #76]	; (8000e44 <HAL_ADC_MspInit+0x80>)
 8000df8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000dfa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8000dfe:	613b      	str	r3, [r7, #16]
 8000e00:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000e02:	2300      	movs	r3, #0
 8000e04:	60fb      	str	r3, [r7, #12]
 8000e06:	4b0f      	ldr	r3, [pc, #60]	; (8000e44 <HAL_ADC_MspInit+0x80>)
 8000e08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e0a:	4a0e      	ldr	r2, [pc, #56]	; (8000e44 <HAL_ADC_MspInit+0x80>)
 8000e0c:	f043 0301 	orr.w	r3, r3, #1
 8000e10:	6313      	str	r3, [r2, #48]	; 0x30
 8000e12:	4b0c      	ldr	r3, [pc, #48]	; (8000e44 <HAL_ADC_MspInit+0x80>)
 8000e14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e16:	f003 0301 	and.w	r3, r3, #1
 8000e1a:	60fb      	str	r3, [r7, #12]
 8000e1c:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA0-WKUP     ------> ADC1_IN0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8000e1e:	2301      	movs	r3, #1
 8000e20:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000e22:	2303      	movs	r3, #3
 8000e24:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e26:	2300      	movs	r3, #0
 8000e28:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000e2a:	f107 0314 	add.w	r3, r7, #20
 8000e2e:	4619      	mov	r1, r3
 8000e30:	4805      	ldr	r0, [pc, #20]	; (8000e48 <HAL_ADC_MspInit+0x84>)
 8000e32:	f000 fe6f 	bl	8001b14 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8000e36:	bf00      	nop
 8000e38:	3728      	adds	r7, #40	; 0x28
 8000e3a:	46bd      	mov	sp, r7
 8000e3c:	bd80      	pop	{r7, pc}
 8000e3e:	bf00      	nop
 8000e40:	40012000 	.word	0x40012000
 8000e44:	40023800 	.word	0x40023800
 8000e48:	40020000 	.word	0x40020000

08000e4c <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8000e4c:	b480      	push	{r7}
 8000e4e:	b085      	sub	sp, #20
 8000e50:	af00      	add	r7, sp, #0
 8000e52:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8000e54:	687b      	ldr	r3, [r7, #4]
 8000e56:	681b      	ldr	r3, [r3, #0]
 8000e58:	4a0b      	ldr	r2, [pc, #44]	; (8000e88 <HAL_CRC_MspInit+0x3c>)
 8000e5a:	4293      	cmp	r3, r2
 8000e5c:	d10d      	bne.n	8000e7a <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000e5e:	2300      	movs	r3, #0
 8000e60:	60fb      	str	r3, [r7, #12]
 8000e62:	4b0a      	ldr	r3, [pc, #40]	; (8000e8c <HAL_CRC_MspInit+0x40>)
 8000e64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e66:	4a09      	ldr	r2, [pc, #36]	; (8000e8c <HAL_CRC_MspInit+0x40>)
 8000e68:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000e6c:	6313      	str	r3, [r2, #48]	; 0x30
 8000e6e:	4b07      	ldr	r3, [pc, #28]	; (8000e8c <HAL_CRC_MspInit+0x40>)
 8000e70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e72:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8000e76:	60fb      	str	r3, [r7, #12]
 8000e78:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000e7a:	bf00      	nop
 8000e7c:	3714      	adds	r7, #20
 8000e7e:	46bd      	mov	sp, r7
 8000e80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e84:	4770      	bx	lr
 8000e86:	bf00      	nop
 8000e88:	40023000 	.word	0x40023000
 8000e8c:	40023800 	.word	0x40023800

08000e90 <HAL_FSMC_MspInit>:

}

static uint32_t FSMC_Initialized = 0;

static void HAL_FSMC_MspInit(void){
 8000e90:	b580      	push	{r7, lr}
 8000e92:	b086      	sub	sp, #24
 8000e94:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FSMC_MspInit 0 */

  /* USER CODE END FSMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8000e96:	1d3b      	adds	r3, r7, #4
 8000e98:	2200      	movs	r2, #0
 8000e9a:	601a      	str	r2, [r3, #0]
 8000e9c:	605a      	str	r2, [r3, #4]
 8000e9e:	609a      	str	r2, [r3, #8]
 8000ea0:	60da      	str	r2, [r3, #12]
 8000ea2:	611a      	str	r2, [r3, #16]
  if (FSMC_Initialized) {
 8000ea4:	4b1c      	ldr	r3, [pc, #112]	; (8000f18 <HAL_FSMC_MspInit+0x88>)
 8000ea6:	681b      	ldr	r3, [r3, #0]
 8000ea8:	2b00      	cmp	r3, #0
 8000eaa:	d131      	bne.n	8000f10 <HAL_FSMC_MspInit+0x80>
    return;
  }
  FSMC_Initialized = 1;
 8000eac:	4b1a      	ldr	r3, [pc, #104]	; (8000f18 <HAL_FSMC_MspInit+0x88>)
 8000eae:	2201      	movs	r2, #1
 8000eb0:	601a      	str	r2, [r3, #0]

  /* Peripheral clock enable */
  __HAL_RCC_FSMC_CLK_ENABLE();
 8000eb2:	2300      	movs	r3, #0
 8000eb4:	603b      	str	r3, [r7, #0]
 8000eb6:	4b19      	ldr	r3, [pc, #100]	; (8000f1c <HAL_FSMC_MspInit+0x8c>)
 8000eb8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000eba:	4a18      	ldr	r2, [pc, #96]	; (8000f1c <HAL_FSMC_MspInit+0x8c>)
 8000ebc:	f043 0301 	orr.w	r3, r3, #1
 8000ec0:	6393      	str	r3, [r2, #56]	; 0x38
 8000ec2:	4b16      	ldr	r3, [pc, #88]	; (8000f1c <HAL_FSMC_MspInit+0x8c>)
 8000ec4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000ec6:	f003 0301 	and.w	r3, r3, #1
 8000eca:	603b      	str	r3, [r7, #0]
 8000ecc:	683b      	ldr	r3, [r7, #0]
  PD1   ------> FSMC_D3
  PD4   ------> FSMC_NOE
  PD5   ------> FSMC_NWE
  PD7   ------> FSMC_NE1
  */
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8000ece:	f64f 7380 	movw	r3, #65408	; 0xff80
 8000ed2:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14
                          |GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ed4:	2302      	movs	r3, #2
 8000ed6:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ed8:	2300      	movs	r3, #0
 8000eda:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000edc:	2303      	movs	r3, #3
 8000ede:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FSMC;
 8000ee0:	230c      	movs	r3, #12
 8000ee2:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000ee4:	1d3b      	adds	r3, r7, #4
 8000ee6:	4619      	mov	r1, r3
 8000ee8:	480d      	ldr	r0, [pc, #52]	; (8000f20 <HAL_FSMC_MspInit+0x90>)
 8000eea:	f000 fe13 	bl	8001b14 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
 8000eee:	f64c 73b3 	movw	r3, #53171	; 0xcfb3
 8000ef2:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_7;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ef4:	2302      	movs	r3, #2
 8000ef6:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ef8:	2300      	movs	r3, #0
 8000efa:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000efc:	2303      	movs	r3, #3
 8000efe:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FSMC;
 8000f00:	230c      	movs	r3, #12
 8000f02:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000f04:	1d3b      	adds	r3, r7, #4
 8000f06:	4619      	mov	r1, r3
 8000f08:	4806      	ldr	r0, [pc, #24]	; (8000f24 <HAL_FSMC_MspInit+0x94>)
 8000f0a:	f000 fe03 	bl	8001b14 <HAL_GPIO_Init>
 8000f0e:	e000      	b.n	8000f12 <HAL_FSMC_MspInit+0x82>
    return;
 8000f10:	bf00      	nop

  /* USER CODE BEGIN FSMC_MspInit 1 */

  /* USER CODE END FSMC_MspInit 1 */
}
 8000f12:	3718      	adds	r7, #24
 8000f14:	46bd      	mov	sp, r7
 8000f16:	bd80      	pop	{r7, pc}
 8000f18:	20002a14 	.word	0x20002a14
 8000f1c:	40023800 	.word	0x40023800
 8000f20:	40021000 	.word	0x40021000
 8000f24:	40020c00 	.word	0x40020c00

08000f28 <HAL_SRAM_MspInit>:

void HAL_SRAM_MspInit(SRAM_HandleTypeDef* hsram){
 8000f28:	b580      	push	{r7, lr}
 8000f2a:	b082      	sub	sp, #8
 8000f2c:	af00      	add	r7, sp, #0
 8000f2e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN SRAM_MspInit 0 */

  /* USER CODE END SRAM_MspInit 0 */
  HAL_FSMC_MspInit();
 8000f30:	f7ff ffae 	bl	8000e90 <HAL_FSMC_MspInit>
  /* USER CODE BEGIN SRAM_MspInit 1 */

  /* USER CODE END SRAM_MspInit 1 */
}
 8000f34:	bf00      	nop
 8000f36:	3708      	adds	r7, #8
 8000f38:	46bd      	mov	sp, r7
 8000f3a:	bd80      	pop	{r7, pc}

08000f3c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000f3c:	b480      	push	{r7}
 8000f3e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000f40:	e7fe      	b.n	8000f40 <NMI_Handler+0x4>

08000f42 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000f42:	b480      	push	{r7}
 8000f44:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000f46:	e7fe      	b.n	8000f46 <HardFault_Handler+0x4>

08000f48 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000f48:	b480      	push	{r7}
 8000f4a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000f4c:	e7fe      	b.n	8000f4c <MemManage_Handler+0x4>

08000f4e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000f4e:	b480      	push	{r7}
 8000f50:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000f52:	e7fe      	b.n	8000f52 <BusFault_Handler+0x4>

08000f54 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000f54:	b480      	push	{r7}
 8000f56:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000f58:	e7fe      	b.n	8000f58 <UsageFault_Handler+0x4>

08000f5a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000f5a:	b480      	push	{r7}
 8000f5c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000f5e:	bf00      	nop
 8000f60:	46bd      	mov	sp, r7
 8000f62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f66:	4770      	bx	lr

08000f68 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000f68:	b480      	push	{r7}
 8000f6a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000f6c:	bf00      	nop
 8000f6e:	46bd      	mov	sp, r7
 8000f70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f74:	4770      	bx	lr

08000f76 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000f76:	b480      	push	{r7}
 8000f78:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000f7a:	bf00      	nop
 8000f7c:	46bd      	mov	sp, r7
 8000f7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f82:	4770      	bx	lr

08000f84 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000f84:	b580      	push	{r7, lr}
 8000f86:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000f88:	f000 f894 	bl	80010b4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000f8c:	bf00      	nop
 8000f8e:	bd80      	pop	{r7, pc}

08000f90 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000f90:	b480      	push	{r7}
 8000f92:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000f94:	4b08      	ldr	r3, [pc, #32]	; (8000fb8 <SystemInit+0x28>)
 8000f96:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000f9a:	4a07      	ldr	r2, [pc, #28]	; (8000fb8 <SystemInit+0x28>)
 8000f9c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000fa0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8000fa4:	4b04      	ldr	r3, [pc, #16]	; (8000fb8 <SystemInit+0x28>)
 8000fa6:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000faa:	609a      	str	r2, [r3, #8]
#endif
}
 8000fac:	bf00      	nop
 8000fae:	46bd      	mov	sp, r7
 8000fb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fb4:	4770      	bx	lr
 8000fb6:	bf00      	nop
 8000fb8:	e000ed00 	.word	0xe000ed00

08000fbc <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000fbc:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000ff4 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000fc0:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000fc2:	e003      	b.n	8000fcc <LoopCopyDataInit>

08000fc4 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000fc4:	4b0c      	ldr	r3, [pc, #48]	; (8000ff8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000fc6:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000fc8:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000fca:	3104      	adds	r1, #4

08000fcc <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000fcc:	480b      	ldr	r0, [pc, #44]	; (8000ffc <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000fce:	4b0c      	ldr	r3, [pc, #48]	; (8001000 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000fd0:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000fd2:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000fd4:	d3f6      	bcc.n	8000fc4 <CopyDataInit>
  ldr  r2, =_sbss
 8000fd6:	4a0b      	ldr	r2, [pc, #44]	; (8001004 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000fd8:	e002      	b.n	8000fe0 <LoopFillZerobss>

08000fda <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000fda:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000fdc:	f842 3b04 	str.w	r3, [r2], #4

08000fe0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000fe0:	4b09      	ldr	r3, [pc, #36]	; (8001008 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000fe2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000fe4:	d3f9      	bcc.n	8000fda <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000fe6:	f7ff ffd3 	bl	8000f90 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000fea:	f00e fe15 	bl	800fc18 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000fee:	f7ff fd35 	bl	8000a5c <main>
  bx  lr    
 8000ff2:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8000ff4:	20020000 	.word	0x20020000
  ldr  r3, =_sidata
 8000ff8:	08012bfc 	.word	0x08012bfc
  ldr  r0, =_sdata
 8000ffc:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001000:	200001f8 	.word	0x200001f8
  ldr  r2, =_sbss
 8001004:	200001f8 	.word	0x200001f8
  ldr  r3, = _ebss
 8001008:	20002e2c 	.word	0x20002e2c

0800100c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800100c:	e7fe      	b.n	800100c <ADC_IRQHandler>
	...

08001010 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8001010:	b580      	push	{r7, lr}
 8001012:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8001014:	4b0e      	ldr	r3, [pc, #56]	; (8001050 <HAL_Init+0x40>)
 8001016:	681b      	ldr	r3, [r3, #0]
 8001018:	4a0d      	ldr	r2, [pc, #52]	; (8001050 <HAL_Init+0x40>)
 800101a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800101e:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8001020:	4b0b      	ldr	r3, [pc, #44]	; (8001050 <HAL_Init+0x40>)
 8001022:	681b      	ldr	r3, [r3, #0]
 8001024:	4a0a      	ldr	r2, [pc, #40]	; (8001050 <HAL_Init+0x40>)
 8001026:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800102a:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800102c:	4b08      	ldr	r3, [pc, #32]	; (8001050 <HAL_Init+0x40>)
 800102e:	681b      	ldr	r3, [r3, #0]
 8001030:	4a07      	ldr	r2, [pc, #28]	; (8001050 <HAL_Init+0x40>)
 8001032:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001036:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001038:	2003      	movs	r0, #3
 800103a:	f000 fd1b 	bl	8001a74 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800103e:	2000      	movs	r0, #0
 8001040:	f000 f808 	bl	8001054 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8001044:	f7ff fe96 	bl	8000d74 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8001048:	2300      	movs	r3, #0
}
 800104a:	4618      	mov	r0, r3
 800104c:	bd80      	pop	{r7, pc}
 800104e:	bf00      	nop
 8001050:	40023c00 	.word	0x40023c00

08001054 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001054:	b580      	push	{r7, lr}
 8001056:	b082      	sub	sp, #8
 8001058:	af00      	add	r7, sp, #0
 800105a:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 800105c:	4b12      	ldr	r3, [pc, #72]	; (80010a8 <HAL_InitTick+0x54>)
 800105e:	681a      	ldr	r2, [r3, #0]
 8001060:	4b12      	ldr	r3, [pc, #72]	; (80010ac <HAL_InitTick+0x58>)
 8001062:	781b      	ldrb	r3, [r3, #0]
 8001064:	4619      	mov	r1, r3
 8001066:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800106a:	fbb3 f3f1 	udiv	r3, r3, r1
 800106e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001072:	4618      	mov	r0, r3
 8001074:	f000 fd25 	bl	8001ac2 <HAL_SYSTICK_Config>
 8001078:	4603      	mov	r3, r0
 800107a:	2b00      	cmp	r3, #0
 800107c:	d001      	beq.n	8001082 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 800107e:	2301      	movs	r3, #1
 8001080:	e00e      	b.n	80010a0 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001082:	687b      	ldr	r3, [r7, #4]
 8001084:	2b0f      	cmp	r3, #15
 8001086:	d80a      	bhi.n	800109e <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001088:	2200      	movs	r2, #0
 800108a:	6879      	ldr	r1, [r7, #4]
 800108c:	f04f 30ff 	mov.w	r0, #4294967295
 8001090:	f000 fcfb 	bl	8001a8a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8001094:	4a06      	ldr	r2, [pc, #24]	; (80010b0 <HAL_InitTick+0x5c>)
 8001096:	687b      	ldr	r3, [r7, #4]
 8001098:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 800109a:	2300      	movs	r3, #0
 800109c:	e000      	b.n	80010a0 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 800109e:	2301      	movs	r3, #1
}
 80010a0:	4618      	mov	r0, r3
 80010a2:	3708      	adds	r7, #8
 80010a4:	46bd      	mov	sp, r7
 80010a6:	bd80      	pop	{r7, pc}
 80010a8:	20000000 	.word	0x20000000
 80010ac:	20000008 	.word	0x20000008
 80010b0:	20000004 	.word	0x20000004

080010b4 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80010b4:	b480      	push	{r7}
 80010b6:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80010b8:	4b06      	ldr	r3, [pc, #24]	; (80010d4 <HAL_IncTick+0x20>)
 80010ba:	781b      	ldrb	r3, [r3, #0]
 80010bc:	461a      	mov	r2, r3
 80010be:	4b06      	ldr	r3, [pc, #24]	; (80010d8 <HAL_IncTick+0x24>)
 80010c0:	681b      	ldr	r3, [r3, #0]
 80010c2:	4413      	add	r3, r2
 80010c4:	4a04      	ldr	r2, [pc, #16]	; (80010d8 <HAL_IncTick+0x24>)
 80010c6:	6013      	str	r3, [r2, #0]
}
 80010c8:	bf00      	nop
 80010ca:	46bd      	mov	sp, r7
 80010cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010d0:	4770      	bx	lr
 80010d2:	bf00      	nop
 80010d4:	20000008 	.word	0x20000008
 80010d8:	20002c74 	.word	0x20002c74

080010dc <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80010dc:	b480      	push	{r7}
 80010de:	af00      	add	r7, sp, #0
  return uwTick;
 80010e0:	4b03      	ldr	r3, [pc, #12]	; (80010f0 <HAL_GetTick+0x14>)
 80010e2:	681b      	ldr	r3, [r3, #0]
}
 80010e4:	4618      	mov	r0, r3
 80010e6:	46bd      	mov	sp, r7
 80010e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010ec:	4770      	bx	lr
 80010ee:	bf00      	nop
 80010f0:	20002c74 	.word	0x20002c74

080010f4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80010f4:	b580      	push	{r7, lr}
 80010f6:	b084      	sub	sp, #16
 80010f8:	af00      	add	r7, sp, #0
 80010fa:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 80010fc:	f7ff ffee 	bl	80010dc <HAL_GetTick>
 8001100:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8001102:	687b      	ldr	r3, [r7, #4]
 8001104:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8001106:	68fb      	ldr	r3, [r7, #12]
 8001108:	f1b3 3fff 	cmp.w	r3, #4294967295
 800110c:	d005      	beq.n	800111a <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 800110e:	4b09      	ldr	r3, [pc, #36]	; (8001134 <HAL_Delay+0x40>)
 8001110:	781b      	ldrb	r3, [r3, #0]
 8001112:	461a      	mov	r2, r3
 8001114:	68fb      	ldr	r3, [r7, #12]
 8001116:	4413      	add	r3, r2
 8001118:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 800111a:	bf00      	nop
 800111c:	f7ff ffde 	bl	80010dc <HAL_GetTick>
 8001120:	4602      	mov	r2, r0
 8001122:	68bb      	ldr	r3, [r7, #8]
 8001124:	1ad3      	subs	r3, r2, r3
 8001126:	68fa      	ldr	r2, [r7, #12]
 8001128:	429a      	cmp	r2, r3
 800112a:	d8f7      	bhi.n	800111c <HAL_Delay+0x28>
  {
  }
}
 800112c:	bf00      	nop
 800112e:	3710      	adds	r7, #16
 8001130:	46bd      	mov	sp, r7
 8001132:	bd80      	pop	{r7, pc}
 8001134:	20000008 	.word	0x20000008

08001138 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8001138:	b580      	push	{r7, lr}
 800113a:	b084      	sub	sp, #16
 800113c:	af00      	add	r7, sp, #0
 800113e:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8001140:	2300      	movs	r3, #0
 8001142:	73fb      	strb	r3, [r7, #15]
  
  /* Check ADC handle */
  if(hadc == NULL)
 8001144:	687b      	ldr	r3, [r7, #4]
 8001146:	2b00      	cmp	r3, #0
 8001148:	d101      	bne.n	800114e <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 800114a:	2301      	movs	r3, #1
 800114c:	e033      	b.n	80011b6 <HAL_ADC_Init+0x7e>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 800114e:	687b      	ldr	r3, [r7, #4]
 8001150:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001152:	2b00      	cmp	r3, #0
 8001154:	d109      	bne.n	800116a <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8001156:	6878      	ldr	r0, [r7, #4]
 8001158:	f7ff fe34 	bl	8000dc4 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 800115c:	687b      	ldr	r3, [r7, #4]
 800115e:	2200      	movs	r2, #0
 8001160:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8001162:	687b      	ldr	r3, [r7, #4]
 8001164:	2200      	movs	r2, #0
 8001166:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 800116a:	687b      	ldr	r3, [r7, #4]
 800116c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800116e:	f003 0310 	and.w	r3, r3, #16
 8001172:	2b00      	cmp	r3, #0
 8001174:	d118      	bne.n	80011a8 <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8001176:	687b      	ldr	r3, [r7, #4]
 8001178:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800117a:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800117e:	f023 0302 	bic.w	r3, r3, #2
 8001182:	f043 0202 	orr.w	r2, r3, #2
 8001186:	687b      	ldr	r3, [r7, #4]
 8001188:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);
    
    /* Set ADC parameters */
    ADC_Init(hadc);
 800118a:	6878      	ldr	r0, [r7, #4]
 800118c:	f000 fac4 	bl	8001718 <ADC_Init>
    
    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8001190:	687b      	ldr	r3, [r7, #4]
 8001192:	2200      	movs	r2, #0
 8001194:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8001196:	687b      	ldr	r3, [r7, #4]
 8001198:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800119a:	f023 0303 	bic.w	r3, r3, #3
 800119e:	f043 0201 	orr.w	r2, r3, #1
 80011a2:	687b      	ldr	r3, [r7, #4]
 80011a4:	641a      	str	r2, [r3, #64]	; 0x40
 80011a6:	e001      	b.n	80011ac <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 80011a8:	2301      	movs	r3, #1
 80011aa:	73fb      	strb	r3, [r7, #15]
  }
  
  /* Release Lock */
  __HAL_UNLOCK(hadc);
 80011ac:	687b      	ldr	r3, [r7, #4]
 80011ae:	2200      	movs	r2, #0
 80011b0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Return function status */
  return tmp_hal_status;
 80011b4:	7bfb      	ldrb	r3, [r7, #15]
}
 80011b6:	4618      	mov	r0, r3
 80011b8:	3710      	adds	r7, #16
 80011ba:	46bd      	mov	sp, r7
 80011bc:	bd80      	pop	{r7, pc}
	...

080011c0 <HAL_ADC_Start>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
{
 80011c0:	b480      	push	{r7}
 80011c2:	b085      	sub	sp, #20
 80011c4:	af00      	add	r7, sp, #0
 80011c6:	6078      	str	r0, [r7, #4]
  __IO uint32_t counter = 0U;
 80011c8:	2300      	movs	r3, #0
 80011ca:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
  
  /* Process locked */
  __HAL_LOCK(hadc);
 80011cc:	687b      	ldr	r3, [r7, #4]
 80011ce:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80011d2:	2b01      	cmp	r3, #1
 80011d4:	d101      	bne.n	80011da <HAL_ADC_Start+0x1a>
 80011d6:	2302      	movs	r3, #2
 80011d8:	e0a5      	b.n	8001326 <HAL_ADC_Start+0x166>
 80011da:	687b      	ldr	r3, [r7, #4]
 80011dc:	2201      	movs	r2, #1
 80011de:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during 
  Tstab time the ADC's stabilization */
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 80011e2:	687b      	ldr	r3, [r7, #4]
 80011e4:	681b      	ldr	r3, [r3, #0]
 80011e6:	689b      	ldr	r3, [r3, #8]
 80011e8:	f003 0301 	and.w	r3, r3, #1
 80011ec:	2b01      	cmp	r3, #1
 80011ee:	d018      	beq.n	8001222 <HAL_ADC_Start+0x62>
  {  
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 80011f0:	687b      	ldr	r3, [r7, #4]
 80011f2:	681b      	ldr	r3, [r3, #0]
 80011f4:	689a      	ldr	r2, [r3, #8]
 80011f6:	687b      	ldr	r3, [r7, #4]
 80011f8:	681b      	ldr	r3, [r3, #0]
 80011fa:	f042 0201 	orr.w	r2, r2, #1
 80011fe:	609a      	str	r2, [r3, #8]
    
    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8001200:	4b4c      	ldr	r3, [pc, #304]	; (8001334 <HAL_ADC_Start+0x174>)
 8001202:	681b      	ldr	r3, [r3, #0]
 8001204:	4a4c      	ldr	r2, [pc, #304]	; (8001338 <HAL_ADC_Start+0x178>)
 8001206:	fba2 2303 	umull	r2, r3, r2, r3
 800120a:	0c9a      	lsrs	r2, r3, #18
 800120c:	4613      	mov	r3, r2
 800120e:	005b      	lsls	r3, r3, #1
 8001210:	4413      	add	r3, r2
 8001212:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 8001214:	e002      	b.n	800121c <HAL_ADC_Start+0x5c>
    {
      counter--;
 8001216:	68bb      	ldr	r3, [r7, #8]
 8001218:	3b01      	subs	r3, #1
 800121a:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 800121c:	68bb      	ldr	r3, [r7, #8]
 800121e:	2b00      	cmp	r3, #0
 8001220:	d1f9      	bne.n	8001216 <HAL_ADC_Start+0x56>
    }
  }
  
  /* Start conversion if ADC is effectively enabled */
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8001222:	687b      	ldr	r3, [r7, #4]
 8001224:	681b      	ldr	r3, [r3, #0]
 8001226:	689b      	ldr	r3, [r3, #8]
 8001228:	f003 0301 	and.w	r3, r3, #1
 800122c:	2b01      	cmp	r3, #1
 800122e:	d179      	bne.n	8001324 <HAL_ADC_Start+0x164>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8001230:	687b      	ldr	r3, [r7, #4]
 8001232:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001234:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8001238:	f023 0301 	bic.w	r3, r3, #1
 800123c:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8001240:	687b      	ldr	r3, [r7, #4]
 8001242:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);
    
    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8001244:	687b      	ldr	r3, [r7, #4]
 8001246:	681b      	ldr	r3, [r3, #0]
 8001248:	685b      	ldr	r3, [r3, #4]
 800124a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800124e:	2b00      	cmp	r3, #0
 8001250:	d007      	beq.n	8001262 <HAL_ADC_Start+0xa2>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8001252:	687b      	ldr	r3, [r7, #4]
 8001254:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001256:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800125a:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 800125e:	687b      	ldr	r3, [r7, #4]
 8001260:	641a      	str	r2, [r3, #64]	; 0x40
    }
    
    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8001262:	687b      	ldr	r3, [r7, #4]
 8001264:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001266:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800126a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800126e:	d106      	bne.n	800127e <HAL_ADC_Start+0xbe>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8001270:	687b      	ldr	r3, [r7, #4]
 8001272:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001274:	f023 0206 	bic.w	r2, r3, #6
 8001278:	687b      	ldr	r3, [r7, #4]
 800127a:	645a      	str	r2, [r3, #68]	; 0x44
 800127c:	e002      	b.n	8001284 <HAL_ADC_Start+0xc4>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 800127e:	687b      	ldr	r3, [r7, #4]
 8001280:	2200      	movs	r2, #0
 8001282:	645a      	str	r2, [r3, #68]	; 0x44
    } 

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 8001284:	687b      	ldr	r3, [r7, #4]
 8001286:	2200      	movs	r2, #0
 8001288:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 800128c:	4b2b      	ldr	r3, [pc, #172]	; (800133c <HAL_ADC_Start+0x17c>)
 800128e:	60fb      	str	r3, [r7, #12]

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8001290:	687b      	ldr	r3, [r7, #4]
 8001292:	681b      	ldr	r3, [r3, #0]
 8001294:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8001298:	601a      	str	r2, [r3, #0]
    
    /* Check if Multimode enabled */
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 800129a:	68fb      	ldr	r3, [r7, #12]
 800129c:	685b      	ldr	r3, [r3, #4]
 800129e:	f003 031f 	and.w	r3, r3, #31
 80012a2:	2b00      	cmp	r3, #0
 80012a4:	d12a      	bne.n	80012fc <HAL_ADC_Start+0x13c>
    {
#if defined(ADC2) && defined(ADC3)
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 80012a6:	687b      	ldr	r3, [r7, #4]
 80012a8:	681b      	ldr	r3, [r3, #0]
 80012aa:	4a25      	ldr	r2, [pc, #148]	; (8001340 <HAL_ADC_Start+0x180>)
 80012ac:	4293      	cmp	r3, r2
 80012ae:	d015      	beq.n	80012dc <HAL_ADC_Start+0x11c>
 80012b0:	687b      	ldr	r3, [r7, #4]
 80012b2:	681b      	ldr	r3, [r3, #0]
 80012b4:	4a23      	ldr	r2, [pc, #140]	; (8001344 <HAL_ADC_Start+0x184>)
 80012b6:	4293      	cmp	r3, r2
 80012b8:	d105      	bne.n	80012c6 <HAL_ADC_Start+0x106>
 80012ba:	4b20      	ldr	r3, [pc, #128]	; (800133c <HAL_ADC_Start+0x17c>)
 80012bc:	685b      	ldr	r3, [r3, #4]
 80012be:	f003 031f 	and.w	r3, r3, #31
 80012c2:	2b00      	cmp	r3, #0
 80012c4:	d00a      	beq.n	80012dc <HAL_ADC_Start+0x11c>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 80012c6:	687b      	ldr	r3, [r7, #4]
 80012c8:	681b      	ldr	r3, [r3, #0]
 80012ca:	4a1f      	ldr	r2, [pc, #124]	; (8001348 <HAL_ADC_Start+0x188>)
 80012cc:	4293      	cmp	r3, r2
 80012ce:	d129      	bne.n	8001324 <HAL_ADC_Start+0x164>
 80012d0:	4b1a      	ldr	r3, [pc, #104]	; (800133c <HAL_ADC_Start+0x17c>)
 80012d2:	685b      	ldr	r3, [r3, #4]
 80012d4:	f003 031f 	and.w	r3, r3, #31
 80012d8:	2b0f      	cmp	r3, #15
 80012da:	d823      	bhi.n	8001324 <HAL_ADC_Start+0x164>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 80012dc:	687b      	ldr	r3, [r7, #4]
 80012de:	681b      	ldr	r3, [r3, #0]
 80012e0:	689b      	ldr	r3, [r3, #8]
 80012e2:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80012e6:	2b00      	cmp	r3, #0
 80012e8:	d11c      	bne.n	8001324 <HAL_ADC_Start+0x164>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 80012ea:	687b      	ldr	r3, [r7, #4]
 80012ec:	681b      	ldr	r3, [r3, #0]
 80012ee:	689a      	ldr	r2, [r3, #8]
 80012f0:	687b      	ldr	r3, [r7, #4]
 80012f2:	681b      	ldr	r3, [r3, #0]
 80012f4:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80012f8:	609a      	str	r2, [r3, #8]
 80012fa:	e013      	b.n	8001324 <HAL_ADC_Start+0x164>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 80012fc:	687b      	ldr	r3, [r7, #4]
 80012fe:	681b      	ldr	r3, [r3, #0]
 8001300:	4a0f      	ldr	r2, [pc, #60]	; (8001340 <HAL_ADC_Start+0x180>)
 8001302:	4293      	cmp	r3, r2
 8001304:	d10e      	bne.n	8001324 <HAL_ADC_Start+0x164>
 8001306:	687b      	ldr	r3, [r7, #4]
 8001308:	681b      	ldr	r3, [r3, #0]
 800130a:	689b      	ldr	r3, [r3, #8]
 800130c:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8001310:	2b00      	cmp	r3, #0
 8001312:	d107      	bne.n	8001324 <HAL_ADC_Start+0x164>
      {
        /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8001314:	687b      	ldr	r3, [r7, #4]
 8001316:	681b      	ldr	r3, [r3, #0]
 8001318:	689a      	ldr	r2, [r3, #8]
 800131a:	687b      	ldr	r3, [r7, #4]
 800131c:	681b      	ldr	r3, [r3, #0]
 800131e:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8001322:	609a      	str	r2, [r3, #8]
      }
    }
  }
  
  /* Return function status */
  return HAL_OK;
 8001324:	2300      	movs	r3, #0
}
 8001326:	4618      	mov	r0, r3
 8001328:	3714      	adds	r7, #20
 800132a:	46bd      	mov	sp, r7
 800132c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001330:	4770      	bx	lr
 8001332:	bf00      	nop
 8001334:	20000000 	.word	0x20000000
 8001338:	431bde83 	.word	0x431bde83
 800133c:	40012300 	.word	0x40012300
 8001340:	40012000 	.word	0x40012000
 8001344:	40012100 	.word	0x40012100
 8001348:	40012200 	.word	0x40012200

0800134c <HAL_ADC_Stop>:
  *         the configuration information for the specified ADC.
  *
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
{
 800134c:	b480      	push	{r7}
 800134e:	b083      	sub	sp, #12
 8001350:	af00      	add	r7, sp, #0
 8001352:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8001354:	687b      	ldr	r3, [r7, #4]
 8001356:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800135a:	2b01      	cmp	r3, #1
 800135c:	d101      	bne.n	8001362 <HAL_ADC_Stop+0x16>
 800135e:	2302      	movs	r3, #2
 8001360:	e021      	b.n	80013a6 <HAL_ADC_Stop+0x5a>
 8001362:	687b      	ldr	r3, [r7, #4]
 8001364:	2201      	movs	r2, #1
 8001366:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Stop potential conversion on going, on regular and injected groups */
  /* Disable ADC peripheral */
  __HAL_ADC_DISABLE(hadc);
 800136a:	687b      	ldr	r3, [r7, #4]
 800136c:	681b      	ldr	r3, [r3, #0]
 800136e:	689a      	ldr	r2, [r3, #8]
 8001370:	687b      	ldr	r3, [r7, #4]
 8001372:	681b      	ldr	r3, [r3, #0]
 8001374:	f022 0201 	bic.w	r2, r2, #1
 8001378:	609a      	str	r2, [r3, #8]
  
  /* Check if ADC is effectively disabled */
  if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 800137a:	687b      	ldr	r3, [r7, #4]
 800137c:	681b      	ldr	r3, [r3, #0]
 800137e:	689b      	ldr	r3, [r3, #8]
 8001380:	f003 0301 	and.w	r3, r3, #1
 8001384:	2b00      	cmp	r3, #0
 8001386:	d109      	bne.n	800139c <HAL_ADC_Stop+0x50>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8001388:	687b      	ldr	r3, [r7, #4]
 800138a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800138c:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8001390:	f023 0301 	bic.w	r3, r3, #1
 8001394:	f043 0201 	orr.w	r2, r3, #1
 8001398:	687b      	ldr	r3, [r7, #4]
 800139a:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_READY);
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 800139c:	687b      	ldr	r3, [r7, #4]
 800139e:	2200      	movs	r2, #0
 80013a0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Return function status */
  return HAL_OK;
 80013a4:	2300      	movs	r3, #0
}
 80013a6:	4618      	mov	r0, r3
 80013a8:	370c      	adds	r7, #12
 80013aa:	46bd      	mov	sp, r7
 80013ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013b0:	4770      	bx	lr

080013b2 <HAL_ADC_PollForConversion>:
  *         the configuration information for the specified ADC.
  * @param  Timeout Timeout value in millisecond.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
{
 80013b2:	b580      	push	{r7, lr}
 80013b4:	b084      	sub	sp, #16
 80013b6:	af00      	add	r7, sp, #0
 80013b8:	6078      	str	r0, [r7, #4]
 80013ba:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0U;
 80013bc:	2300      	movs	r3, #0
 80013be:	60fb      	str	r3, [r7, #12]
  /* each conversion:                                                       */
  /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
  /* several ranks and polling for end of each conversion.                  */
  /* For code simplicity sake, this particular case is generalized to       */
  /* ADC configured in DMA mode and polling for end of each conversion.     */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80013c0:	687b      	ldr	r3, [r7, #4]
 80013c2:	681b      	ldr	r3, [r3, #0]
 80013c4:	689b      	ldr	r3, [r3, #8]
 80013c6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80013ca:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80013ce:	d113      	bne.n	80013f8 <HAL_ADC_PollForConversion+0x46>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 80013d0:	687b      	ldr	r3, [r7, #4]
 80013d2:	681b      	ldr	r3, [r3, #0]
 80013d4:	689b      	ldr	r3, [r3, #8]
 80013d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80013da:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80013de:	d10b      	bne.n	80013f8 <HAL_ADC_PollForConversion+0x46>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 80013e0:	687b      	ldr	r3, [r7, #4]
 80013e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013e4:	f043 0220 	orr.w	r2, r3, #32
 80013e8:	687b      	ldr	r3, [r7, #4]
 80013ea:	641a      	str	r2, [r3, #64]	; 0x40
    
    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 80013ec:	687b      	ldr	r3, [r7, #4]
 80013ee:	2200      	movs	r2, #0
 80013f0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
    return HAL_ERROR;
 80013f4:	2301      	movs	r3, #1
 80013f6:	e05c      	b.n	80014b2 <HAL_ADC_PollForConversion+0x100>
  }

  /* Get tick */ 
  tickstart = HAL_GetTick();
 80013f8:	f7ff fe70 	bl	80010dc <HAL_GetTick>
 80013fc:	60f8      	str	r0, [r7, #12]

  /* Check End of conversion flag */
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 80013fe:	e01a      	b.n	8001436 <HAL_ADC_PollForConversion+0x84>
  {
    /* Check if timeout is disabled (set to infinite wait) */
    if(Timeout != HAL_MAX_DELAY)
 8001400:	683b      	ldr	r3, [r7, #0]
 8001402:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001406:	d016      	beq.n	8001436 <HAL_ADC_PollForConversion+0x84>
    {
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8001408:	683b      	ldr	r3, [r7, #0]
 800140a:	2b00      	cmp	r3, #0
 800140c:	d007      	beq.n	800141e <HAL_ADC_PollForConversion+0x6c>
 800140e:	f7ff fe65 	bl	80010dc <HAL_GetTick>
 8001412:	4602      	mov	r2, r0
 8001414:	68fb      	ldr	r3, [r7, #12]
 8001416:	1ad3      	subs	r3, r2, r3
 8001418:	683a      	ldr	r2, [r7, #0]
 800141a:	429a      	cmp	r2, r3
 800141c:	d20b      	bcs.n	8001436 <HAL_ADC_PollForConversion+0x84>
      {
        /* Update ADC state machine to timeout */
        SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 800141e:	687b      	ldr	r3, [r7, #4]
 8001420:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001422:	f043 0204 	orr.w	r2, r3, #4
 8001426:	687b      	ldr	r3, [r7, #4]
 8001428:	641a      	str	r2, [r3, #64]	; 0x40
        
        /* Process unlocked */
        __HAL_UNLOCK(hadc);
 800142a:	687b      	ldr	r3, [r7, #4]
 800142c:	2200      	movs	r2, #0
 800142e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
        
        return HAL_TIMEOUT;
 8001432:	2303      	movs	r3, #3
 8001434:	e03d      	b.n	80014b2 <HAL_ADC_PollForConversion+0x100>
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8001436:	687b      	ldr	r3, [r7, #4]
 8001438:	681b      	ldr	r3, [r3, #0]
 800143a:	681b      	ldr	r3, [r3, #0]
 800143c:	f003 0302 	and.w	r3, r3, #2
 8001440:	2b02      	cmp	r3, #2
 8001442:	d1dd      	bne.n	8001400 <HAL_ADC_PollForConversion+0x4e>
      }
    }
  }
  
  /* Clear regular group conversion flag */
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8001444:	687b      	ldr	r3, [r7, #4]
 8001446:	681b      	ldr	r3, [r3, #0]
 8001448:	f06f 0212 	mvn.w	r2, #18
 800144c:	601a      	str	r2, [r3, #0]
  
  /* Update ADC state machine */
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 800144e:	687b      	ldr	r3, [r7, #4]
 8001450:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001452:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8001456:	687b      	ldr	r3, [r7, #4]
 8001458:	641a      	str	r2, [r3, #64]	; 0x40
  /* by external trigger, continuous mode or scan sequence on going.          */
  /* Note: On STM32F4, there is no independent flag of end of sequence.       */
  /*       The test of scan sequence on going is done either with scan        */
  /*       sequence disabled or with end of conversion flag set to            */
  /*       of end of sequence.                                                */
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800145a:	687b      	ldr	r3, [r7, #4]
 800145c:	681b      	ldr	r3, [r3, #0]
 800145e:	689b      	ldr	r3, [r3, #8]
 8001460:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8001464:	2b00      	cmp	r3, #0
 8001466:	d123      	bne.n	80014b0 <HAL_ADC_PollForConversion+0xfe>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8001468:	687b      	ldr	r3, [r7, #4]
 800146a:	7e1b      	ldrb	r3, [r3, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800146c:	2b00      	cmp	r3, #0
 800146e:	d11f      	bne.n	80014b0 <HAL_ADC_PollForConversion+0xfe>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8001470:	687b      	ldr	r3, [r7, #4]
 8001472:	681b      	ldr	r3, [r3, #0]
 8001474:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001476:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800147a:	2b00      	cmp	r3, #0
 800147c:	d006      	beq.n	800148c <HAL_ADC_PollForConversion+0xda>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 800147e:	687b      	ldr	r3, [r7, #4]
 8001480:	681b      	ldr	r3, [r3, #0]
 8001482:	689b      	ldr	r3, [r3, #8]
 8001484:	f403 6380 	and.w	r3, r3, #1024	; 0x400
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8001488:	2b00      	cmp	r3, #0
 800148a:	d111      	bne.n	80014b0 <HAL_ADC_PollForConversion+0xfe>
  {
    /* Set ADC state */
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 800148c:	687b      	ldr	r3, [r7, #4]
 800148e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001490:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8001494:	687b      	ldr	r3, [r7, #4]
 8001496:	641a      	str	r2, [r3, #64]	; 0x40
    
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8001498:	687b      	ldr	r3, [r7, #4]
 800149a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800149c:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80014a0:	2b00      	cmp	r3, #0
 80014a2:	d105      	bne.n	80014b0 <HAL_ADC_PollForConversion+0xfe>
    { 
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 80014a4:	687b      	ldr	r3, [r7, #4]
 80014a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80014a8:	f043 0201 	orr.w	r2, r3, #1
 80014ac:	687b      	ldr	r3, [r7, #4]
 80014ae:	641a      	str	r2, [r3, #64]	; 0x40
    }
  }
  
  /* Return ADC state */
  return HAL_OK;
 80014b0:	2300      	movs	r3, #0
}
 80014b2:	4618      	mov	r0, r3
 80014b4:	3710      	adds	r7, #16
 80014b6:	46bd      	mov	sp, r7
 80014b8:	bd80      	pop	{r7, pc}

080014ba <HAL_ADC_GetValue>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval Converted value
  */
uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
{       
 80014ba:	b480      	push	{r7}
 80014bc:	b083      	sub	sp, #12
 80014be:	af00      	add	r7, sp, #0
 80014c0:	6078      	str	r0, [r7, #4]
  /* Return the selected ADC converted value */ 
  return hadc->Instance->DR;
 80014c2:	687b      	ldr	r3, [r7, #4]
 80014c4:	681b      	ldr	r3, [r3, #0]
 80014c6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
 80014c8:	4618      	mov	r0, r3
 80014ca:	370c      	adds	r7, #12
 80014cc:	46bd      	mov	sp, r7
 80014ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014d2:	4770      	bx	lr

080014d4 <HAL_ADC_ConfigChannel>:
  *         the configuration information for the specified ADC.
  * @param  sConfig ADC configuration structure. 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
{
 80014d4:	b480      	push	{r7}
 80014d6:	b085      	sub	sp, #20
 80014d8:	af00      	add	r7, sp, #0
 80014da:	6078      	str	r0, [r7, #4]
 80014dc:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 80014de:	2300      	movs	r3, #0
 80014e0:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 80014e2:	687b      	ldr	r3, [r7, #4]
 80014e4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80014e8:	2b01      	cmp	r3, #1
 80014ea:	d101      	bne.n	80014f0 <HAL_ADC_ConfigChannel+0x1c>
 80014ec:	2302      	movs	r3, #2
 80014ee:	e105      	b.n	80016fc <HAL_ADC_ConfigChannel+0x228>
 80014f0:	687b      	ldr	r3, [r7, #4]
 80014f2:	2201      	movs	r2, #1
 80014f4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 80014f8:	683b      	ldr	r3, [r7, #0]
 80014fa:	681b      	ldr	r3, [r3, #0]
 80014fc:	2b09      	cmp	r3, #9
 80014fe:	d925      	bls.n	800154c <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8001500:	687b      	ldr	r3, [r7, #4]
 8001502:	681b      	ldr	r3, [r3, #0]
 8001504:	68d9      	ldr	r1, [r3, #12]
 8001506:	683b      	ldr	r3, [r7, #0]
 8001508:	681b      	ldr	r3, [r3, #0]
 800150a:	b29b      	uxth	r3, r3
 800150c:	461a      	mov	r2, r3
 800150e:	4613      	mov	r3, r2
 8001510:	005b      	lsls	r3, r3, #1
 8001512:	4413      	add	r3, r2
 8001514:	3b1e      	subs	r3, #30
 8001516:	2207      	movs	r2, #7
 8001518:	fa02 f303 	lsl.w	r3, r2, r3
 800151c:	43da      	mvns	r2, r3
 800151e:	687b      	ldr	r3, [r7, #4]
 8001520:	681b      	ldr	r3, [r3, #0]
 8001522:	400a      	ands	r2, r1
 8001524:	60da      	str	r2, [r3, #12]
    
    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8001526:	687b      	ldr	r3, [r7, #4]
 8001528:	681b      	ldr	r3, [r3, #0]
 800152a:	68d9      	ldr	r1, [r3, #12]
 800152c:	683b      	ldr	r3, [r7, #0]
 800152e:	689a      	ldr	r2, [r3, #8]
 8001530:	683b      	ldr	r3, [r7, #0]
 8001532:	681b      	ldr	r3, [r3, #0]
 8001534:	b29b      	uxth	r3, r3
 8001536:	4618      	mov	r0, r3
 8001538:	4603      	mov	r3, r0
 800153a:	005b      	lsls	r3, r3, #1
 800153c:	4403      	add	r3, r0
 800153e:	3b1e      	subs	r3, #30
 8001540:	409a      	lsls	r2, r3
 8001542:	687b      	ldr	r3, [r7, #4]
 8001544:	681b      	ldr	r3, [r3, #0]
 8001546:	430a      	orrs	r2, r1
 8001548:	60da      	str	r2, [r3, #12]
 800154a:	e022      	b.n	8001592 <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 800154c:	687b      	ldr	r3, [r7, #4]
 800154e:	681b      	ldr	r3, [r3, #0]
 8001550:	6919      	ldr	r1, [r3, #16]
 8001552:	683b      	ldr	r3, [r7, #0]
 8001554:	681b      	ldr	r3, [r3, #0]
 8001556:	b29b      	uxth	r3, r3
 8001558:	461a      	mov	r2, r3
 800155a:	4613      	mov	r3, r2
 800155c:	005b      	lsls	r3, r3, #1
 800155e:	4413      	add	r3, r2
 8001560:	2207      	movs	r2, #7
 8001562:	fa02 f303 	lsl.w	r3, r2, r3
 8001566:	43da      	mvns	r2, r3
 8001568:	687b      	ldr	r3, [r7, #4]
 800156a:	681b      	ldr	r3, [r3, #0]
 800156c:	400a      	ands	r2, r1
 800156e:	611a      	str	r2, [r3, #16]
    
    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8001570:	687b      	ldr	r3, [r7, #4]
 8001572:	681b      	ldr	r3, [r3, #0]
 8001574:	6919      	ldr	r1, [r3, #16]
 8001576:	683b      	ldr	r3, [r7, #0]
 8001578:	689a      	ldr	r2, [r3, #8]
 800157a:	683b      	ldr	r3, [r7, #0]
 800157c:	681b      	ldr	r3, [r3, #0]
 800157e:	b29b      	uxth	r3, r3
 8001580:	4618      	mov	r0, r3
 8001582:	4603      	mov	r3, r0
 8001584:	005b      	lsls	r3, r3, #1
 8001586:	4403      	add	r3, r0
 8001588:	409a      	lsls	r2, r3
 800158a:	687b      	ldr	r3, [r7, #4]
 800158c:	681b      	ldr	r3, [r3, #0]
 800158e:	430a      	orrs	r2, r1
 8001590:	611a      	str	r2, [r3, #16]
  }
  
  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 8001592:	683b      	ldr	r3, [r7, #0]
 8001594:	685b      	ldr	r3, [r3, #4]
 8001596:	2b06      	cmp	r3, #6
 8001598:	d824      	bhi.n	80015e4 <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 800159a:	687b      	ldr	r3, [r7, #4]
 800159c:	681b      	ldr	r3, [r3, #0]
 800159e:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80015a0:	683b      	ldr	r3, [r7, #0]
 80015a2:	685a      	ldr	r2, [r3, #4]
 80015a4:	4613      	mov	r3, r2
 80015a6:	009b      	lsls	r3, r3, #2
 80015a8:	4413      	add	r3, r2
 80015aa:	3b05      	subs	r3, #5
 80015ac:	221f      	movs	r2, #31
 80015ae:	fa02 f303 	lsl.w	r3, r2, r3
 80015b2:	43da      	mvns	r2, r3
 80015b4:	687b      	ldr	r3, [r7, #4]
 80015b6:	681b      	ldr	r3, [r3, #0]
 80015b8:	400a      	ands	r2, r1
 80015ba:	635a      	str	r2, [r3, #52]	; 0x34
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 80015bc:	687b      	ldr	r3, [r7, #4]
 80015be:	681b      	ldr	r3, [r3, #0]
 80015c0:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80015c2:	683b      	ldr	r3, [r7, #0]
 80015c4:	681b      	ldr	r3, [r3, #0]
 80015c6:	b29b      	uxth	r3, r3
 80015c8:	4618      	mov	r0, r3
 80015ca:	683b      	ldr	r3, [r7, #0]
 80015cc:	685a      	ldr	r2, [r3, #4]
 80015ce:	4613      	mov	r3, r2
 80015d0:	009b      	lsls	r3, r3, #2
 80015d2:	4413      	add	r3, r2
 80015d4:	3b05      	subs	r3, #5
 80015d6:	fa00 f203 	lsl.w	r2, r0, r3
 80015da:	687b      	ldr	r3, [r7, #4]
 80015dc:	681b      	ldr	r3, [r3, #0]
 80015de:	430a      	orrs	r2, r1
 80015e0:	635a      	str	r2, [r3, #52]	; 0x34
 80015e2:	e04c      	b.n	800167e <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 80015e4:	683b      	ldr	r3, [r7, #0]
 80015e6:	685b      	ldr	r3, [r3, #4]
 80015e8:	2b0c      	cmp	r3, #12
 80015ea:	d824      	bhi.n	8001636 <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 80015ec:	687b      	ldr	r3, [r7, #4]
 80015ee:	681b      	ldr	r3, [r3, #0]
 80015f0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80015f2:	683b      	ldr	r3, [r7, #0]
 80015f4:	685a      	ldr	r2, [r3, #4]
 80015f6:	4613      	mov	r3, r2
 80015f8:	009b      	lsls	r3, r3, #2
 80015fa:	4413      	add	r3, r2
 80015fc:	3b23      	subs	r3, #35	; 0x23
 80015fe:	221f      	movs	r2, #31
 8001600:	fa02 f303 	lsl.w	r3, r2, r3
 8001604:	43da      	mvns	r2, r3
 8001606:	687b      	ldr	r3, [r7, #4]
 8001608:	681b      	ldr	r3, [r3, #0]
 800160a:	400a      	ands	r2, r1
 800160c:	631a      	str	r2, [r3, #48]	; 0x30
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 800160e:	687b      	ldr	r3, [r7, #4]
 8001610:	681b      	ldr	r3, [r3, #0]
 8001612:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001614:	683b      	ldr	r3, [r7, #0]
 8001616:	681b      	ldr	r3, [r3, #0]
 8001618:	b29b      	uxth	r3, r3
 800161a:	4618      	mov	r0, r3
 800161c:	683b      	ldr	r3, [r7, #0]
 800161e:	685a      	ldr	r2, [r3, #4]
 8001620:	4613      	mov	r3, r2
 8001622:	009b      	lsls	r3, r3, #2
 8001624:	4413      	add	r3, r2
 8001626:	3b23      	subs	r3, #35	; 0x23
 8001628:	fa00 f203 	lsl.w	r2, r0, r3
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	681b      	ldr	r3, [r3, #0]
 8001630:	430a      	orrs	r2, r1
 8001632:	631a      	str	r2, [r3, #48]	; 0x30
 8001634:	e023      	b.n	800167e <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8001636:	687b      	ldr	r3, [r7, #4]
 8001638:	681b      	ldr	r3, [r3, #0]
 800163a:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800163c:	683b      	ldr	r3, [r7, #0]
 800163e:	685a      	ldr	r2, [r3, #4]
 8001640:	4613      	mov	r3, r2
 8001642:	009b      	lsls	r3, r3, #2
 8001644:	4413      	add	r3, r2
 8001646:	3b41      	subs	r3, #65	; 0x41
 8001648:	221f      	movs	r2, #31
 800164a:	fa02 f303 	lsl.w	r3, r2, r3
 800164e:	43da      	mvns	r2, r3
 8001650:	687b      	ldr	r3, [r7, #4]
 8001652:	681b      	ldr	r3, [r3, #0]
 8001654:	400a      	ands	r2, r1
 8001656:	62da      	str	r2, [r3, #44]	; 0x2c
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8001658:	687b      	ldr	r3, [r7, #4]
 800165a:	681b      	ldr	r3, [r3, #0]
 800165c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800165e:	683b      	ldr	r3, [r7, #0]
 8001660:	681b      	ldr	r3, [r3, #0]
 8001662:	b29b      	uxth	r3, r3
 8001664:	4618      	mov	r0, r3
 8001666:	683b      	ldr	r3, [r7, #0]
 8001668:	685a      	ldr	r2, [r3, #4]
 800166a:	4613      	mov	r3, r2
 800166c:	009b      	lsls	r3, r3, #2
 800166e:	4413      	add	r3, r2
 8001670:	3b41      	subs	r3, #65	; 0x41
 8001672:	fa00 f203 	lsl.w	r2, r0, r3
 8001676:	687b      	ldr	r3, [r7, #4]
 8001678:	681b      	ldr	r3, [r3, #0]
 800167a:	430a      	orrs	r2, r1
 800167c:	62da      	str	r2, [r3, #44]	; 0x2c
  }

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 800167e:	4b22      	ldr	r3, [pc, #136]	; (8001708 <HAL_ADC_ConfigChannel+0x234>)
 8001680:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8001682:	687b      	ldr	r3, [r7, #4]
 8001684:	681b      	ldr	r3, [r3, #0]
 8001686:	4a21      	ldr	r2, [pc, #132]	; (800170c <HAL_ADC_ConfigChannel+0x238>)
 8001688:	4293      	cmp	r3, r2
 800168a:	d109      	bne.n	80016a0 <HAL_ADC_ConfigChannel+0x1cc>
 800168c:	683b      	ldr	r3, [r7, #0]
 800168e:	681b      	ldr	r3, [r3, #0]
 8001690:	2b12      	cmp	r3, #18
 8001692:	d105      	bne.n	80016a0 <HAL_ADC_ConfigChannel+0x1cc>
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8001694:	68fb      	ldr	r3, [r7, #12]
 8001696:	685b      	ldr	r3, [r3, #4]
 8001698:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 800169c:	68fb      	ldr	r3, [r7, #12]
 800169e:	605a      	str	r2, [r3, #4]
  }
  
  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or 
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 80016a0:	687b      	ldr	r3, [r7, #4]
 80016a2:	681b      	ldr	r3, [r3, #0]
 80016a4:	4a19      	ldr	r2, [pc, #100]	; (800170c <HAL_ADC_ConfigChannel+0x238>)
 80016a6:	4293      	cmp	r3, r2
 80016a8:	d123      	bne.n	80016f2 <HAL_ADC_ConfigChannel+0x21e>
 80016aa:	683b      	ldr	r3, [r7, #0]
 80016ac:	681b      	ldr	r3, [r3, #0]
 80016ae:	2b10      	cmp	r3, #16
 80016b0:	d003      	beq.n	80016ba <HAL_ADC_ConfigChannel+0x1e6>
 80016b2:	683b      	ldr	r3, [r7, #0]
 80016b4:	681b      	ldr	r3, [r3, #0]
 80016b6:	2b11      	cmp	r3, #17
 80016b8:	d11b      	bne.n	80016f2 <HAL_ADC_ConfigChannel+0x21e>
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 80016ba:	68fb      	ldr	r3, [r7, #12]
 80016bc:	685b      	ldr	r3, [r3, #4]
 80016be:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 80016c2:	68fb      	ldr	r3, [r7, #12]
 80016c4:	605a      	str	r2, [r3, #4]
    
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 80016c6:	683b      	ldr	r3, [r7, #0]
 80016c8:	681b      	ldr	r3, [r3, #0]
 80016ca:	2b10      	cmp	r3, #16
 80016cc:	d111      	bne.n	80016f2 <HAL_ADC_ConfigChannel+0x21e>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 80016ce:	4b10      	ldr	r3, [pc, #64]	; (8001710 <HAL_ADC_ConfigChannel+0x23c>)
 80016d0:	681b      	ldr	r3, [r3, #0]
 80016d2:	4a10      	ldr	r2, [pc, #64]	; (8001714 <HAL_ADC_ConfigChannel+0x240>)
 80016d4:	fba2 2303 	umull	r2, r3, r2, r3
 80016d8:	0c9a      	lsrs	r2, r3, #18
 80016da:	4613      	mov	r3, r2
 80016dc:	009b      	lsls	r3, r3, #2
 80016de:	4413      	add	r3, r2
 80016e0:	005b      	lsls	r3, r3, #1
 80016e2:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 80016e4:	e002      	b.n	80016ec <HAL_ADC_ConfigChannel+0x218>
      {
        counter--;
 80016e6:	68bb      	ldr	r3, [r7, #8]
 80016e8:	3b01      	subs	r3, #1
 80016ea:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 80016ec:	68bb      	ldr	r3, [r7, #8]
 80016ee:	2b00      	cmp	r3, #0
 80016f0:	d1f9      	bne.n	80016e6 <HAL_ADC_ConfigChannel+0x212>
      }
    }
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 80016f2:	687b      	ldr	r3, [r7, #4]
 80016f4:	2200      	movs	r2, #0
 80016f6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Return function status */
  return HAL_OK;
 80016fa:	2300      	movs	r3, #0
}
 80016fc:	4618      	mov	r0, r3
 80016fe:	3714      	adds	r7, #20
 8001700:	46bd      	mov	sp, r7
 8001702:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001706:	4770      	bx	lr
 8001708:	40012300 	.word	0x40012300
 800170c:	40012000 	.word	0x40012000
 8001710:	20000000 	.word	0x20000000
 8001714:	431bde83 	.word	0x431bde83

08001718 <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef* hadc)
{
 8001718:	b480      	push	{r7}
 800171a:	b085      	sub	sp, #20
 800171c:	af00      	add	r7, sp, #0
 800171e:	6078      	str	r0, [r7, #4]
  
  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8001720:	4b79      	ldr	r3, [pc, #484]	; (8001908 <ADC_Init+0x1f0>)
 8001722:	60fb      	str	r3, [r7, #12]
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8001724:	68fb      	ldr	r3, [r7, #12]
 8001726:	685b      	ldr	r3, [r3, #4]
 8001728:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 800172c:	68fb      	ldr	r3, [r7, #12]
 800172e:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8001730:	68fb      	ldr	r3, [r7, #12]
 8001732:	685a      	ldr	r2, [r3, #4]
 8001734:	687b      	ldr	r3, [r7, #4]
 8001736:	685b      	ldr	r3, [r3, #4]
 8001738:	431a      	orrs	r2, r3
 800173a:	68fb      	ldr	r3, [r7, #12]
 800173c:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800173e:	687b      	ldr	r3, [r7, #4]
 8001740:	681b      	ldr	r3, [r3, #0]
 8001742:	685a      	ldr	r2, [r3, #4]
 8001744:	687b      	ldr	r3, [r7, #4]
 8001746:	681b      	ldr	r3, [r3, #0]
 8001748:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800174c:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800174e:	687b      	ldr	r3, [r7, #4]
 8001750:	681b      	ldr	r3, [r3, #0]
 8001752:	6859      	ldr	r1, [r3, #4]
 8001754:	687b      	ldr	r3, [r7, #4]
 8001756:	691b      	ldr	r3, [r3, #16]
 8001758:	021a      	lsls	r2, r3, #8
 800175a:	687b      	ldr	r3, [r7, #4]
 800175c:	681b      	ldr	r3, [r3, #0]
 800175e:	430a      	orrs	r2, r1
 8001760:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8001762:	687b      	ldr	r3, [r7, #4]
 8001764:	681b      	ldr	r3, [r3, #0]
 8001766:	685a      	ldr	r2, [r3, #4]
 8001768:	687b      	ldr	r3, [r7, #4]
 800176a:	681b      	ldr	r3, [r3, #0]
 800176c:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8001770:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8001772:	687b      	ldr	r3, [r7, #4]
 8001774:	681b      	ldr	r3, [r3, #0]
 8001776:	6859      	ldr	r1, [r3, #4]
 8001778:	687b      	ldr	r3, [r7, #4]
 800177a:	689a      	ldr	r2, [r3, #8]
 800177c:	687b      	ldr	r3, [r7, #4]
 800177e:	681b      	ldr	r3, [r3, #0]
 8001780:	430a      	orrs	r2, r1
 8001782:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8001784:	687b      	ldr	r3, [r7, #4]
 8001786:	681b      	ldr	r3, [r3, #0]
 8001788:	689a      	ldr	r2, [r3, #8]
 800178a:	687b      	ldr	r3, [r7, #4]
 800178c:	681b      	ldr	r3, [r3, #0]
 800178e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001792:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8001794:	687b      	ldr	r3, [r7, #4]
 8001796:	681b      	ldr	r3, [r3, #0]
 8001798:	6899      	ldr	r1, [r3, #8]
 800179a:	687b      	ldr	r3, [r7, #4]
 800179c:	68da      	ldr	r2, [r3, #12]
 800179e:	687b      	ldr	r3, [r7, #4]
 80017a0:	681b      	ldr	r3, [r3, #0]
 80017a2:	430a      	orrs	r2, r1
 80017a4:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 80017a6:	687b      	ldr	r3, [r7, #4]
 80017a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80017aa:	4a58      	ldr	r2, [pc, #352]	; (800190c <ADC_Init+0x1f4>)
 80017ac:	4293      	cmp	r3, r2
 80017ae:	d022      	beq.n	80017f6 <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80017b0:	687b      	ldr	r3, [r7, #4]
 80017b2:	681b      	ldr	r3, [r3, #0]
 80017b4:	689a      	ldr	r2, [r3, #8]
 80017b6:	687b      	ldr	r3, [r7, #4]
 80017b8:	681b      	ldr	r3, [r3, #0]
 80017ba:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80017be:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 80017c0:	687b      	ldr	r3, [r7, #4]
 80017c2:	681b      	ldr	r3, [r3, #0]
 80017c4:	6899      	ldr	r1, [r3, #8]
 80017c6:	687b      	ldr	r3, [r7, #4]
 80017c8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80017ca:	687b      	ldr	r3, [r7, #4]
 80017cc:	681b      	ldr	r3, [r3, #0]
 80017ce:	430a      	orrs	r2, r1
 80017d0:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80017d2:	687b      	ldr	r3, [r7, #4]
 80017d4:	681b      	ldr	r3, [r3, #0]
 80017d6:	689a      	ldr	r2, [r3, #8]
 80017d8:	687b      	ldr	r3, [r7, #4]
 80017da:	681b      	ldr	r3, [r3, #0]
 80017dc:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80017e0:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 80017e2:	687b      	ldr	r3, [r7, #4]
 80017e4:	681b      	ldr	r3, [r3, #0]
 80017e6:	6899      	ldr	r1, [r3, #8]
 80017e8:	687b      	ldr	r3, [r7, #4]
 80017ea:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80017ec:	687b      	ldr	r3, [r7, #4]
 80017ee:	681b      	ldr	r3, [r3, #0]
 80017f0:	430a      	orrs	r2, r1
 80017f2:	609a      	str	r2, [r3, #8]
 80017f4:	e00f      	b.n	8001816 <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80017f6:	687b      	ldr	r3, [r7, #4]
 80017f8:	681b      	ldr	r3, [r3, #0]
 80017fa:	689a      	ldr	r2, [r3, #8]
 80017fc:	687b      	ldr	r3, [r7, #4]
 80017fe:	681b      	ldr	r3, [r3, #0]
 8001800:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8001804:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8001806:	687b      	ldr	r3, [r7, #4]
 8001808:	681b      	ldr	r3, [r3, #0]
 800180a:	689a      	ldr	r2, [r3, #8]
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	681b      	ldr	r3, [r3, #0]
 8001810:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8001814:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8001816:	687b      	ldr	r3, [r7, #4]
 8001818:	681b      	ldr	r3, [r3, #0]
 800181a:	689a      	ldr	r2, [r3, #8]
 800181c:	687b      	ldr	r3, [r7, #4]
 800181e:	681b      	ldr	r3, [r3, #0]
 8001820:	f022 0202 	bic.w	r2, r2, #2
 8001824:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8001826:	687b      	ldr	r3, [r7, #4]
 8001828:	681b      	ldr	r3, [r3, #0]
 800182a:	6899      	ldr	r1, [r3, #8]
 800182c:	687b      	ldr	r3, [r7, #4]
 800182e:	7e1b      	ldrb	r3, [r3, #24]
 8001830:	005a      	lsls	r2, r3, #1
 8001832:	687b      	ldr	r3, [r7, #4]
 8001834:	681b      	ldr	r3, [r3, #0]
 8001836:	430a      	orrs	r2, r1
 8001838:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 800183a:	687b      	ldr	r3, [r7, #4]
 800183c:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001840:	2b00      	cmp	r3, #0
 8001842:	d01b      	beq.n	800187c <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8001844:	687b      	ldr	r3, [r7, #4]
 8001846:	681b      	ldr	r3, [r3, #0]
 8001848:	685a      	ldr	r2, [r3, #4]
 800184a:	687b      	ldr	r3, [r7, #4]
 800184c:	681b      	ldr	r3, [r3, #0]
 800184e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001852:	605a      	str	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	681b      	ldr	r3, [r3, #0]
 8001858:	685a      	ldr	r2, [r3, #4]
 800185a:	687b      	ldr	r3, [r7, #4]
 800185c:	681b      	ldr	r3, [r3, #0]
 800185e:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8001862:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8001864:	687b      	ldr	r3, [r7, #4]
 8001866:	681b      	ldr	r3, [r3, #0]
 8001868:	6859      	ldr	r1, [r3, #4]
 800186a:	687b      	ldr	r3, [r7, #4]
 800186c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800186e:	3b01      	subs	r3, #1
 8001870:	035a      	lsls	r2, r3, #13
 8001872:	687b      	ldr	r3, [r7, #4]
 8001874:	681b      	ldr	r3, [r3, #0]
 8001876:	430a      	orrs	r2, r1
 8001878:	605a      	str	r2, [r3, #4]
 800187a:	e007      	b.n	800188c <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 800187c:	687b      	ldr	r3, [r7, #4]
 800187e:	681b      	ldr	r3, [r3, #0]
 8001880:	685a      	ldr	r2, [r3, #4]
 8001882:	687b      	ldr	r3, [r7, #4]
 8001884:	681b      	ldr	r3, [r3, #0]
 8001886:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800188a:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 800188c:	687b      	ldr	r3, [r7, #4]
 800188e:	681b      	ldr	r3, [r3, #0]
 8001890:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001892:	687b      	ldr	r3, [r7, #4]
 8001894:	681b      	ldr	r3, [r3, #0]
 8001896:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800189a:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 800189c:	687b      	ldr	r3, [r7, #4]
 800189e:	681b      	ldr	r3, [r3, #0]
 80018a0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80018a2:	687b      	ldr	r3, [r7, #4]
 80018a4:	69db      	ldr	r3, [r3, #28]
 80018a6:	3b01      	subs	r3, #1
 80018a8:	051a      	lsls	r2, r3, #20
 80018aa:	687b      	ldr	r3, [r7, #4]
 80018ac:	681b      	ldr	r3, [r3, #0]
 80018ae:	430a      	orrs	r2, r1
 80018b0:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 80018b2:	687b      	ldr	r3, [r7, #4]
 80018b4:	681b      	ldr	r3, [r3, #0]
 80018b6:	689a      	ldr	r2, [r3, #8]
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	681b      	ldr	r3, [r3, #0]
 80018bc:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80018c0:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 80018c2:	687b      	ldr	r3, [r7, #4]
 80018c4:	681b      	ldr	r3, [r3, #0]
 80018c6:	6899      	ldr	r1, [r3, #8]
 80018c8:	687b      	ldr	r3, [r7, #4]
 80018ca:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 80018ce:	025a      	lsls	r2, r3, #9
 80018d0:	687b      	ldr	r3, [r7, #4]
 80018d2:	681b      	ldr	r3, [r3, #0]
 80018d4:	430a      	orrs	r2, r1
 80018d6:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 80018d8:	687b      	ldr	r3, [r7, #4]
 80018da:	681b      	ldr	r3, [r3, #0]
 80018dc:	689a      	ldr	r2, [r3, #8]
 80018de:	687b      	ldr	r3, [r7, #4]
 80018e0:	681b      	ldr	r3, [r3, #0]
 80018e2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80018e6:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80018e8:	687b      	ldr	r3, [r7, #4]
 80018ea:	681b      	ldr	r3, [r3, #0]
 80018ec:	6899      	ldr	r1, [r3, #8]
 80018ee:	687b      	ldr	r3, [r7, #4]
 80018f0:	695b      	ldr	r3, [r3, #20]
 80018f2:	029a      	lsls	r2, r3, #10
 80018f4:	687b      	ldr	r3, [r7, #4]
 80018f6:	681b      	ldr	r3, [r3, #0]
 80018f8:	430a      	orrs	r2, r1
 80018fa:	609a      	str	r2, [r3, #8]
}
 80018fc:	bf00      	nop
 80018fe:	3714      	adds	r7, #20
 8001900:	46bd      	mov	sp, r7
 8001902:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001906:	4770      	bx	lr
 8001908:	40012300 	.word	0x40012300
 800190c:	0f000001 	.word	0x0f000001

08001910 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001910:	b480      	push	{r7}
 8001912:	b085      	sub	sp, #20
 8001914:	af00      	add	r7, sp, #0
 8001916:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	f003 0307 	and.w	r3, r3, #7
 800191e:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8001920:	4b0c      	ldr	r3, [pc, #48]	; (8001954 <__NVIC_SetPriorityGrouping+0x44>)
 8001922:	68db      	ldr	r3, [r3, #12]
 8001924:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8001926:	68ba      	ldr	r2, [r7, #8]
 8001928:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 800192c:	4013      	ands	r3, r2
 800192e:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8001930:	68fb      	ldr	r3, [r7, #12]
 8001932:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001934:	68bb      	ldr	r3, [r7, #8]
 8001936:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8001938:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800193c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001940:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8001942:	4a04      	ldr	r2, [pc, #16]	; (8001954 <__NVIC_SetPriorityGrouping+0x44>)
 8001944:	68bb      	ldr	r3, [r7, #8]
 8001946:	60d3      	str	r3, [r2, #12]
}
 8001948:	bf00      	nop
 800194a:	3714      	adds	r7, #20
 800194c:	46bd      	mov	sp, r7
 800194e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001952:	4770      	bx	lr
 8001954:	e000ed00 	.word	0xe000ed00

08001958 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8001958:	b480      	push	{r7}
 800195a:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800195c:	4b04      	ldr	r3, [pc, #16]	; (8001970 <__NVIC_GetPriorityGrouping+0x18>)
 800195e:	68db      	ldr	r3, [r3, #12]
 8001960:	0a1b      	lsrs	r3, r3, #8
 8001962:	f003 0307 	and.w	r3, r3, #7
}
 8001966:	4618      	mov	r0, r3
 8001968:	46bd      	mov	sp, r7
 800196a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800196e:	4770      	bx	lr
 8001970:	e000ed00 	.word	0xe000ed00

08001974 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001974:	b480      	push	{r7}
 8001976:	b083      	sub	sp, #12
 8001978:	af00      	add	r7, sp, #0
 800197a:	4603      	mov	r3, r0
 800197c:	6039      	str	r1, [r7, #0]
 800197e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001980:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001984:	2b00      	cmp	r3, #0
 8001986:	db0a      	blt.n	800199e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001988:	683b      	ldr	r3, [r7, #0]
 800198a:	b2da      	uxtb	r2, r3
 800198c:	490c      	ldr	r1, [pc, #48]	; (80019c0 <__NVIC_SetPriority+0x4c>)
 800198e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001992:	0112      	lsls	r2, r2, #4
 8001994:	b2d2      	uxtb	r2, r2
 8001996:	440b      	add	r3, r1
 8001998:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800199c:	e00a      	b.n	80019b4 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800199e:	683b      	ldr	r3, [r7, #0]
 80019a0:	b2da      	uxtb	r2, r3
 80019a2:	4908      	ldr	r1, [pc, #32]	; (80019c4 <__NVIC_SetPriority+0x50>)
 80019a4:	79fb      	ldrb	r3, [r7, #7]
 80019a6:	f003 030f 	and.w	r3, r3, #15
 80019aa:	3b04      	subs	r3, #4
 80019ac:	0112      	lsls	r2, r2, #4
 80019ae:	b2d2      	uxtb	r2, r2
 80019b0:	440b      	add	r3, r1
 80019b2:	761a      	strb	r2, [r3, #24]
}
 80019b4:	bf00      	nop
 80019b6:	370c      	adds	r7, #12
 80019b8:	46bd      	mov	sp, r7
 80019ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019be:	4770      	bx	lr
 80019c0:	e000e100 	.word	0xe000e100
 80019c4:	e000ed00 	.word	0xe000ed00

080019c8 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80019c8:	b480      	push	{r7}
 80019ca:	b089      	sub	sp, #36	; 0x24
 80019cc:	af00      	add	r7, sp, #0
 80019ce:	60f8      	str	r0, [r7, #12]
 80019d0:	60b9      	str	r1, [r7, #8]
 80019d2:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80019d4:	68fb      	ldr	r3, [r7, #12]
 80019d6:	f003 0307 	and.w	r3, r3, #7
 80019da:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80019dc:	69fb      	ldr	r3, [r7, #28]
 80019de:	f1c3 0307 	rsb	r3, r3, #7
 80019e2:	2b04      	cmp	r3, #4
 80019e4:	bf28      	it	cs
 80019e6:	2304      	movcs	r3, #4
 80019e8:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80019ea:	69fb      	ldr	r3, [r7, #28]
 80019ec:	3304      	adds	r3, #4
 80019ee:	2b06      	cmp	r3, #6
 80019f0:	d902      	bls.n	80019f8 <NVIC_EncodePriority+0x30>
 80019f2:	69fb      	ldr	r3, [r7, #28]
 80019f4:	3b03      	subs	r3, #3
 80019f6:	e000      	b.n	80019fa <NVIC_EncodePriority+0x32>
 80019f8:	2300      	movs	r3, #0
 80019fa:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80019fc:	f04f 32ff 	mov.w	r2, #4294967295
 8001a00:	69bb      	ldr	r3, [r7, #24]
 8001a02:	fa02 f303 	lsl.w	r3, r2, r3
 8001a06:	43da      	mvns	r2, r3
 8001a08:	68bb      	ldr	r3, [r7, #8]
 8001a0a:	401a      	ands	r2, r3
 8001a0c:	697b      	ldr	r3, [r7, #20]
 8001a0e:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001a10:	f04f 31ff 	mov.w	r1, #4294967295
 8001a14:	697b      	ldr	r3, [r7, #20]
 8001a16:	fa01 f303 	lsl.w	r3, r1, r3
 8001a1a:	43d9      	mvns	r1, r3
 8001a1c:	687b      	ldr	r3, [r7, #4]
 8001a1e:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001a20:	4313      	orrs	r3, r2
         );
}
 8001a22:	4618      	mov	r0, r3
 8001a24:	3724      	adds	r7, #36	; 0x24
 8001a26:	46bd      	mov	sp, r7
 8001a28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a2c:	4770      	bx	lr
	...

08001a30 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8001a30:	b580      	push	{r7, lr}
 8001a32:	b082      	sub	sp, #8
 8001a34:	af00      	add	r7, sp, #0
 8001a36:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001a38:	687b      	ldr	r3, [r7, #4]
 8001a3a:	3b01      	subs	r3, #1
 8001a3c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001a40:	d301      	bcc.n	8001a46 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8001a42:	2301      	movs	r3, #1
 8001a44:	e00f      	b.n	8001a66 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001a46:	4a0a      	ldr	r2, [pc, #40]	; (8001a70 <SysTick_Config+0x40>)
 8001a48:	687b      	ldr	r3, [r7, #4]
 8001a4a:	3b01      	subs	r3, #1
 8001a4c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8001a4e:	210f      	movs	r1, #15
 8001a50:	f04f 30ff 	mov.w	r0, #4294967295
 8001a54:	f7ff ff8e 	bl	8001974 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001a58:	4b05      	ldr	r3, [pc, #20]	; (8001a70 <SysTick_Config+0x40>)
 8001a5a:	2200      	movs	r2, #0
 8001a5c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001a5e:	4b04      	ldr	r3, [pc, #16]	; (8001a70 <SysTick_Config+0x40>)
 8001a60:	2207      	movs	r2, #7
 8001a62:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8001a64:	2300      	movs	r3, #0
}
 8001a66:	4618      	mov	r0, r3
 8001a68:	3708      	adds	r7, #8
 8001a6a:	46bd      	mov	sp, r7
 8001a6c:	bd80      	pop	{r7, pc}
 8001a6e:	bf00      	nop
 8001a70:	e000e010 	.word	0xe000e010

08001a74 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001a74:	b580      	push	{r7, lr}
 8001a76:	b082      	sub	sp, #8
 8001a78:	af00      	add	r7, sp, #0
 8001a7a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8001a7c:	6878      	ldr	r0, [r7, #4]
 8001a7e:	f7ff ff47 	bl	8001910 <__NVIC_SetPriorityGrouping>
}
 8001a82:	bf00      	nop
 8001a84:	3708      	adds	r7, #8
 8001a86:	46bd      	mov	sp, r7
 8001a88:	bd80      	pop	{r7, pc}

08001a8a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8001a8a:	b580      	push	{r7, lr}
 8001a8c:	b086      	sub	sp, #24
 8001a8e:	af00      	add	r7, sp, #0
 8001a90:	4603      	mov	r3, r0
 8001a92:	60b9      	str	r1, [r7, #8]
 8001a94:	607a      	str	r2, [r7, #4]
 8001a96:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8001a98:	2300      	movs	r3, #0
 8001a9a:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8001a9c:	f7ff ff5c 	bl	8001958 <__NVIC_GetPriorityGrouping>
 8001aa0:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8001aa2:	687a      	ldr	r2, [r7, #4]
 8001aa4:	68b9      	ldr	r1, [r7, #8]
 8001aa6:	6978      	ldr	r0, [r7, #20]
 8001aa8:	f7ff ff8e 	bl	80019c8 <NVIC_EncodePriority>
 8001aac:	4602      	mov	r2, r0
 8001aae:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001ab2:	4611      	mov	r1, r2
 8001ab4:	4618      	mov	r0, r3
 8001ab6:	f7ff ff5d 	bl	8001974 <__NVIC_SetPriority>
}
 8001aba:	bf00      	nop
 8001abc:	3718      	adds	r7, #24
 8001abe:	46bd      	mov	sp, r7
 8001ac0:	bd80      	pop	{r7, pc}

08001ac2 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8001ac2:	b580      	push	{r7, lr}
 8001ac4:	b082      	sub	sp, #8
 8001ac6:	af00      	add	r7, sp, #0
 8001ac8:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8001aca:	6878      	ldr	r0, [r7, #4]
 8001acc:	f7ff ffb0 	bl	8001a30 <SysTick_Config>
 8001ad0:	4603      	mov	r3, r0
}
 8001ad2:	4618      	mov	r0, r3
 8001ad4:	3708      	adds	r7, #8
 8001ad6:	46bd      	mov	sp, r7
 8001ad8:	bd80      	pop	{r7, pc}

08001ada <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8001ada:	b580      	push	{r7, lr}
 8001adc:	b082      	sub	sp, #8
 8001ade:	af00      	add	r7, sp, #0
 8001ae0:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8001ae2:	687b      	ldr	r3, [r7, #4]
 8001ae4:	2b00      	cmp	r3, #0
 8001ae6:	d101      	bne.n	8001aec <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8001ae8:	2301      	movs	r3, #1
 8001aea:	e00e      	b.n	8001b0a <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8001aec:	687b      	ldr	r3, [r7, #4]
 8001aee:	795b      	ldrb	r3, [r3, #5]
 8001af0:	b2db      	uxtb	r3, r3
 8001af2:	2b00      	cmp	r3, #0
 8001af4:	d105      	bne.n	8001b02 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8001af6:	687b      	ldr	r3, [r7, #4]
 8001af8:	2200      	movs	r2, #0
 8001afa:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8001afc:	6878      	ldr	r0, [r7, #4]
 8001afe:	f7ff f9a5 	bl	8000e4c <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8001b02:	687b      	ldr	r3, [r7, #4]
 8001b04:	2201      	movs	r2, #1
 8001b06:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 8001b08:	2300      	movs	r3, #0
}
 8001b0a:	4618      	mov	r0, r3
 8001b0c:	3708      	adds	r7, #8
 8001b0e:	46bd      	mov	sp, r7
 8001b10:	bd80      	pop	{r7, pc}
	...

08001b14 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001b14:	b480      	push	{r7}
 8001b16:	b089      	sub	sp, #36	; 0x24
 8001b18:	af00      	add	r7, sp, #0
 8001b1a:	6078      	str	r0, [r7, #4]
 8001b1c:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8001b1e:	2300      	movs	r3, #0
 8001b20:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8001b22:	2300      	movs	r3, #0
 8001b24:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8001b26:	2300      	movs	r3, #0
 8001b28:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8001b2a:	2300      	movs	r3, #0
 8001b2c:	61fb      	str	r3, [r7, #28]
 8001b2e:	e16b      	b.n	8001e08 <HAL_GPIO_Init+0x2f4>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8001b30:	2201      	movs	r2, #1
 8001b32:	69fb      	ldr	r3, [r7, #28]
 8001b34:	fa02 f303 	lsl.w	r3, r2, r3
 8001b38:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8001b3a:	683b      	ldr	r3, [r7, #0]
 8001b3c:	681b      	ldr	r3, [r3, #0]
 8001b3e:	697a      	ldr	r2, [r7, #20]
 8001b40:	4013      	ands	r3, r2
 8001b42:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8001b44:	693a      	ldr	r2, [r7, #16]
 8001b46:	697b      	ldr	r3, [r7, #20]
 8001b48:	429a      	cmp	r2, r3
 8001b4a:	f040 815a 	bne.w	8001e02 <HAL_GPIO_Init+0x2ee>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8001b4e:	683b      	ldr	r3, [r7, #0]
 8001b50:	685b      	ldr	r3, [r3, #4]
 8001b52:	2b01      	cmp	r3, #1
 8001b54:	d00b      	beq.n	8001b6e <HAL_GPIO_Init+0x5a>
 8001b56:	683b      	ldr	r3, [r7, #0]
 8001b58:	685b      	ldr	r3, [r3, #4]
 8001b5a:	2b02      	cmp	r3, #2
 8001b5c:	d007      	beq.n	8001b6e <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001b5e:	683b      	ldr	r3, [r7, #0]
 8001b60:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8001b62:	2b11      	cmp	r3, #17
 8001b64:	d003      	beq.n	8001b6e <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001b66:	683b      	ldr	r3, [r7, #0]
 8001b68:	685b      	ldr	r3, [r3, #4]
 8001b6a:	2b12      	cmp	r3, #18
 8001b6c:	d130      	bne.n	8001bd0 <HAL_GPIO_Init+0xbc>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8001b6e:	687b      	ldr	r3, [r7, #4]
 8001b70:	689b      	ldr	r3, [r3, #8]
 8001b72:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8001b74:	69fb      	ldr	r3, [r7, #28]
 8001b76:	005b      	lsls	r3, r3, #1
 8001b78:	2203      	movs	r2, #3
 8001b7a:	fa02 f303 	lsl.w	r3, r2, r3
 8001b7e:	43db      	mvns	r3, r3
 8001b80:	69ba      	ldr	r2, [r7, #24]
 8001b82:	4013      	ands	r3, r2
 8001b84:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8001b86:	683b      	ldr	r3, [r7, #0]
 8001b88:	68da      	ldr	r2, [r3, #12]
 8001b8a:	69fb      	ldr	r3, [r7, #28]
 8001b8c:	005b      	lsls	r3, r3, #1
 8001b8e:	fa02 f303 	lsl.w	r3, r2, r3
 8001b92:	69ba      	ldr	r2, [r7, #24]
 8001b94:	4313      	orrs	r3, r2
 8001b96:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8001b98:	687b      	ldr	r3, [r7, #4]
 8001b9a:	69ba      	ldr	r2, [r7, #24]
 8001b9c:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8001b9e:	687b      	ldr	r3, [r7, #4]
 8001ba0:	685b      	ldr	r3, [r3, #4]
 8001ba2:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8001ba4:	2201      	movs	r2, #1
 8001ba6:	69fb      	ldr	r3, [r7, #28]
 8001ba8:	fa02 f303 	lsl.w	r3, r2, r3
 8001bac:	43db      	mvns	r3, r3
 8001bae:	69ba      	ldr	r2, [r7, #24]
 8001bb0:	4013      	ands	r3, r2
 8001bb2:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8001bb4:	683b      	ldr	r3, [r7, #0]
 8001bb6:	685b      	ldr	r3, [r3, #4]
 8001bb8:	091b      	lsrs	r3, r3, #4
 8001bba:	f003 0201 	and.w	r2, r3, #1
 8001bbe:	69fb      	ldr	r3, [r7, #28]
 8001bc0:	fa02 f303 	lsl.w	r3, r2, r3
 8001bc4:	69ba      	ldr	r2, [r7, #24]
 8001bc6:	4313      	orrs	r3, r2
 8001bc8:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8001bca:	687b      	ldr	r3, [r7, #4]
 8001bcc:	69ba      	ldr	r2, [r7, #24]
 8001bce:	605a      	str	r2, [r3, #4]
       }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8001bd0:	687b      	ldr	r3, [r7, #4]
 8001bd2:	68db      	ldr	r3, [r3, #12]
 8001bd4:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8001bd6:	69fb      	ldr	r3, [r7, #28]
 8001bd8:	005b      	lsls	r3, r3, #1
 8001bda:	2203      	movs	r2, #3
 8001bdc:	fa02 f303 	lsl.w	r3, r2, r3
 8001be0:	43db      	mvns	r3, r3
 8001be2:	69ba      	ldr	r2, [r7, #24]
 8001be4:	4013      	ands	r3, r2
 8001be6:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8001be8:	683b      	ldr	r3, [r7, #0]
 8001bea:	689a      	ldr	r2, [r3, #8]
 8001bec:	69fb      	ldr	r3, [r7, #28]
 8001bee:	005b      	lsls	r3, r3, #1
 8001bf0:	fa02 f303 	lsl.w	r3, r2, r3
 8001bf4:	69ba      	ldr	r2, [r7, #24]
 8001bf6:	4313      	orrs	r3, r2
 8001bf8:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 8001bfa:	687b      	ldr	r3, [r7, #4]
 8001bfc:	69ba      	ldr	r2, [r7, #24]
 8001bfe:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001c00:	683b      	ldr	r3, [r7, #0]
 8001c02:	685b      	ldr	r3, [r3, #4]
 8001c04:	2b02      	cmp	r3, #2
 8001c06:	d003      	beq.n	8001c10 <HAL_GPIO_Init+0xfc>
 8001c08:	683b      	ldr	r3, [r7, #0]
 8001c0a:	685b      	ldr	r3, [r3, #4]
 8001c0c:	2b12      	cmp	r3, #18
 8001c0e:	d123      	bne.n	8001c58 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8001c10:	69fb      	ldr	r3, [r7, #28]
 8001c12:	08da      	lsrs	r2, r3, #3
 8001c14:	687b      	ldr	r3, [r7, #4]
 8001c16:	3208      	adds	r2, #8
 8001c18:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001c1c:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8001c1e:	69fb      	ldr	r3, [r7, #28]
 8001c20:	f003 0307 	and.w	r3, r3, #7
 8001c24:	009b      	lsls	r3, r3, #2
 8001c26:	220f      	movs	r2, #15
 8001c28:	fa02 f303 	lsl.w	r3, r2, r3
 8001c2c:	43db      	mvns	r3, r3
 8001c2e:	69ba      	ldr	r2, [r7, #24]
 8001c30:	4013      	ands	r3, r2
 8001c32:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8001c34:	683b      	ldr	r3, [r7, #0]
 8001c36:	691a      	ldr	r2, [r3, #16]
 8001c38:	69fb      	ldr	r3, [r7, #28]
 8001c3a:	f003 0307 	and.w	r3, r3, #7
 8001c3e:	009b      	lsls	r3, r3, #2
 8001c40:	fa02 f303 	lsl.w	r3, r2, r3
 8001c44:	69ba      	ldr	r2, [r7, #24]
 8001c46:	4313      	orrs	r3, r2
 8001c48:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8001c4a:	69fb      	ldr	r3, [r7, #28]
 8001c4c:	08da      	lsrs	r2, r3, #3
 8001c4e:	687b      	ldr	r3, [r7, #4]
 8001c50:	3208      	adds	r2, #8
 8001c52:	69b9      	ldr	r1, [r7, #24]
 8001c54:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8001c58:	687b      	ldr	r3, [r7, #4]
 8001c5a:	681b      	ldr	r3, [r3, #0]
 8001c5c:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8001c5e:	69fb      	ldr	r3, [r7, #28]
 8001c60:	005b      	lsls	r3, r3, #1
 8001c62:	2203      	movs	r2, #3
 8001c64:	fa02 f303 	lsl.w	r3, r2, r3
 8001c68:	43db      	mvns	r3, r3
 8001c6a:	69ba      	ldr	r2, [r7, #24]
 8001c6c:	4013      	ands	r3, r2
 8001c6e:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8001c70:	683b      	ldr	r3, [r7, #0]
 8001c72:	685b      	ldr	r3, [r3, #4]
 8001c74:	f003 0203 	and.w	r2, r3, #3
 8001c78:	69fb      	ldr	r3, [r7, #28]
 8001c7a:	005b      	lsls	r3, r3, #1
 8001c7c:	fa02 f303 	lsl.w	r3, r2, r3
 8001c80:	69ba      	ldr	r2, [r7, #24]
 8001c82:	4313      	orrs	r3, r2
 8001c84:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8001c86:	687b      	ldr	r3, [r7, #4]
 8001c88:	69ba      	ldr	r2, [r7, #24]
 8001c8a:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8001c8c:	683b      	ldr	r3, [r7, #0]
 8001c8e:	685b      	ldr	r3, [r3, #4]
 8001c90:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001c94:	2b00      	cmp	r3, #0
 8001c96:	f000 80b4 	beq.w	8001e02 <HAL_GPIO_Init+0x2ee>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001c9a:	2300      	movs	r3, #0
 8001c9c:	60fb      	str	r3, [r7, #12]
 8001c9e:	4b5f      	ldr	r3, [pc, #380]	; (8001e1c <HAL_GPIO_Init+0x308>)
 8001ca0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001ca2:	4a5e      	ldr	r2, [pc, #376]	; (8001e1c <HAL_GPIO_Init+0x308>)
 8001ca4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001ca8:	6453      	str	r3, [r2, #68]	; 0x44
 8001caa:	4b5c      	ldr	r3, [pc, #368]	; (8001e1c <HAL_GPIO_Init+0x308>)
 8001cac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001cae:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001cb2:	60fb      	str	r3, [r7, #12]
 8001cb4:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8001cb6:	4a5a      	ldr	r2, [pc, #360]	; (8001e20 <HAL_GPIO_Init+0x30c>)
 8001cb8:	69fb      	ldr	r3, [r7, #28]
 8001cba:	089b      	lsrs	r3, r3, #2
 8001cbc:	3302      	adds	r3, #2
 8001cbe:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001cc2:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8001cc4:	69fb      	ldr	r3, [r7, #28]
 8001cc6:	f003 0303 	and.w	r3, r3, #3
 8001cca:	009b      	lsls	r3, r3, #2
 8001ccc:	220f      	movs	r2, #15
 8001cce:	fa02 f303 	lsl.w	r3, r2, r3
 8001cd2:	43db      	mvns	r3, r3
 8001cd4:	69ba      	ldr	r2, [r7, #24]
 8001cd6:	4013      	ands	r3, r2
 8001cd8:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8001cda:	687b      	ldr	r3, [r7, #4]
 8001cdc:	4a51      	ldr	r2, [pc, #324]	; (8001e24 <HAL_GPIO_Init+0x310>)
 8001cde:	4293      	cmp	r3, r2
 8001ce0:	d02b      	beq.n	8001d3a <HAL_GPIO_Init+0x226>
 8001ce2:	687b      	ldr	r3, [r7, #4]
 8001ce4:	4a50      	ldr	r2, [pc, #320]	; (8001e28 <HAL_GPIO_Init+0x314>)
 8001ce6:	4293      	cmp	r3, r2
 8001ce8:	d025      	beq.n	8001d36 <HAL_GPIO_Init+0x222>
 8001cea:	687b      	ldr	r3, [r7, #4]
 8001cec:	4a4f      	ldr	r2, [pc, #316]	; (8001e2c <HAL_GPIO_Init+0x318>)
 8001cee:	4293      	cmp	r3, r2
 8001cf0:	d01f      	beq.n	8001d32 <HAL_GPIO_Init+0x21e>
 8001cf2:	687b      	ldr	r3, [r7, #4]
 8001cf4:	4a4e      	ldr	r2, [pc, #312]	; (8001e30 <HAL_GPIO_Init+0x31c>)
 8001cf6:	4293      	cmp	r3, r2
 8001cf8:	d019      	beq.n	8001d2e <HAL_GPIO_Init+0x21a>
 8001cfa:	687b      	ldr	r3, [r7, #4]
 8001cfc:	4a4d      	ldr	r2, [pc, #308]	; (8001e34 <HAL_GPIO_Init+0x320>)
 8001cfe:	4293      	cmp	r3, r2
 8001d00:	d013      	beq.n	8001d2a <HAL_GPIO_Init+0x216>
 8001d02:	687b      	ldr	r3, [r7, #4]
 8001d04:	4a4c      	ldr	r2, [pc, #304]	; (8001e38 <HAL_GPIO_Init+0x324>)
 8001d06:	4293      	cmp	r3, r2
 8001d08:	d00d      	beq.n	8001d26 <HAL_GPIO_Init+0x212>
 8001d0a:	687b      	ldr	r3, [r7, #4]
 8001d0c:	4a4b      	ldr	r2, [pc, #300]	; (8001e3c <HAL_GPIO_Init+0x328>)
 8001d0e:	4293      	cmp	r3, r2
 8001d10:	d007      	beq.n	8001d22 <HAL_GPIO_Init+0x20e>
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	4a4a      	ldr	r2, [pc, #296]	; (8001e40 <HAL_GPIO_Init+0x32c>)
 8001d16:	4293      	cmp	r3, r2
 8001d18:	d101      	bne.n	8001d1e <HAL_GPIO_Init+0x20a>
 8001d1a:	2307      	movs	r3, #7
 8001d1c:	e00e      	b.n	8001d3c <HAL_GPIO_Init+0x228>
 8001d1e:	2308      	movs	r3, #8
 8001d20:	e00c      	b.n	8001d3c <HAL_GPIO_Init+0x228>
 8001d22:	2306      	movs	r3, #6
 8001d24:	e00a      	b.n	8001d3c <HAL_GPIO_Init+0x228>
 8001d26:	2305      	movs	r3, #5
 8001d28:	e008      	b.n	8001d3c <HAL_GPIO_Init+0x228>
 8001d2a:	2304      	movs	r3, #4
 8001d2c:	e006      	b.n	8001d3c <HAL_GPIO_Init+0x228>
 8001d2e:	2303      	movs	r3, #3
 8001d30:	e004      	b.n	8001d3c <HAL_GPIO_Init+0x228>
 8001d32:	2302      	movs	r3, #2
 8001d34:	e002      	b.n	8001d3c <HAL_GPIO_Init+0x228>
 8001d36:	2301      	movs	r3, #1
 8001d38:	e000      	b.n	8001d3c <HAL_GPIO_Init+0x228>
 8001d3a:	2300      	movs	r3, #0
 8001d3c:	69fa      	ldr	r2, [r7, #28]
 8001d3e:	f002 0203 	and.w	r2, r2, #3
 8001d42:	0092      	lsls	r2, r2, #2
 8001d44:	4093      	lsls	r3, r2
 8001d46:	69ba      	ldr	r2, [r7, #24]
 8001d48:	4313      	orrs	r3, r2
 8001d4a:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8001d4c:	4934      	ldr	r1, [pc, #208]	; (8001e20 <HAL_GPIO_Init+0x30c>)
 8001d4e:	69fb      	ldr	r3, [r7, #28]
 8001d50:	089b      	lsrs	r3, r3, #2
 8001d52:	3302      	adds	r3, #2
 8001d54:	69ba      	ldr	r2, [r7, #24]
 8001d56:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8001d5a:	4b3a      	ldr	r3, [pc, #232]	; (8001e44 <HAL_GPIO_Init+0x330>)
 8001d5c:	681b      	ldr	r3, [r3, #0]
 8001d5e:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001d60:	693b      	ldr	r3, [r7, #16]
 8001d62:	43db      	mvns	r3, r3
 8001d64:	69ba      	ldr	r2, [r7, #24]
 8001d66:	4013      	ands	r3, r2
 8001d68:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8001d6a:	683b      	ldr	r3, [r7, #0]
 8001d6c:	685b      	ldr	r3, [r3, #4]
 8001d6e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001d72:	2b00      	cmp	r3, #0
 8001d74:	d003      	beq.n	8001d7e <HAL_GPIO_Init+0x26a>
        {
          temp |= iocurrent;
 8001d76:	69ba      	ldr	r2, [r7, #24]
 8001d78:	693b      	ldr	r3, [r7, #16]
 8001d7a:	4313      	orrs	r3, r2
 8001d7c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8001d7e:	4a31      	ldr	r2, [pc, #196]	; (8001e44 <HAL_GPIO_Init+0x330>)
 8001d80:	69bb      	ldr	r3, [r7, #24]
 8001d82:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 8001d84:	4b2f      	ldr	r3, [pc, #188]	; (8001e44 <HAL_GPIO_Init+0x330>)
 8001d86:	685b      	ldr	r3, [r3, #4]
 8001d88:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001d8a:	693b      	ldr	r3, [r7, #16]
 8001d8c:	43db      	mvns	r3, r3
 8001d8e:	69ba      	ldr	r2, [r7, #24]
 8001d90:	4013      	ands	r3, r2
 8001d92:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8001d94:	683b      	ldr	r3, [r7, #0]
 8001d96:	685b      	ldr	r3, [r3, #4]
 8001d98:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001d9c:	2b00      	cmp	r3, #0
 8001d9e:	d003      	beq.n	8001da8 <HAL_GPIO_Init+0x294>
        {
          temp |= iocurrent;
 8001da0:	69ba      	ldr	r2, [r7, #24]
 8001da2:	693b      	ldr	r3, [r7, #16]
 8001da4:	4313      	orrs	r3, r2
 8001da6:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8001da8:	4a26      	ldr	r2, [pc, #152]	; (8001e44 <HAL_GPIO_Init+0x330>)
 8001daa:	69bb      	ldr	r3, [r7, #24]
 8001dac:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8001dae:	4b25      	ldr	r3, [pc, #148]	; (8001e44 <HAL_GPIO_Init+0x330>)
 8001db0:	689b      	ldr	r3, [r3, #8]
 8001db2:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001db4:	693b      	ldr	r3, [r7, #16]
 8001db6:	43db      	mvns	r3, r3
 8001db8:	69ba      	ldr	r2, [r7, #24]
 8001dba:	4013      	ands	r3, r2
 8001dbc:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8001dbe:	683b      	ldr	r3, [r7, #0]
 8001dc0:	685b      	ldr	r3, [r3, #4]
 8001dc2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001dc6:	2b00      	cmp	r3, #0
 8001dc8:	d003      	beq.n	8001dd2 <HAL_GPIO_Init+0x2be>
        {
          temp |= iocurrent;
 8001dca:	69ba      	ldr	r2, [r7, #24]
 8001dcc:	693b      	ldr	r3, [r7, #16]
 8001dce:	4313      	orrs	r3, r2
 8001dd0:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8001dd2:	4a1c      	ldr	r2, [pc, #112]	; (8001e44 <HAL_GPIO_Init+0x330>)
 8001dd4:	69bb      	ldr	r3, [r7, #24]
 8001dd6:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8001dd8:	4b1a      	ldr	r3, [pc, #104]	; (8001e44 <HAL_GPIO_Init+0x330>)
 8001dda:	68db      	ldr	r3, [r3, #12]
 8001ddc:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001dde:	693b      	ldr	r3, [r7, #16]
 8001de0:	43db      	mvns	r3, r3
 8001de2:	69ba      	ldr	r2, [r7, #24]
 8001de4:	4013      	ands	r3, r2
 8001de6:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8001de8:	683b      	ldr	r3, [r7, #0]
 8001dea:	685b      	ldr	r3, [r3, #4]
 8001dec:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001df0:	2b00      	cmp	r3, #0
 8001df2:	d003      	beq.n	8001dfc <HAL_GPIO_Init+0x2e8>
        {
          temp |= iocurrent;
 8001df4:	69ba      	ldr	r2, [r7, #24]
 8001df6:	693b      	ldr	r3, [r7, #16]
 8001df8:	4313      	orrs	r3, r2
 8001dfa:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8001dfc:	4a11      	ldr	r2, [pc, #68]	; (8001e44 <HAL_GPIO_Init+0x330>)
 8001dfe:	69bb      	ldr	r3, [r7, #24]
 8001e00:	60d3      	str	r3, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8001e02:	69fb      	ldr	r3, [r7, #28]
 8001e04:	3301      	adds	r3, #1
 8001e06:	61fb      	str	r3, [r7, #28]
 8001e08:	69fb      	ldr	r3, [r7, #28]
 8001e0a:	2b0f      	cmp	r3, #15
 8001e0c:	f67f ae90 	bls.w	8001b30 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8001e10:	bf00      	nop
 8001e12:	3724      	adds	r7, #36	; 0x24
 8001e14:	46bd      	mov	sp, r7
 8001e16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e1a:	4770      	bx	lr
 8001e1c:	40023800 	.word	0x40023800
 8001e20:	40013800 	.word	0x40013800
 8001e24:	40020000 	.word	0x40020000
 8001e28:	40020400 	.word	0x40020400
 8001e2c:	40020800 	.word	0x40020800
 8001e30:	40020c00 	.word	0x40020c00
 8001e34:	40021000 	.word	0x40021000
 8001e38:	40021400 	.word	0x40021400
 8001e3c:	40021800 	.word	0x40021800
 8001e40:	40021c00 	.word	0x40021c00
 8001e44:	40013c00 	.word	0x40013c00

08001e48 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8001e48:	b580      	push	{r7, lr}
 8001e4a:	b086      	sub	sp, #24
 8001e4c:	af00      	add	r7, sp, #0
 8001e4e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8001e50:	687b      	ldr	r3, [r7, #4]
 8001e52:	2b00      	cmp	r3, #0
 8001e54:	d101      	bne.n	8001e5a <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8001e56:	2301      	movs	r3, #1
 8001e58:	e25b      	b.n	8002312 <HAL_RCC_OscConfig+0x4ca>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001e5a:	687b      	ldr	r3, [r7, #4]
 8001e5c:	681b      	ldr	r3, [r3, #0]
 8001e5e:	f003 0301 	and.w	r3, r3, #1
 8001e62:	2b00      	cmp	r3, #0
 8001e64:	d075      	beq.n	8001f52 <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8001e66:	4ba3      	ldr	r3, [pc, #652]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001e68:	689b      	ldr	r3, [r3, #8]
 8001e6a:	f003 030c 	and.w	r3, r3, #12
 8001e6e:	2b04      	cmp	r3, #4
 8001e70:	d00c      	beq.n	8001e8c <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001e72:	4ba0      	ldr	r3, [pc, #640]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001e74:	689b      	ldr	r3, [r3, #8]
 8001e76:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8001e7a:	2b08      	cmp	r3, #8
 8001e7c:	d112      	bne.n	8001ea4 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001e7e:	4b9d      	ldr	r3, [pc, #628]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001e80:	685b      	ldr	r3, [r3, #4]
 8001e82:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001e86:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8001e8a:	d10b      	bne.n	8001ea4 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001e8c:	4b99      	ldr	r3, [pc, #612]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001e8e:	681b      	ldr	r3, [r3, #0]
 8001e90:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001e94:	2b00      	cmp	r3, #0
 8001e96:	d05b      	beq.n	8001f50 <HAL_RCC_OscConfig+0x108>
 8001e98:	687b      	ldr	r3, [r7, #4]
 8001e9a:	685b      	ldr	r3, [r3, #4]
 8001e9c:	2b00      	cmp	r3, #0
 8001e9e:	d157      	bne.n	8001f50 <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 8001ea0:	2301      	movs	r3, #1
 8001ea2:	e236      	b.n	8002312 <HAL_RCC_OscConfig+0x4ca>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001ea4:	687b      	ldr	r3, [r7, #4]
 8001ea6:	685b      	ldr	r3, [r3, #4]
 8001ea8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001eac:	d106      	bne.n	8001ebc <HAL_RCC_OscConfig+0x74>
 8001eae:	4b91      	ldr	r3, [pc, #580]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001eb0:	681b      	ldr	r3, [r3, #0]
 8001eb2:	4a90      	ldr	r2, [pc, #576]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001eb4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001eb8:	6013      	str	r3, [r2, #0]
 8001eba:	e01d      	b.n	8001ef8 <HAL_RCC_OscConfig+0xb0>
 8001ebc:	687b      	ldr	r3, [r7, #4]
 8001ebe:	685b      	ldr	r3, [r3, #4]
 8001ec0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001ec4:	d10c      	bne.n	8001ee0 <HAL_RCC_OscConfig+0x98>
 8001ec6:	4b8b      	ldr	r3, [pc, #556]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001ec8:	681b      	ldr	r3, [r3, #0]
 8001eca:	4a8a      	ldr	r2, [pc, #552]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001ecc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001ed0:	6013      	str	r3, [r2, #0]
 8001ed2:	4b88      	ldr	r3, [pc, #544]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001ed4:	681b      	ldr	r3, [r3, #0]
 8001ed6:	4a87      	ldr	r2, [pc, #540]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001ed8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001edc:	6013      	str	r3, [r2, #0]
 8001ede:	e00b      	b.n	8001ef8 <HAL_RCC_OscConfig+0xb0>
 8001ee0:	4b84      	ldr	r3, [pc, #528]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001ee2:	681b      	ldr	r3, [r3, #0]
 8001ee4:	4a83      	ldr	r2, [pc, #524]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001ee6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001eea:	6013      	str	r3, [r2, #0]
 8001eec:	4b81      	ldr	r3, [pc, #516]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001eee:	681b      	ldr	r3, [r3, #0]
 8001ef0:	4a80      	ldr	r2, [pc, #512]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001ef2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001ef6:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8001ef8:	687b      	ldr	r3, [r7, #4]
 8001efa:	685b      	ldr	r3, [r3, #4]
 8001efc:	2b00      	cmp	r3, #0
 8001efe:	d013      	beq.n	8001f28 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001f00:	f7ff f8ec 	bl	80010dc <HAL_GetTick>
 8001f04:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001f06:	e008      	b.n	8001f1a <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8001f08:	f7ff f8e8 	bl	80010dc <HAL_GetTick>
 8001f0c:	4602      	mov	r2, r0
 8001f0e:	693b      	ldr	r3, [r7, #16]
 8001f10:	1ad3      	subs	r3, r2, r3
 8001f12:	2b64      	cmp	r3, #100	; 0x64
 8001f14:	d901      	bls.n	8001f1a <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 8001f16:	2303      	movs	r3, #3
 8001f18:	e1fb      	b.n	8002312 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001f1a:	4b76      	ldr	r3, [pc, #472]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001f1c:	681b      	ldr	r3, [r3, #0]
 8001f1e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f22:	2b00      	cmp	r3, #0
 8001f24:	d0f0      	beq.n	8001f08 <HAL_RCC_OscConfig+0xc0>
 8001f26:	e014      	b.n	8001f52 <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001f28:	f7ff f8d8 	bl	80010dc <HAL_GetTick>
 8001f2c:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001f2e:	e008      	b.n	8001f42 <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8001f30:	f7ff f8d4 	bl	80010dc <HAL_GetTick>
 8001f34:	4602      	mov	r2, r0
 8001f36:	693b      	ldr	r3, [r7, #16]
 8001f38:	1ad3      	subs	r3, r2, r3
 8001f3a:	2b64      	cmp	r3, #100	; 0x64
 8001f3c:	d901      	bls.n	8001f42 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8001f3e:	2303      	movs	r3, #3
 8001f40:	e1e7      	b.n	8002312 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001f42:	4b6c      	ldr	r3, [pc, #432]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001f44:	681b      	ldr	r3, [r3, #0]
 8001f46:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f4a:	2b00      	cmp	r3, #0
 8001f4c:	d1f0      	bne.n	8001f30 <HAL_RCC_OscConfig+0xe8>
 8001f4e:	e000      	b.n	8001f52 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001f50:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8001f52:	687b      	ldr	r3, [r7, #4]
 8001f54:	681b      	ldr	r3, [r3, #0]
 8001f56:	f003 0302 	and.w	r3, r3, #2
 8001f5a:	2b00      	cmp	r3, #0
 8001f5c:	d063      	beq.n	8002026 <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8001f5e:	4b65      	ldr	r3, [pc, #404]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001f60:	689b      	ldr	r3, [r3, #8]
 8001f62:	f003 030c 	and.w	r3, r3, #12
 8001f66:	2b00      	cmp	r3, #0
 8001f68:	d00b      	beq.n	8001f82 <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8001f6a:	4b62      	ldr	r3, [pc, #392]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001f6c:	689b      	ldr	r3, [r3, #8]
 8001f6e:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8001f72:	2b08      	cmp	r3, #8
 8001f74:	d11c      	bne.n	8001fb0 <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8001f76:	4b5f      	ldr	r3, [pc, #380]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001f78:	685b      	ldr	r3, [r3, #4]
 8001f7a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001f7e:	2b00      	cmp	r3, #0
 8001f80:	d116      	bne.n	8001fb0 <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8001f82:	4b5c      	ldr	r3, [pc, #368]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001f84:	681b      	ldr	r3, [r3, #0]
 8001f86:	f003 0302 	and.w	r3, r3, #2
 8001f8a:	2b00      	cmp	r3, #0
 8001f8c:	d005      	beq.n	8001f9a <HAL_RCC_OscConfig+0x152>
 8001f8e:	687b      	ldr	r3, [r7, #4]
 8001f90:	68db      	ldr	r3, [r3, #12]
 8001f92:	2b01      	cmp	r3, #1
 8001f94:	d001      	beq.n	8001f9a <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 8001f96:	2301      	movs	r3, #1
 8001f98:	e1bb      	b.n	8002312 <HAL_RCC_OscConfig+0x4ca>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001f9a:	4b56      	ldr	r3, [pc, #344]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001f9c:	681b      	ldr	r3, [r3, #0]
 8001f9e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001fa2:	687b      	ldr	r3, [r7, #4]
 8001fa4:	691b      	ldr	r3, [r3, #16]
 8001fa6:	00db      	lsls	r3, r3, #3
 8001fa8:	4952      	ldr	r1, [pc, #328]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001faa:	4313      	orrs	r3, r2
 8001fac:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8001fae:	e03a      	b.n	8002026 <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8001fb0:	687b      	ldr	r3, [r7, #4]
 8001fb2:	68db      	ldr	r3, [r3, #12]
 8001fb4:	2b00      	cmp	r3, #0
 8001fb6:	d020      	beq.n	8001ffa <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8001fb8:	4b4f      	ldr	r3, [pc, #316]	; (80020f8 <HAL_RCC_OscConfig+0x2b0>)
 8001fba:	2201      	movs	r2, #1
 8001fbc:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8001fbe:	f7ff f88d 	bl	80010dc <HAL_GetTick>
 8001fc2:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001fc4:	e008      	b.n	8001fd8 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8001fc6:	f7ff f889 	bl	80010dc <HAL_GetTick>
 8001fca:	4602      	mov	r2, r0
 8001fcc:	693b      	ldr	r3, [r7, #16]
 8001fce:	1ad3      	subs	r3, r2, r3
 8001fd0:	2b02      	cmp	r3, #2
 8001fd2:	d901      	bls.n	8001fd8 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8001fd4:	2303      	movs	r3, #3
 8001fd6:	e19c      	b.n	8002312 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001fd8:	4b46      	ldr	r3, [pc, #280]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001fda:	681b      	ldr	r3, [r3, #0]
 8001fdc:	f003 0302 	and.w	r3, r3, #2
 8001fe0:	2b00      	cmp	r3, #0
 8001fe2:	d0f0      	beq.n	8001fc6 <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001fe4:	4b43      	ldr	r3, [pc, #268]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001fe6:	681b      	ldr	r3, [r3, #0]
 8001fe8:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001fec:	687b      	ldr	r3, [r7, #4]
 8001fee:	691b      	ldr	r3, [r3, #16]
 8001ff0:	00db      	lsls	r3, r3, #3
 8001ff2:	4940      	ldr	r1, [pc, #256]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 8001ff4:	4313      	orrs	r3, r2
 8001ff6:	600b      	str	r3, [r1, #0]
 8001ff8:	e015      	b.n	8002026 <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8001ffa:	4b3f      	ldr	r3, [pc, #252]	; (80020f8 <HAL_RCC_OscConfig+0x2b0>)
 8001ffc:	2200      	movs	r2, #0
 8001ffe:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002000:	f7ff f86c 	bl	80010dc <HAL_GetTick>
 8002004:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002006:	e008      	b.n	800201a <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002008:	f7ff f868 	bl	80010dc <HAL_GetTick>
 800200c:	4602      	mov	r2, r0
 800200e:	693b      	ldr	r3, [r7, #16]
 8002010:	1ad3      	subs	r3, r2, r3
 8002012:	2b02      	cmp	r3, #2
 8002014:	d901      	bls.n	800201a <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 8002016:	2303      	movs	r3, #3
 8002018:	e17b      	b.n	8002312 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800201a:	4b36      	ldr	r3, [pc, #216]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 800201c:	681b      	ldr	r3, [r3, #0]
 800201e:	f003 0302 	and.w	r3, r3, #2
 8002022:	2b00      	cmp	r3, #0
 8002024:	d1f0      	bne.n	8002008 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8002026:	687b      	ldr	r3, [r7, #4]
 8002028:	681b      	ldr	r3, [r3, #0]
 800202a:	f003 0308 	and.w	r3, r3, #8
 800202e:	2b00      	cmp	r3, #0
 8002030:	d030      	beq.n	8002094 <HAL_RCC_OscConfig+0x24c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	695b      	ldr	r3, [r3, #20]
 8002036:	2b00      	cmp	r3, #0
 8002038:	d016      	beq.n	8002068 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 800203a:	4b30      	ldr	r3, [pc, #192]	; (80020fc <HAL_RCC_OscConfig+0x2b4>)
 800203c:	2201      	movs	r2, #1
 800203e:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002040:	f7ff f84c 	bl	80010dc <HAL_GetTick>
 8002044:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8002046:	e008      	b.n	800205a <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002048:	f7ff f848 	bl	80010dc <HAL_GetTick>
 800204c:	4602      	mov	r2, r0
 800204e:	693b      	ldr	r3, [r7, #16]
 8002050:	1ad3      	subs	r3, r2, r3
 8002052:	2b02      	cmp	r3, #2
 8002054:	d901      	bls.n	800205a <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 8002056:	2303      	movs	r3, #3
 8002058:	e15b      	b.n	8002312 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800205a:	4b26      	ldr	r3, [pc, #152]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 800205c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800205e:	f003 0302 	and.w	r3, r3, #2
 8002062:	2b00      	cmp	r3, #0
 8002064:	d0f0      	beq.n	8002048 <HAL_RCC_OscConfig+0x200>
 8002066:	e015      	b.n	8002094 <HAL_RCC_OscConfig+0x24c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8002068:	4b24      	ldr	r3, [pc, #144]	; (80020fc <HAL_RCC_OscConfig+0x2b4>)
 800206a:	2200      	movs	r2, #0
 800206c:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800206e:	f7ff f835 	bl	80010dc <HAL_GetTick>
 8002072:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002074:	e008      	b.n	8002088 <HAL_RCC_OscConfig+0x240>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002076:	f7ff f831 	bl	80010dc <HAL_GetTick>
 800207a:	4602      	mov	r2, r0
 800207c:	693b      	ldr	r3, [r7, #16]
 800207e:	1ad3      	subs	r3, r2, r3
 8002080:	2b02      	cmp	r3, #2
 8002082:	d901      	bls.n	8002088 <HAL_RCC_OscConfig+0x240>
        {
          return HAL_TIMEOUT;
 8002084:	2303      	movs	r3, #3
 8002086:	e144      	b.n	8002312 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002088:	4b1a      	ldr	r3, [pc, #104]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 800208a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800208c:	f003 0302 	and.w	r3, r3, #2
 8002090:	2b00      	cmp	r3, #0
 8002092:	d1f0      	bne.n	8002076 <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8002094:	687b      	ldr	r3, [r7, #4]
 8002096:	681b      	ldr	r3, [r3, #0]
 8002098:	f003 0304 	and.w	r3, r3, #4
 800209c:	2b00      	cmp	r3, #0
 800209e:	f000 80a0 	beq.w	80021e2 <HAL_RCC_OscConfig+0x39a>
  {
    FlagStatus       pwrclkchanged = RESET;
 80020a2:	2300      	movs	r3, #0
 80020a4:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80020a6:	4b13      	ldr	r3, [pc, #76]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 80020a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020aa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80020ae:	2b00      	cmp	r3, #0
 80020b0:	d10f      	bne.n	80020d2 <HAL_RCC_OscConfig+0x28a>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80020b2:	2300      	movs	r3, #0
 80020b4:	60bb      	str	r3, [r7, #8]
 80020b6:	4b0f      	ldr	r3, [pc, #60]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 80020b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020ba:	4a0e      	ldr	r2, [pc, #56]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 80020bc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80020c0:	6413      	str	r3, [r2, #64]	; 0x40
 80020c2:	4b0c      	ldr	r3, [pc, #48]	; (80020f4 <HAL_RCC_OscConfig+0x2ac>)
 80020c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020c6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80020ca:	60bb      	str	r3, [r7, #8]
 80020cc:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 80020ce:	2301      	movs	r3, #1
 80020d0:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80020d2:	4b0b      	ldr	r3, [pc, #44]	; (8002100 <HAL_RCC_OscConfig+0x2b8>)
 80020d4:	681b      	ldr	r3, [r3, #0]
 80020d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80020da:	2b00      	cmp	r3, #0
 80020dc:	d121      	bne.n	8002122 <HAL_RCC_OscConfig+0x2da>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80020de:	4b08      	ldr	r3, [pc, #32]	; (8002100 <HAL_RCC_OscConfig+0x2b8>)
 80020e0:	681b      	ldr	r3, [r3, #0]
 80020e2:	4a07      	ldr	r2, [pc, #28]	; (8002100 <HAL_RCC_OscConfig+0x2b8>)
 80020e4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80020e8:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 80020ea:	f7fe fff7 	bl	80010dc <HAL_GetTick>
 80020ee:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80020f0:	e011      	b.n	8002116 <HAL_RCC_OscConfig+0x2ce>
 80020f2:	bf00      	nop
 80020f4:	40023800 	.word	0x40023800
 80020f8:	42470000 	.word	0x42470000
 80020fc:	42470e80 	.word	0x42470e80
 8002100:	40007000 	.word	0x40007000
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8002104:	f7fe ffea 	bl	80010dc <HAL_GetTick>
 8002108:	4602      	mov	r2, r0
 800210a:	693b      	ldr	r3, [r7, #16]
 800210c:	1ad3      	subs	r3, r2, r3
 800210e:	2b02      	cmp	r3, #2
 8002110:	d901      	bls.n	8002116 <HAL_RCC_OscConfig+0x2ce>
        {
          return HAL_TIMEOUT;
 8002112:	2303      	movs	r3, #3
 8002114:	e0fd      	b.n	8002312 <HAL_RCC_OscConfig+0x4ca>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002116:	4b81      	ldr	r3, [pc, #516]	; (800231c <HAL_RCC_OscConfig+0x4d4>)
 8002118:	681b      	ldr	r3, [r3, #0]
 800211a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800211e:	2b00      	cmp	r3, #0
 8002120:	d0f0      	beq.n	8002104 <HAL_RCC_OscConfig+0x2bc>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002122:	687b      	ldr	r3, [r7, #4]
 8002124:	689b      	ldr	r3, [r3, #8]
 8002126:	2b01      	cmp	r3, #1
 8002128:	d106      	bne.n	8002138 <HAL_RCC_OscConfig+0x2f0>
 800212a:	4b7d      	ldr	r3, [pc, #500]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 800212c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800212e:	4a7c      	ldr	r2, [pc, #496]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 8002130:	f043 0301 	orr.w	r3, r3, #1
 8002134:	6713      	str	r3, [r2, #112]	; 0x70
 8002136:	e01c      	b.n	8002172 <HAL_RCC_OscConfig+0x32a>
 8002138:	687b      	ldr	r3, [r7, #4]
 800213a:	689b      	ldr	r3, [r3, #8]
 800213c:	2b05      	cmp	r3, #5
 800213e:	d10c      	bne.n	800215a <HAL_RCC_OscConfig+0x312>
 8002140:	4b77      	ldr	r3, [pc, #476]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 8002142:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002144:	4a76      	ldr	r2, [pc, #472]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 8002146:	f043 0304 	orr.w	r3, r3, #4
 800214a:	6713      	str	r3, [r2, #112]	; 0x70
 800214c:	4b74      	ldr	r3, [pc, #464]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 800214e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002150:	4a73      	ldr	r2, [pc, #460]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 8002152:	f043 0301 	orr.w	r3, r3, #1
 8002156:	6713      	str	r3, [r2, #112]	; 0x70
 8002158:	e00b      	b.n	8002172 <HAL_RCC_OscConfig+0x32a>
 800215a:	4b71      	ldr	r3, [pc, #452]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 800215c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800215e:	4a70      	ldr	r2, [pc, #448]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 8002160:	f023 0301 	bic.w	r3, r3, #1
 8002164:	6713      	str	r3, [r2, #112]	; 0x70
 8002166:	4b6e      	ldr	r3, [pc, #440]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 8002168:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800216a:	4a6d      	ldr	r2, [pc, #436]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 800216c:	f023 0304 	bic.w	r3, r3, #4
 8002170:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8002172:	687b      	ldr	r3, [r7, #4]
 8002174:	689b      	ldr	r3, [r3, #8]
 8002176:	2b00      	cmp	r3, #0
 8002178:	d015      	beq.n	80021a6 <HAL_RCC_OscConfig+0x35e>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800217a:	f7fe ffaf 	bl	80010dc <HAL_GetTick>
 800217e:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002180:	e00a      	b.n	8002198 <HAL_RCC_OscConfig+0x350>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002182:	f7fe ffab 	bl	80010dc <HAL_GetTick>
 8002186:	4602      	mov	r2, r0
 8002188:	693b      	ldr	r3, [r7, #16]
 800218a:	1ad3      	subs	r3, r2, r3
 800218c:	f241 3288 	movw	r2, #5000	; 0x1388
 8002190:	4293      	cmp	r3, r2
 8002192:	d901      	bls.n	8002198 <HAL_RCC_OscConfig+0x350>
        {
          return HAL_TIMEOUT;
 8002194:	2303      	movs	r3, #3
 8002196:	e0bc      	b.n	8002312 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002198:	4b61      	ldr	r3, [pc, #388]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 800219a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800219c:	f003 0302 	and.w	r3, r3, #2
 80021a0:	2b00      	cmp	r3, #0
 80021a2:	d0ee      	beq.n	8002182 <HAL_RCC_OscConfig+0x33a>
 80021a4:	e014      	b.n	80021d0 <HAL_RCC_OscConfig+0x388>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80021a6:	f7fe ff99 	bl	80010dc <HAL_GetTick>
 80021aa:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80021ac:	e00a      	b.n	80021c4 <HAL_RCC_OscConfig+0x37c>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80021ae:	f7fe ff95 	bl	80010dc <HAL_GetTick>
 80021b2:	4602      	mov	r2, r0
 80021b4:	693b      	ldr	r3, [r7, #16]
 80021b6:	1ad3      	subs	r3, r2, r3
 80021b8:	f241 3288 	movw	r2, #5000	; 0x1388
 80021bc:	4293      	cmp	r3, r2
 80021be:	d901      	bls.n	80021c4 <HAL_RCC_OscConfig+0x37c>
        {
          return HAL_TIMEOUT;
 80021c0:	2303      	movs	r3, #3
 80021c2:	e0a6      	b.n	8002312 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80021c4:	4b56      	ldr	r3, [pc, #344]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 80021c6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80021c8:	f003 0302 	and.w	r3, r3, #2
 80021cc:	2b00      	cmp	r3, #0
 80021ce:	d1ee      	bne.n	80021ae <HAL_RCC_OscConfig+0x366>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 80021d0:	7dfb      	ldrb	r3, [r7, #23]
 80021d2:	2b01      	cmp	r3, #1
 80021d4:	d105      	bne.n	80021e2 <HAL_RCC_OscConfig+0x39a>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80021d6:	4b52      	ldr	r3, [pc, #328]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 80021d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021da:	4a51      	ldr	r2, [pc, #324]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 80021dc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80021e0:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80021e2:	687b      	ldr	r3, [r7, #4]
 80021e4:	699b      	ldr	r3, [r3, #24]
 80021e6:	2b00      	cmp	r3, #0
 80021e8:	f000 8092 	beq.w	8002310 <HAL_RCC_OscConfig+0x4c8>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80021ec:	4b4c      	ldr	r3, [pc, #304]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 80021ee:	689b      	ldr	r3, [r3, #8]
 80021f0:	f003 030c 	and.w	r3, r3, #12
 80021f4:	2b08      	cmp	r3, #8
 80021f6:	d05c      	beq.n	80022b2 <HAL_RCC_OscConfig+0x46a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80021f8:	687b      	ldr	r3, [r7, #4]
 80021fa:	699b      	ldr	r3, [r3, #24]
 80021fc:	2b02      	cmp	r3, #2
 80021fe:	d141      	bne.n	8002284 <HAL_RCC_OscConfig+0x43c>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8002200:	4b48      	ldr	r3, [pc, #288]	; (8002324 <HAL_RCC_OscConfig+0x4dc>)
 8002202:	2200      	movs	r2, #0
 8002204:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002206:	f7fe ff69 	bl	80010dc <HAL_GetTick>
 800220a:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800220c:	e008      	b.n	8002220 <HAL_RCC_OscConfig+0x3d8>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800220e:	f7fe ff65 	bl	80010dc <HAL_GetTick>
 8002212:	4602      	mov	r2, r0
 8002214:	693b      	ldr	r3, [r7, #16]
 8002216:	1ad3      	subs	r3, r2, r3
 8002218:	2b02      	cmp	r3, #2
 800221a:	d901      	bls.n	8002220 <HAL_RCC_OscConfig+0x3d8>
          {
            return HAL_TIMEOUT;
 800221c:	2303      	movs	r3, #3
 800221e:	e078      	b.n	8002312 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8002220:	4b3f      	ldr	r3, [pc, #252]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 8002222:	681b      	ldr	r3, [r3, #0]
 8002224:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002228:	2b00      	cmp	r3, #0
 800222a:	d1f0      	bne.n	800220e <HAL_RCC_OscConfig+0x3c6>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800222c:	687b      	ldr	r3, [r7, #4]
 800222e:	69da      	ldr	r2, [r3, #28]
 8002230:	687b      	ldr	r3, [r7, #4]
 8002232:	6a1b      	ldr	r3, [r3, #32]
 8002234:	431a      	orrs	r2, r3
 8002236:	687b      	ldr	r3, [r7, #4]
 8002238:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800223a:	019b      	lsls	r3, r3, #6
 800223c:	431a      	orrs	r2, r3
 800223e:	687b      	ldr	r3, [r7, #4]
 8002240:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002242:	085b      	lsrs	r3, r3, #1
 8002244:	3b01      	subs	r3, #1
 8002246:	041b      	lsls	r3, r3, #16
 8002248:	431a      	orrs	r2, r3
 800224a:	687b      	ldr	r3, [r7, #4]
 800224c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800224e:	061b      	lsls	r3, r3, #24
 8002250:	4933      	ldr	r1, [pc, #204]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 8002252:	4313      	orrs	r3, r2
 8002254:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8002256:	4b33      	ldr	r3, [pc, #204]	; (8002324 <HAL_RCC_OscConfig+0x4dc>)
 8002258:	2201      	movs	r2, #1
 800225a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800225c:	f7fe ff3e 	bl	80010dc <HAL_GetTick>
 8002260:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002262:	e008      	b.n	8002276 <HAL_RCC_OscConfig+0x42e>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002264:	f7fe ff3a 	bl	80010dc <HAL_GetTick>
 8002268:	4602      	mov	r2, r0
 800226a:	693b      	ldr	r3, [r7, #16]
 800226c:	1ad3      	subs	r3, r2, r3
 800226e:	2b02      	cmp	r3, #2
 8002270:	d901      	bls.n	8002276 <HAL_RCC_OscConfig+0x42e>
          {
            return HAL_TIMEOUT;
 8002272:	2303      	movs	r3, #3
 8002274:	e04d      	b.n	8002312 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002276:	4b2a      	ldr	r3, [pc, #168]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 8002278:	681b      	ldr	r3, [r3, #0]
 800227a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800227e:	2b00      	cmp	r3, #0
 8002280:	d0f0      	beq.n	8002264 <HAL_RCC_OscConfig+0x41c>
 8002282:	e045      	b.n	8002310 <HAL_RCC_OscConfig+0x4c8>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8002284:	4b27      	ldr	r3, [pc, #156]	; (8002324 <HAL_RCC_OscConfig+0x4dc>)
 8002286:	2200      	movs	r2, #0
 8002288:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800228a:	f7fe ff27 	bl	80010dc <HAL_GetTick>
 800228e:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8002290:	e008      	b.n	80022a4 <HAL_RCC_OscConfig+0x45c>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002292:	f7fe ff23 	bl	80010dc <HAL_GetTick>
 8002296:	4602      	mov	r2, r0
 8002298:	693b      	ldr	r3, [r7, #16]
 800229a:	1ad3      	subs	r3, r2, r3
 800229c:	2b02      	cmp	r3, #2
 800229e:	d901      	bls.n	80022a4 <HAL_RCC_OscConfig+0x45c>
          {
            return HAL_TIMEOUT;
 80022a0:	2303      	movs	r3, #3
 80022a2:	e036      	b.n	8002312 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80022a4:	4b1e      	ldr	r3, [pc, #120]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 80022a6:	681b      	ldr	r3, [r3, #0]
 80022a8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80022ac:	2b00      	cmp	r3, #0
 80022ae:	d1f0      	bne.n	8002292 <HAL_RCC_OscConfig+0x44a>
 80022b0:	e02e      	b.n	8002310 <HAL_RCC_OscConfig+0x4c8>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80022b2:	687b      	ldr	r3, [r7, #4]
 80022b4:	699b      	ldr	r3, [r3, #24]
 80022b6:	2b01      	cmp	r3, #1
 80022b8:	d101      	bne.n	80022be <HAL_RCC_OscConfig+0x476>
      {
        return HAL_ERROR;
 80022ba:	2301      	movs	r3, #1
 80022bc:	e029      	b.n	8002312 <HAL_RCC_OscConfig+0x4ca>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 80022be:	4b18      	ldr	r3, [pc, #96]	; (8002320 <HAL_RCC_OscConfig+0x4d8>)
 80022c0:	685b      	ldr	r3, [r3, #4]
 80022c2:	60fb      	str	r3, [r7, #12]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80022c4:	68fb      	ldr	r3, [r7, #12]
 80022c6:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80022ca:	687b      	ldr	r3, [r7, #4]
 80022cc:	69db      	ldr	r3, [r3, #28]
 80022ce:	429a      	cmp	r2, r3
 80022d0:	d11c      	bne.n	800230c <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80022d2:	68fb      	ldr	r3, [r7, #12]
 80022d4:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80022d8:	687b      	ldr	r3, [r7, #4]
 80022da:	6a1b      	ldr	r3, [r3, #32]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80022dc:	429a      	cmp	r2, r3
 80022de:	d115      	bne.n	800230c <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 80022e0:	68fa      	ldr	r2, [r7, #12]
 80022e2:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80022e6:	4013      	ands	r3, r2
 80022e8:	687a      	ldr	r2, [r7, #4]
 80022ea:	6a52      	ldr	r2, [r2, #36]	; 0x24
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80022ec:	4293      	cmp	r3, r2
 80022ee:	d10d      	bne.n	800230c <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 80022f0:	68fb      	ldr	r3, [r7, #12]
 80022f2:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80022f6:	687b      	ldr	r3, [r7, #4]
 80022f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 80022fa:	429a      	cmp	r2, r3
 80022fc:	d106      	bne.n	800230c <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 80022fe:	68fb      	ldr	r3, [r7, #12]
 8002300:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8002304:	687b      	ldr	r3, [r7, #4]
 8002306:	6adb      	ldr	r3, [r3, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8002308:	429a      	cmp	r2, r3
 800230a:	d001      	beq.n	8002310 <HAL_RCC_OscConfig+0x4c8>
        {
          return HAL_ERROR;
 800230c:	2301      	movs	r3, #1
 800230e:	e000      	b.n	8002312 <HAL_RCC_OscConfig+0x4ca>
        }
      }
    }
  }
  return HAL_OK;
 8002310:	2300      	movs	r3, #0
}
 8002312:	4618      	mov	r0, r3
 8002314:	3718      	adds	r7, #24
 8002316:	46bd      	mov	sp, r7
 8002318:	bd80      	pop	{r7, pc}
 800231a:	bf00      	nop
 800231c:	40007000 	.word	0x40007000
 8002320:	40023800 	.word	0x40023800
 8002324:	42470060 	.word	0x42470060

08002328 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8002328:	b580      	push	{r7, lr}
 800232a:	b084      	sub	sp, #16
 800232c:	af00      	add	r7, sp, #0
 800232e:	6078      	str	r0, [r7, #4]
 8002330:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8002332:	687b      	ldr	r3, [r7, #4]
 8002334:	2b00      	cmp	r3, #0
 8002336:	d101      	bne.n	800233c <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8002338:	2301      	movs	r3, #1
 800233a:	e0cc      	b.n	80024d6 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800233c:	4b68      	ldr	r3, [pc, #416]	; (80024e0 <HAL_RCC_ClockConfig+0x1b8>)
 800233e:	681b      	ldr	r3, [r3, #0]
 8002340:	f003 030f 	and.w	r3, r3, #15
 8002344:	683a      	ldr	r2, [r7, #0]
 8002346:	429a      	cmp	r2, r3
 8002348:	d90c      	bls.n	8002364 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800234a:	4b65      	ldr	r3, [pc, #404]	; (80024e0 <HAL_RCC_ClockConfig+0x1b8>)
 800234c:	683a      	ldr	r2, [r7, #0]
 800234e:	b2d2      	uxtb	r2, r2
 8002350:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8002352:	4b63      	ldr	r3, [pc, #396]	; (80024e0 <HAL_RCC_ClockConfig+0x1b8>)
 8002354:	681b      	ldr	r3, [r3, #0]
 8002356:	f003 030f 	and.w	r3, r3, #15
 800235a:	683a      	ldr	r2, [r7, #0]
 800235c:	429a      	cmp	r2, r3
 800235e:	d001      	beq.n	8002364 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8002360:	2301      	movs	r3, #1
 8002362:	e0b8      	b.n	80024d6 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8002364:	687b      	ldr	r3, [r7, #4]
 8002366:	681b      	ldr	r3, [r3, #0]
 8002368:	f003 0302 	and.w	r3, r3, #2
 800236c:	2b00      	cmp	r3, #0
 800236e:	d020      	beq.n	80023b2 <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002370:	687b      	ldr	r3, [r7, #4]
 8002372:	681b      	ldr	r3, [r3, #0]
 8002374:	f003 0304 	and.w	r3, r3, #4
 8002378:	2b00      	cmp	r3, #0
 800237a:	d005      	beq.n	8002388 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800237c:	4b59      	ldr	r3, [pc, #356]	; (80024e4 <HAL_RCC_ClockConfig+0x1bc>)
 800237e:	689b      	ldr	r3, [r3, #8]
 8002380:	4a58      	ldr	r2, [pc, #352]	; (80024e4 <HAL_RCC_ClockConfig+0x1bc>)
 8002382:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8002386:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8002388:	687b      	ldr	r3, [r7, #4]
 800238a:	681b      	ldr	r3, [r3, #0]
 800238c:	f003 0308 	and.w	r3, r3, #8
 8002390:	2b00      	cmp	r3, #0
 8002392:	d005      	beq.n	80023a0 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8002394:	4b53      	ldr	r3, [pc, #332]	; (80024e4 <HAL_RCC_ClockConfig+0x1bc>)
 8002396:	689b      	ldr	r3, [r3, #8]
 8002398:	4a52      	ldr	r2, [pc, #328]	; (80024e4 <HAL_RCC_ClockConfig+0x1bc>)
 800239a:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 800239e:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80023a0:	4b50      	ldr	r3, [pc, #320]	; (80024e4 <HAL_RCC_ClockConfig+0x1bc>)
 80023a2:	689b      	ldr	r3, [r3, #8]
 80023a4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80023a8:	687b      	ldr	r3, [r7, #4]
 80023aa:	689b      	ldr	r3, [r3, #8]
 80023ac:	494d      	ldr	r1, [pc, #308]	; (80024e4 <HAL_RCC_ClockConfig+0x1bc>)
 80023ae:	4313      	orrs	r3, r2
 80023b0:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80023b2:	687b      	ldr	r3, [r7, #4]
 80023b4:	681b      	ldr	r3, [r3, #0]
 80023b6:	f003 0301 	and.w	r3, r3, #1
 80023ba:	2b00      	cmp	r3, #0
 80023bc:	d044      	beq.n	8002448 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80023be:	687b      	ldr	r3, [r7, #4]
 80023c0:	685b      	ldr	r3, [r3, #4]
 80023c2:	2b01      	cmp	r3, #1
 80023c4:	d107      	bne.n	80023d6 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80023c6:	4b47      	ldr	r3, [pc, #284]	; (80024e4 <HAL_RCC_ClockConfig+0x1bc>)
 80023c8:	681b      	ldr	r3, [r3, #0]
 80023ca:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80023ce:	2b00      	cmp	r3, #0
 80023d0:	d119      	bne.n	8002406 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80023d2:	2301      	movs	r3, #1
 80023d4:	e07f      	b.n	80024d6 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80023d6:	687b      	ldr	r3, [r7, #4]
 80023d8:	685b      	ldr	r3, [r3, #4]
 80023da:	2b02      	cmp	r3, #2
 80023dc:	d003      	beq.n	80023e6 <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 80023de:	687b      	ldr	r3, [r7, #4]
 80023e0:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80023e2:	2b03      	cmp	r3, #3
 80023e4:	d107      	bne.n	80023f6 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80023e6:	4b3f      	ldr	r3, [pc, #252]	; (80024e4 <HAL_RCC_ClockConfig+0x1bc>)
 80023e8:	681b      	ldr	r3, [r3, #0]
 80023ea:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80023ee:	2b00      	cmp	r3, #0
 80023f0:	d109      	bne.n	8002406 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80023f2:	2301      	movs	r3, #1
 80023f4:	e06f      	b.n	80024d6 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80023f6:	4b3b      	ldr	r3, [pc, #236]	; (80024e4 <HAL_RCC_ClockConfig+0x1bc>)
 80023f8:	681b      	ldr	r3, [r3, #0]
 80023fa:	f003 0302 	and.w	r3, r3, #2
 80023fe:	2b00      	cmp	r3, #0
 8002400:	d101      	bne.n	8002406 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8002402:	2301      	movs	r3, #1
 8002404:	e067      	b.n	80024d6 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8002406:	4b37      	ldr	r3, [pc, #220]	; (80024e4 <HAL_RCC_ClockConfig+0x1bc>)
 8002408:	689b      	ldr	r3, [r3, #8]
 800240a:	f023 0203 	bic.w	r2, r3, #3
 800240e:	687b      	ldr	r3, [r7, #4]
 8002410:	685b      	ldr	r3, [r3, #4]
 8002412:	4934      	ldr	r1, [pc, #208]	; (80024e4 <HAL_RCC_ClockConfig+0x1bc>)
 8002414:	4313      	orrs	r3, r2
 8002416:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8002418:	f7fe fe60 	bl	80010dc <HAL_GetTick>
 800241c:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800241e:	e00a      	b.n	8002436 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002420:	f7fe fe5c 	bl	80010dc <HAL_GetTick>
 8002424:	4602      	mov	r2, r0
 8002426:	68fb      	ldr	r3, [r7, #12]
 8002428:	1ad3      	subs	r3, r2, r3
 800242a:	f241 3288 	movw	r2, #5000	; 0x1388
 800242e:	4293      	cmp	r3, r2
 8002430:	d901      	bls.n	8002436 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8002432:	2303      	movs	r3, #3
 8002434:	e04f      	b.n	80024d6 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8002436:	4b2b      	ldr	r3, [pc, #172]	; (80024e4 <HAL_RCC_ClockConfig+0x1bc>)
 8002438:	689b      	ldr	r3, [r3, #8]
 800243a:	f003 020c 	and.w	r2, r3, #12
 800243e:	687b      	ldr	r3, [r7, #4]
 8002440:	685b      	ldr	r3, [r3, #4]
 8002442:	009b      	lsls	r3, r3, #2
 8002444:	429a      	cmp	r2, r3
 8002446:	d1eb      	bne.n	8002420 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8002448:	4b25      	ldr	r3, [pc, #148]	; (80024e0 <HAL_RCC_ClockConfig+0x1b8>)
 800244a:	681b      	ldr	r3, [r3, #0]
 800244c:	f003 030f 	and.w	r3, r3, #15
 8002450:	683a      	ldr	r2, [r7, #0]
 8002452:	429a      	cmp	r2, r3
 8002454:	d20c      	bcs.n	8002470 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002456:	4b22      	ldr	r3, [pc, #136]	; (80024e0 <HAL_RCC_ClockConfig+0x1b8>)
 8002458:	683a      	ldr	r2, [r7, #0]
 800245a:	b2d2      	uxtb	r2, r2
 800245c:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800245e:	4b20      	ldr	r3, [pc, #128]	; (80024e0 <HAL_RCC_ClockConfig+0x1b8>)
 8002460:	681b      	ldr	r3, [r3, #0]
 8002462:	f003 030f 	and.w	r3, r3, #15
 8002466:	683a      	ldr	r2, [r7, #0]
 8002468:	429a      	cmp	r2, r3
 800246a:	d001      	beq.n	8002470 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 800246c:	2301      	movs	r3, #1
 800246e:	e032      	b.n	80024d6 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002470:	687b      	ldr	r3, [r7, #4]
 8002472:	681b      	ldr	r3, [r3, #0]
 8002474:	f003 0304 	and.w	r3, r3, #4
 8002478:	2b00      	cmp	r3, #0
 800247a:	d008      	beq.n	800248e <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800247c:	4b19      	ldr	r3, [pc, #100]	; (80024e4 <HAL_RCC_ClockConfig+0x1bc>)
 800247e:	689b      	ldr	r3, [r3, #8]
 8002480:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8002484:	687b      	ldr	r3, [r7, #4]
 8002486:	68db      	ldr	r3, [r3, #12]
 8002488:	4916      	ldr	r1, [pc, #88]	; (80024e4 <HAL_RCC_ClockConfig+0x1bc>)
 800248a:	4313      	orrs	r3, r2
 800248c:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800248e:	687b      	ldr	r3, [r7, #4]
 8002490:	681b      	ldr	r3, [r3, #0]
 8002492:	f003 0308 	and.w	r3, r3, #8
 8002496:	2b00      	cmp	r3, #0
 8002498:	d009      	beq.n	80024ae <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800249a:	4b12      	ldr	r3, [pc, #72]	; (80024e4 <HAL_RCC_ClockConfig+0x1bc>)
 800249c:	689b      	ldr	r3, [r3, #8]
 800249e:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80024a2:	687b      	ldr	r3, [r7, #4]
 80024a4:	691b      	ldr	r3, [r3, #16]
 80024a6:	00db      	lsls	r3, r3, #3
 80024a8:	490e      	ldr	r1, [pc, #56]	; (80024e4 <HAL_RCC_ClockConfig+0x1bc>)
 80024aa:	4313      	orrs	r3, r2
 80024ac:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80024ae:	f000 f821 	bl	80024f4 <HAL_RCC_GetSysClockFreq>
 80024b2:	4601      	mov	r1, r0
 80024b4:	4b0b      	ldr	r3, [pc, #44]	; (80024e4 <HAL_RCC_ClockConfig+0x1bc>)
 80024b6:	689b      	ldr	r3, [r3, #8]
 80024b8:	091b      	lsrs	r3, r3, #4
 80024ba:	f003 030f 	and.w	r3, r3, #15
 80024be:	4a0a      	ldr	r2, [pc, #40]	; (80024e8 <HAL_RCC_ClockConfig+0x1c0>)
 80024c0:	5cd3      	ldrb	r3, [r2, r3]
 80024c2:	fa21 f303 	lsr.w	r3, r1, r3
 80024c6:	4a09      	ldr	r2, [pc, #36]	; (80024ec <HAL_RCC_ClockConfig+0x1c4>)
 80024c8:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 80024ca:	4b09      	ldr	r3, [pc, #36]	; (80024f0 <HAL_RCC_ClockConfig+0x1c8>)
 80024cc:	681b      	ldr	r3, [r3, #0]
 80024ce:	4618      	mov	r0, r3
 80024d0:	f7fe fdc0 	bl	8001054 <HAL_InitTick>

  return HAL_OK;
 80024d4:	2300      	movs	r3, #0
}
 80024d6:	4618      	mov	r0, r3
 80024d8:	3710      	adds	r7, #16
 80024da:	46bd      	mov	sp, r7
 80024dc:	bd80      	pop	{r7, pc}
 80024de:	bf00      	nop
 80024e0:	40023c00 	.word	0x40023c00
 80024e4:	40023800 	.word	0x40023800
 80024e8:	0800feb4 	.word	0x0800feb4
 80024ec:	20000000 	.word	0x20000000
 80024f0:	20000004 	.word	0x20000004

080024f4 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80024f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80024f6:	b085      	sub	sp, #20
 80024f8:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 80024fa:	2300      	movs	r3, #0
 80024fc:	607b      	str	r3, [r7, #4]
 80024fe:	2300      	movs	r3, #0
 8002500:	60fb      	str	r3, [r7, #12]
 8002502:	2300      	movs	r3, #0
 8002504:	603b      	str	r3, [r7, #0]
  uint32_t sysclockfreq = 0U;
 8002506:	2300      	movs	r3, #0
 8002508:	60bb      	str	r3, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800250a:	4b63      	ldr	r3, [pc, #396]	; (8002698 <HAL_RCC_GetSysClockFreq+0x1a4>)
 800250c:	689b      	ldr	r3, [r3, #8]
 800250e:	f003 030c 	and.w	r3, r3, #12
 8002512:	2b04      	cmp	r3, #4
 8002514:	d007      	beq.n	8002526 <HAL_RCC_GetSysClockFreq+0x32>
 8002516:	2b08      	cmp	r3, #8
 8002518:	d008      	beq.n	800252c <HAL_RCC_GetSysClockFreq+0x38>
 800251a:	2b00      	cmp	r3, #0
 800251c:	f040 80b4 	bne.w	8002688 <HAL_RCC_GetSysClockFreq+0x194>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8002520:	4b5e      	ldr	r3, [pc, #376]	; (800269c <HAL_RCC_GetSysClockFreq+0x1a8>)
 8002522:	60bb      	str	r3, [r7, #8]
       break;
 8002524:	e0b3      	b.n	800268e <HAL_RCC_GetSysClockFreq+0x19a>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8002526:	4b5e      	ldr	r3, [pc, #376]	; (80026a0 <HAL_RCC_GetSysClockFreq+0x1ac>)
 8002528:	60bb      	str	r3, [r7, #8]
      break;
 800252a:	e0b0      	b.n	800268e <HAL_RCC_GetSysClockFreq+0x19a>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800252c:	4b5a      	ldr	r3, [pc, #360]	; (8002698 <HAL_RCC_GetSysClockFreq+0x1a4>)
 800252e:	685b      	ldr	r3, [r3, #4]
 8002530:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8002534:	607b      	str	r3, [r7, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8002536:	4b58      	ldr	r3, [pc, #352]	; (8002698 <HAL_RCC_GetSysClockFreq+0x1a4>)
 8002538:	685b      	ldr	r3, [r3, #4]
 800253a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800253e:	2b00      	cmp	r3, #0
 8002540:	d04a      	beq.n	80025d8 <HAL_RCC_GetSysClockFreq+0xe4>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8002542:	4b55      	ldr	r3, [pc, #340]	; (8002698 <HAL_RCC_GetSysClockFreq+0x1a4>)
 8002544:	685b      	ldr	r3, [r3, #4]
 8002546:	099b      	lsrs	r3, r3, #6
 8002548:	f04f 0400 	mov.w	r4, #0
 800254c:	f240 11ff 	movw	r1, #511	; 0x1ff
 8002550:	f04f 0200 	mov.w	r2, #0
 8002554:	ea03 0501 	and.w	r5, r3, r1
 8002558:	ea04 0602 	and.w	r6, r4, r2
 800255c:	4629      	mov	r1, r5
 800255e:	4632      	mov	r2, r6
 8002560:	f04f 0300 	mov.w	r3, #0
 8002564:	f04f 0400 	mov.w	r4, #0
 8002568:	0154      	lsls	r4, r2, #5
 800256a:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 800256e:	014b      	lsls	r3, r1, #5
 8002570:	4619      	mov	r1, r3
 8002572:	4622      	mov	r2, r4
 8002574:	1b49      	subs	r1, r1, r5
 8002576:	eb62 0206 	sbc.w	r2, r2, r6
 800257a:	f04f 0300 	mov.w	r3, #0
 800257e:	f04f 0400 	mov.w	r4, #0
 8002582:	0194      	lsls	r4, r2, #6
 8002584:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8002588:	018b      	lsls	r3, r1, #6
 800258a:	1a5b      	subs	r3, r3, r1
 800258c:	eb64 0402 	sbc.w	r4, r4, r2
 8002590:	f04f 0100 	mov.w	r1, #0
 8002594:	f04f 0200 	mov.w	r2, #0
 8002598:	00e2      	lsls	r2, r4, #3
 800259a:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 800259e:	00d9      	lsls	r1, r3, #3
 80025a0:	460b      	mov	r3, r1
 80025a2:	4614      	mov	r4, r2
 80025a4:	195b      	adds	r3, r3, r5
 80025a6:	eb44 0406 	adc.w	r4, r4, r6
 80025aa:	f04f 0100 	mov.w	r1, #0
 80025ae:	f04f 0200 	mov.w	r2, #0
 80025b2:	0262      	lsls	r2, r4, #9
 80025b4:	ea42 52d3 	orr.w	r2, r2, r3, lsr #23
 80025b8:	0259      	lsls	r1, r3, #9
 80025ba:	460b      	mov	r3, r1
 80025bc:	4614      	mov	r4, r2
 80025be:	4618      	mov	r0, r3
 80025c0:	4621      	mov	r1, r4
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	f04f 0400 	mov.w	r4, #0
 80025c8:	461a      	mov	r2, r3
 80025ca:	4623      	mov	r3, r4
 80025cc:	f7fd fe04 	bl	80001d8 <__aeabi_uldivmod>
 80025d0:	4603      	mov	r3, r0
 80025d2:	460c      	mov	r4, r1
 80025d4:	60fb      	str	r3, [r7, #12]
 80025d6:	e049      	b.n	800266c <HAL_RCC_GetSysClockFreq+0x178>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80025d8:	4b2f      	ldr	r3, [pc, #188]	; (8002698 <HAL_RCC_GetSysClockFreq+0x1a4>)
 80025da:	685b      	ldr	r3, [r3, #4]
 80025dc:	099b      	lsrs	r3, r3, #6
 80025de:	f04f 0400 	mov.w	r4, #0
 80025e2:	f240 11ff 	movw	r1, #511	; 0x1ff
 80025e6:	f04f 0200 	mov.w	r2, #0
 80025ea:	ea03 0501 	and.w	r5, r3, r1
 80025ee:	ea04 0602 	and.w	r6, r4, r2
 80025f2:	4629      	mov	r1, r5
 80025f4:	4632      	mov	r2, r6
 80025f6:	f04f 0300 	mov.w	r3, #0
 80025fa:	f04f 0400 	mov.w	r4, #0
 80025fe:	0154      	lsls	r4, r2, #5
 8002600:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 8002604:	014b      	lsls	r3, r1, #5
 8002606:	4619      	mov	r1, r3
 8002608:	4622      	mov	r2, r4
 800260a:	1b49      	subs	r1, r1, r5
 800260c:	eb62 0206 	sbc.w	r2, r2, r6
 8002610:	f04f 0300 	mov.w	r3, #0
 8002614:	f04f 0400 	mov.w	r4, #0
 8002618:	0194      	lsls	r4, r2, #6
 800261a:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 800261e:	018b      	lsls	r3, r1, #6
 8002620:	1a5b      	subs	r3, r3, r1
 8002622:	eb64 0402 	sbc.w	r4, r4, r2
 8002626:	f04f 0100 	mov.w	r1, #0
 800262a:	f04f 0200 	mov.w	r2, #0
 800262e:	00e2      	lsls	r2, r4, #3
 8002630:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8002634:	00d9      	lsls	r1, r3, #3
 8002636:	460b      	mov	r3, r1
 8002638:	4614      	mov	r4, r2
 800263a:	195b      	adds	r3, r3, r5
 800263c:	eb44 0406 	adc.w	r4, r4, r6
 8002640:	f04f 0100 	mov.w	r1, #0
 8002644:	f04f 0200 	mov.w	r2, #0
 8002648:	02a2      	lsls	r2, r4, #10
 800264a:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 800264e:	0299      	lsls	r1, r3, #10
 8002650:	460b      	mov	r3, r1
 8002652:	4614      	mov	r4, r2
 8002654:	4618      	mov	r0, r3
 8002656:	4621      	mov	r1, r4
 8002658:	687b      	ldr	r3, [r7, #4]
 800265a:	f04f 0400 	mov.w	r4, #0
 800265e:	461a      	mov	r2, r3
 8002660:	4623      	mov	r3, r4
 8002662:	f7fd fdb9 	bl	80001d8 <__aeabi_uldivmod>
 8002666:	4603      	mov	r3, r0
 8002668:	460c      	mov	r4, r1
 800266a:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800266c:	4b0a      	ldr	r3, [pc, #40]	; (8002698 <HAL_RCC_GetSysClockFreq+0x1a4>)
 800266e:	685b      	ldr	r3, [r3, #4]
 8002670:	0c1b      	lsrs	r3, r3, #16
 8002672:	f003 0303 	and.w	r3, r3, #3
 8002676:	3301      	adds	r3, #1
 8002678:	005b      	lsls	r3, r3, #1
 800267a:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco/pllp;
 800267c:	68fa      	ldr	r2, [r7, #12]
 800267e:	683b      	ldr	r3, [r7, #0]
 8002680:	fbb2 f3f3 	udiv	r3, r2, r3
 8002684:	60bb      	str	r3, [r7, #8]
      break;
 8002686:	e002      	b.n	800268e <HAL_RCC_GetSysClockFreq+0x19a>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8002688:	4b04      	ldr	r3, [pc, #16]	; (800269c <HAL_RCC_GetSysClockFreq+0x1a8>)
 800268a:	60bb      	str	r3, [r7, #8]
      break;
 800268c:	bf00      	nop
    }
  }
  return sysclockfreq;
 800268e:	68bb      	ldr	r3, [r7, #8]
}
 8002690:	4618      	mov	r0, r3
 8002692:	3714      	adds	r7, #20
 8002694:	46bd      	mov	sp, r7
 8002696:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002698:	40023800 	.word	0x40023800
 800269c:	00f42400 	.word	0x00f42400
 80026a0:	007a1200 	.word	0x007a1200

080026a4 <HAL_SRAM_Init>:
  * @param  Timing Pointer to SRAM control timing structure 
  * @param  ExtTiming Pointer to SRAM extended mode timing structure  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SRAM_Init(SRAM_HandleTypeDef *hsram, FMC_NORSRAM_TimingTypeDef *Timing, FMC_NORSRAM_TimingTypeDef *ExtTiming)
{ 
 80026a4:	b580      	push	{r7, lr}
 80026a6:	b084      	sub	sp, #16
 80026a8:	af00      	add	r7, sp, #0
 80026aa:	60f8      	str	r0, [r7, #12]
 80026ac:	60b9      	str	r1, [r7, #8]
 80026ae:	607a      	str	r2, [r7, #4]
  /* Check the SRAM handle parameter */
  if(hsram == NULL)
 80026b0:	68fb      	ldr	r3, [r7, #12]
 80026b2:	2b00      	cmp	r3, #0
 80026b4:	d101      	bne.n	80026ba <HAL_SRAM_Init+0x16>
  {
     return HAL_ERROR;
 80026b6:	2301      	movs	r3, #1
 80026b8:	e034      	b.n	8002724 <HAL_SRAM_Init+0x80>
  }
  
  if(hsram->State == HAL_SRAM_STATE_RESET)
 80026ba:	68fb      	ldr	r3, [r7, #12]
 80026bc:	f893 3049 	ldrb.w	r3, [r3, #73]	; 0x49
 80026c0:	b2db      	uxtb	r3, r3
 80026c2:	2b00      	cmp	r3, #0
 80026c4:	d106      	bne.n	80026d4 <HAL_SRAM_Init+0x30>
  {  
    /* Allocate lock resource and initialize it */
    hsram->Lock = HAL_UNLOCKED;
 80026c6:	68fb      	ldr	r3, [r7, #12]
 80026c8:	2200      	movs	r2, #0
 80026ca:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48

    /* Init the low level hardware */
    hsram->MspInitCallback(hsram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SRAM_MspInit(hsram);
 80026ce:	68f8      	ldr	r0, [r7, #12]
 80026d0:	f7fe fc2a 	bl	8000f28 <HAL_SRAM_MspInit>
#endif
  }
  
  /* Initialize SRAM control Interface */
  FMC_NORSRAM_Init(hsram->Instance, &(hsram->Init));
 80026d4:	68fb      	ldr	r3, [r7, #12]
 80026d6:	681a      	ldr	r2, [r3, #0]
 80026d8:	68fb      	ldr	r3, [r7, #12]
 80026da:	3308      	adds	r3, #8
 80026dc:	4619      	mov	r1, r3
 80026de:	4610      	mov	r0, r2
 80026e0:	f000 f824 	bl	800272c <FSMC_NORSRAM_Init>

  /* Initialize SRAM timing Interface */
  FMC_NORSRAM_Timing_Init(hsram->Instance, Timing, hsram->Init.NSBank); 
 80026e4:	68fb      	ldr	r3, [r7, #12]
 80026e6:	6818      	ldr	r0, [r3, #0]
 80026e8:	68fb      	ldr	r3, [r7, #12]
 80026ea:	689b      	ldr	r3, [r3, #8]
 80026ec:	461a      	mov	r2, r3
 80026ee:	68b9      	ldr	r1, [r7, #8]
 80026f0:	f000 f86e 	bl	80027d0 <FSMC_NORSRAM_Timing_Init>

  /* Initialize SRAM extended mode timing Interface */
  FMC_NORSRAM_Extended_Timing_Init(hsram->Extended, ExtTiming, hsram->Init.NSBank,  hsram->Init.ExtendedMode);  
 80026f4:	68fb      	ldr	r3, [r7, #12]
 80026f6:	6858      	ldr	r0, [r3, #4]
 80026f8:	68fb      	ldr	r3, [r7, #12]
 80026fa:	689a      	ldr	r2, [r3, #8]
 80026fc:	68fb      	ldr	r3, [r7, #12]
 80026fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002700:	6879      	ldr	r1, [r7, #4]
 8002702:	f000 f8a3 	bl	800284c <FSMC_NORSRAM_Extended_Timing_Init>
  
  /* Enable the NORSRAM device */
  __FMC_NORSRAM_ENABLE(hsram->Instance, hsram->Init.NSBank); 
 8002706:	68fb      	ldr	r3, [r7, #12]
 8002708:	681b      	ldr	r3, [r3, #0]
 800270a:	68fa      	ldr	r2, [r7, #12]
 800270c:	6892      	ldr	r2, [r2, #8]
 800270e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8002712:	68fb      	ldr	r3, [r7, #12]
 8002714:	681b      	ldr	r3, [r3, #0]
 8002716:	68fa      	ldr	r2, [r7, #12]
 8002718:	6892      	ldr	r2, [r2, #8]
 800271a:	f041 0101 	orr.w	r1, r1, #1
 800271e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  
  return HAL_OK;
 8002722:	2300      	movs	r3, #0
}
 8002724:	4618      	mov	r0, r3
 8002726:	3710      	adds	r7, #16
 8002728:	46bd      	mov	sp, r7
 800272a:	bd80      	pop	{r7, pc}

0800272c <FSMC_NORSRAM_Init>:
  * @param  Device Pointer to NORSRAM device instance
  * @param  Init Pointer to NORSRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef  FSMC_NORSRAM_Init(FSMC_NORSRAM_TypeDef *Device, FSMC_NORSRAM_InitTypeDef* Init)
{ 
 800272c:	b480      	push	{r7}
 800272e:	b085      	sub	sp, #20
 8002730:	af00      	add	r7, sp, #0
 8002732:	6078      	str	r0, [r7, #4]
 8002734:	6039      	str	r1, [r7, #0]
  uint32_t tmpr = 0U;
 8002736:	2300      	movs	r3, #0
 8002738:	60fb      	str	r3, [r7, #12]
  assert_param(IS_FSMC_WRITE_FIFO(Init->WriteFifo));
  assert_param(IS_FSMC_CONTINOUS_CLOCK(Init->ContinuousClock));
#endif /* STM32F412Zx || STM32F412Vx || STM32F413xx || STM32F423xx */
  
  /* Get the BTCR register value */
  tmpr = Device->BTCR[Init->NSBank];
 800273a:	683b      	ldr	r3, [r7, #0]
 800273c:	681a      	ldr	r2, [r3, #0]
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002744:	60fb      	str	r3, [r7, #12]

#if defined(STM32F405xx) || defined(STM32F415xx) || defined(STM32F407xx) || defined(STM32F417xx)
  /* Clear MBKEN, MUXEN, MTYP, MWID, FACCEN, BURSTEN, WAITPOL, WRAPMOD, WAITCFG, WREN,
           WAITEN, EXTMOD, ASYNCWAIT, CPSIZE and CBURSTRW bits */
  tmpr &= ((uint32_t)~(FSMC_BCR1_MBKEN     | FSMC_BCR1_MUXEN    | FSMC_BCR1_MTYP     | \
 8002746:	68fa      	ldr	r2, [r7, #12]
 8002748:	4b20      	ldr	r3, [pc, #128]	; (80027cc <FSMC_NORSRAM_Init+0xa0>)
 800274a:	4013      	ands	r3, r2
 800274c:	60fb      	str	r3, [r7, #12]
                       FSMC_BCR1_MWID      | FSMC_BCR1_FACCEN   | FSMC_BCR1_BURSTEN  | \
                       FSMC_BCR1_WAITPOL   | FSMC_BCR1_WRAPMOD  | FSMC_BCR1_WAITCFG  | \
                       FSMC_BCR1_WREN      | FSMC_BCR1_WAITEN   | FSMC_BCR1_EXTMOD   | \
                       FSMC_BCR1_ASYNCWAIT | FSMC_BCR1_CPSIZE   | FSMC_BCR1_CBURSTRW));
  /* Set NORSRAM device control parameters */
  tmpr |= (uint32_t)(Init->DataAddressMux       |\
 800274e:	683b      	ldr	r3, [r7, #0]
 8002750:	685a      	ldr	r2, [r3, #4]
                     Init->MemoryType           |\
 8002752:	683b      	ldr	r3, [r7, #0]
 8002754:	689b      	ldr	r3, [r3, #8]
  tmpr |= (uint32_t)(Init->DataAddressMux       |\
 8002756:	431a      	orrs	r2, r3
                     Init->MemoryDataWidth      |\
 8002758:	683b      	ldr	r3, [r7, #0]
 800275a:	68db      	ldr	r3, [r3, #12]
                     Init->MemoryType           |\
 800275c:	431a      	orrs	r2, r3
                     Init->BurstAccessMode      |\
 800275e:	683b      	ldr	r3, [r7, #0]
 8002760:	691b      	ldr	r3, [r3, #16]
                     Init->MemoryDataWidth      |\
 8002762:	431a      	orrs	r2, r3
                     Init->WaitSignalPolarity   |\
 8002764:	683b      	ldr	r3, [r7, #0]
 8002766:	695b      	ldr	r3, [r3, #20]
                     Init->BurstAccessMode      |\
 8002768:	431a      	orrs	r2, r3
                     Init->WrapMode             |\
 800276a:	683b      	ldr	r3, [r7, #0]
 800276c:	699b      	ldr	r3, [r3, #24]
                     Init->WaitSignalPolarity   |\
 800276e:	431a      	orrs	r2, r3
                     Init->WaitSignalActive     |\
 8002770:	683b      	ldr	r3, [r7, #0]
 8002772:	69db      	ldr	r3, [r3, #28]
                     Init->WrapMode             |\
 8002774:	431a      	orrs	r2, r3
                     Init->WriteOperation       |\
 8002776:	683b      	ldr	r3, [r7, #0]
 8002778:	6a1b      	ldr	r3, [r3, #32]
                     Init->WaitSignalActive     |\
 800277a:	431a      	orrs	r2, r3
                     Init->WaitSignal           |\
 800277c:	683b      	ldr	r3, [r7, #0]
 800277e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
                     Init->WriteOperation       |\
 8002780:	431a      	orrs	r2, r3
                     Init->ExtendedMode         |\
 8002782:	683b      	ldr	r3, [r7, #0]
 8002784:	6a9b      	ldr	r3, [r3, #40]	; 0x28
                     Init->WaitSignal           |\
 8002786:	431a      	orrs	r2, r3
                     Init->AsynchronousWait     |\
 8002788:	683b      	ldr	r3, [r7, #0]
 800278a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
                     Init->ExtendedMode         |\
 800278c:	431a      	orrs	r2, r3
                     Init->PageSize             |\
 800278e:	683b      	ldr	r3, [r7, #0]
 8002790:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
                     Init->AsynchronousWait     |\
 8002792:	431a      	orrs	r2, r3
                     Init->WriteBurst
 8002794:	683b      	ldr	r3, [r7, #0]
 8002796:	6b1b      	ldr	r3, [r3, #48]	; 0x30
                     Init->PageSize             |\
 8002798:	4313      	orrs	r3, r2
  tmpr |= (uint32_t)(Init->DataAddressMux       |\
 800279a:	68fa      	ldr	r2, [r7, #12]
 800279c:	4313      	orrs	r3, r2
 800279e:	60fb      	str	r3, [r7, #12]
                     Init->ContinuousClock      |\
                     Init->PageSize             |\
                     Init->WriteFifo);
#endif /* STM32F405xx || STM32F415xx || STM32F407xx || STM32F417xx */ 
            
  if(Init->MemoryType == FSMC_MEMORY_TYPE_NOR)
 80027a0:	683b      	ldr	r3, [r7, #0]
 80027a2:	689b      	ldr	r3, [r3, #8]
 80027a4:	2b08      	cmp	r3, #8
 80027a6:	d103      	bne.n	80027b0 <FSMC_NORSRAM_Init+0x84>
  {
    tmpr |= (uint32_t)FSMC_NORSRAM_FLASH_ACCESS_ENABLE;
 80027a8:	68fb      	ldr	r3, [r7, #12]
 80027aa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80027ae:	60fb      	str	r3, [r7, #12]
  }

  Device->BTCR[Init->NSBank] = tmpr;
 80027b0:	683b      	ldr	r3, [r7, #0]
 80027b2:	681a      	ldr	r2, [r3, #0]
 80027b4:	687b      	ldr	r3, [r7, #4]
 80027b6:	68f9      	ldr	r1, [r7, #12]
 80027b8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  {
    Device->BTCR[FSMC_NORSRAM_BANK1] |= (uint32_t)(Init->WriteFifo);
  }
#endif /* STM32F412Zx || STM32F412Vx || STM32F412Rx || STM32F413xx || STM32F423xx */

  return HAL_OK;
 80027bc:	2300      	movs	r3, #0
}
 80027be:	4618      	mov	r0, r3
 80027c0:	3714      	adds	r7, #20
 80027c2:	46bd      	mov	sp, r7
 80027c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027c8:	4770      	bx	lr
 80027ca:	bf00      	nop
 80027cc:	fff00080 	.word	0xfff00080

080027d0 <FSMC_NORSRAM_Timing_Init>:
  * @param  Timing Pointer to NORSRAM Timing structure
  * @param  Bank NORSRAM bank number  
  * @retval HAL status
  */
HAL_StatusTypeDef FSMC_NORSRAM_Timing_Init(FSMC_NORSRAM_TypeDef *Device, FSMC_NORSRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 80027d0:	b480      	push	{r7}
 80027d2:	b087      	sub	sp, #28
 80027d4:	af00      	add	r7, sp, #0
 80027d6:	60f8      	str	r0, [r7, #12]
 80027d8:	60b9      	str	r1, [r7, #8]
 80027da:	607a      	str	r2, [r7, #4]
  uint32_t tmpr = 0U;
 80027dc:	2300      	movs	r3, #0
 80027de:	617b      	str	r3, [r7, #20]
  assert_param(IS_FSMC_DATA_LATENCY(Timing->DataLatency));
  assert_param(IS_FSMC_ACCESS_MODE(Timing->AccessMode));
  assert_param(IS_FSMC_NORSRAM_BANK(Bank));
  
  /* Get the BTCR register value */
  tmpr = Device->BTCR[Bank + 1U];
 80027e0:	687b      	ldr	r3, [r7, #4]
 80027e2:	1c5a      	adds	r2, r3, #1
 80027e4:	68fb      	ldr	r3, [r7, #12]
 80027e6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80027ea:	617b      	str	r3, [r7, #20]

  /* Clear ADDSET, ADDHLD, DATAST, BUSTURN, CLKDIV, DATLAT and ACCMOD bits */
  tmpr &= ((uint32_t)~(FSMC_BTR1_ADDSET  | FSMC_BTR1_ADDHLD | FSMC_BTR1_DATAST | \
 80027ec:	697b      	ldr	r3, [r7, #20]
 80027ee:	f003 4340 	and.w	r3, r3, #3221225472	; 0xc0000000
 80027f2:	617b      	str	r3, [r7, #20]
                       FSMC_BTR1_BUSTURN | FSMC_BTR1_CLKDIV | FSMC_BTR1_DATLAT | \
                       FSMC_BTR1_ACCMOD));
  
  /* Set FSMC_NORSRAM device timing parameters */  
  tmpr |= (uint32_t)(Timing->AddressSetupTime                  |\
 80027f4:	68bb      	ldr	r3, [r7, #8]
 80027f6:	681a      	ldr	r2, [r3, #0]
                    ((Timing->AddressHoldTime) << 4U)          |\
 80027f8:	68bb      	ldr	r3, [r7, #8]
 80027fa:	685b      	ldr	r3, [r3, #4]
 80027fc:	011b      	lsls	r3, r3, #4
  tmpr |= (uint32_t)(Timing->AddressSetupTime                  |\
 80027fe:	431a      	orrs	r2, r3
                    ((Timing->DataSetupTime) << 8U)            |\
 8002800:	68bb      	ldr	r3, [r7, #8]
 8002802:	689b      	ldr	r3, [r3, #8]
 8002804:	021b      	lsls	r3, r3, #8
                    ((Timing->AddressHoldTime) << 4U)          |\
 8002806:	431a      	orrs	r2, r3
                    ((Timing->BusTurnAroundDuration) << 16U)   |\
 8002808:	68bb      	ldr	r3, [r7, #8]
 800280a:	68db      	ldr	r3, [r3, #12]
 800280c:	041b      	lsls	r3, r3, #16
                    ((Timing->DataSetupTime) << 8U)            |\
 800280e:	431a      	orrs	r2, r3
                    (((Timing->CLKDivision)-1U) << 20U)        |\
 8002810:	68bb      	ldr	r3, [r7, #8]
 8002812:	691b      	ldr	r3, [r3, #16]
 8002814:	3b01      	subs	r3, #1
 8002816:	051b      	lsls	r3, r3, #20
                    ((Timing->BusTurnAroundDuration) << 16U)   |\
 8002818:	431a      	orrs	r2, r3
                    (((Timing->DataLatency)-2U) << 24U)        |\
 800281a:	68bb      	ldr	r3, [r7, #8]
 800281c:	695b      	ldr	r3, [r3, #20]
 800281e:	3b02      	subs	r3, #2
 8002820:	061b      	lsls	r3, r3, #24
                    (((Timing->CLKDivision)-1U) << 20U)        |\
 8002822:	431a      	orrs	r2, r3
                    (Timing->AccessMode));
 8002824:	68bb      	ldr	r3, [r7, #8]
 8002826:	699b      	ldr	r3, [r3, #24]
  tmpr |= (uint32_t)(Timing->AddressSetupTime                  |\
 8002828:	4313      	orrs	r3, r2
 800282a:	697a      	ldr	r2, [r7, #20]
 800282c:	4313      	orrs	r3, r2
 800282e:	617b      	str	r3, [r7, #20]
  
  Device->BTCR[Bank + 1] = tmpr; 
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	1c5a      	adds	r2, r3, #1
 8002834:	68fb      	ldr	r3, [r7, #12]
 8002836:	6979      	ldr	r1, [r7, #20]
 8002838:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    tmpr |= (uint32_t)(((Timing->CLKDivision)-1U) << 20U);
    Device->BTCR[FSMC_NORSRAM_BANK1 + 1U] = tmpr;
  }
#endif /* STM32F412Zx || STM32F412Vx || STM32F412Rx || STM32F413xx || STM32F423xx */

  return HAL_OK;
 800283c:	2300      	movs	r3, #0
}
 800283e:	4618      	mov	r0, r3
 8002840:	371c      	adds	r7, #28
 8002842:	46bd      	mov	sp, r7
 8002844:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002848:	4770      	bx	lr
	...

0800284c <FSMC_NORSRAM_Extended_Timing_Init>:
  * @param  Timing Pointer to NORSRAM Timing structure
  * @param  Bank NORSRAM bank number  
  * @retval HAL status
  */
HAL_StatusTypeDef  FSMC_NORSRAM_Extended_Timing_Init(FSMC_NORSRAM_EXTENDED_TypeDef *Device, FSMC_NORSRAM_TimingTypeDef *Timing, uint32_t Bank, uint32_t ExtendedMode)
{
 800284c:	b480      	push	{r7}
 800284e:	b087      	sub	sp, #28
 8002850:	af00      	add	r7, sp, #0
 8002852:	60f8      	str	r0, [r7, #12]
 8002854:	60b9      	str	r1, [r7, #8]
 8002856:	607a      	str	r2, [r7, #4]
 8002858:	603b      	str	r3, [r7, #0]
  uint32_t tmpr = 0U;
 800285a:	2300      	movs	r3, #0
 800285c:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_FSMC_EXTENDED_MODE(ExtendedMode));

  /* Set NORSRAM device timing register for write configuration, if extended mode is used */
  if(ExtendedMode == FSMC_EXTENDED_MODE_ENABLE)
 800285e:	683b      	ldr	r3, [r7, #0]
 8002860:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8002864:	d122      	bne.n	80028ac <FSMC_NORSRAM_Extended_Timing_Init+0x60>
    assert_param(IS_FSMC_TURNAROUND_TIME(Timing->BusTurnAroundDuration));
    assert_param(IS_FSMC_ACCESS_MODE(Timing->AccessMode));
    assert_param(IS_FSMC_NORSRAM_BANK(Bank));
  
    /* Get the BWTR register value */
    tmpr = Device->BWTR[Bank];
 8002866:	68fb      	ldr	r3, [r7, #12]
 8002868:	687a      	ldr	r2, [r7, #4]
 800286a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800286e:	617b      	str	r3, [r7, #20]
    
    /* Clear ADDSET, ADDHLD, DATAST, BUSTURN and ACCMOD bits */
    tmpr &= ((uint32_t)~(FSMC_BWTR1_ADDSET  | FSMC_BWTR1_ADDHLD | FSMC_BWTR1_DATAST | \
 8002870:	697a      	ldr	r2, [r7, #20]
 8002872:	4b15      	ldr	r3, [pc, #84]	; (80028c8 <FSMC_NORSRAM_Extended_Timing_Init+0x7c>)
 8002874:	4013      	ands	r3, r2
 8002876:	617b      	str	r3, [r7, #20]
                         FSMC_BWTR1_BUSTURN | FSMC_BWTR1_ACCMOD));

    tmpr |= (uint32_t)(Timing->AddressSetupTime                  |\
 8002878:	68bb      	ldr	r3, [r7, #8]
 800287a:	681a      	ldr	r2, [r3, #0]
                      ((Timing->AddressHoldTime) << 4U)          |\
 800287c:	68bb      	ldr	r3, [r7, #8]
 800287e:	685b      	ldr	r3, [r3, #4]
 8002880:	011b      	lsls	r3, r3, #4
    tmpr |= (uint32_t)(Timing->AddressSetupTime                  |\
 8002882:	431a      	orrs	r2, r3
                      ((Timing->DataSetupTime) << 8U)            |\
 8002884:	68bb      	ldr	r3, [r7, #8]
 8002886:	689b      	ldr	r3, [r3, #8]
 8002888:	021b      	lsls	r3, r3, #8
                      ((Timing->AddressHoldTime) << 4U)          |\
 800288a:	431a      	orrs	r2, r3
                      ((Timing->BusTurnAroundDuration) << 16U)   |\
 800288c:	68bb      	ldr	r3, [r7, #8]
 800288e:	68db      	ldr	r3, [r3, #12]
 8002890:	041b      	lsls	r3, r3, #16
                      ((Timing->DataSetupTime) << 8U)            |\
 8002892:	431a      	orrs	r2, r3
                      (Timing->AccessMode));
 8002894:	68bb      	ldr	r3, [r7, #8]
 8002896:	699b      	ldr	r3, [r3, #24]
                      ((Timing->BusTurnAroundDuration) << 16U)   |\
 8002898:	4313      	orrs	r3, r2
    tmpr |= (uint32_t)(Timing->AddressSetupTime                  |\
 800289a:	697a      	ldr	r2, [r7, #20]
 800289c:	4313      	orrs	r3, r2
 800289e:	617b      	str	r3, [r7, #20]
    
    Device->BWTR[Bank] = tmpr;
 80028a0:	68fb      	ldr	r3, [r7, #12]
 80028a2:	687a      	ldr	r2, [r7, #4]
 80028a4:	6979      	ldr	r1, [r7, #20]
 80028a6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80028aa:	e005      	b.n	80028b8 <FSMC_NORSRAM_Extended_Timing_Init+0x6c>
  }
  else                                        
  {
    Device->BWTR[Bank] = 0x0FFFFFFFU;
 80028ac:	68fb      	ldr	r3, [r7, #12]
 80028ae:	687a      	ldr	r2, [r7, #4]
 80028b0:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
 80028b4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  }   
  
  return HAL_OK;  
 80028b8:	2300      	movs	r3, #0
}
 80028ba:	4618      	mov	r0, r3
 80028bc:	371c      	adds	r7, #28
 80028be:	46bd      	mov	sp, r7
 80028c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028c4:	4770      	bx	lr
 80028c6:	bf00      	nop
 80028c8:	cff00000 	.word	0xcff00000

080028cc <TEXT_Callback>:
 80028cc:	b530      	push	{r4, r5, lr}
 80028ce:	6845      	ldr	r5, [r0, #4]
 80028d0:	4604      	mov	r4, r0
 80028d2:	b085      	sub	sp, #20
 80028d4:	4628      	mov	r0, r5
 80028d6:	4621      	mov	r1, r4
 80028d8:	f009 f991 	bl	800bbfe <WIDGET_HandleActive>
 80028dc:	2800      	cmp	r0, #0
 80028de:	d056      	beq.n	800298e <TEXT_Callback+0xc2>
 80028e0:	6823      	ldr	r3, [r4, #0]
 80028e2:	2b0f      	cmp	r3, #15
 80028e4:	d01e      	beq.n	8002924 <TEXT_Callback+0x58>
 80028e6:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 80028ea:	d00e      	beq.n	800290a <TEXT_Callback+0x3e>
 80028ec:	2b0b      	cmp	r3, #11
 80028ee:	d14b      	bne.n	8002988 <TEXT_Callback+0xbc>
 80028f0:	4628      	mov	r0, r5
 80028f2:	f008 fdb9 	bl	800b468 <GUI_ALLOC_LockH>
 80028f6:	ad04      	add	r5, sp, #16
 80028f8:	f845 0d08 	str.w	r0, [r5, #-8]!
 80028fc:	3044      	adds	r0, #68	; 0x44
 80028fe:	f008 ff83 	bl	800b808 <GUI_ALLOC_FreePtr>
 8002902:	4628      	mov	r0, r5
 8002904:	f008 fdbe 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002908:	e03e      	b.n	8002988 <TEXT_Callback+0xbc>
 800290a:	68e3      	ldr	r3, [r4, #12]
 800290c:	b12b      	cbz	r3, 800291a <TEXT_Callback+0x4e>
 800290e:	7a1b      	ldrb	r3, [r3, #8]
 8002910:	2b00      	cmp	r3, #0
 8002912:	bf0c      	ite	eq
 8002914:	2102      	moveq	r1, #2
 8002916:	2101      	movne	r1, #1
 8002918:	e000      	b.n	800291c <TEXT_Callback+0x50>
 800291a:	2103      	movs	r1, #3
 800291c:	4628      	mov	r0, r5
 800291e:	f002 f972 	bl	8004c06 <WM_NotifyParent>
 8002922:	e031      	b.n	8002988 <TEXT_Callback+0xbc>
 8002924:	4628      	mov	r0, r5
 8002926:	f008 fd9f 	bl	800b468 <GUI_ALLOC_LockH>
 800292a:	9000      	str	r0, [sp, #0]
 800292c:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800292e:	f006 fa1f 	bl	8008d70 <LCD_SetColor>
 8002932:	9b00      	ldr	r3, [sp, #0]
 8002934:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002936:	f008 f93b 	bl	800abb0 <GUI_SetFont>
 800293a:	4628      	mov	r0, r5
 800293c:	f001 fd1e 	bl	800437c <WM_GetHasTrans>
 8002940:	b928      	cbnz	r0, 800294e <TEXT_Callback+0x82>
 8002942:	9b00      	ldr	r3, [sp, #0]
 8002944:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8002946:	f006 fa0b 	bl	8008d60 <LCD_SetBkColor>
 800294a:	f007 ff19 	bl	800a780 <GUI_Clear>
 800294e:	9b00      	ldr	r3, [sp, #0]
 8002950:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002952:	b1ab      	cbz	r3, 8002980 <TEXT_Callback+0xb4>
 8002954:	2002      	movs	r0, #2
 8002956:	f008 f961 	bl	800ac1c <GUI_SetTextMode>
 800295a:	a802      	add	r0, sp, #8
 800295c:	f001 fed6 	bl	800470c <WM_GetClientRect>
 8002960:	9b00      	ldr	r3, [sp, #0]
 8002962:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8002964:	f008 fd80 	bl	800b468 <GUI_ALLOC_LockH>
 8002968:	9b00      	ldr	r3, [sp, #0]
 800296a:	9001      	str	r0, [sp, #4]
 800296c:	f9b3 2048 	ldrsh.w	r2, [r3, #72]	; 0x48
 8002970:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8002974:	a902      	add	r1, sp, #8
 8002976:	f007 fd10 	bl	800a39a <GUI_DispStringInRectWrap>
 800297a:	a801      	add	r0, sp, #4
 800297c:	f008 fd82 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002980:	4668      	mov	r0, sp
 8002982:	f008 fd7f 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002986:	e002      	b.n	800298e <TEXT_Callback+0xc2>
 8002988:	4620      	mov	r0, r4
 800298a:	f003 fbb3 	bl	80060f4 <WM_DefaultProc>
 800298e:	b005      	add	sp, #20
 8002990:	bd30      	pop	{r4, r5, pc}
	...

08002994 <TEXT_CreateUser>:
 8002994:	b570      	push	{r4, r5, r6, lr}
 8002996:	b086      	sub	sp, #24
 8002998:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800299a:	9500      	str	r5, [sp, #0]
 800299c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800299e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80029a0:	f045 0501 	orr.w	r5, r5, #1
 80029a4:	9501      	str	r5, [sp, #4]
 80029a6:	4d1a      	ldr	r5, [pc, #104]	; (8002a10 <TEXT_CreateUser+0x7c>)
 80029a8:	9502      	str	r5, [sp, #8]
 80029aa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80029ac:	3520      	adds	r5, #32
 80029ae:	9503      	str	r5, [sp, #12]
 80029b0:	f002 ffa0 	bl	80058f4 <WM_CreateWindowAsChild>
 80029b4:	4605      	mov	r5, r0
 80029b6:	b340      	cbz	r0, 8002a0a <TEXT_CreateUser+0x76>
 80029b8:	b18c      	cbz	r4, 80029de <TEXT_CreateUser+0x4a>
 80029ba:	4620      	mov	r0, r4
 80029bc:	f7fd fc04 	bl	80001c8 <strlen>
 80029c0:	3001      	adds	r0, #1
 80029c2:	f008 ff4b 	bl	800b85c <GUI_ALLOC_AllocZero>
 80029c6:	4606      	mov	r6, r0
 80029c8:	b150      	cbz	r0, 80029e0 <TEXT_CreateUser+0x4c>
 80029ca:	f008 fd4d 	bl	800b468 <GUI_ALLOC_LockH>
 80029ce:	4621      	mov	r1, r4
 80029d0:	9005      	str	r0, [sp, #20]
 80029d2:	f00d f98b 	bl	800fcec <strcpy>
 80029d6:	a805      	add	r0, sp, #20
 80029d8:	f008 fd54 	bl	800b484 <GUI_ALLOC_UnlockH>
 80029dc:	e000      	b.n	80029e0 <TEXT_CreateUser+0x4c>
 80029de:	4626      	mov	r6, r4
 80029e0:	4628      	mov	r0, r5
 80029e2:	f008 fd41 	bl	800b468 <GUI_ALLOC_LockH>
 80029e6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80029e8:	9005      	str	r0, [sp, #20]
 80029ea:	2200      	movs	r2, #0
 80029ec:	f009 f8c2 	bl	800bb74 <WIDGET__Init>
 80029f0:	9c05      	ldr	r4, [sp, #20]
 80029f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80029f4:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 80029f8:	4b06      	ldr	r3, [pc, #24]	; (8002a14 <TEXT_CreateUser+0x80>)
 80029fa:	6466      	str	r6, [r4, #68]	; 0x44
 80029fc:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80029fe:	3434      	adds	r4, #52	; 0x34
 8002a00:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8002a04:	a805      	add	r0, sp, #20
 8002a06:	f008 fd3d 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002a0a:	4628      	mov	r0, r5
 8002a0c:	b006      	add	sp, #24
 8002a0e:	bd70      	pop	{r4, r5, r6, pc}
 8002a10:	080028cd 	.word	0x080028cd
 8002a14:	2000000c 	.word	0x2000000c

08002a18 <TEXT_CreateIndirect>:
 8002a18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002a1a:	b087      	sub	sp, #28
 8002a1c:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8002a20:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8002a24:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8002a28:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8002a2c:	9100      	str	r1, [sp, #0]
 8002a2e:	2102      	movs	r1, #2
 8002a30:	9101      	str	r1, [sp, #4]
 8002a32:	8a41      	ldrh	r1, [r0, #18]
 8002a34:	9102      	str	r1, [sp, #8]
 8002a36:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8002a3a:	9103      	str	r1, [sp, #12]
 8002a3c:	6844      	ldr	r4, [r0, #4]
 8002a3e:	9404      	str	r4, [sp, #16]
 8002a40:	6984      	ldr	r4, [r0, #24]
 8002a42:	9405      	str	r4, [sp, #20]
 8002a44:	eb0e 0002 	add.w	r0, lr, r2
 8002a48:	18f9      	adds	r1, r7, r3
 8002a4a:	4632      	mov	r2, r6
 8002a4c:	462b      	mov	r3, r5
 8002a4e:	f7ff ffa1 	bl	8002994 <TEXT_CreateUser>
 8002a52:	b007      	add	sp, #28
 8002a54:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002a56 <TEXT_SetFont>:
 8002a56:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002a58:	460c      	mov	r4, r1
 8002a5a:	4605      	mov	r5, r0
 8002a5c:	b160      	cbz	r0, 8002a78 <TEXT_SetFont+0x22>
 8002a5e:	f008 fd03 	bl	800b468 <GUI_ALLOC_LockH>
 8002a62:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8002a64:	9001      	str	r0, [sp, #4]
 8002a66:	42a2      	cmp	r2, r4
 8002a68:	d003      	beq.n	8002a72 <TEXT_SetFont+0x1c>
 8002a6a:	6344      	str	r4, [r0, #52]	; 0x34
 8002a6c:	4628      	mov	r0, r5
 8002a6e:	f002 ff13 	bl	8005898 <WM_InvalidateWindow>
 8002a72:	a801      	add	r0, sp, #4
 8002a74:	f008 fd06 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002a78:	b003      	add	sp, #12
 8002a7a:	bd30      	pop	{r4, r5, pc}

08002a7c <TEXT_SetText>:
 8002a7c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002a7e:	460c      	mov	r4, r1
 8002a80:	4605      	mov	r5, r0
 8002a82:	b300      	cbz	r0, 8002ac6 <TEXT_SetText+0x4a>
 8002a84:	f008 fcf0 	bl	800b468 <GUI_ALLOC_LockH>
 8002a88:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8002a8a:	9000      	str	r0, [sp, #0]
 8002a8c:	4668      	mov	r0, sp
 8002a8e:	9301      	str	r3, [sp, #4]
 8002a90:	f008 fcf8 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002a94:	4621      	mov	r1, r4
 8002a96:	a801      	add	r0, sp, #4
 8002a98:	f006 fa66 	bl	8008f68 <GUI__SetText>
 8002a9c:	f1d0 0401 	rsbs	r4, r0, #1
 8002aa0:	bf38      	it	cc
 8002aa2:	2400      	movcc	r4, #0
 8002aa4:	b984      	cbnz	r4, 8002ac8 <TEXT_SetText+0x4c>
 8002aa6:	4628      	mov	r0, r5
 8002aa8:	f008 fcde 	bl	800b468 <GUI_ALLOC_LockH>
 8002aac:	9a01      	ldr	r2, [sp, #4]
 8002aae:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8002ab0:	9000      	str	r0, [sp, #0]
 8002ab2:	4291      	cmp	r1, r2
 8002ab4:	bf18      	it	ne
 8002ab6:	6442      	strne	r2, [r0, #68]	; 0x44
 8002ab8:	4668      	mov	r0, sp
 8002aba:	f008 fce3 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002abe:	4628      	mov	r0, r5
 8002ac0:	f002 feea 	bl	8005898 <WM_InvalidateWindow>
 8002ac4:	e000      	b.n	8002ac8 <TEXT_SetText+0x4c>
 8002ac6:	2401      	movs	r4, #1
 8002ac8:	4620      	mov	r0, r4
 8002aca:	b003      	add	sp, #12
 8002acc:	bd30      	pop	{r4, r5, pc}

08002ace <PROGBAR_Callback>:
 8002ace:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002ad0:	6845      	ldr	r5, [r0, #4]
 8002ad2:	4604      	mov	r4, r0
 8002ad4:	4621      	mov	r1, r4
 8002ad6:	4628      	mov	r0, r5
 8002ad8:	f009 f891 	bl	800bbfe <WIDGET_HandleActive>
 8002adc:	b310      	cbz	r0, 8002b24 <PROGBAR_Callback+0x56>
 8002ade:	6823      	ldr	r3, [r4, #0]
 8002ae0:	2b0b      	cmp	r3, #11
 8002ae2:	d010      	beq.n	8002b06 <PROGBAR_Callback+0x38>
 8002ae4:	2b0f      	cmp	r3, #15
 8002ae6:	d11a      	bne.n	8002b1e <PROGBAR_Callback+0x50>
 8002ae8:	4628      	mov	r0, r5
 8002aea:	f008 fcbd 	bl	800b468 <GUI_ALLOC_LockH>
 8002aee:	ab02      	add	r3, sp, #8
 8002af0:	f843 0d04 	str.w	r0, [r3, #-4]!
 8002af4:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8002af6:	6814      	ldr	r4, [r2, #0]
 8002af8:	4618      	mov	r0, r3
 8002afa:	f008 fcc3 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002afe:	b18c      	cbz	r4, 8002b24 <PROGBAR_Callback+0x56>
 8002b00:	4628      	mov	r0, r5
 8002b02:	47a0      	blx	r4
 8002b04:	e00e      	b.n	8002b24 <PROGBAR_Callback+0x56>
 8002b06:	4628      	mov	r0, r5
 8002b08:	f008 fcae 	bl	800b468 <GUI_ALLOC_LockH>
 8002b0c:	ad02      	add	r5, sp, #8
 8002b0e:	f845 0d04 	str.w	r0, [r5, #-4]!
 8002b12:	3038      	adds	r0, #56	; 0x38
 8002b14:	f008 fe78 	bl	800b808 <GUI_ALLOC_FreePtr>
 8002b18:	4628      	mov	r0, r5
 8002b1a:	f008 fcb3 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002b1e:	4620      	mov	r0, r4
 8002b20:	f003 fae8 	bl	80060f4 <WM_DefaultProc>
 8002b24:	b003      	add	sp, #12
 8002b26:	bd30      	pop	{r4, r5, pc}

08002b28 <_SetValue>:
 8002b28:	b513      	push	{r0, r1, r4, lr}
 8002b2a:	ab02      	add	r3, sp, #8
 8002b2c:	6342      	str	r2, [r0, #52]	; 0x34
 8002b2e:	f843 1d04 	str.w	r1, [r3, #-4]!
 8002b32:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8002b34:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002b36:	1a52      	subs	r2, r2, r1
 8002b38:	2464      	movs	r4, #100	; 0x64
 8002b3a:	4362      	muls	r2, r4
 8002b3c:	1a40      	subs	r0, r0, r1
 8002b3e:	fb92 f0f0 	sdiv	r0, r2, r0
 8002b42:	4619      	mov	r1, r3
 8002b44:	f006 fc7c 	bl	8009440 <GUI_AddDecMin>
 8002b48:	9b01      	ldr	r3, [sp, #4]
 8002b4a:	1c5a      	adds	r2, r3, #1
 8002b4c:	9201      	str	r2, [sp, #4]
 8002b4e:	2225      	movs	r2, #37	; 0x25
 8002b50:	701a      	strb	r2, [r3, #0]
 8002b52:	9b01      	ldr	r3, [sp, #4]
 8002b54:	2200      	movs	r2, #0
 8002b56:	701a      	strb	r2, [r3, #0]
 8002b58:	b002      	add	sp, #8
 8002b5a:	bd10      	pop	{r4, pc}

08002b5c <PROGBAR__GetTextLocked>:
 8002b5c:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8002b5e:	f008 bc83 	b.w	800b468 <GUI_ALLOC_LockH>

08002b62 <PROGBAR__GetTextRect>:
 8002b62:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002b66:	f9b0 3000 	ldrsh.w	r3, [r0]
 8002b6a:	f9b0 7004 	ldrsh.w	r7, [r0, #4]
 8002b6e:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8002b72:	1aff      	subs	r7, r7, r3
 8002b74:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8002b78:	4604      	mov	r4, r0
 8002b7a:	4610      	mov	r0, r2
 8002b7c:	ebc3 0808 	rsb	r8, r3, r8
 8002b80:	460d      	mov	r5, r1
 8002b82:	f007 fca9 	bl	800a4d8 <GUI_GetStringDistX>
 8002b86:	4606      	mov	r6, r0
 8002b88:	f007 ff40 	bl	800aa0c <GUI_GetFontSizeY>
 8002b8c:	f8b4 3040 	ldrh.w	r3, [r4, #64]	; 0x40
 8002b90:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8002b92:	f003 0303 	and.w	r3, r3, #3
 8002b96:	2b01      	cmp	r3, #1
 8002b98:	f107 0701 	add.w	r7, r7, #1
 8002b9c:	f108 0801 	add.w	r8, r8, #1
 8002ba0:	6812      	ldr	r2, [r2, #0]
 8002ba2:	d006      	beq.n	8002bb2 <PROGBAR__GetTextRect+0x50>
 8002ba4:	2b02      	cmp	r3, #2
 8002ba6:	d109      	bne.n	8002bbc <PROGBAR__GetTextRect+0x5a>
 8002ba8:	1bbf      	subs	r7, r7, r6
 8002baa:	fb97 f3f3 	sdiv	r3, r7, r3
 8002bae:	802b      	strh	r3, [r5, #0]
 8002bb0:	e005      	b.n	8002bbe <PROGBAR__GetTextRect+0x5c>
 8002bb2:	43d2      	mvns	r2, r2
 8002bb4:	4417      	add	r7, r2
 8002bb6:	1bbf      	subs	r7, r7, r6
 8002bb8:	802f      	strh	r7, [r5, #0]
 8002bba:	e000      	b.n	8002bbe <PROGBAR__GetTextRect+0x5c>
 8002bbc:	802a      	strh	r2, [r5, #0]
 8002bbe:	8fa2      	ldrh	r2, [r4, #60]	; 0x3c
 8002bc0:	882b      	ldrh	r3, [r5, #0]
 8002bc2:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 8002bc4:	441a      	add	r2, r3
 8002bc6:	ebc0 0808 	rsb	r8, r0, r8
 8002bca:	2302      	movs	r3, #2
 8002bcc:	fb98 f3f3 	sdiv	r3, r8, r3
 8002bd0:	b292      	uxth	r2, r2
 8002bd2:	440b      	add	r3, r1
 8002bd4:	b29b      	uxth	r3, r3
 8002bd6:	802a      	strh	r2, [r5, #0]
 8002bd8:	3801      	subs	r0, #1
 8002bda:	3a01      	subs	r2, #1
 8002bdc:	806b      	strh	r3, [r5, #2]
 8002bde:	4416      	add	r6, r2
 8002be0:	4403      	add	r3, r0
 8002be2:	80ae      	strh	r6, [r5, #4]
 8002be4:	80eb      	strh	r3, [r5, #6]
 8002be6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08002bea <PROGBAR__Value2Pos>:
 8002bea:	b570      	push	{r4, r5, r6, lr}
 8002bec:	f890 3068 	ldrb.w	r3, [r0, #104]	; 0x68
 8002bf0:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8002bf2:	f013 0601 	ands.w	r6, r3, #1
 8002bf6:	bf15      	itete	ne
 8002bf8:	f9b0 3002 	ldrshne.w	r3, [r0, #2]
 8002bfc:	f9b0 3000 	ldrsheq.w	r3, [r0]
 8002c00:	f9b0 5006 	ldrshne.w	r5, [r0, #6]
 8002c04:	f9b0 5004 	ldrsheq.w	r5, [r0, #4]
 8002c08:	6814      	ldr	r4, [r2, #0]
 8002c0a:	6c82      	ldr	r2, [r0, #72]	; 0x48
 8002c0c:	1aed      	subs	r5, r5, r3
 8002c0e:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8002c10:	3501      	adds	r5, #1
 8002c12:	4299      	cmp	r1, r3
 8002c14:	bfb8      	it	lt
 8002c16:	4619      	movlt	r1, r3
 8002c18:	4291      	cmp	r1, r2
 8002c1a:	bfa8      	it	ge
 8002c1c:	4611      	movge	r1, r2
 8002c1e:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 8002c22:	b10e      	cbz	r6, 8002c28 <PROGBAR__Value2Pos+0x3e>
 8002c24:	1a51      	subs	r1, r2, r1
 8002c26:	e000      	b.n	8002c2a <PROGBAR__Value2Pos+0x40>
 8002c28:	1ac9      	subs	r1, r1, r3
 8002c2a:	4369      	muls	r1, r5
 8002c2c:	1ad3      	subs	r3, r2, r3
 8002c2e:	fb91 f0f3 	sdiv	r0, r1, r3
 8002c32:	4420      	add	r0, r4
 8002c34:	bd70      	pop	{r4, r5, r6, pc}
	...

08002c38 <PROGBAR_CreateUser>:
 8002c38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002c3c:	b087      	sub	sp, #28
 8002c3e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8002c40:	9400      	str	r4, [sp, #0]
 8002c42:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8002c44:	9401      	str	r4, [sp, #4]
 8002c46:	4c27      	ldr	r4, [pc, #156]	; (8002ce4 <PROGBAR_CreateUser+0xac>)
 8002c48:	9402      	str	r4, [sp, #8]
 8002c4a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8002c4c:	3440      	adds	r4, #64	; 0x40
 8002c4e:	9403      	str	r4, [sp, #12]
 8002c50:	f002 fe50 	bl	80058f4 <WM_CreateWindowAsChild>
 8002c54:	4607      	mov	r7, r0
 8002c56:	2800      	cmp	r0, #0
 8002c58:	d040      	beq.n	8002cdc <PROGBAR_CreateUser+0xa4>
 8002c5a:	2005      	movs	r0, #5
 8002c5c:	f008 fdfe 	bl	800b85c <GUI_ALLOC_AllocZero>
 8002c60:	4680      	mov	r8, r0
 8002c62:	2800      	cmp	r0, #0
 8002c64:	d03a      	beq.n	8002cdc <PROGBAR_CreateUser+0xa4>
 8002c66:	4638      	mov	r0, r7
 8002c68:	f008 fbfe 	bl	800b468 <GUI_ALLOC_LockH>
 8002c6c:	2200      	movs	r2, #0
 8002c6e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8002c70:	9004      	str	r0, [sp, #16]
 8002c72:	f8df 907c 	ldr.w	r9, [pc, #124]	; 8002cf0 <PROGBAR_CreateUser+0xb8>
 8002c76:	4d1c      	ldr	r5, [pc, #112]	; (8002ce8 <PROGBAR_CreateUser+0xb0>)
 8002c78:	f008 ff7c 	bl	800bb74 <WIDGET__Init>
 8002c7c:	4638      	mov	r0, r7
 8002c7e:	491b      	ldr	r1, [pc, #108]	; (8002cec <PROGBAR_CreateUser+0xb4>)
 8002c80:	f009 f8aa 	bl	800bdd8 <WIDGET_SetEffect>
 8002c84:	9e04      	ldr	r6, [sp, #16]
 8002c86:	f8d9 3000 	ldr.w	r3, [r9]
 8002c8a:	6673      	str	r3, [r6, #100]	; 0x64
 8002c8c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002c8e:	f106 044c 	add.w	r4, r6, #76	; 0x4c
 8002c92:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002c94:	e895 0003 	ldmia.w	r5, {r0, r1}
 8002c98:	2302      	movs	r3, #2
 8002c9a:	e884 0003 	stmia.w	r4, {r0, r1}
 8002c9e:	f8a6 3040 	strh.w	r3, [r6, #64]	; 0x40
 8002ca2:	2364      	movs	r3, #100	; 0x64
 8002ca4:	64b3      	str	r3, [r6, #72]	; 0x48
 8002ca6:	2400      	movs	r4, #0
 8002ca8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002caa:	f886 3068 	strb.w	r3, [r6, #104]	; 0x68
 8002cae:	6474      	str	r4, [r6, #68]	; 0x44
 8002cb0:	f8c6 8038 	str.w	r8, [r6, #56]	; 0x38
 8002cb4:	4640      	mov	r0, r8
 8002cb6:	f008 fbd7 	bl	800b468 <GUI_ALLOC_LockH>
 8002cba:	4622      	mov	r2, r4
 8002cbc:	4601      	mov	r1, r0
 8002cbe:	9005      	str	r0, [sp, #20]
 8002cc0:	9804      	ldr	r0, [sp, #16]
 8002cc2:	f7ff ff31 	bl	8002b28 <_SetValue>
 8002cc6:	a805      	add	r0, sp, #20
 8002cc8:	f008 fbdc 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002ccc:	a804      	add	r0, sp, #16
 8002cce:	f008 fbd9 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002cd2:	f8d9 3000 	ldr.w	r3, [r9]
 8002cd6:	4638      	mov	r0, r7
 8002cd8:	685b      	ldr	r3, [r3, #4]
 8002cda:	4798      	blx	r3
 8002cdc:	4638      	mov	r0, r7
 8002cde:	b007      	add	sp, #28
 8002ce0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002ce4:	08002acf 	.word	0x08002acf
 8002ce8:	20000020 	.word	0x20000020
 8002cec:	08012074 	.word	0x08012074
 8002cf0:	2000001c 	.word	0x2000001c

08002cf4 <PROGBAR_CreateIndirect>:
 8002cf4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002cf6:	b087      	sub	sp, #28
 8002cf8:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8002cfc:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8002d00:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8002d04:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8002d08:	9100      	str	r1, [sp, #0]
 8002d0a:	2100      	movs	r1, #0
 8002d0c:	9101      	str	r1, [sp, #4]
 8002d0e:	8a41      	ldrh	r1, [r0, #18]
 8002d10:	9102      	str	r1, [sp, #8]
 8002d12:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8002d16:	9103      	str	r1, [sp, #12]
 8002d18:	6984      	ldr	r4, [r0, #24]
 8002d1a:	9404      	str	r4, [sp, #16]
 8002d1c:	eb0e 0002 	add.w	r0, lr, r2
 8002d20:	18f9      	adds	r1, r7, r3
 8002d22:	4632      	mov	r2, r6
 8002d24:	462b      	mov	r3, r5
 8002d26:	f7ff ff87 	bl	8002c38 <PROGBAR_CreateUser>
 8002d2a:	b007      	add	sp, #28
 8002d2c:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002d2e <PROGBAR_SetValue>:
 8002d2e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002d32:	460d      	mov	r5, r1
 8002d34:	b087      	sub	sp, #28
 8002d36:	4680      	mov	r8, r0
 8002d38:	2800      	cmp	r0, #0
 8002d3a:	f000 80a0 	beq.w	8002e7e <PROGBAR_SetValue+0x150>
 8002d3e:	f008 fb93 	bl	800b468 <GUI_ALLOC_LockH>
 8002d42:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8002d44:	6b46      	ldr	r6, [r0, #52]	; 0x34
 8002d46:	429d      	cmp	r5, r3
 8002d48:	bfb8      	it	lt
 8002d4a:	461d      	movlt	r5, r3
 8002d4c:	6c83      	ldr	r3, [r0, #72]	; 0x48
 8002d4e:	af06      	add	r7, sp, #24
 8002d50:	429d      	cmp	r5, r3
 8002d52:	bfa8      	it	ge
 8002d54:	461d      	movge	r5, r3
 8002d56:	42ae      	cmp	r6, r5
 8002d58:	4604      	mov	r4, r0
 8002d5a:	f847 0d18 	str.w	r0, [r7, #-24]!
 8002d5e:	f000 808b 	beq.w	8002e78 <PROGBAR_SetValue+0x14a>
 8002d62:	f890 9068 	ldrb.w	r9, [r0, #104]	; 0x68
 8002d66:	f019 0f01 	tst.w	r9, #1
 8002d6a:	d01c      	beq.n	8002da6 <PROGBAR_SetValue+0x78>
 8002d6c:	42b5      	cmp	r5, r6
 8002d6e:	da07      	bge.n	8002d80 <PROGBAR_SetValue+0x52>
 8002d70:	4629      	mov	r1, r5
 8002d72:	f7ff ff3a 	bl	8002bea <PROGBAR__Value2Pos>
 8002d76:	4631      	mov	r1, r6
 8002d78:	f8ad 000e 	strh.w	r0, [sp, #14]
 8002d7c:	4620      	mov	r0, r4
 8002d7e:	e006      	b.n	8002d8e <PROGBAR_SetValue+0x60>
 8002d80:	4631      	mov	r1, r6
 8002d82:	f7ff ff32 	bl	8002bea <PROGBAR__Value2Pos>
 8002d86:	4629      	mov	r1, r5
 8002d88:	f8ad 000e 	strh.w	r0, [sp, #14]
 8002d8c:	4620      	mov	r0, r4
 8002d8e:	f7ff ff2c 	bl	8002bea <PROGBAR__Value2Pos>
 8002d92:	2300      	movs	r3, #0
 8002d94:	f8ad 3008 	strh.w	r3, [sp, #8]
 8002d98:	f640 73ff 	movw	r3, #4095	; 0xfff
 8002d9c:	f8ad 000a 	strh.w	r0, [sp, #10]
 8002da0:	f8ad 300c 	strh.w	r3, [sp, #12]
 8002da4:	e063      	b.n	8002e6e <PROGBAR_SetValue+0x140>
 8002da6:	42b5      	cmp	r5, r6
 8002da8:	da07      	bge.n	8002dba <PROGBAR_SetValue+0x8c>
 8002daa:	4629      	mov	r1, r5
 8002dac:	f7ff ff1d 	bl	8002bea <PROGBAR__Value2Pos>
 8002db0:	4631      	mov	r1, r6
 8002db2:	f8ad 0008 	strh.w	r0, [sp, #8]
 8002db6:	4620      	mov	r0, r4
 8002db8:	e006      	b.n	8002dc8 <PROGBAR_SetValue+0x9a>
 8002dba:	4631      	mov	r1, r6
 8002dbc:	f7ff ff15 	bl	8002bea <PROGBAR__Value2Pos>
 8002dc0:	4629      	mov	r1, r5
 8002dc2:	f8ad 0008 	strh.w	r0, [sp, #8]
 8002dc6:	4620      	mov	r0, r4
 8002dc8:	f7ff ff0f 	bl	8002bea <PROGBAR__Value2Pos>
 8002dcc:	2300      	movs	r3, #0
 8002dce:	f8ad 300a 	strh.w	r3, [sp, #10]
 8002dd2:	f009 0202 	and.w	r2, r9, #2
 8002dd6:	f640 73ff 	movw	r3, #4095	; 0xfff
 8002dda:	f8ad 300e 	strh.w	r3, [sp, #14]
 8002dde:	f8ad 000c 	strh.w	r0, [sp, #12]
 8002de2:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 8002de6:	2a00      	cmp	r2, #0
 8002de8:	d141      	bne.n	8002e6e <PROGBAR_SetValue+0x140>
 8002dea:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8002dec:	9304      	str	r3, [sp, #16]
 8002dee:	9305      	str	r3, [sp, #20]
 8002df0:	f008 fb68 	bl	800b4c4 <GUI_ALLOC_GetSize>
 8002df4:	2804      	cmp	r0, #4
 8002df6:	dc0e      	bgt.n	8002e16 <PROGBAR_SetValue+0xe8>
 8002df8:	9b00      	ldr	r3, [sp, #0]
 8002dfa:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 8002dfc:	4668      	mov	r0, sp
 8002dfe:	f008 fb41 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002e02:	4620      	mov	r0, r4
 8002e04:	2105      	movs	r1, #5
 8002e06:	f008 fd41 	bl	800b88c <GUI_ALLOC_Realloc>
 8002e0a:	4604      	mov	r4, r0
 8002e0c:	4640      	mov	r0, r8
 8002e0e:	f008 fb2b 	bl	800b468 <GUI_ALLOC_LockH>
 8002e12:	9000      	str	r0, [sp, #0]
 8002e14:	6384      	str	r4, [r0, #56]	; 0x38
 8002e16:	9800      	ldr	r0, [sp, #0]
 8002e18:	f7ff fea0 	bl	8002b5c <PROGBAR__GetTextLocked>
 8002e1c:	9001      	str	r0, [sp, #4]
 8002e1e:	b338      	cbz	r0, 8002e70 <PROGBAR_SetValue+0x142>
 8002e20:	9b00      	ldr	r3, [sp, #0]
 8002e22:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002e24:	f007 fec4 	bl	800abb0 <GUI_SetFont>
 8002e28:	a904      	add	r1, sp, #16
 8002e2a:	4606      	mov	r6, r0
 8002e2c:	9a01      	ldr	r2, [sp, #4]
 8002e2e:	9800      	ldr	r0, [sp, #0]
 8002e30:	f7ff fe97 	bl	8002b62 <PROGBAR__GetTextRect>
 8002e34:	a802      	add	r0, sp, #8
 8002e36:	aa04      	add	r2, sp, #16
 8002e38:	ac06      	add	r4, sp, #24
 8002e3a:	4601      	mov	r1, r0
 8002e3c:	f007 fe00 	bl	800aa40 <GUI_MergeRect>
 8002e40:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8002e44:	462a      	mov	r2, r5
 8002e46:	f7ff fe6f 	bl	8002b28 <_SetValue>
 8002e4a:	f854 2d14 	ldr.w	r2, [r4, #-20]!
 8002e4e:	9800      	ldr	r0, [sp, #0]
 8002e50:	a904      	add	r1, sp, #16
 8002e52:	f7ff fe86 	bl	8002b62 <PROGBAR__GetTextRect>
 8002e56:	a802      	add	r0, sp, #8
 8002e58:	4601      	mov	r1, r0
 8002e5a:	aa04      	add	r2, sp, #16
 8002e5c:	f007 fdf0 	bl	800aa40 <GUI_MergeRect>
 8002e60:	4630      	mov	r0, r6
 8002e62:	f007 fea5 	bl	800abb0 <GUI_SetFont>
 8002e66:	4620      	mov	r0, r4
 8002e68:	f008 fb0c 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002e6c:	e000      	b.n	8002e70 <PROGBAR_SetValue+0x142>
 8002e6e:	6365      	str	r5, [r4, #52]	; 0x34
 8002e70:	4640      	mov	r0, r8
 8002e72:	a902      	add	r1, sp, #8
 8002e74:	f002 fcd4 	bl	8005820 <WM_InvalidateRect>
 8002e78:	4668      	mov	r0, sp
 8002e7a:	f008 fb03 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002e7e:	b007      	add	sp, #28
 8002e80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08002e84 <_OnDelete>:
 8002e84:	b513      	push	{r0, r1, r4, lr}
 8002e86:	4604      	mov	r4, r0
 8002e88:	f008 faee 	bl	800b468 <GUI_ALLOC_LockH>
 8002e8c:	9001      	str	r0, [sp, #4]
 8002e8e:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002e90:	b120      	cbz	r0, 8002e9c <_OnDelete+0x18>
 8002e92:	f008 fb23 	bl	800b4dc <GUI_ALLOC_Free>
 8002e96:	9b01      	ldr	r3, [sp, #4]
 8002e98:	2200      	movs	r2, #0
 8002e9a:	625a      	str	r2, [r3, #36]	; 0x24
 8002e9c:	a801      	add	r0, sp, #4
 8002e9e:	f008 faf1 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002ea2:	4620      	mov	r0, r4
 8002ea4:	f008 fb1a 	bl	800b4dc <GUI_ALLOC_Free>
 8002ea8:	b002      	add	sp, #8
 8002eaa:	bd10      	pop	{r4, pc}

08002eac <_OnPaint>:
 8002eac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002eb0:	b08b      	sub	sp, #44	; 0x2c
 8002eb2:	f008 fad9 	bl	800b468 <GUI_ALLOC_LockH>
 8002eb6:	9007      	str	r0, [sp, #28]
 8002eb8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002eba:	2800      	cmp	r0, #0
 8002ebc:	d060      	beq.n	8002f80 <_OnPaint+0xd4>
 8002ebe:	f008 fad3 	bl	800b468 <GUI_ALLOC_LockH>
 8002ec2:	9b07      	ldr	r3, [sp, #28]
 8002ec4:	9005      	str	r0, [sp, #20]
 8002ec6:	4606      	mov	r6, r0
 8002ec8:	6898      	ldr	r0, [r3, #8]
 8002eca:	f008 facd 	bl	800b468 <GUI_ALLOC_LockH>
 8002ece:	9b07      	ldr	r3, [sp, #28]
 8002ed0:	f8d0 8054 	ldr.w	r8, [r0, #84]	; 0x54
 8002ed4:	6e05      	ldr	r5, [r0, #96]	; 0x60
 8002ed6:	6d87      	ldr	r7, [r0, #88]	; 0x58
 8002ed8:	6dc4      	ldr	r4, [r0, #92]	; 0x5c
 8002eda:	9006      	str	r0, [sp, #24]
 8002edc:	a908      	add	r1, sp, #32
 8002ede:	6898      	ldr	r0, [r3, #8]
 8002ee0:	f001 fd60 	bl	80049a4 <WM_GetInsideRectExScrollbar>
 8002ee4:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8002ee8:	9a07      	ldr	r2, [sp, #28]
 8002eea:	9806      	ldr	r0, [sp, #24]
 8002eec:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8002ef0:	f8d2 9020 	ldr.w	r9, [r2, #32]
 8002ef4:	441f      	add	r7, r3
 8002ef6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8002efa:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8002efe:	f8bd 7026 	ldrh.w	r7, [sp, #38]	; 0x26
 8002f02:	1b1c      	subs	r4, r3, r4
 8002f04:	1b7f      	subs	r7, r7, r5
 8002f06:	6913      	ldr	r3, [r2, #16]
 8002f08:	f8d0 508c 	ldr.w	r5, [r0, #140]	; 0x8c
 8002f0c:	1b5d      	subs	r5, r3, r5
 8002f0e:	f892 3028 	ldrb.w	r3, [r2, #40]	; 0x28
 8002f12:	4441      	add	r1, r8
 8002f14:	b289      	uxth	r1, r1
 8002f16:	b2a4      	uxth	r4, r4
 8002f18:	b2bf      	uxth	r7, r7
 8002f1a:	2b01      	cmp	r3, #1
 8002f1c:	f8ad 1020 	strh.w	r1, [sp, #32]
 8002f20:	f8ad 4024 	strh.w	r4, [sp, #36]	; 0x24
 8002f24:	f8ad 7026 	strh.w	r7, [sp, #38]	; 0x26
 8002f28:	f8d0 8080 	ldr.w	r8, [r0, #128]	; 0x80
 8002f2c:	b209      	sxth	r1, r1
 8002f2e:	d008      	beq.n	8002f42 <_OnPaint+0x96>
 8002f30:	b224      	sxth	r4, r4
 8002f32:	1b64      	subs	r4, r4, r5
 8002f34:	3401      	adds	r4, #1
 8002f36:	42a1      	cmp	r1, r4
 8002f38:	dd04      	ble.n	8002f44 <_OnPaint+0x98>
 8002f3a:	1b0c      	subs	r4, r1, r4
 8002f3c:	eb06 0644 	add.w	r6, r6, r4, lsl #1
 8002f40:	1b2d      	subs	r5, r5, r4
 8002f42:	460c      	mov	r4, r1
 8002f44:	2d00      	cmp	r5, #0
 8002f46:	dd15      	ble.n	8002f74 <_OnPaint+0xc8>
 8002f48:	6990      	ldr	r0, [r2, #24]
 8002f4a:	f007 fe2c 	bl	800aba6 <GUI_SetColor>
 8002f4e:	f04f 32ff 	mov.w	r2, #4294967295
 8002f52:	2301      	movs	r3, #1
 8002f54:	e88d 000c 	stmia.w	sp, {r2, r3}
 8002f58:	9a07      	ldr	r2, [sp, #28]
 8002f5a:	b23f      	sxth	r7, r7
 8002f5c:	f892 3029 	ldrb.w	r3, [r2, #41]	; 0x29
 8002f60:	9302      	str	r3, [sp, #8]
 8002f62:	ebc9 0907 	rsb	r9, r9, r7
 8002f66:	4630      	mov	r0, r6
 8002f68:	4629      	mov	r1, r5
 8002f6a:	4622      	mov	r2, r4
 8002f6c:	eb09 0308 	add.w	r3, r9, r8
 8002f70:	f006 ffa2 	bl	8009eb8 <GUI_DrawGraphEx>
 8002f74:	a806      	add	r0, sp, #24
 8002f76:	f008 fa85 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002f7a:	a805      	add	r0, sp, #20
 8002f7c:	f008 fa82 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002f80:	a807      	add	r0, sp, #28
 8002f82:	f008 fa7f 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002f86:	b00b      	add	sp, #44	; 0x2c
 8002f88:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08002f8c <_InvalidateNewItem>:
 8002f8c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002f8e:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8002f92:	2b01      	cmp	r3, #1
 8002f94:	4604      	mov	r4, r0
 8002f96:	6880      	ldr	r0, [r0, #8]
 8002f98:	d127      	bne.n	8002fea <_InvalidateNewItem+0x5e>
 8002f9a:	a902      	add	r1, sp, #8
 8002f9c:	f001 fd02 	bl	80049a4 <WM_GetInsideRectExScrollbar>
 8002fa0:	68a0      	ldr	r0, [r4, #8]
 8002fa2:	f008 fa61 	bl	800b468 <GUI_ALLOC_LockH>
 8002fa6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8002faa:	6d83      	ldr	r3, [r0, #88]	; 0x58
 8002fac:	9001      	str	r0, [sp, #4]
 8002fae:	4413      	add	r3, r2
 8002fb0:	f8ad 300a 	strh.w	r3, [sp, #10]
 8002fb4:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8002fb8:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8002fba:	1ad3      	subs	r3, r2, r3
 8002fbc:	f8ad 300e 	strh.w	r3, [sp, #14]
 8002fc0:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8002fc2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8002fc6:	4413      	add	r3, r2
 8002fc8:	6922      	ldr	r2, [r4, #16]
 8002fca:	4413      	add	r3, r2
 8002fcc:	b29b      	uxth	r3, r3
 8002fce:	1e9a      	subs	r2, r3, #2
 8002fd0:	a801      	add	r0, sp, #4
 8002fd2:	3b01      	subs	r3, #1
 8002fd4:	f8ad 2008 	strh.w	r2, [sp, #8]
 8002fd8:	f8ad 300c 	strh.w	r3, [sp, #12]
 8002fdc:	f008 fa52 	bl	800b484 <GUI_ALLOC_UnlockH>
 8002fe0:	68a0      	ldr	r0, [r4, #8]
 8002fe2:	a902      	add	r1, sp, #8
 8002fe4:	f002 fc1c 	bl	8005820 <WM_InvalidateRect>
 8002fe8:	e001      	b.n	8002fee <_InvalidateNewItem+0x62>
 8002fea:	f000 fb74 	bl	80036d6 <GRAPH__InvalidateGraph>
 8002fee:	b004      	add	sp, #16
 8002ff0:	bd10      	pop	{r4, pc}
	...

08002ff4 <GRAPH_DATA_YT_Create>:
 8002ff4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8002ff8:	4680      	mov	r8, r0
 8002ffa:	202c      	movs	r0, #44	; 0x2c
 8002ffc:	460e      	mov	r6, r1
 8002ffe:	4617      	mov	r7, r2
 8003000:	461d      	mov	r5, r3
 8003002:	f008 fc2b 	bl	800b85c <GUI_ALLOC_AllocZero>
 8003006:	4604      	mov	r4, r0
 8003008:	b320      	cbz	r0, 8003054 <GRAPH_DATA_YT_Create+0x60>
 800300a:	0070      	lsls	r0, r6, #1
 800300c:	f008 fc26 	bl	800b85c <GUI_ALLOC_AllocZero>
 8003010:	4681      	mov	r9, r0
 8003012:	b160      	cbz	r0, 800302e <GRAPH_DATA_YT_Create+0x3a>
 8003014:	b15f      	cbz	r7, 800302e <GRAPH_DATA_YT_Create+0x3a>
 8003016:	b155      	cbz	r5, 800302e <GRAPH_DATA_YT_Create+0x3a>
 8003018:	f008 fa26 	bl	800b468 <GUI_ALLOC_LockH>
 800301c:	4b0f      	ldr	r3, [pc, #60]	; (800305c <GRAPH_DATA_YT_Create+0x68>)
 800301e:	9001      	str	r0, [sp, #4]
 8003020:	681b      	ldr	r3, [r3, #0]
 8003022:	4639      	mov	r1, r7
 8003024:	006a      	lsls	r2, r5, #1
 8003026:	4798      	blx	r3
 8003028:	a801      	add	r0, sp, #4
 800302a:	f008 fa2b 	bl	800b484 <GUI_ALLOC_UnlockH>
 800302e:	4620      	mov	r0, r4
 8003030:	f008 fa1a 	bl	800b468 <GUI_ALLOC_LockH>
 8003034:	4b0a      	ldr	r3, [pc, #40]	; (8003060 <GRAPH_DATA_YT_Create+0x6c>)
 8003036:	9001      	str	r0, [sp, #4]
 8003038:	60c3      	str	r3, [r0, #12]
 800303a:	4b0a      	ldr	r3, [pc, #40]	; (8003064 <GRAPH_DATA_YT_Create+0x70>)
 800303c:	6003      	str	r3, [r0, #0]
 800303e:	4b0a      	ldr	r3, [pc, #40]	; (8003068 <GRAPH_DATA_YT_Create+0x74>)
 8003040:	f8c0 9024 	str.w	r9, [r0, #36]	; 0x24
 8003044:	f8c0 8018 	str.w	r8, [r0, #24]
 8003048:	6146      	str	r6, [r0, #20]
 800304a:	6105      	str	r5, [r0, #16]
 800304c:	6043      	str	r3, [r0, #4]
 800304e:	a801      	add	r0, sp, #4
 8003050:	f008 fa18 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003054:	4620      	mov	r0, r4
 8003056:	b003      	add	sp, #12
 8003058:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800305c:	200000a8 	.word	0x200000a8
 8003060:	08002f8d 	.word	0x08002f8d
 8003064:	08002ead 	.word	0x08002ead
 8003068:	08002e85 	.word	0x08002e85

0800306c <GRAPH_DATA_YT_AddValue>:
 800306c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800306e:	f8ad 1006 	strh.w	r1, [sp, #6]
 8003072:	f008 f9f9 	bl	800b468 <GUI_ALLOC_LockH>
 8003076:	9002      	str	r0, [sp, #8]
 8003078:	b168      	cbz	r0, 8003096 <GRAPH_DATA_YT_AddValue+0x2a>
 800307a:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800307c:	f008 f9f4 	bl	800b468 <GUI_ALLOC_LockH>
 8003080:	f10d 0206 	add.w	r2, sp, #6
 8003084:	4601      	mov	r1, r0
 8003086:	9003      	str	r0, [sp, #12]
 8003088:	2302      	movs	r3, #2
 800308a:	9802      	ldr	r0, [sp, #8]
 800308c:	f000 fb52 	bl	8003734 <GRAPH__AddValue>
 8003090:	a803      	add	r0, sp, #12
 8003092:	f008 f9f7 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003096:	a802      	add	r0, sp, #8
 8003098:	f008 f9f4 	bl	800b484 <GUI_ALLOC_UnlockH>
 800309c:	b005      	add	sp, #20
 800309e:	f85d fb04 	ldr.w	pc, [sp], #4

080030a2 <GRAPH_DATA_YT_SetAlign>:
 80030a2:	b513      	push	{r0, r1, r4, lr}
 80030a4:	460c      	mov	r4, r1
 80030a6:	f008 f9df 	bl	800b468 <GUI_ALLOC_LockH>
 80030aa:	9001      	str	r0, [sp, #4]
 80030ac:	b140      	cbz	r0, 80030c0 <GRAPH_DATA_YT_SetAlign+0x1e>
 80030ae:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80030b2:	42a3      	cmp	r3, r4
 80030b4:	d004      	beq.n	80030c0 <GRAPH_DATA_YT_SetAlign+0x1e>
 80030b6:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 80030ba:	6880      	ldr	r0, [r0, #8]
 80030bc:	f002 fbec 	bl	8005898 <WM_InvalidateWindow>
 80030c0:	a801      	add	r0, sp, #4
 80030c2:	f008 f9df 	bl	800b484 <GUI_ALLOC_UnlockH>
 80030c6:	b002      	add	sp, #8
 80030c8:	bd10      	pop	{r4, pc}

080030ca <GRAPH_DATA_YT_Clear>:
 80030ca:	b513      	push	{r0, r1, r4, lr}
 80030cc:	b160      	cbz	r0, 80030e8 <GRAPH_DATA_YT_Clear+0x1e>
 80030ce:	f008 f9cb 	bl	800b468 <GUI_ALLOC_LockH>
 80030d2:	ac02      	add	r4, sp, #8
 80030d4:	2300      	movs	r3, #0
 80030d6:	f844 0d04 	str.w	r0, [r4, #-4]!
 80030da:	6103      	str	r3, [r0, #16]
 80030dc:	6880      	ldr	r0, [r0, #8]
 80030de:	f002 fbdb 	bl	8005898 <WM_InvalidateWindow>
 80030e2:	4620      	mov	r0, r4
 80030e4:	f008 f9ce 	bl	800b484 <GUI_ALLOC_UnlockH>
 80030e8:	b002      	add	sp, #8
 80030ea:	bd10      	pop	{r4, pc}

080030ec <_ManageScrollbars>:
 80030ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80030ee:	b08b      	sub	sp, #44	; 0x2c
 80030f0:	a902      	add	r1, sp, #8
 80030f2:	4604      	mov	r4, r0
 80030f4:	f001 fc56 	bl	80049a4 <WM_GetInsideRectExScrollbar>
 80030f8:	4620      	mov	r0, r4
 80030fa:	f008 f9b5 	bl	800b468 <GUI_ALLOC_LockH>
 80030fe:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8003102:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8003106:	9001      	str	r0, [sp, #4]
 8003108:	1ab6      	subs	r6, r6, r2
 800310a:	6d82      	ldr	r2, [r0, #88]	; 0x58
 800310c:	6d45      	ldr	r5, [r0, #84]	; 0x54
 800310e:	6dc7      	ldr	r7, [r0, #92]	; 0x5c
 8003110:	1ab6      	subs	r6, r6, r2
 8003112:	6e02      	ldr	r2, [r0, #96]	; 0x60
 8003114:	1ab6      	subs	r6, r6, r2
 8003116:	f8b0 2078 	ldrh.w	r2, [r0, #120]	; 0x78
 800311a:	0751      	lsls	r1, r2, #29
 800311c:	d407      	bmi.n	800312e <_ManageScrollbars+0x42>
 800311e:	6f41      	ldr	r1, [r0, #116]	; 0x74
 8003120:	42b1      	cmp	r1, r6
 8003122:	4620      	mov	r0, r4
 8003124:	bfd4      	ite	le
 8003126:	2100      	movle	r1, #0
 8003128:	2101      	movgt	r1, #1
 800312a:	f001 f963 	bl	80043f4 <WM_SetScrollbarV>
 800312e:	9b01      	ldr	r3, [sp, #4]
 8003130:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 8003134:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8003136:	67da      	str	r2, [r3, #124]	; 0x7c
 8003138:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 800313c:	f8c3 6084 	str.w	r6, [r3, #132]	; 0x84
 8003140:	1a8a      	subs	r2, r1, r2
 8003142:	1b55      	subs	r5, r2, r5
 8003144:	f8b3 2078 	ldrh.w	r2, [r3, #120]	; 0x78
 8003148:	0792      	lsls	r2, r2, #30
 800314a:	ebc7 0505 	rsb	r5, r7, r5
 800314e:	d407      	bmi.n	8003160 <_ManageScrollbars+0x74>
 8003150:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8003152:	42a9      	cmp	r1, r5
 8003154:	4620      	mov	r0, r4
 8003156:	bfd4      	ite	le
 8003158:	2100      	movle	r1, #0
 800315a:	2101      	movgt	r1, #1
 800315c:	f001 f948 	bl	80043f0 <WM_SetScrollbarH>
 8003160:	9801      	ldr	r0, [sp, #4]
 8003162:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8003164:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 8003168:	f8c0 5090 	str.w	r5, [r0, #144]	; 0x90
 800316c:	307c      	adds	r0, #124	; 0x7c
 800316e:	f001 faf5 	bl	800475c <WM_CheckScrollBounds>
 8003172:	9801      	ldr	r0, [sp, #4]
 8003174:	3088      	adds	r0, #136	; 0x88
 8003176:	f001 faf1 	bl	800475c <WM_CheckScrollBounds>
 800317a:	9b01      	ldr	r3, [sp, #4]
 800317c:	f103 027c 	add.w	r2, r3, #124	; 0x7c
 8003180:	ca07      	ldmia	r2, {r0, r1, r2}
 8003182:	3388      	adds	r3, #136	; 0x88
 8003184:	ae07      	add	r6, sp, #28
 8003186:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 800318a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800318e:	ad04      	add	r5, sp, #16
 8003190:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8003194:	a801      	add	r0, sp, #4
 8003196:	f008 f975 	bl	800b484 <GUI_ALLOC_UnlockH>
 800319a:	4620      	mov	r0, r4
 800319c:	4631      	mov	r1, r6
 800319e:	462a      	mov	r2, r5
 80031a0:	f008 fdcd 	bl	800bd3e <WIDGET__SetScrollState>
 80031a4:	b00b      	add	sp, #44	; 0x2c
 80031a6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080031a8 <_OnScrollValueChanged>:
 80031a8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80031aa:	460c      	mov	r4, r1
 80031ac:	4606      	mov	r6, r0
 80031ae:	f008 f95b 	bl	800b468 <GUI_ALLOC_LockH>
 80031b2:	9001      	str	r0, [sp, #4]
 80031b4:	4620      	mov	r0, r4
 80031b6:	f009 f901 	bl	800c3bc <SCROLLBAR_GetValue>
 80031ba:	4605      	mov	r5, r0
 80031bc:	4620      	mov	r0, r4
 80031be:	f001 faf5 	bl	80047ac <WM_GetId>
 80031c2:	9b01      	ldr	r3, [sp, #4]
 80031c4:	28fe      	cmp	r0, #254	; 0xfe
 80031c6:	bf0c      	ite	eq
 80031c8:	f8c3 5080 	streq.w	r5, [r3, #128]	; 0x80
 80031cc:	f8c3 508c 	strne.w	r5, [r3, #140]	; 0x8c
 80031d0:	4630      	mov	r0, r6
 80031d2:	f002 fb61 	bl	8005898 <WM_InvalidateWindow>
 80031d6:	a801      	add	r0, sp, #4
 80031d8:	f008 f954 	bl	800b484 <GUI_ALLOC_UnlockH>
 80031dc:	b002      	add	sp, #8
 80031de:	bd70      	pop	{r4, r5, r6, pc}

080031e0 <GRAPH_Callback>:
 80031e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80031e4:	6844      	ldr	r4, [r0, #4]
 80031e6:	6806      	ldr	r6, [r0, #0]
 80031e8:	4605      	mov	r5, r0
 80031ea:	b097      	sub	sp, #92	; 0x5c
 80031ec:	4620      	mov	r0, r4
 80031ee:	4629      	mov	r1, r5
 80031f0:	f008 fd05 	bl	800bbfe <WIDGET_HandleActive>
 80031f4:	f5b6 7f40 	cmp.w	r6, #768	; 0x300
 80031f8:	4607      	mov	r7, r0
 80031fa:	d102      	bne.n	8003202 <GRAPH_Callback+0x22>
 80031fc:	4620      	mov	r0, r4
 80031fe:	f7ff ff75 	bl	80030ec <_ManageScrollbars>
 8003202:	2f00      	cmp	r7, #0
 8003204:	f000 8264 	beq.w	80036d0 <GRAPH_Callback+0x4f0>
 8003208:	682b      	ldr	r3, [r5, #0]
 800320a:	2b0b      	cmp	r3, #11
 800320c:	f000 8200 	beq.w	8003610 <GRAPH_Callback+0x430>
 8003210:	dc06      	bgt.n	8003220 <GRAPH_Callback+0x40>
 8003212:	2b05      	cmp	r3, #5
 8003214:	f040 8259 	bne.w	80036ca <GRAPH_Callback+0x4ea>
 8003218:	4620      	mov	r0, r4
 800321a:	f7ff ff67 	bl	80030ec <_ManageScrollbars>
 800321e:	e254      	b.n	80036ca <GRAPH_Callback+0x4ea>
 8003220:	2b0f      	cmp	r3, #15
 8003222:	d003      	beq.n	800322c <GRAPH_Callback+0x4c>
 8003224:	2b26      	cmp	r3, #38	; 0x26
 8003226:	f000 823d 	beq.w	80036a4 <GRAPH_Callback+0x4c4>
 800322a:	e24e      	b.n	80036ca <GRAPH_Callback+0x4ea>
 800322c:	68ed      	ldr	r5, [r5, #12]
 800322e:	9502      	str	r5, [sp, #8]
 8003230:	4620      	mov	r0, r4
 8003232:	f008 f919 	bl	800b468 <GUI_ALLOC_LockH>
 8003236:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8003238:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	f8d0 9054 	ldr.w	r9, [r0, #84]	; 0x54
 8003240:	f8d0 b058 	ldr.w	fp, [r0, #88]	; 0x58
 8003244:	f8d0 a060 	ldr.w	sl, [r0, #96]	; 0x60
 8003248:	900d      	str	r0, [sp, #52]	; 0x34
 800324a:	ad0e      	add	r5, sp, #56	; 0x38
 800324c:	4628      	mov	r0, r5
 800324e:	9303      	str	r3, [sp, #12]
 8003250:	9101      	str	r1, [sp, #4]
 8003252:	f001 fa5b 	bl	800470c <WM_GetClientRect>
 8003256:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003258:	4629      	mov	r1, r5
 800325a:	f008 fda1 	bl	800bda0 <WIDGET__EFFECT_DrawDownRect>
 800325e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8003262:	ab12      	add	r3, sp, #72	; 0x48
 8003264:	e883 0003 	stmia.w	r3, {r0, r1}
 8003268:	9803      	ldr	r0, [sp, #12]
 800326a:	f8bd 104a 	ldrh.w	r1, [sp, #74]	; 0x4a
 800326e:	b282      	uxth	r2, r0
 8003270:	4459      	add	r1, fp
 8003272:	f8bd 004e 	ldrh.w	r0, [sp, #78]	; 0x4e
 8003276:	4411      	add	r1, r2
 8003278:	f8ad 104a 	strh.w	r1, [sp, #74]	; 0x4a
 800327c:	eb02 010a 	add.w	r1, r2, sl
 8003280:	1a41      	subs	r1, r0, r1
 8003282:	f8ad 104e 	strh.w	r1, [sp, #78]	; 0x4e
 8003286:	f8bd 1048 	ldrh.w	r1, [sp, #72]	; 0x48
 800328a:	4411      	add	r1, r2
 800328c:	4449      	add	r1, r9
 800328e:	f8ad 1048 	strh.w	r1, [sp, #72]	; 0x48
 8003292:	9901      	ldr	r1, [sp, #4]
 8003294:	440a      	add	r2, r1
 8003296:	f8bd 104c 	ldrh.w	r1, [sp, #76]	; 0x4c
 800329a:	1a8a      	subs	r2, r1, r2
 800329c:	f8ad 204c 	strh.w	r2, [sp, #76]	; 0x4c
 80032a0:	e893 0003 	ldmia.w	r3, {r0, r1}
 80032a4:	aa10      	add	r2, sp, #64	; 0x40
 80032a6:	e882 0003 	stmia.w	r2, {r0, r1}
 80032aa:	4610      	mov	r0, r2
 80032ac:	f001 fd34 	bl	8004d18 <WM_SetUserClipRect>
 80032b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80032b2:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80032b4:	f007 fc75 	bl	800aba2 <GUI_SetBkColor>
 80032b8:	f007 fa62 	bl	800a780 <GUI_Clear>
 80032bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80032be:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80032c2:	b113      	cbz	r3, 80032ca <GRAPH_Callback+0xea>
 80032c4:	4620      	mov	r0, r4
 80032c6:	2100      	movs	r1, #0
 80032c8:	4798      	blx	r3
 80032ca:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80032cc:	f895 306c 	ldrb.w	r3, [r5, #108]	; 0x6c
 80032d0:	2b00      	cmp	r3, #0
 80032d2:	f000 808d 	beq.w	80033f0 <GRAPH_Callback+0x210>
 80032d6:	4620      	mov	r0, r4
 80032d8:	a914      	add	r1, sp, #80	; 0x50
 80032da:	f001 fb63 	bl	80049a4 <WM_GetInsideRectExScrollbar>
 80032de:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 80032e0:	f8bd 0056 	ldrh.w	r0, [sp, #86]	; 0x56
 80032e4:	681b      	ldr	r3, [r3, #0]
 80032e6:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 80032ea:	f8bd 1052 	ldrh.w	r1, [sp, #82]	; 0x52
 80032ee:	9304      	str	r3, [sp, #16]
 80032f0:	9007      	str	r0, [sp, #28]
 80032f2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80032f6:	6c28      	ldr	r0, [r5, #64]	; 0x40
 80032f8:	9205      	str	r2, [sp, #20]
 80032fa:	9306      	str	r3, [sp, #24]
 80032fc:	9108      	str	r1, [sp, #32]
 80032fe:	6c6e      	ldr	r6, [r5, #68]	; 0x44
 8003300:	6caf      	ldr	r7, [r5, #72]	; 0x48
 8003302:	f007 fc50 	bl	800aba6 <GUI_SetColor>
 8003306:	f007 fb83 	bl	800aa10 <GUI_GetLineStyle>
 800330a:	9009      	str	r0, [sp, #36]	; 0x24
 800330c:	b916      	cbnz	r6, 8003314 <GRAPH_Callback+0x134>
 800330e:	2f00      	cmp	r7, #0
 8003310:	d14b      	bne.n	80033aa <GRAPH_Callback+0x1ca>
 8003312:	e046      	b.n	80033a2 <GRAPH_Callback+0x1c2>
 8003314:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8003316:	eb06 0c03 	add.w	ip, r6, r3
 800331a:	f8b5 3078 	ldrh.w	r3, [r5, #120]	; 0x78
 800331e:	07db      	lsls	r3, r3, #31
 8003320:	bf54      	ite	pl
 8003322:	f8d5 308c 	ldrpl.w	r3, [r5, #140]	; 0x8c
 8003326:	2300      	movmi	r3, #0
 8003328:	eb0c 0803 	add.w	r8, ip, r3
 800332c:	45b0      	cmp	r8, r6
 800332e:	db02      	blt.n	8003336 <GRAPH_Callback+0x156>
 8003330:	ebc6 0808 	rsb	r8, r6, r8
 8003334:	e7fa      	b.n	800332c <GRAPH_Callback+0x14c>
 8003336:	f895 007a 	ldrb.w	r0, [r5, #122]	; 0x7a
 800333a:	f007 fc43 	bl	800abc4 <GUI_SetLineStyle>
 800333e:	9805      	ldr	r0, [sp, #20]
 8003340:	9a01      	ldr	r2, [sp, #4]
 8003342:	b203      	sxth	r3, r0
 8003344:	9806      	ldr	r0, [sp, #24]
 8003346:	444a      	add	r2, r9
 8003348:	b201      	sxth	r1, r0
 800334a:	f1c2 0201 	rsb	r2, r2, #1
 800334e:	1a5b      	subs	r3, r3, r1
 8003350:	4413      	add	r3, r2
 8003352:	4598      	cmp	r8, r3
 8003354:	dadb      	bge.n	800330e <GRAPH_Callback+0x12e>
 8003356:	9804      	ldr	r0, [sp, #16]
 8003358:	f9bd 1052 	ldrsh.w	r1, [sp, #82]	; 0x52
 800335c:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8003360:	f895 207a 	ldrb.w	r2, [r5, #122]	; 0x7a
 8003364:	4448      	add	r0, r9
 8003366:	4440      	add	r0, r8
 8003368:	4459      	add	r1, fp
 800336a:	ebca 0303 	rsb	r3, sl, r3
 800336e:	b11a      	cbz	r2, 8003378 <GRAPH_Callback+0x198>
 8003370:	4602      	mov	r2, r0
 8003372:	f006 fcd9 	bl	8009d28 <GUI_DrawLine>
 8003376:	e002      	b.n	800337e <GRAPH_Callback+0x19e>
 8003378:	461a      	mov	r2, r3
 800337a:	f006 fd4d 	bl	8009e18 <GUI_DrawVLine>
 800337e:	44b0      	add	r8, r6
 8003380:	e7dd      	b.n	800333e <GRAPH_Callback+0x15e>
 8003382:	f895 007b 	ldrb.w	r0, [r5, #123]	; 0x7b
 8003386:	f007 fc1d 	bl	800abc4 <GUI_SetLineStyle>
 800338a:	9907      	ldr	r1, [sp, #28]
 800338c:	9808      	ldr	r0, [sp, #32]
 800338e:	b20b      	sxth	r3, r1
 8003390:	eb0b 020a 	add.w	r2, fp, sl
 8003394:	b201      	sxth	r1, r0
 8003396:	f1c2 0201 	rsb	r2, r2, #1
 800339a:	1a5b      	subs	r3, r3, r1
 800339c:	4413      	add	r3, r2
 800339e:	429e      	cmp	r6, r3
 80033a0:	db0c      	blt.n	80033bc <GRAPH_Callback+0x1dc>
 80033a2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80033a4:	f007 fc0e 	bl	800abc4 <GUI_SetLineStyle>
 80033a8:	e022      	b.n	80033f0 <GRAPH_Callback+0x210>
 80033aa:	6d2e      	ldr	r6, [r5, #80]	; 0x50
 80033ac:	f8d5 3080 	ldr.w	r3, [r5, #128]	; 0x80
 80033b0:	443e      	add	r6, r7
 80033b2:	1af6      	subs	r6, r6, r3
 80033b4:	42be      	cmp	r6, r7
 80033b6:	dbe4      	blt.n	8003382 <GRAPH_Callback+0x1a2>
 80033b8:	1bf6      	subs	r6, r6, r7
 80033ba:	e7fb      	b.n	80033b4 <GRAPH_Callback+0x1d4>
 80033bc:	9801      	ldr	r0, [sp, #4]
 80033be:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 80033c2:	f9bd 1056 	ldrsh.w	r1, [sp, #86]	; 0x56
 80033c6:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 80033ca:	1a12      	subs	r2, r2, r0
 80033cc:	f895 007b 	ldrb.w	r0, [r5, #123]	; 0x7b
 80033d0:	ebca 0101 	rsb	r1, sl, r1
 80033d4:	1b89      	subs	r1, r1, r6
 80033d6:	444b      	add	r3, r9
 80033d8:	b120      	cbz	r0, 80033e4 <GRAPH_Callback+0x204>
 80033da:	4618      	mov	r0, r3
 80033dc:	460b      	mov	r3, r1
 80033de:	f006 fca3 	bl	8009d28 <GUI_DrawLine>
 80033e2:	e003      	b.n	80033ec <GRAPH_Callback+0x20c>
 80033e4:	4608      	mov	r0, r1
 80033e6:	4619      	mov	r1, r3
 80033e8:	f006 fcbc 	bl	8009d64 <GUI_DrawHLine>
 80033ec:	443e      	add	r6, r7
 80033ee:	e7cc      	b.n	800338a <GRAPH_Callback+0x1aa>
 80033f0:	9a03      	ldr	r2, [sp, #12]
 80033f2:	a812      	add	r0, sp, #72	; 0x48
 80033f4:	a90e      	add	r1, sp, #56	; 0x38
 80033f6:	f005 fd62 	bl	8008ebe <GUI__ReduceRect>
 80033fa:	a812      	add	r0, sp, #72	; 0x48
 80033fc:	f001 fc8c 	bl	8004d18 <WM_SetUserClipRect>
 8003400:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003402:	f893 203b 	ldrb.w	r2, [r3, #59]	; 0x3b
 8003406:	2aff      	cmp	r2, #255	; 0xff
 8003408:	f000 80a3 	beq.w	8003552 <GRAPH_Callback+0x372>
 800340c:	f1b9 0f00 	cmp.w	r9, #0
 8003410:	d108      	bne.n	8003424 <GRAPH_Callback+0x244>
 8003412:	f1bb 0f00 	cmp.w	fp, #0
 8003416:	d105      	bne.n	8003424 <GRAPH_Callback+0x244>
 8003418:	9901      	ldr	r1, [sp, #4]
 800341a:	b919      	cbnz	r1, 8003424 <GRAPH_Callback+0x244>
 800341c:	f1ba 0f00 	cmp.w	sl, #0
 8003420:	f000 8097 	beq.w	8003552 <GRAPH_Callback+0x372>
 8003424:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003426:	a914      	add	r1, sp, #80	; 0x50
 8003428:	4620      	mov	r0, r4
 800342a:	6815      	ldr	r5, [r2, #0]
 800342c:	9300      	str	r3, [sp, #0]
 800342e:	f001 fab9 	bl	80049a4 <WM_GetInsideRectExScrollbar>
 8003432:	f001 fa33 	bl	800489c <WM_GetOrgX>
 8003436:	9004      	str	r0, [sp, #16]
 8003438:	f001 fa38 	bl	80048ac <WM_GetOrgY>
 800343c:	f9bd 2052 	ldrsh.w	r2, [sp, #82]	; 0x52
 8003440:	9b00      	ldr	r3, [sp, #0]
 8003442:	f9bd 6054 	ldrsh.w	r6, [sp, #84]	; 0x54
 8003446:	9005      	str	r0, [sp, #20]
 8003448:	445a      	add	r2, fp
 800344a:	9203      	str	r2, [sp, #12]
 800344c:	9a01      	ldr	r2, [sp, #4]
 800344e:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8003450:	f9bd 7050 	ldrsh.w	r7, [sp, #80]	; 0x50
 8003454:	f9bd 8056 	ldrsh.w	r8, [sp, #86]	; 0x56
 8003458:	1ab6      	subs	r6, r6, r2
 800345a:	f007 fba2 	bl	800aba2 <GUI_SetBkColor>
 800345e:	9b00      	ldr	r3, [sp, #0]
 8003460:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8003462:	444f      	add	r7, r9
 8003464:	ebca 0808 	rsb	r8, sl, r8
 8003468:	f007 fb9d 	bl	800aba6 <GUI_SetColor>
 800346c:	f1b9 0f00 	cmp.w	r9, #0
 8003470:	d01b      	beq.n	80034aa <GRAPH_Callback+0x2ca>
 8003472:	9802      	ldr	r0, [sp, #8]
 8003474:	9904      	ldr	r1, [sp, #16]
 8003476:	f9b0 3000 	ldrsh.w	r3, [r0]
 800347a:	f109 32ff 	add.w	r2, r9, #4294967295
 800347e:	442a      	add	r2, r5
 8003480:	1a5b      	subs	r3, r3, r1
 8003482:	4293      	cmp	r3, r2
 8003484:	dc11      	bgt.n	80034aa <GRAPH_Callback+0x2ca>
 8003486:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 800348a:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 800348e:	ebca 0303 	rsb	r3, sl, r3
 8003492:	eb05 010b 	add.w	r1, r5, fp
 8003496:	3301      	adds	r3, #1
 8003498:	f007 f940 	bl	800a71c <GUI_ClearRect>
 800349c:	9a03      	ldr	r2, [sp, #12]
 800349e:	1e78      	subs	r0, r7, #1
 80034a0:	1e51      	subs	r1, r2, #1
 80034a2:	f108 0201 	add.w	r2, r8, #1
 80034a6:	f006 fcb7 	bl	8009e18 <GUI_DrawVLine>
 80034aa:	f1bb 0f00 	cmp.w	fp, #0
 80034ae:	d017      	beq.n	80034e0 <GRAPH_Callback+0x300>
 80034b0:	9802      	ldr	r0, [sp, #8]
 80034b2:	9905      	ldr	r1, [sp, #20]
 80034b4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80034b8:	f10b 33ff 	add.w	r3, fp, #4294967295
 80034bc:	442b      	add	r3, r5
 80034be:	1a52      	subs	r2, r2, r1
 80034c0:	429a      	cmp	r2, r3
 80034c2:	dc0d      	bgt.n	80034e0 <GRAPH_Callback+0x300>
 80034c4:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 80034c8:	f9bd 1052 	ldrsh.w	r1, [sp, #82]	; 0x52
 80034cc:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 80034d0:	f007 f924 	bl	800a71c <GUI_ClearRect>
 80034d4:	9a03      	ldr	r2, [sp, #12]
 80034d6:	1e79      	subs	r1, r7, #1
 80034d8:	1e50      	subs	r0, r2, #1
 80034da:	1c72      	adds	r2, r6, #1
 80034dc:	f006 fc42 	bl	8009d64 <GUI_DrawHLine>
 80034e0:	9b01      	ldr	r3, [sp, #4]
 80034e2:	b1d3      	cbz	r3, 800351a <GRAPH_Callback+0x33a>
 80034e4:	9902      	ldr	r1, [sp, #8]
 80034e6:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 80034ea:	1ad0      	subs	r0, r2, r3
 80034ec:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80034f0:	9904      	ldr	r1, [sp, #16]
 80034f2:	3001      	adds	r0, #1
 80034f4:	1a5b      	subs	r3, r3, r1
 80034f6:	4283      	cmp	r3, r0
 80034f8:	db0f      	blt.n	800351a <GRAPH_Callback+0x33a>
 80034fa:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80034fe:	ebca 0303 	rsb	r3, sl, r3
 8003502:	eb05 010b 	add.w	r1, r5, fp
 8003506:	3301      	adds	r3, #1
 8003508:	f007 f908 	bl	800a71c <GUI_ClearRect>
 800350c:	9a03      	ldr	r2, [sp, #12]
 800350e:	1c70      	adds	r0, r6, #1
 8003510:	1e51      	subs	r1, r2, #1
 8003512:	f108 0201 	add.w	r2, r8, #1
 8003516:	f006 fc7f 	bl	8009e18 <GUI_DrawVLine>
 800351a:	f1ba 0f00 	cmp.w	sl, #0
 800351e:	d018      	beq.n	8003552 <GRAPH_Callback+0x372>
 8003520:	9802      	ldr	r0, [sp, #8]
 8003522:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8003526:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800352a:	9805      	ldr	r0, [sp, #20]
 800352c:	ebca 0103 	rsb	r1, sl, r3
 8003530:	3101      	adds	r1, #1
 8003532:	ebc0 0a02 	rsb	sl, r0, r2
 8003536:	458a      	cmp	sl, r1
 8003538:	db0b      	blt.n	8003552 <GRAPH_Callback+0x372>
 800353a:	f9bd 0050 	ldrsh.w	r0, [sp, #80]	; 0x50
 800353e:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8003542:	f007 f8eb 	bl	800a71c <GUI_ClearRect>
 8003546:	f108 0001 	add.w	r0, r8, #1
 800354a:	1e79      	subs	r1, r7, #1
 800354c:	1c72      	adds	r2, r6, #1
 800354e:	f006 fc09 	bl	8009d64 <GUI_DrawHLine>
 8003552:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003554:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003558:	b113      	cbz	r3, 8003560 <GRAPH_Callback+0x380>
 800355a:	4620      	mov	r0, r4
 800355c:	2101      	movs	r1, #1
 800355e:	4798      	blx	r3
 8003560:	a810      	add	r0, sp, #64	; 0x40
 8003562:	f001 fbd9 	bl	8004d18 <WM_SetUserClipRect>
 8003566:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003568:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800356a:	f009 f8b7 	bl	800c6dc <GUI_ARRAY_GetNumItems>
 800356e:	2500      	movs	r5, #0
 8003570:	4607      	mov	r7, r0
 8003572:	42bd      	cmp	r5, r7
 8003574:	d01a      	beq.n	80035ac <GRAPH_Callback+0x3cc>
 8003576:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003578:	4629      	mov	r1, r5
 800357a:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800357c:	f009 f930 	bl	800c7e0 <GUI_ARRAY_GethItem>
 8003580:	f007 ff72 	bl	800b468 <GUI_ALLOC_LockH>
 8003584:	9014      	str	r0, [sp, #80]	; 0x50
 8003586:	b178      	cbz	r0, 80035a8 <GRAPH_Callback+0x3c8>
 8003588:	6806      	ldr	r6, [r0, #0]
 800358a:	4630      	mov	r0, r6
 800358c:	f007 ff6c 	bl	800b468 <GUI_ALLOC_LockH>
 8003590:	900c      	str	r0, [sp, #48]	; 0x30
 8003592:	b130      	cbz	r0, 80035a2 <GRAPH_Callback+0x3c2>
 8003594:	6803      	ldr	r3, [r0, #0]
 8003596:	9902      	ldr	r1, [sp, #8]
 8003598:	4630      	mov	r0, r6
 800359a:	4798      	blx	r3
 800359c:	a80c      	add	r0, sp, #48	; 0x30
 800359e:	f007 ff71 	bl	800b484 <GUI_ALLOC_UnlockH>
 80035a2:	a814      	add	r0, sp, #80	; 0x50
 80035a4:	f007 ff6e 	bl	800b484 <GUI_ALLOC_UnlockH>
 80035a8:	3501      	adds	r5, #1
 80035aa:	e7e2      	b.n	8003572 <GRAPH_Callback+0x392>
 80035ac:	a812      	add	r0, sp, #72	; 0x48
 80035ae:	f001 fbb3 	bl	8004d18 <WM_SetUserClipRect>
 80035b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80035b4:	6e98      	ldr	r0, [r3, #104]	; 0x68
 80035b6:	f009 f891 	bl	800c6dc <GUI_ARRAY_GetNumItems>
 80035ba:	2500      	movs	r5, #0
 80035bc:	4607      	mov	r7, r0
 80035be:	42bd      	cmp	r5, r7
 80035c0:	d01a      	beq.n	80035f8 <GRAPH_Callback+0x418>
 80035c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80035c4:	4629      	mov	r1, r5
 80035c6:	6e98      	ldr	r0, [r3, #104]	; 0x68
 80035c8:	f009 f90a 	bl	800c7e0 <GUI_ARRAY_GethItem>
 80035cc:	f007 ff4c 	bl	800b468 <GUI_ALLOC_LockH>
 80035d0:	9014      	str	r0, [sp, #80]	; 0x50
 80035d2:	b178      	cbz	r0, 80035f4 <GRAPH_Callback+0x414>
 80035d4:	6806      	ldr	r6, [r0, #0]
 80035d6:	4630      	mov	r0, r6
 80035d8:	f007 ff46 	bl	800b468 <GUI_ALLOC_LockH>
 80035dc:	900b      	str	r0, [sp, #44]	; 0x2c
 80035de:	b130      	cbz	r0, 80035ee <GRAPH_Callback+0x40e>
 80035e0:	6803      	ldr	r3, [r0, #0]
 80035e2:	9902      	ldr	r1, [sp, #8]
 80035e4:	4630      	mov	r0, r6
 80035e6:	4798      	blx	r3
 80035e8:	a80b      	add	r0, sp, #44	; 0x2c
 80035ea:	f007 ff4b 	bl	800b484 <GUI_ALLOC_UnlockH>
 80035ee:	a814      	add	r0, sp, #80	; 0x50
 80035f0:	f007 ff48 	bl	800b484 <GUI_ALLOC_UnlockH>
 80035f4:	3501      	adds	r5, #1
 80035f6:	e7e2      	b.n	80035be <GRAPH_Callback+0x3de>
 80035f8:	2000      	movs	r0, #0
 80035fa:	f001 fb8d 	bl	8004d18 <WM_SetUserClipRect>
 80035fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003600:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003604:	b113      	cbz	r3, 800360c <GRAPH_Callback+0x42c>
 8003606:	4620      	mov	r0, r4
 8003608:	2102      	movs	r1, #2
 800360a:	4798      	blx	r3
 800360c:	a80d      	add	r0, sp, #52	; 0x34
 800360e:	e046      	b.n	800369e <GRAPH_Callback+0x4be>
 8003610:	4620      	mov	r0, r4
 8003612:	f007 ff29 	bl	800b468 <GUI_ALLOC_LockH>
 8003616:	9012      	str	r0, [sp, #72]	; 0x48
 8003618:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800361a:	f009 f85f 	bl	800c6dc <GUI_ARRAY_GetNumItems>
 800361e:	2400      	movs	r4, #0
 8003620:	4606      	mov	r6, r0
 8003622:	42b4      	cmp	r4, r6
 8003624:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003626:	da18      	bge.n	800365a <GRAPH_Callback+0x47a>
 8003628:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800362a:	4621      	mov	r1, r4
 800362c:	f009 f8d8 	bl	800c7e0 <GUI_ARRAY_GethItem>
 8003630:	f007 ff1a 	bl	800b468 <GUI_ALLOC_LockH>
 8003634:	9014      	str	r0, [sp, #80]	; 0x50
 8003636:	b170      	cbz	r0, 8003656 <GRAPH_Callback+0x476>
 8003638:	6805      	ldr	r5, [r0, #0]
 800363a:	4628      	mov	r0, r5
 800363c:	f007 ff14 	bl	800b468 <GUI_ALLOC_LockH>
 8003640:	9010      	str	r0, [sp, #64]	; 0x40
 8003642:	b128      	cbz	r0, 8003650 <GRAPH_Callback+0x470>
 8003644:	6847      	ldr	r7, [r0, #4]
 8003646:	a810      	add	r0, sp, #64	; 0x40
 8003648:	f007 ff1c 	bl	800b484 <GUI_ALLOC_UnlockH>
 800364c:	4628      	mov	r0, r5
 800364e:	47b8      	blx	r7
 8003650:	a814      	add	r0, sp, #80	; 0x50
 8003652:	f007 ff17 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003656:	3401      	adds	r4, #1
 8003658:	e7e3      	b.n	8003622 <GRAPH_Callback+0x442>
 800365a:	6e98      	ldr	r0, [r3, #104]	; 0x68
 800365c:	f009 f83e 	bl	800c6dc <GUI_ARRAY_GetNumItems>
 8003660:	2400      	movs	r4, #0
 8003662:	4605      	mov	r5, r0
 8003664:	42ac      	cmp	r4, r5
 8003666:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003668:	da0f      	bge.n	800368a <GRAPH_Callback+0x4aa>
 800366a:	6e98      	ldr	r0, [r3, #104]	; 0x68
 800366c:	4621      	mov	r1, r4
 800366e:	f009 f8b7 	bl	800c7e0 <GUI_ARRAY_GethItem>
 8003672:	f007 fef9 	bl	800b468 <GUI_ALLOC_LockH>
 8003676:	9014      	str	r0, [sp, #80]	; 0x50
 8003678:	b128      	cbz	r0, 8003686 <GRAPH_Callback+0x4a6>
 800367a:	6800      	ldr	r0, [r0, #0]
 800367c:	f007 ff2e 	bl	800b4dc <GUI_ALLOC_Free>
 8003680:	a814      	add	r0, sp, #80	; 0x50
 8003682:	f007 feff 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003686:	3401      	adds	r4, #1
 8003688:	e7ec      	b.n	8003664 <GRAPH_Callback+0x484>
 800368a:	ac16      	add	r4, sp, #88	; 0x58
 800368c:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800368e:	f009 f87e 	bl	800c78e <GUI_ARRAY_Delete>
 8003692:	f854 3d10 	ldr.w	r3, [r4, #-16]!
 8003696:	6e98      	ldr	r0, [r3, #104]	; 0x68
 8003698:	f009 f879 	bl	800c78e <GUI_ARRAY_Delete>
 800369c:	4620      	mov	r0, r4
 800369e:	f007 fef1 	bl	800b484 <GUI_ALLOC_UnlockH>
 80036a2:	e015      	b.n	80036d0 <GRAPH_Callback+0x4f0>
 80036a4:	68eb      	ldr	r3, [r5, #12]
 80036a6:	2b05      	cmp	r3, #5
 80036a8:	d10f      	bne.n	80036ca <GRAPH_Callback+0x4ea>
 80036aa:	4620      	mov	r0, r4
 80036ac:	68ae      	ldr	r6, [r5, #8]
 80036ae:	f001 f955 	bl	800495c <WM_GetScrollbarV>
 80036b2:	4286      	cmp	r6, r0
 80036b4:	d005      	beq.n	80036c2 <GRAPH_Callback+0x4e2>
 80036b6:	4620      	mov	r0, r4
 80036b8:	68ae      	ldr	r6, [r5, #8]
 80036ba:	f001 f94a 	bl	8004952 <WM_GetScrollbarH>
 80036be:	4286      	cmp	r6, r0
 80036c0:	d103      	bne.n	80036ca <GRAPH_Callback+0x4ea>
 80036c2:	6868      	ldr	r0, [r5, #4]
 80036c4:	68a9      	ldr	r1, [r5, #8]
 80036c6:	f7ff fd6f 	bl	80031a8 <_OnScrollValueChanged>
 80036ca:	4628      	mov	r0, r5
 80036cc:	f002 fd12 	bl	80060f4 <WM_DefaultProc>
 80036d0:	b017      	add	sp, #92	; 0x5c
 80036d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080036d6 <GRAPH__InvalidateGraph>:
 80036d6:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80036da:	4604      	mov	r4, r0
 80036dc:	f007 fec4 	bl	800b468 <GUI_ALLOC_LockH>
 80036e0:	4603      	mov	r3, r0
 80036e2:	a804      	add	r0, sp, #16
 80036e4:	f8d3 8054 	ldr.w	r8, [r3, #84]	; 0x54
 80036e8:	f840 3d0c 	str.w	r3, [r0, #-12]!
 80036ec:	6d9f      	ldr	r7, [r3, #88]	; 0x58
 80036ee:	6dde      	ldr	r6, [r3, #92]	; 0x5c
 80036f0:	6e1d      	ldr	r5, [r3, #96]	; 0x60
 80036f2:	f007 fec7 	bl	800b484 <GUI_ALLOC_UnlockH>
 80036f6:	4620      	mov	r0, r4
 80036f8:	a902      	add	r1, sp, #8
 80036fa:	f001 f953 	bl	80049a4 <WM_GetInsideRectExScrollbar>
 80036fe:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8003702:	4498      	add	r8, r3
 8003704:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8003708:	f8ad 8008 	strh.w	r8, [sp, #8]
 800370c:	441f      	add	r7, r3
 800370e:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8003712:	f8ad 700a 	strh.w	r7, [sp, #10]
 8003716:	1b9e      	subs	r6, r3, r6
 8003718:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800371c:	f8ad 600c 	strh.w	r6, [sp, #12]
 8003720:	1b5d      	subs	r5, r3, r5
 8003722:	4620      	mov	r0, r4
 8003724:	a902      	add	r1, sp, #8
 8003726:	f8ad 500e 	strh.w	r5, [sp, #14]
 800372a:	f002 f879 	bl	8005820 <WM_InvalidateRect>
 800372e:	b004      	add	sp, #16
 8003730:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003734 <GRAPH__AddValue>:
 8003734:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003736:	461d      	mov	r5, r3
 8003738:	6883      	ldr	r3, [r0, #8]
 800373a:	4604      	mov	r4, r0
 800373c:	460e      	mov	r6, r1
 800373e:	4617      	mov	r7, r2
 8003740:	b323      	cbz	r3, 800378c <GRAPH__AddValue+0x58>
 8003742:	6900      	ldr	r0, [r0, #16]
 8003744:	6963      	ldr	r3, [r4, #20]
 8003746:	4298      	cmp	r0, r3
 8003748:	d10e      	bne.n	8003768 <GRAPH__AddValue+0x34>
 800374a:	1e42      	subs	r2, r0, #1
 800374c:	436a      	muls	r2, r5
 800374e:	4608      	mov	r0, r1
 8003750:	4429      	add	r1, r5
 8003752:	f00c faaa 	bl	800fcaa <memmove>
 8003756:	6920      	ldr	r0, [r4, #16]
 8003758:	3801      	subs	r0, #1
 800375a:	fb00 6005 	mla	r0, r0, r5, r6
 800375e:	4639      	mov	r1, r7
 8003760:	462a      	mov	r2, r5
 8003762:	f00c faa2 	bl	800fcaa <memmove>
 8003766:	e00c      	b.n	8003782 <GRAPH__AddValue+0x4e>
 8003768:	1c43      	adds	r3, r0, #1
 800376a:	6123      	str	r3, [r4, #16]
 800376c:	fb00 1005 	mla	r0, r0, r5, r1
 8003770:	4611      	mov	r1, r2
 8003772:	462a      	mov	r2, r5
 8003774:	f00c fa99 	bl	800fcaa <memmove>
 8003778:	68e3      	ldr	r3, [r4, #12]
 800377a:	b113      	cbz	r3, 8003782 <GRAPH__AddValue+0x4e>
 800377c:	4620      	mov	r0, r4
 800377e:	4798      	blx	r3
 8003780:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003782:	68a0      	ldr	r0, [r4, #8]
 8003784:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8003788:	f7ff bfa5 	b.w	80036d6 <GRAPH__InvalidateGraph>
 800378c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003790 <GRAPH_CreateUser>:
 8003790:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003792:	b087      	sub	sp, #28
 8003794:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8003796:	9400      	str	r4, [sp, #0]
 8003798:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800379a:	9401      	str	r4, [sp, #4]
 800379c:	4c17      	ldr	r4, [pc, #92]	; (80037fc <GRAPH_CreateUser+0x6c>)
 800379e:	9402      	str	r4, [sp, #8]
 80037a0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80037a2:	346c      	adds	r4, #108	; 0x6c
 80037a4:	9403      	str	r4, [sp, #12]
 80037a6:	f002 f8a5 	bl	80058f4 <WM_CreateWindowAsChild>
 80037aa:	4606      	mov	r6, r0
 80037ac:	b318      	cbz	r0, 80037f6 <GRAPH_CreateUser+0x66>
 80037ae:	f009 f82a 	bl	800c806 <GUI_ARRAY_Create>
 80037b2:	4605      	mov	r5, r0
 80037b4:	f009 f827 	bl	800c806 <GUI_ARRAY_Create>
 80037b8:	4604      	mov	r4, r0
 80037ba:	4630      	mov	r0, r6
 80037bc:	f007 fe54 	bl	800b468 <GUI_ALLOC_LockH>
 80037c0:	6645      	str	r5, [r0, #100]	; 0x64
 80037c2:	4d0f      	ldr	r5, [pc, #60]	; (8003800 <GRAPH_CreateUser+0x70>)
 80037c4:	6684      	str	r4, [r0, #104]	; 0x68
 80037c6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80037c8:	9005      	str	r0, [sp, #20]
 80037ca:	2200      	movs	r2, #0
 80037cc:	f008 f9d2 	bl	800bb74 <WIDGET__Init>
 80037d0:	af06      	add	r7, sp, #24
 80037d2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80037d4:	f857 ed04 	ldr.w	lr, [r7, #-4]!
 80037d8:	f10e 0434 	add.w	r4, lr, #52	; 0x34
 80037dc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80037de:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80037e0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80037e2:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80037e6:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80037ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80037ec:	f8ae 3078 	strh.w	r3, [lr, #120]	; 0x78
 80037f0:	4638      	mov	r0, r7
 80037f2:	f007 fe47 	bl	800b484 <GUI_ALLOC_UnlockH>
 80037f6:	4630      	mov	r0, r6
 80037f8:	b007      	add	sp, #28
 80037fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80037fc:	080031e1 	.word	0x080031e1
 8003800:	20000038 	.word	0x20000038

08003804 <GRAPH_CreateIndirect>:
 8003804:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003806:	b087      	sub	sp, #28
 8003808:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 800380c:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8003810:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8003814:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8003818:	9100      	str	r1, [sp, #0]
 800381a:	2100      	movs	r1, #0
 800381c:	9101      	str	r1, [sp, #4]
 800381e:	8a41      	ldrh	r1, [r0, #18]
 8003820:	9102      	str	r1, [sp, #8]
 8003822:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8003826:	9103      	str	r1, [sp, #12]
 8003828:	6984      	ldr	r4, [r0, #24]
 800382a:	9404      	str	r4, [sp, #16]
 800382c:	eb0e 0002 	add.w	r0, lr, r2
 8003830:	18f9      	adds	r1, r7, r3
 8003832:	4632      	mov	r2, r6
 8003834:	462b      	mov	r3, r5
 8003836:	f7ff ffab 	bl	8003790 <GRAPH_CreateUser>
 800383a:	b007      	add	sp, #28
 800383c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800383e <GRAPH_AttachData>:
 800383e:	b530      	push	{r4, r5, lr}
 8003840:	b085      	sub	sp, #20
 8003842:	4604      	mov	r4, r0
 8003844:	9101      	str	r1, [sp, #4]
 8003846:	b1d0      	cbz	r0, 800387e <GRAPH_AttachData+0x40>
 8003848:	f007 fe0e 	bl	800b468 <GUI_ALLOC_LockH>
 800384c:	ab04      	add	r3, sp, #16
 800384e:	6e45      	ldr	r5, [r0, #100]	; 0x64
 8003850:	f843 0d04 	str.w	r0, [r3, #-4]!
 8003854:	4618      	mov	r0, r3
 8003856:	f007 fe15 	bl	800b484 <GUI_ALLOC_UnlockH>
 800385a:	9801      	ldr	r0, [sp, #4]
 800385c:	f007 fe04 	bl	800b468 <GUI_ALLOC_LockH>
 8003860:	4602      	mov	r2, r0
 8003862:	a804      	add	r0, sp, #16
 8003864:	6094      	str	r4, [r2, #8]
 8003866:	f840 2d08 	str.w	r2, [r0, #-8]!
 800386a:	f007 fe0b 	bl	800b484 <GUI_ALLOC_UnlockH>
 800386e:	4628      	mov	r0, r5
 8003870:	a901      	add	r1, sp, #4
 8003872:	2204      	movs	r2, #4
 8003874:	f008 ff41 	bl	800c6fa <GUI_ARRAY_AddItem>
 8003878:	4620      	mov	r0, r4
 800387a:	f002 f80d 	bl	8005898 <WM_InvalidateWindow>
 800387e:	b005      	add	sp, #20
 8003880:	bd30      	pop	{r4, r5, pc}

08003882 <GRAPH_SetGridVis>:
 8003882:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003884:	460e      	mov	r6, r1
 8003886:	4605      	mov	r5, r0
 8003888:	b178      	cbz	r0, 80038aa <GRAPH_SetGridVis+0x28>
 800388a:	f007 fded 	bl	800b468 <GUI_ALLOC_LockH>
 800388e:	f890 406c 	ldrb.w	r4, [r0, #108]	; 0x6c
 8003892:	9001      	str	r0, [sp, #4]
 8003894:	42b4      	cmp	r4, r6
 8003896:	d004      	beq.n	80038a2 <GRAPH_SetGridVis+0x20>
 8003898:	f880 606c 	strb.w	r6, [r0, #108]	; 0x6c
 800389c:	4628      	mov	r0, r5
 800389e:	f001 fffb 	bl	8005898 <WM_InvalidateWindow>
 80038a2:	a801      	add	r0, sp, #4
 80038a4:	f007 fdee 	bl	800b484 <GUI_ALLOC_UnlockH>
 80038a8:	e000      	b.n	80038ac <GRAPH_SetGridVis+0x2a>
 80038aa:	4604      	mov	r4, r0
 80038ac:	4620      	mov	r0, r4
 80038ae:	b002      	add	sp, #8
 80038b0:	bd70      	pop	{r4, r5, r6, pc}

080038b2 <GRAPH_SetBorder>:
 80038b2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80038b6:	460f      	mov	r7, r1
 80038b8:	4690      	mov	r8, r2
 80038ba:	461d      	mov	r5, r3
 80038bc:	4606      	mov	r6, r0
 80038be:	b198      	cbz	r0, 80038e8 <GRAPH_SetBorder+0x36>
 80038c0:	f007 fdd2 	bl	800b468 <GUI_ALLOC_LockH>
 80038c4:	4604      	mov	r4, r0
 80038c6:	a802      	add	r0, sp, #8
 80038c8:	9b08      	ldr	r3, [sp, #32]
 80038ca:	6623      	str	r3, [r4, #96]	; 0x60
 80038cc:	f840 4d04 	str.w	r4, [r0, #-4]!
 80038d0:	6567      	str	r7, [r4, #84]	; 0x54
 80038d2:	f8c4 8058 	str.w	r8, [r4, #88]	; 0x58
 80038d6:	65e5      	str	r5, [r4, #92]	; 0x5c
 80038d8:	f007 fdd4 	bl	800b484 <GUI_ALLOC_UnlockH>
 80038dc:	4630      	mov	r0, r6
 80038de:	f7ff fc05 	bl	80030ec <_ManageScrollbars>
 80038e2:	4630      	mov	r0, r6
 80038e4:	f001 ffd8 	bl	8005898 <WM_InvalidateWindow>
 80038e8:	b002      	add	sp, #8
 80038ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080038ee <FRAMEWIN__GetBorderSize>:
 80038ee:	b570      	push	{r4, r5, r6, lr}
 80038f0:	b08a      	sub	sp, #40	; 0x28
 80038f2:	4605      	mov	r5, r0
 80038f4:	460c      	mov	r4, r1
 80038f6:	f007 fdb7 	bl	800b468 <GUI_ALLOC_LockH>
 80038fa:	ab0a      	add	r3, sp, #40	; 0x28
 80038fc:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 80038fe:	f843 0d28 	str.w	r0, [r3, #-40]!
 8003902:	4668      	mov	r0, sp
 8003904:	6896      	ldr	r6, [r2, #8]
 8003906:	f007 fdbd 	bl	800b484 <GUI_ALLOC_UnlockH>
 800390a:	9501      	str	r5, [sp, #4]
 800390c:	2c03      	cmp	r4, #3
 800390e:	d80b      	bhi.n	8003928 <FRAMEWIN__GetBorderSize+0x3a>
 8003910:	e8df f004 	tbb	[pc, r4]
 8003914:	08060402 	.word	0x08060402
 8003918:	2318      	movs	r3, #24
 800391a:	e004      	b.n	8003926 <FRAMEWIN__GetBorderSize+0x38>
 800391c:	2316      	movs	r3, #22
 800391e:	e002      	b.n	8003926 <FRAMEWIN__GetBorderSize+0x38>
 8003920:	2315      	movs	r3, #21
 8003922:	e000      	b.n	8003926 <FRAMEWIN__GetBorderSize+0x38>
 8003924:	2317      	movs	r3, #23
 8003926:	9302      	str	r3, [sp, #8]
 8003928:	6873      	ldr	r3, [r6, #4]
 800392a:	a801      	add	r0, sp, #4
 800392c:	4798      	blx	r3
 800392e:	b00a      	add	sp, #40	; 0x28
 8003930:	bd70      	pop	{r4, r5, r6, pc}

08003932 <_SetActive>:
 8003932:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003934:	4604      	mov	r4, r0
 8003936:	460d      	mov	r5, r1
 8003938:	f007 fd96 	bl	800b468 <GUI_ALLOC_LockH>
 800393c:	9001      	str	r0, [sp, #4]
 800393e:	f8b0 207c 	ldrh.w	r2, [r0, #124]	; 0x7c
 8003942:	b125      	cbz	r5, 800394e <_SetActive+0x1c>
 8003944:	0711      	lsls	r1, r2, #28
 8003946:	d40b      	bmi.n	8003960 <_SetActive+0x2e>
 8003948:	f042 0208 	orr.w	r2, r2, #8
 800394c:	e003      	b.n	8003956 <_SetActive+0x24>
 800394e:	0713      	lsls	r3, r2, #28
 8003950:	d506      	bpl.n	8003960 <_SetActive+0x2e>
 8003952:	f022 0208 	bic.w	r2, r2, #8
 8003956:	f8a0 207c 	strh.w	r2, [r0, #124]	; 0x7c
 800395a:	4620      	mov	r0, r4
 800395c:	f001 ff9c 	bl	8005898 <WM_InvalidateWindow>
 8003960:	a801      	add	r0, sp, #4
 8003962:	f007 fd8f 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003966:	b003      	add	sp, #12
 8003968:	bd30      	pop	{r4, r5, pc}

0800396a <FRAMEWIN__cbClient>:
 800396a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800396e:	6845      	ldr	r5, [r0, #4]
 8003970:	b087      	sub	sp, #28
 8003972:	4604      	mov	r4, r0
 8003974:	4628      	mov	r0, r5
 8003976:	f000 ffa1 	bl	80048bc <WM_GetParent>
 800397a:	4681      	mov	r9, r0
 800397c:	f007 fd74 	bl	800b468 <GUI_ALLOC_LockH>
 8003980:	4603      	mov	r3, r0
 8003982:	a806      	add	r0, sp, #24
 8003984:	6e5f      	ldr	r7, [r3, #100]	; 0x64
 8003986:	f840 3d14 	str.w	r3, [r0, #-20]!
 800398a:	6c9e      	ldr	r6, [r3, #72]	; 0x48
 800398c:	f8d3 8080 	ldr.w	r8, [r3, #128]	; 0x80
 8003990:	f007 fd78 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003994:	6823      	ldr	r3, [r4, #0]
 8003996:	2b17      	cmp	r3, #23
 8003998:	d053      	beq.n	8003a42 <FRAMEWIN__cbClient+0xd8>
 800399a:	dc09      	bgt.n	80039b0 <FRAMEWIN__cbClient+0x46>
 800399c:	2b0f      	cmp	r3, #15
 800399e:	d014      	beq.n	80039ca <FRAMEWIN__cbClient+0x60>
 80039a0:	dc02      	bgt.n	80039a8 <FRAMEWIN__cbClient+0x3e>
 80039a2:	2b0e      	cmp	r3, #14
 80039a4:	d034      	beq.n	8003a10 <FRAMEWIN__cbClient+0xa6>
 80039a6:	e046      	b.n	8003a36 <FRAMEWIN__cbClient+0xcc>
 80039a8:	3b14      	subs	r3, #20
 80039aa:	2b01      	cmp	r3, #1
 80039ac:	d949      	bls.n	8003a42 <FRAMEWIN__cbClient+0xd8>
 80039ae:	e042      	b.n	8003a36 <FRAMEWIN__cbClient+0xcc>
 80039b0:	2b1f      	cmp	r3, #31
 80039b2:	d028      	beq.n	8003a06 <FRAMEWIN__cbClient+0x9c>
 80039b4:	dc02      	bgt.n	80039bc <FRAMEWIN__cbClient+0x52>
 80039b6:	2b1e      	cmp	r3, #30
 80039b8:	d01a      	beq.n	80039f0 <FRAMEWIN__cbClient+0x86>
 80039ba:	e03c      	b.n	8003a36 <FRAMEWIN__cbClient+0xcc>
 80039bc:	2b22      	cmp	r3, #34	; 0x22
 80039be:	d038      	beq.n	8003a32 <FRAMEWIN__cbClient+0xc8>
 80039c0:	2b31      	cmp	r3, #49	; 0x31
 80039c2:	d138      	bne.n	8003a36 <FRAMEWIN__cbClient+0xcc>
 80039c4:	2300      	movs	r3, #0
 80039c6:	60e3      	str	r3, [r4, #12]
 80039c8:	e03e      	b.n	8003a48 <FRAMEWIN__cbClient+0xde>
 80039ca:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 80039ce:	429e      	cmp	r6, r3
 80039d0:	d004      	beq.n	80039dc <FRAMEWIN__cbClient+0x72>
 80039d2:	4630      	mov	r0, r6
 80039d4:	f005 f9c4 	bl	8008d60 <LCD_SetBkColor>
 80039d8:	f006 fed2 	bl	800a780 <GUI_Clear>
 80039dc:	2f00      	cmp	r7, #0
 80039de:	d033      	beq.n	8003a48 <FRAMEWIN__cbClient+0xde>
 80039e0:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80039e4:	ae02      	add	r6, sp, #8
 80039e6:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 80039ea:	9503      	str	r5, [sp, #12]
 80039ec:	4630      	mov	r0, r6
 80039ee:	e026      	b.n	8003a3e <FRAMEWIN__cbClient+0xd4>
 80039f0:	68e3      	ldr	r3, [r4, #12]
 80039f2:	b34b      	cbz	r3, 8003a48 <FRAMEWIN__cbClient+0xde>
 80039f4:	f1b8 0f00 	cmp.w	r8, #0
 80039f8:	d017      	beq.n	8003a2a <FRAMEWIN__cbClient+0xc0>
 80039fa:	45a8      	cmp	r8, r5
 80039fc:	d015      	beq.n	8003a2a <FRAMEWIN__cbClient+0xc0>
 80039fe:	4640      	mov	r0, r8
 8003a00:	f001 f90c 	bl	8004c1c <WM_SetFocus>
 8003a04:	e020      	b.n	8003a48 <FRAMEWIN__cbClient+0xde>
 8003a06:	4648      	mov	r0, r9
 8003a08:	4621      	mov	r1, r4
 8003a0a:	f008 f8f8 	bl	800bbfe <WIDGET_HandleActive>
 8003a0e:	e01b      	b.n	8003a48 <FRAMEWIN__cbClient+0xde>
 8003a10:	68e3      	ldr	r3, [r4, #12]
 8003a12:	685a      	ldr	r2, [r3, #4]
 8003a14:	2a00      	cmp	r2, #0
 8003a16:	dd0e      	ble.n	8003a36 <FRAMEWIN__cbClient+0xcc>
 8003a18:	681b      	ldr	r3, [r3, #0]
 8003a1a:	2b09      	cmp	r3, #9
 8003a1c:	d005      	beq.n	8003a2a <FRAMEWIN__cbClient+0xc0>
 8003a1e:	2b0a      	cmp	r3, #10
 8003a20:	d109      	bne.n	8003a36 <FRAMEWIN__cbClient+0xcc>
 8003a22:	4628      	mov	r0, r5
 8003a24:	f000 fcf7 	bl	8004416 <WM_SetFocusOnPrevChild>
 8003a28:	e00e      	b.n	8003a48 <FRAMEWIN__cbClient+0xde>
 8003a2a:	4628      	mov	r0, r5
 8003a2c:	f000 fd22 	bl	8004474 <WM_SetFocusOnNextChild>
 8003a30:	e00a      	b.n	8003a48 <FRAMEWIN__cbClient+0xde>
 8003a32:	60e6      	str	r6, [r4, #12]
 8003a34:	e008      	b.n	8003a48 <FRAMEWIN__cbClient+0xde>
 8003a36:	b127      	cbz	r7, 8003a42 <FRAMEWIN__cbClient+0xd8>
 8003a38:	f8c4 9004 	str.w	r9, [r4, #4]
 8003a3c:	4620      	mov	r0, r4
 8003a3e:	47b8      	blx	r7
 8003a40:	e002      	b.n	8003a48 <FRAMEWIN__cbClient+0xde>
 8003a42:	4620      	mov	r0, r4
 8003a44:	f002 fb56 	bl	80060f4 <WM_DefaultProc>
 8003a48:	b007      	add	sp, #28
 8003a4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08003a4e <FRAMEWIN__CalcTitleHeight>:
 8003a4e:	b508      	push	{r3, lr}
 8003a50:	4603      	mov	r3, r0
 8003a52:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 8003a54:	f000 0020 	and.w	r0, r0, #32
 8003a58:	b280      	uxth	r0, r0
 8003a5a:	b130      	cbz	r0, 8003a6a <FRAMEWIN__CalcTitleHeight+0x1c>
 8003a5c:	f9b3 0054 	ldrsh.w	r0, [r3, #84]	; 0x54
 8003a60:	b918      	cbnz	r0, 8003a6a <FRAMEWIN__CalcTitleHeight+0x1c>
 8003a62:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8003a64:	f006 ffe8 	bl	800aa38 <GUI_GetYSizeOfFont>
 8003a68:	3002      	adds	r0, #2
 8003a6a:	bd08      	pop	{r3, pc}

08003a6c <FRAMEWIN__GetTitleLimits>:
 8003a6c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8003a70:	4607      	mov	r7, r0
 8003a72:	460d      	mov	r5, r1
 8003a74:	4616      	mov	r6, r2
 8003a76:	f007 fcf7 	bl	800b468 <GUI_ALLOC_LockH>
 8003a7a:	4603      	mov	r3, r0
 8003a7c:	a802      	add	r0, sp, #8
 8003a7e:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8003a80:	f840 3d08 	str.w	r3, [r0, #-8]!
 8003a84:	f8d2 a008 	ldr.w	sl, [r2, #8]
 8003a88:	f8b3 8000 	ldrh.w	r8, [r3]
 8003a8c:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8003a90:	4668      	mov	r0, sp
 8003a92:	f007 fcf7 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003a96:	f8da 3000 	ldr.w	r3, [sl]
 8003a9a:	4638      	mov	r0, r7
 8003a9c:	2100      	movs	r1, #0
 8003a9e:	4798      	blx	r3
 8003aa0:	4682      	mov	sl, r0
 8003aa2:	4638      	mov	r0, r7
 8003aa4:	f000 fe69 	bl	800477a <WM_GetFirstChild>
 8003aa8:	4604      	mov	r4, r0
 8003aaa:	b340      	cbz	r0, 8003afe <FRAMEWIN__GetTitleLimits+0x92>
 8003aac:	4620      	mov	r0, r4
 8003aae:	f007 fcdb 	bl	800b468 <GUI_ALLOC_LockH>
 8003ab2:	4603      	mov	r3, r0
 8003ab4:	fa0f f289 	sxth.w	r2, r9
 8003ab8:	f9b3 7002 	ldrsh.w	r7, [r3, #2]
 8003abc:	9001      	str	r0, [sp, #4]
 8003abe:	1aba      	subs	r2, r7, r2
 8003ac0:	4552      	cmp	r2, sl
 8003ac2:	8800      	ldrh	r0, [r0, #0]
 8003ac4:	8899      	ldrh	r1, [r3, #4]
 8003ac6:	d113      	bne.n	8003af0 <FRAMEWIN__GetTitleLimits+0x84>
 8003ac8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003aca:	061b      	lsls	r3, r3, #24
 8003acc:	fa0f f288 	sxth.w	r2, r8
 8003ad0:	d507      	bpl.n	8003ae2 <FRAMEWIN__GetTitleLimits+0x76>
 8003ad2:	b203      	sxth	r3, r0
 8003ad4:	1a9a      	subs	r2, r3, r2
 8003ad6:	6833      	ldr	r3, [r6, #0]
 8003ad8:	429a      	cmp	r2, r3
 8003ada:	dc09      	bgt.n	8003af0 <FRAMEWIN__GetTitleLimits+0x84>
 8003adc:	3a01      	subs	r2, #1
 8003ade:	6032      	str	r2, [r6, #0]
 8003ae0:	e006      	b.n	8003af0 <FRAMEWIN__GetTitleLimits+0x84>
 8003ae2:	b20b      	sxth	r3, r1
 8003ae4:	1a9b      	subs	r3, r3, r2
 8003ae6:	682a      	ldr	r2, [r5, #0]
 8003ae8:	4293      	cmp	r3, r2
 8003aea:	bfa4      	itt	ge
 8003aec:	3301      	addge	r3, #1
 8003aee:	602b      	strge	r3, [r5, #0]
 8003af0:	a801      	add	r0, sp, #4
 8003af2:	f007 fcc7 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003af6:	4620      	mov	r0, r4
 8003af8:	f000 feb7 	bl	800486a <WM_GetNextSibling>
 8003afc:	e7d4      	b.n	8003aa8 <FRAMEWIN__GetTitleLimits+0x3c>
 8003afe:	b002      	add	sp, #8
 8003b00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08003b04 <FRAMEWIN__CalcPositions>:
 8003b04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b08:	b087      	sub	sp, #28
 8003b0a:	4604      	mov	r4, r0
 8003b0c:	460f      	mov	r7, r1
 8003b0e:	f007 fcab 	bl	800b468 <GUI_ALLOC_LockH>
 8003b12:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8003b14:	9003      	str	r0, [sp, #12]
 8003b16:	6895      	ldr	r5, [r2, #8]
 8003b18:	2101      	movs	r1, #1
 8003b1a:	682a      	ldr	r2, [r5, #0]
 8003b1c:	4620      	mov	r0, r4
 8003b1e:	4790      	blx	r2
 8003b20:	682a      	ldr	r2, [r5, #0]
 8003b22:	2103      	movs	r1, #3
 8003b24:	4683      	mov	fp, r0
 8003b26:	4620      	mov	r0, r4
 8003b28:	4790      	blx	r2
 8003b2a:	682a      	ldr	r2, [r5, #0]
 8003b2c:	2102      	movs	r1, #2
 8003b2e:	4681      	mov	r9, r0
 8003b30:	4620      	mov	r0, r4
 8003b32:	4790      	blx	r2
 8003b34:	682a      	ldr	r2, [r5, #0]
 8003b36:	9001      	str	r0, [sp, #4]
 8003b38:	2100      	movs	r1, #0
 8003b3a:	4620      	mov	r0, r4
 8003b3c:	4790      	blx	r2
 8003b3e:	4605      	mov	r5, r0
 8003b40:	9803      	ldr	r0, [sp, #12]
 8003b42:	f001 f94b 	bl	8004ddc <WM__GetWindowSizeX>
 8003b46:	4682      	mov	sl, r0
 8003b48:	9803      	ldr	r0, [sp, #12]
 8003b4a:	f001 f94e 	bl	8004dea <WM__GetWindowSizeY>
 8003b4e:	4680      	mov	r8, r0
 8003b50:	9803      	ldr	r0, [sp, #12]
 8003b52:	8e46      	ldrh	r6, [r0, #50]	; 0x32
 8003b54:	f006 0620 	and.w	r6, r6, #32
 8003b58:	b2b6      	uxth	r6, r6
 8003b5a:	b10e      	cbz	r6, 8003b60 <FRAMEWIN__CalcPositions+0x5c>
 8003b5c:	f9b0 6058 	ldrsh.w	r6, [r0, #88]	; 0x58
 8003b60:	f7ff ff75 	bl	8003a4e <FRAMEWIN__CalcTitleHeight>
 8003b64:	9903      	ldr	r1, [sp, #12]
 8003b66:	4602      	mov	r2, r0
 8003b68:	6ec8      	ldr	r0, [r1, #108]	; 0x6c
 8003b6a:	b118      	cbz	r0, 8003b74 <FRAMEWIN__CalcPositions+0x70>
 8003b6c:	9200      	str	r2, [sp, #0]
 8003b6e:	f001 f958 	bl	8004e22 <WM_GetWindowSizeY>
 8003b72:	9a00      	ldr	r2, [sp, #0]
 8003b74:	803a      	strh	r2, [r7, #0]
 8003b76:	b292      	uxth	r2, r2
 8003b78:	b2a9      	uxth	r1, r5
 8003b7a:	4416      	add	r6, r2
 8003b7c:	440e      	add	r6, r1
 8003b7e:	8078      	strh	r0, [r7, #2]
 8003b80:	4430      	add	r0, r6
 8003b82:	80f8      	strh	r0, [r7, #6]
 8003b84:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003b88:	9801      	ldr	r0, [sp, #4]
 8003b8a:	81fd      	strh	r5, [r7, #14]
 8003b8c:	3901      	subs	r1, #1
 8003b8e:	ebc9 090a 	rsb	r9, r9, sl
 8003b92:	f108 38ff 	add.w	r8, r8, #4294967295
 8003b96:	ebc0 0308 	rsb	r3, r0, r8
 8003b9a:	440a      	add	r2, r1
 8003b9c:	fa1f fb8b 	uxth.w	fp, fp
 8003ba0:	fa1f f989 	uxth.w	r9, r9
 8003ba4:	817b      	strh	r3, [r7, #10]
 8003ba6:	827a      	strh	r2, [r7, #18]
 8003ba8:	f8a7 b004 	strh.w	fp, [r7, #4]
 8003bac:	f8a7 9008 	strh.w	r9, [r7, #8]
 8003bb0:	f8a7 b00c 	strh.w	fp, [r7, #12]
 8003bb4:	f8a7 9010 	strh.w	r9, [r7, #16]
 8003bb8:	a803      	add	r0, sp, #12
 8003bba:	f007 fc63 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003bbe:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8003bc2:	9204      	str	r2, [sp, #16]
 8003bc4:	f9b7 2010 	ldrsh.w	r2, [r7, #16]
 8003bc8:	9205      	str	r2, [sp, #20]
 8003bca:	4620      	mov	r0, r4
 8003bcc:	aa05      	add	r2, sp, #20
 8003bce:	a904      	add	r1, sp, #16
 8003bd0:	f7ff ff4c 	bl	8003a6c <FRAMEWIN__GetTitleLimits>
 8003bd4:	9a04      	ldr	r2, [sp, #16]
 8003bd6:	81ba      	strh	r2, [r7, #12]
 8003bd8:	9a05      	ldr	r2, [sp, #20]
 8003bda:	823a      	strh	r2, [r7, #16]
 8003bdc:	b007      	add	sp, #28
 8003bde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08003be2 <FRAMEWIN_SetText>:
 8003be2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003be4:	460d      	mov	r5, r1
 8003be6:	4604      	mov	r4, r0
 8003be8:	b1c0      	cbz	r0, 8003c1c <FRAMEWIN_SetText+0x3a>
 8003bea:	f007 fc3d 	bl	800b468 <GUI_ALLOC_LockH>
 8003bee:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8003bf0:	9000      	str	r0, [sp, #0]
 8003bf2:	4668      	mov	r0, sp
 8003bf4:	9301      	str	r3, [sp, #4]
 8003bf6:	f007 fc45 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003bfa:	a801      	add	r0, sp, #4
 8003bfc:	4629      	mov	r1, r5
 8003bfe:	f005 f9b3 	bl	8008f68 <GUI__SetText>
 8003c02:	b158      	cbz	r0, 8003c1c <FRAMEWIN_SetText+0x3a>
 8003c04:	4620      	mov	r0, r4
 8003c06:	f007 fc2f 	bl	800b468 <GUI_ALLOC_LockH>
 8003c0a:	9b01      	ldr	r3, [sp, #4]
 8003c0c:	9000      	str	r0, [sp, #0]
 8003c0e:	6703      	str	r3, [r0, #112]	; 0x70
 8003c10:	4668      	mov	r0, sp
 8003c12:	f007 fc37 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003c16:	4620      	mov	r0, r4
 8003c18:	f001 fe3e 	bl	8005898 <WM_InvalidateWindow>
 8003c1c:	b003      	add	sp, #12
 8003c1e:	bd30      	pop	{r4, r5, pc}

08003c20 <FRAMEWIN_CreateUser>:
 8003c20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003c24:	b08b      	sub	sp, #44	; 0x2c
 8003c26:	f8dd 904c 	ldr.w	r9, [sp, #76]	; 0x4c
 8003c2a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8003c2c:	9400      	str	r4, [sp, #0]
 8003c2e:	f449 5480 	orr.w	r4, r9, #4096	; 0x1000
 8003c32:	9401      	str	r4, [sp, #4]
 8003c34:	4c33      	ldr	r4, [pc, #204]	; (8003d04 <FRAMEWIN_CreateUser+0xe4>)
 8003c36:	9402      	str	r4, [sp, #8]
 8003c38:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8003c3a:	3460      	adds	r4, #96	; 0x60
 8003c3c:	9403      	str	r4, [sp, #12]
 8003c3e:	f001 fe59 	bl	80058f4 <WM_CreateWindowAsChild>
 8003c42:	4606      	mov	r6, r0
 8003c44:	2800      	cmp	r0, #0
 8003c46:	d058      	beq.n	8003cfa <FRAMEWIN_CreateUser+0xda>
 8003c48:	f007 fc0e 	bl	800b468 <GUI_ALLOC_LockH>
 8003c4c:	4d2e      	ldr	r5, [pc, #184]	; (8003d08 <FRAMEWIN_CreateUser+0xe8>)
 8003c4e:	9915      	ldr	r1, [sp, #84]	; 0x54
 8003c50:	9004      	str	r0, [sp, #16]
 8003c52:	2230      	movs	r2, #48	; 0x30
 8003c54:	f007 ff8e 	bl	800bb74 <WIDGET__Init>
 8003c58:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8003c5c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003c5e:	f858 7d18 	ldr.w	r7, [r8, #-24]!
 8003c62:	f107 0434 	add.w	r4, r7, #52	; 0x34
 8003c66:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003c68:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003c6a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003c6c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8003c70:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8003c72:	4d26      	ldr	r5, [pc, #152]	; (8003d0c <FRAMEWIN_CreateUser+0xec>)
 8003c74:	e884 0003 	stmia.w	r4, {r0, r1}
 8003c78:	667b      	str	r3, [r7, #100]	; 0x64
 8003c7a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8003c7c:	f8a7 307c 	strh.w	r3, [r7, #124]	; 0x7c
 8003c80:	2400      	movs	r4, #0
 8003c82:	682b      	ldr	r3, [r5, #0]
 8003c84:	65fb      	str	r3, [r7, #92]	; 0x5c
 8003c86:	f8c7 4080 	str.w	r4, [r7, #128]	; 0x80
 8003c8a:	66fc      	str	r4, [r7, #108]	; 0x6c
 8003c8c:	f8c7 4088 	str.w	r4, [r7, #136]	; 0x88
 8003c90:	4640      	mov	r0, r8
 8003c92:	f007 fbf7 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003c96:	4630      	mov	r0, r6
 8003c98:	a905      	add	r1, sp, #20
 8003c9a:	f7ff ff33 	bl	8003b04 <FRAMEWIN__CalcPositions>
 8003c9e:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 8003ca2:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 8003ca6:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8003caa:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8003cae:	9403      	str	r4, [sp, #12]
 8003cb0:	f241 7782 	movw	r7, #6018	; 0x1782
 8003cb4:	1a5b      	subs	r3, r3, r1
 8003cb6:	1a12      	subs	r2, r2, r0
 8003cb8:	9701      	str	r7, [sp, #4]
 8003cba:	4f15      	ldr	r7, [pc, #84]	; (8003d10 <FRAMEWIN_CreateUser+0xf0>)
 8003cbc:	9600      	str	r6, [sp, #0]
 8003cbe:	3201      	adds	r2, #1
 8003cc0:	3301      	adds	r3, #1
 8003cc2:	9702      	str	r7, [sp, #8]
 8003cc4:	f001 fe16 	bl	80058f4 <WM_CreateWindowAsChild>
 8003cc8:	682b      	ldr	r3, [r5, #0]
 8003cca:	4604      	mov	r4, r0
 8003ccc:	685b      	ldr	r3, [r3, #4]
 8003cce:	4630      	mov	r0, r6
 8003cd0:	4798      	blx	r3
 8003cd2:	4630      	mov	r0, r6
 8003cd4:	f007 fbc8 	bl	800b468 <GUI_ALLOC_LockH>
 8003cd8:	9004      	str	r0, [sp, #16]
 8003cda:	6684      	str	r4, [r0, #104]	; 0x68
 8003cdc:	4640      	mov	r0, r8
 8003cde:	f007 fbd1 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003ce2:	f242 0304 	movw	r3, #8196	; 0x2004
 8003ce6:	ea09 0303 	and.w	r3, r9, r3
 8003cea:	b913      	cbnz	r3, 8003cf2 <FRAMEWIN_CreateUser+0xd2>
 8003cec:	4630      	mov	r0, r6
 8003cee:	f000 fcfd 	bl	80046ec <WM_DisableMemdev>
 8003cf2:	4630      	mov	r0, r6
 8003cf4:	9916      	ldr	r1, [sp, #88]	; 0x58
 8003cf6:	f7ff ff74 	bl	8003be2 <FRAMEWIN_SetText>
 8003cfa:	4630      	mov	r0, r6
 8003cfc:	b00b      	add	sp, #44	; 0x2c
 8003cfe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003d02:	bf00      	nop
 8003d04:	08003d5f 	.word	0x08003d5f
 8003d08:	20000068 	.word	0x20000068
 8003d0c:	20000090 	.word	0x20000090
 8003d10:	0800396b 	.word	0x0800396b

08003d14 <FRAMEWIN_CreateIndirect>:
 8003d14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003d16:	b089      	sub	sp, #36	; 0x24
 8003d18:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8003d1c:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8003d20:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8003d24:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8003d28:	9100      	str	r1, [sp, #0]
 8003d2a:	2100      	movs	r1, #0
 8003d2c:	9101      	str	r1, [sp, #4]
 8003d2e:	8a41      	ldrh	r1, [r0, #18]
 8003d30:	9102      	str	r1, [sp, #8]
 8003d32:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8003d36:	9103      	str	r1, [sp, #12]
 8003d38:	6844      	ldr	r4, [r0, #4]
 8003d3a:	9404      	str	r4, [sp, #16]
 8003d3c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8003d3e:	9405      	str	r4, [sp, #20]
 8003d40:	6984      	ldr	r4, [r0, #24]
 8003d42:	9406      	str	r4, [sp, #24]
 8003d44:	eb0e 0002 	add.w	r0, lr, r2
 8003d48:	18f9      	adds	r1, r7, r3
 8003d4a:	4632      	mov	r2, r6
 8003d4c:	462b      	mov	r3, r5
 8003d4e:	f7ff ff67 	bl	8003c20 <FRAMEWIN_CreateUser>
 8003d52:	b009      	add	sp, #36	; 0x24
 8003d54:	bdf0      	pop	{r4, r5, r6, r7, pc}

08003d56 <FRAMEWIN_SetActive>:
 8003d56:	b108      	cbz	r0, 8003d5c <FRAMEWIN_SetActive+0x6>
 8003d58:	f7ff bdeb 	b.w	8003932 <_SetActive>
 8003d5c:	4770      	bx	lr

08003d5e <FRAMEWIN_Callback>:
 8003d5e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003d62:	6844      	ldr	r4, [r0, #4]
 8003d64:	b086      	sub	sp, #24
 8003d66:	4605      	mov	r5, r0
 8003d68:	4620      	mov	r0, r4
 8003d6a:	f007 fb7d 	bl	800b468 <GUI_ALLOC_LockH>
 8003d6e:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 8003d70:	9000      	str	r0, [sp, #0]
 8003d72:	f8d0 7088 	ldr.w	r7, [r0, #136]	; 0x88
 8003d76:	f8d0 6080 	ldr.w	r6, [r0, #128]	; 0x80
 8003d7a:	f8d0 8068 	ldr.w	r8, [r0, #104]	; 0x68
 8003d7e:	f8b0 907c 	ldrh.w	r9, [r0, #124]	; 0x7c
 8003d82:	b113      	cbz	r3, 8003d8a <FRAMEWIN_Callback+0x2c>
 8003d84:	f8d3 a000 	ldr.w	sl, [r3]
 8003d88:	e000      	b.n	8003d8c <FRAMEWIN_Callback+0x2e>
 8003d8a:	469a      	mov	sl, r3
 8003d8c:	4668      	mov	r0, sp
 8003d8e:	f007 fb79 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003d92:	b13f      	cbz	r7, 8003da4 <FRAMEWIN_Callback+0x46>
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	4628      	mov	r0, r5
 8003d98:	4798      	blx	r3
 8003d9a:	2800      	cmp	r0, #0
 8003d9c:	f040 811d 	bne.w	8003fda <FRAMEWIN_Callback+0x27c>
 8003da0:	683f      	ldr	r7, [r7, #0]
 8003da2:	e7f6      	b.n	8003d92 <FRAMEWIN_Callback+0x34>
 8003da4:	682b      	ldr	r3, [r5, #0]
 8003da6:	2b17      	cmp	r3, #23
 8003da8:	f000 808a 	beq.w	8003ec0 <FRAMEWIN_Callback+0x162>
 8003dac:	dc18      	bgt.n	8003de0 <FRAMEWIN_Callback+0x82>
 8003dae:	2b0f      	cmp	r3, #15
 8003db0:	d043      	beq.n	8003e3a <FRAMEWIN_Callback+0xdc>
 8003db2:	dc06      	bgt.n	8003dc2 <FRAMEWIN_Callback+0x64>
 8003db4:	2b0b      	cmp	r3, #11
 8003db6:	f000 80fe 	beq.w	8003fb6 <FRAMEWIN_Callback+0x258>
 8003dba:	2b0d      	cmp	r3, #13
 8003dbc:	f000 80c0 	beq.w	8003f40 <FRAMEWIN_Callback+0x1e2>
 8003dc0:	e103      	b.n	8003fca <FRAMEWIN_Callback+0x26c>
 8003dc2:	2b11      	cmp	r3, #17
 8003dc4:	d01b      	beq.n	8003dfe <FRAMEWIN_Callback+0xa0>
 8003dc6:	2b14      	cmp	r3, #20
 8003dc8:	f040 80ff 	bne.w	8003fca <FRAMEWIN_Callback+0x26c>
 8003dcc:	4620      	mov	r0, r4
 8003dce:	a901      	add	r1, sp, #4
 8003dd0:	f7ff fe98 	bl	8003b04 <FRAMEWIN__CalcPositions>
 8003dd4:	ab02      	add	r3, sp, #8
 8003dd6:	cb03      	ldmia	r3!, {r0, r1}
 8003dd8:	68ea      	ldr	r2, [r5, #12]
 8003dda:	6010      	str	r0, [r2, #0]
 8003ddc:	6051      	str	r1, [r2, #4]
 8003dde:	e0fc      	b.n	8003fda <FRAMEWIN_Callback+0x27c>
 8003de0:	2b26      	cmp	r3, #38	; 0x26
 8003de2:	d070      	beq.n	8003ec6 <FRAMEWIN_Callback+0x168>
 8003de4:	dc05      	bgt.n	8003df2 <FRAMEWIN_Callback+0x94>
 8003de6:	2b1e      	cmp	r3, #30
 8003de8:	d07b      	beq.n	8003ee2 <FRAMEWIN_Callback+0x184>
 8003dea:	2b20      	cmp	r3, #32
 8003dec:	f000 80b6 	beq.w	8003f5c <FRAMEWIN_Callback+0x1fe>
 8003df0:	e0eb      	b.n	8003fca <FRAMEWIN_Callback+0x26c>
 8003df2:	2b2a      	cmp	r3, #42	; 0x2a
 8003df4:	d013      	beq.n	8003e1e <FRAMEWIN_Callback+0xc0>
 8003df6:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8003dfa:	d025      	beq.n	8003e48 <FRAMEWIN_Callback+0xea>
 8003dfc:	e0e5      	b.n	8003fca <FRAMEWIN_Callback+0x26c>
 8003dfe:	4620      	mov	r0, r4
 8003e00:	68ee      	ldr	r6, [r5, #12]
 8003e02:	f007 fb31 	bl	800b468 <GUI_ALLOC_LockH>
 8003e06:	9001      	str	r0, [sp, #4]
 8003e08:	8933      	ldrh	r3, [r6, #8]
 8003e0a:	2b01      	cmp	r3, #1
 8003e0c:	d105      	bne.n	8003e1a <FRAMEWIN_Callback+0xbc>
 8003e0e:	f8b0 307c 	ldrh.w	r3, [r0, #124]	; 0x7c
 8003e12:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003e16:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 8003e1a:	a801      	add	r0, sp, #4
 8003e1c:	e0d3      	b.n	8003fc6 <FRAMEWIN_Callback+0x268>
 8003e1e:	4620      	mov	r0, r4
 8003e20:	f007 fb22 	bl	800b468 <GUI_ALLOC_LockH>
 8003e24:	68eb      	ldr	r3, [r5, #12]
 8003e26:	9000      	str	r0, [sp, #0]
 8003e28:	b113      	cbz	r3, 8003e30 <FRAMEWIN_Callback+0xd2>
 8003e2a:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
 8003e2e:	e002      	b.n	8003e36 <FRAMEWIN_Callback+0xd8>
 8003e30:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8003e34:	60eb      	str	r3, [r5, #12]
 8003e36:	4668      	mov	r0, sp
 8003e38:	e03f      	b.n	8003eba <FRAMEWIN_Callback+0x15c>
 8003e3a:	f1ba 0f00 	cmp.w	sl, #0
 8003e3e:	f000 80c4 	beq.w	8003fca <FRAMEWIN_Callback+0x26c>
 8003e42:	4620      	mov	r0, r4
 8003e44:	47d0      	blx	sl
 8003e46:	e0c0      	b.n	8003fca <FRAMEWIN_Callback+0x26c>
 8003e48:	4620      	mov	r0, r4
 8003e4a:	f8d5 800c 	ldr.w	r8, [r5, #12]
 8003e4e:	f007 fb0b 	bl	800b468 <GUI_ALLOC_LockH>
 8003e52:	ae06      	add	r6, sp, #24
 8003e54:	f8b0 707c 	ldrh.w	r7, [r0, #124]	; 0x7c
 8003e58:	f846 0d14 	str.w	r0, [r6, #-20]!
 8003e5c:	4630      	mov	r0, r6
 8003e5e:	f007 fb11 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003e62:	68eb      	ldr	r3, [r5, #12]
 8003e64:	2b00      	cmp	r3, #0
 8003e66:	f000 80b8 	beq.w	8003fda <FRAMEWIN_Callback+0x27c>
 8003e6a:	f898 3008 	ldrb.w	r3, [r8, #8]
 8003e6e:	b1cb      	cbz	r3, 8003ea4 <FRAMEWIN_Callback+0x146>
 8003e70:	073b      	lsls	r3, r7, #28
 8003e72:	d402      	bmi.n	8003e7a <FRAMEWIN_Callback+0x11c>
 8003e74:	4620      	mov	r0, r4
 8003e76:	f000 fed1 	bl	8004c1c <WM_SetFocus>
 8003e7a:	4620      	mov	r0, r4
 8003e7c:	f000 ffe8 	bl	8004e50 <WM_BringToTop>
 8003e80:	f407 7388 	and.w	r3, r7, #272	; 0x110
 8003e84:	f5b3 7f88 	cmp.w	r3, #272	; 0x110
 8003e88:	f040 80a7 	bne.w	8003fda <FRAMEWIN_Callback+0x27c>
 8003e8c:	f007 0780 	and.w	r7, r7, #128	; 0x80
 8003e90:	b2bb      	uxth	r3, r7
 8003e92:	2b00      	cmp	r3, #0
 8003e94:	f040 80a1 	bne.w	8003fda <FRAMEWIN_Callback+0x27c>
 8003e98:	4620      	mov	r0, r4
 8003e9a:	4641      	mov	r1, r8
 8003e9c:	2205      	movs	r2, #5
 8003e9e:	f000 fb17 	bl	80044d0 <WM_SetCaptureMove>
 8003ea2:	e09a      	b.n	8003fda <FRAMEWIN_Callback+0x27c>
 8003ea4:	4620      	mov	r0, r4
 8003ea6:	f007 fadf 	bl	800b468 <GUI_ALLOC_LockH>
 8003eaa:	f8b0 307c 	ldrh.w	r3, [r0, #124]	; 0x7c
 8003eae:	9001      	str	r0, [sp, #4]
 8003eb0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003eb4:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 8003eb8:	4630      	mov	r0, r6
 8003eba:	f007 fae3 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003ebe:	e08c      	b.n	8003fda <FRAMEWIN_Callback+0x27c>
 8003ec0:	f8c5 800c 	str.w	r8, [r5, #12]
 8003ec4:	e089      	b.n	8003fda <FRAMEWIN_Callback+0x27c>
 8003ec6:	68eb      	ldr	r3, [r5, #12]
 8003ec8:	2b02      	cmp	r3, #2
 8003eca:	f040 8086 	bne.w	8003fda <FRAMEWIN_Callback+0x27c>
 8003ece:	a906      	add	r1, sp, #24
 8003ed0:	9304      	str	r3, [sp, #16]
 8003ed2:	2327      	movs	r3, #39	; 0x27
 8003ed4:	f841 3d14 	str.w	r3, [r1, #-20]!
 8003ed8:	68a8      	ldr	r0, [r5, #8]
 8003eda:	9403      	str	r4, [sp, #12]
 8003edc:	f000 f968 	bl	80041b0 <WM__SendMessage>
 8003ee0:	e07b      	b.n	8003fda <FRAMEWIN_Callback+0x27c>
 8003ee2:	f8d5 900c 	ldr.w	r9, [r5, #12]
 8003ee6:	f1b9 0f01 	cmp.w	r9, #1
 8003eea:	d124      	bne.n	8003f36 <FRAMEWIN_Callback+0x1d8>
 8003eec:	4630      	mov	r0, r6
 8003eee:	f000 fde2 	bl	8004ab6 <WM_IsWindow>
 8003ef2:	b158      	cbz	r0, 8003f0c <FRAMEWIN_Callback+0x1ae>
 8003ef4:	4630      	mov	r0, r6
 8003ef6:	f000 fe91 	bl	8004c1c <WM_SetFocus>
 8003efa:	4630      	mov	r0, r6
 8003efc:	f000 fdb4 	bl	8004a68 <WM_HasFocus>
 8003f00:	b188      	cbz	r0, 8003f26 <FRAMEWIN_Callback+0x1c8>
 8003f02:	4630      	mov	r0, r6
 8003f04:	4649      	mov	r1, r9
 8003f06:	f007 fe4f 	bl	800bba8 <WIDGET_OrState>
 8003f0a:	e00c      	b.n	8003f26 <FRAMEWIN_Callback+0x1c8>
 8003f0c:	4640      	mov	r0, r8
 8003f0e:	f000 fab1 	bl	8004474 <WM_SetFocusOnNextChild>
 8003f12:	4606      	mov	r6, r0
 8003f14:	4620      	mov	r0, r4
 8003f16:	f007 faa7 	bl	800b468 <GUI_ALLOC_LockH>
 8003f1a:	9000      	str	r0, [sp, #0]
 8003f1c:	f8c0 6080 	str.w	r6, [r0, #128]	; 0x80
 8003f20:	4668      	mov	r0, sp
 8003f22:	f007 faaf 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003f26:	4620      	mov	r0, r4
 8003f28:	2101      	movs	r1, #1
 8003f2a:	f7ff ff14 	bl	8003d56 <FRAMEWIN_SetActive>
 8003f2e:	2e00      	cmp	r6, #0
 8003f30:	d153      	bne.n	8003fda <FRAMEWIN_Callback+0x27c>
 8003f32:	60ee      	str	r6, [r5, #12]
 8003f34:	e051      	b.n	8003fda <FRAMEWIN_Callback+0x27c>
 8003f36:	4620      	mov	r0, r4
 8003f38:	4639      	mov	r1, r7
 8003f3a:	f7ff ff0c 	bl	8003d56 <FRAMEWIN_SetActive>
 8003f3e:	e04c      	b.n	8003fda <FRAMEWIN_Callback+0x27c>
 8003f40:	f019 0f08 	tst.w	r9, #8
 8003f44:	d141      	bne.n	8003fca <FRAMEWIN_Callback+0x26c>
 8003f46:	68eb      	ldr	r3, [r5, #12]
 8003f48:	68db      	ldr	r3, [r3, #12]
 8003f4a:	2b00      	cmp	r3, #0
 8003f4c:	d03d      	beq.n	8003fca <FRAMEWIN_Callback+0x26c>
 8003f4e:	7a1b      	ldrb	r3, [r3, #8]
 8003f50:	2b00      	cmp	r3, #0
 8003f52:	d03a      	beq.n	8003fca <FRAMEWIN_Callback+0x26c>
 8003f54:	4620      	mov	r0, r4
 8003f56:	f000 fe61 	bl	8004c1c <WM_SetFocus>
 8003f5a:	e036      	b.n	8003fca <FRAMEWIN_Callback+0x26c>
 8003f5c:	68ee      	ldr	r6, [r5, #12]
 8003f5e:	2e00      	cmp	r6, #0
 8003f60:	d033      	beq.n	8003fca <FRAMEWIN_Callback+0x26c>
 8003f62:	6870      	ldr	r0, [r6, #4]
 8003f64:	4621      	mov	r1, r4
 8003f66:	f000 f8ed 	bl	8004144 <WM__IsAncestorOrSelf>
 8003f6a:	b180      	cbz	r0, 8003f8e <FRAMEWIN_Callback+0x230>
 8003f6c:	4620      	mov	r0, r4
 8003f6e:	2101      	movs	r1, #1
 8003f70:	f7ff fcdf 	bl	8003932 <_SetActive>
 8003f74:	6870      	ldr	r0, [r6, #4]
 8003f76:	4621      	mov	r1, r4
 8003f78:	f000 f8d3 	bl	8004122 <WM__IsAncestor>
 8003f7c:	b328      	cbz	r0, 8003fca <FRAMEWIN_Callback+0x26c>
 8003f7e:	4620      	mov	r0, r4
 8003f80:	f007 fa72 	bl	800b468 <GUI_ALLOC_LockH>
 8003f84:	ab06      	add	r3, sp, #24
 8003f86:	6872      	ldr	r2, [r6, #4]
 8003f88:	f843 0d14 	str.w	r0, [r3, #-20]!
 8003f8c:	e00f      	b.n	8003fae <FRAMEWIN_Callback+0x250>
 8003f8e:	4620      	mov	r0, r4
 8003f90:	4639      	mov	r1, r7
 8003f92:	f7ff fcce 	bl	8003932 <_SetActive>
 8003f96:	6830      	ldr	r0, [r6, #0]
 8003f98:	4621      	mov	r1, r4
 8003f9a:	f000 f8c2 	bl	8004122 <WM__IsAncestor>
 8003f9e:	b1a0      	cbz	r0, 8003fca <FRAMEWIN_Callback+0x26c>
 8003fa0:	4620      	mov	r0, r4
 8003fa2:	f007 fa61 	bl	800b468 <GUI_ALLOC_LockH>
 8003fa6:	ab06      	add	r3, sp, #24
 8003fa8:	6832      	ldr	r2, [r6, #0]
 8003faa:	f843 0d14 	str.w	r0, [r3, #-20]!
 8003fae:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8003fb2:	4618      	mov	r0, r3
 8003fb4:	e007      	b.n	8003fc6 <FRAMEWIN_Callback+0x268>
 8003fb6:	4620      	mov	r0, r4
 8003fb8:	f007 fa56 	bl	800b468 <GUI_ALLOC_LockH>
 8003fbc:	9000      	str	r0, [sp, #0]
 8003fbe:	3070      	adds	r0, #112	; 0x70
 8003fc0:	f007 fc22 	bl	800b808 <GUI_ALLOC_FreePtr>
 8003fc4:	4668      	mov	r0, sp
 8003fc6:	f007 fa5d 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003fca:	4620      	mov	r0, r4
 8003fcc:	4629      	mov	r1, r5
 8003fce:	f007 fe16 	bl	800bbfe <WIDGET_HandleActive>
 8003fd2:	b110      	cbz	r0, 8003fda <FRAMEWIN_Callback+0x27c>
 8003fd4:	4628      	mov	r0, r5
 8003fd6:	f002 f88d 	bl	80060f4 <WM_DefaultProc>
 8003fda:	b006      	add	sp, #24
 8003fdc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08003fe0 <FRAMEWIN_GetActive>:
 8003fe0:	b513      	push	{r0, r1, r4, lr}
 8003fe2:	4604      	mov	r4, r0
 8003fe4:	b158      	cbz	r0, 8003ffe <FRAMEWIN_GetActive+0x1e>
 8003fe6:	f007 fa3f 	bl	800b468 <GUI_ALLOC_LockH>
 8003fea:	ab02      	add	r3, sp, #8
 8003fec:	f8b0 407c 	ldrh.w	r4, [r0, #124]	; 0x7c
 8003ff0:	f843 0d04 	str.w	r0, [r3, #-4]!
 8003ff4:	4618      	mov	r0, r3
 8003ff6:	f3c4 04c0 	ubfx	r4, r4, #3, #1
 8003ffa:	f007 fa43 	bl	800b484 <GUI_ALLOC_UnlockH>
 8003ffe:	4620      	mov	r0, r4
 8004000:	b002      	add	sp, #8
 8004002:	bd10      	pop	{r4, pc}

08004004 <GUI_CreateDialogBox>:
 8004004:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004008:	4606      	mov	r6, r0
 800400a:	4688      	mov	r8, r1
 800400c:	4614      	mov	r4, r2
 800400e:	461d      	mov	r5, r3
 8004010:	b913      	cbnz	r3, 8004018 <GUI_CreateDialogBox+0x14>
 8004012:	f000 fb97 	bl	8004744 <WM_GetDesktopWindow>
 8004016:	4605      	mov	r5, r0
 8004018:	9400      	str	r4, [sp, #0]
 800401a:	4630      	mov	r0, r6
 800401c:	6834      	ldr	r4, [r6, #0]
 800401e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004020:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004022:	4629      	mov	r1, r5
 8004024:	47a0      	blx	r4
 8004026:	4604      	mov	r4, r0
 8004028:	2800      	cmp	r0, #0
 800402a:	d039      	beq.n	80040a0 <GUI_CreateDialogBox+0x9c>
 800402c:	f000 fb7c 	bl	8004728 <WM_GetClientWindow>
 8004030:	8a71      	ldrh	r1, [r6, #18]
 8004032:	4607      	mov	r7, r0
 8004034:	4620      	mov	r0, r4
 8004036:	f007 fdb7 	bl	800bba8 <WIDGET_OrState>
 800403a:	4620      	mov	r0, r4
 800403c:	f000 fe8b 	bl	8004d56 <WM_ShowWindow>
 8004040:	4638      	mov	r0, r7
 8004042:	f108 38ff 	add.w	r8, r8, #4294967295
 8004046:	f000 fe86 	bl	8004d56 <WM_ShowWindow>
 800404a:	f1b8 0f00 	cmp.w	r8, #0
 800404e:	dd0f      	ble.n	8004070 <GUI_CreateDialogBox+0x6c>
 8004050:	f856 cf1c 	ldr.w	ip, [r6, #28]!
 8004054:	2200      	movs	r2, #0
 8004056:	9200      	str	r2, [sp, #0]
 8004058:	4630      	mov	r0, r6
 800405a:	4639      	mov	r1, r7
 800405c:	4613      	mov	r3, r2
 800405e:	47e0      	blx	ip
 8004060:	4681      	mov	r9, r0
 8004062:	2800      	cmp	r0, #0
 8004064:	d1ed      	bne.n	8004042 <GUI_CreateDialogBox+0x3e>
 8004066:	4620      	mov	r0, r4
 8004068:	f001 fcee 	bl	8005a48 <WM_DeleteWindow>
 800406c:	4648      	mov	r0, r9
 800406e:	e018      	b.n	80040a2 <GUI_CreateDialogBox+0x9e>
 8004070:	4638      	mov	r0, r7
 8004072:	211d      	movs	r1, #29
 8004074:	f000 fdb7 	bl	8004be6 <WM_SendMessageNoPara>
 8004078:	1c6b      	adds	r3, r5, #1
 800407a:	d011      	beq.n	80040a0 <GUI_CreateDialogBox+0x9c>
 800407c:	f000 fb8c 	bl	8004798 <WM_GetFocusedWindow>
 8004080:	b150      	cbz	r0, 8004098 <GUI_CreateDialogBox+0x94>
 8004082:	f007 f9e7 	bl	800b454 <GUI_ALLOC_h2p>
 8004086:	6980      	ldr	r0, [r0, #24]
 8004088:	42a0      	cmp	r0, r4
 800408a:	d00a      	beq.n	80040a2 <GUI_CreateDialogBox+0x9e>
 800408c:	2800      	cmp	r0, #0
 800408e:	d1f8      	bne.n	8004082 <GUI_CreateDialogBox+0x7e>
 8004090:	4620      	mov	r0, r4
 8004092:	f000 f9ef 	bl	8004474 <WM_SetFocusOnNextChild>
 8004096:	e003      	b.n	80040a0 <GUI_CreateDialogBox+0x9c>
 8004098:	42a5      	cmp	r5, r4
 800409a:	d1f9      	bne.n	8004090 <GUI_CreateDialogBox+0x8c>
 800409c:	4628      	mov	r0, r5
 800409e:	e000      	b.n	80040a2 <GUI_CreateDialogBox+0x9e>
 80040a0:	4620      	mov	r0, r4
 80040a2:	b003      	add	sp, #12
 80040a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080040a8 <WM__ForEachDesc>:
 80040a8:	b570      	push	{r4, r5, r6, lr}
 80040aa:	460d      	mov	r5, r1
 80040ac:	4616      	mov	r6, r2
 80040ae:	f007 f9d1 	bl	800b454 <GUI_ALLOC_h2p>
 80040b2:	69c4      	ldr	r4, [r0, #28]
 80040b4:	b164      	cbz	r4, 80040d0 <WM__ForEachDesc+0x28>
 80040b6:	4620      	mov	r0, r4
 80040b8:	4631      	mov	r1, r6
 80040ba:	47a8      	blx	r5
 80040bc:	4620      	mov	r0, r4
 80040be:	4629      	mov	r1, r5
 80040c0:	4632      	mov	r2, r6
 80040c2:	f7ff fff1 	bl	80040a8 <WM__ForEachDesc>
 80040c6:	4620      	mov	r0, r4
 80040c8:	f007 f9c4 	bl	800b454 <GUI_ALLOC_h2p>
 80040cc:	6a04      	ldr	r4, [r0, #32]
 80040ce:	e7f1      	b.n	80040b4 <WM__ForEachDesc+0xc>
 80040d0:	bd70      	pop	{r4, r5, r6, pc}

080040d2 <WM__GetFirstSibling>:
 80040d2:	b508      	push	{r3, lr}
 80040d4:	f000 fbf2 	bl	80048bc <WM_GetParent>
 80040d8:	b118      	cbz	r0, 80040e2 <WM__GetFirstSibling+0x10>
 80040da:	f007 f9bb 	bl	800b454 <GUI_ALLOC_h2p>
 80040de:	69c0      	ldr	r0, [r0, #28]
 80040e0:	bd08      	pop	{r3, pc}
 80040e2:	bd08      	pop	{r3, pc}

080040e4 <WM__GetLastSibling>:
 80040e4:	b510      	push	{r4, lr}
 80040e6:	4604      	mov	r4, r0
 80040e8:	b130      	cbz	r0, 80040f8 <WM__GetLastSibling+0x14>
 80040ea:	4620      	mov	r0, r4
 80040ec:	f007 f9b2 	bl	800b454 <GUI_ALLOC_h2p>
 80040f0:	6a03      	ldr	r3, [r0, #32]
 80040f2:	b10b      	cbz	r3, 80040f8 <WM__GetLastSibling+0x14>
 80040f4:	461c      	mov	r4, r3
 80040f6:	e7f8      	b.n	80040ea <WM__GetLastSibling+0x6>
 80040f8:	4620      	mov	r0, r4
 80040fa:	bd10      	pop	{r4, pc}

080040fc <WM__GetPrevSibling>:
 80040fc:	b538      	push	{r3, r4, r5, lr}
 80040fe:	4605      	mov	r5, r0
 8004100:	f7ff ffe7 	bl	80040d2 <WM__GetFirstSibling>
 8004104:	4604      	mov	r4, r0
 8004106:	b154      	cbz	r4, 800411e <WM__GetPrevSibling+0x22>
 8004108:	42ac      	cmp	r4, r5
 800410a:	d007      	beq.n	800411c <WM__GetPrevSibling+0x20>
 800410c:	4620      	mov	r0, r4
 800410e:	f007 f9a1 	bl	800b454 <GUI_ALLOC_h2p>
 8004112:	6a03      	ldr	r3, [r0, #32]
 8004114:	42ab      	cmp	r3, r5
 8004116:	d002      	beq.n	800411e <WM__GetPrevSibling+0x22>
 8004118:	461c      	mov	r4, r3
 800411a:	e7f4      	b.n	8004106 <WM__GetPrevSibling+0xa>
 800411c:	2400      	movs	r4, #0
 800411e:	4620      	mov	r0, r4
 8004120:	bd38      	pop	{r3, r4, r5, pc}

08004122 <WM__IsAncestor>:
 8004122:	b510      	push	{r4, lr}
 8004124:	460c      	mov	r4, r1
 8004126:	b908      	cbnz	r0, 800412c <WM__IsAncestor+0xa>
 8004128:	2000      	movs	r0, #0
 800412a:	bd10      	pop	{r4, pc}
 800412c:	2900      	cmp	r1, #0
 800412e:	d0fb      	beq.n	8004128 <WM__IsAncestor+0x6>
 8004130:	f007 f990 	bl	800b454 <GUI_ALLOC_h2p>
 8004134:	6980      	ldr	r0, [r0, #24]
 8004136:	42a0      	cmp	r0, r4
 8004138:	d002      	beq.n	8004140 <WM__IsAncestor+0x1e>
 800413a:	2800      	cmp	r0, #0
 800413c:	d1f8      	bne.n	8004130 <WM__IsAncestor+0xe>
 800413e:	e7f3      	b.n	8004128 <WM__IsAncestor+0x6>
 8004140:	2001      	movs	r0, #1
 8004142:	bd10      	pop	{r4, pc}

08004144 <WM__IsAncestorOrSelf>:
 8004144:	4288      	cmp	r0, r1
 8004146:	d001      	beq.n	800414c <WM__IsAncestorOrSelf+0x8>
 8004148:	f7ff bfeb 	b.w	8004122 <WM__IsAncestor>
 800414c:	2001      	movs	r0, #1
 800414e:	4770      	bx	lr

08004150 <WM__IsChild>:
 8004150:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004152:	460d      	mov	r5, r1
 8004154:	4604      	mov	r4, r0
 8004156:	b160      	cbz	r0, 8004172 <WM__IsChild+0x22>
 8004158:	f007 f986 	bl	800b468 <GUI_ALLOC_LockH>
 800415c:	9001      	str	r0, [sp, #4]
 800415e:	b120      	cbz	r0, 800416a <WM__IsChild+0x1a>
 8004160:	6984      	ldr	r4, [r0, #24]
 8004162:	1b63      	subs	r3, r4, r5
 8004164:	425c      	negs	r4, r3
 8004166:	415c      	adcs	r4, r3
 8004168:	e000      	b.n	800416c <WM__IsChild+0x1c>
 800416a:	4604      	mov	r4, r0
 800416c:	a801      	add	r0, sp, #4
 800416e:	f007 f989 	bl	800b484 <GUI_ALLOC_UnlockH>
 8004172:	4620      	mov	r0, r4
 8004174:	b003      	add	sp, #12
 8004176:	bd30      	pop	{r4, r5, pc}

08004178 <WM__GetFocusedChild>:
 8004178:	b538      	push	{r3, r4, r5, lr}
 800417a:	4d06      	ldr	r5, [pc, #24]	; (8004194 <WM__GetFocusedChild+0x1c>)
 800417c:	4c06      	ldr	r4, [pc, #24]	; (8004198 <WM__GetFocusedChild+0x20>)
 800417e:	682b      	ldr	r3, [r5, #0]
 8004180:	4601      	mov	r1, r0
 8004182:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8004186:	f7ff ffe3 	bl	8004150 <WM__IsChild>
 800418a:	b110      	cbz	r0, 8004192 <WM__GetFocusedChild+0x1a>
 800418c:	682b      	ldr	r3, [r5, #0]
 800418e:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8004192:	bd38      	pop	{r3, r4, r5, pc}
 8004194:	20002ca0 	.word	0x20002ca0
 8004198:	20002c90 	.word	0x20002c90

0800419c <WM__Screen2Client>:
 800419c:	f9b0 3000 	ldrsh.w	r3, [r0]
 80041a0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80041a4:	4608      	mov	r0, r1
 80041a6:	4252      	negs	r2, r2
 80041a8:	4259      	negs	r1, r3
 80041aa:	f006 bc74 	b.w	800aa96 <GUI_MoveRect>
	...

080041b0 <WM__SendMessage>:
 80041b0:	b570      	push	{r4, r5, r6, lr}
 80041b2:	4c0d      	ldr	r4, [pc, #52]	; (80041e8 <WM__SendMessage+0x38>)
 80041b4:	6823      	ldr	r3, [r4, #0]
 80041b6:	2b13      	cmp	r3, #19
 80041b8:	4606      	mov	r6, r0
 80041ba:	460d      	mov	r5, r1
 80041bc:	dc12      	bgt.n	80041e4 <WM__SendMessage+0x34>
 80041be:	f007 f949 	bl	800b454 <GUI_ALLOC_h2p>
 80041c2:	6903      	ldr	r3, [r0, #16]
 80041c4:	606e      	str	r6, [r5, #4]
 80041c6:	b143      	cbz	r3, 80041da <WM__SendMessage+0x2a>
 80041c8:	6822      	ldr	r2, [r4, #0]
 80041ca:	4628      	mov	r0, r5
 80041cc:	3201      	adds	r2, #1
 80041ce:	6022      	str	r2, [r4, #0]
 80041d0:	4798      	blx	r3
 80041d2:	6823      	ldr	r3, [r4, #0]
 80041d4:	3b01      	subs	r3, #1
 80041d6:	6023      	str	r3, [r4, #0]
 80041d8:	bd70      	pop	{r4, r5, r6, pc}
 80041da:	4628      	mov	r0, r5
 80041dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80041e0:	f001 bf88 	b.w	80060f4 <WM_DefaultProc>
 80041e4:	bd70      	pop	{r4, r5, r6, pc}
 80041e6:	bf00      	nop
 80041e8:	20002a18 	.word	0x20002a18

080041ec <WM__SendMessageNoPara>:
 80041ec:	b530      	push	{r4, r5, lr}
 80041ee:	b085      	sub	sp, #20
 80041f0:	4604      	mov	r4, r0
 80041f2:	2210      	movs	r2, #16
 80041f4:	460d      	mov	r5, r1
 80041f6:	4668      	mov	r0, sp
 80041f8:	2100      	movs	r1, #0
 80041fa:	f00b fd6f 	bl	800fcdc <memset>
 80041fe:	4620      	mov	r0, r4
 8004200:	f007 f928 	bl	800b454 <GUI_ALLOC_h2p>
 8004204:	6903      	ldr	r3, [r0, #16]
 8004206:	b11b      	cbz	r3, 8004210 <WM__SendMessageNoPara+0x24>
 8004208:	9401      	str	r4, [sp, #4]
 800420a:	9500      	str	r5, [sp, #0]
 800420c:	4668      	mov	r0, sp
 800420e:	4798      	blx	r3
 8004210:	b005      	add	sp, #20
 8004212:	bd30      	pop	{r4, r5, pc}

08004214 <WM__UpdateChildPositions>:
 8004214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004218:	b087      	sub	sp, #28
 800421a:	69c4      	ldr	r4, [r0, #28]
 800421c:	9303      	str	r3, [sp, #12]
 800421e:	468a      	mov	sl, r1
 8004220:	4693      	mov	fp, r2
 8004222:	2c00      	cmp	r4, #0
 8004224:	d06d      	beq.n	8004302 <WM__UpdateChildPositions+0xee>
 8004226:	4620      	mov	r0, r4
 8004228:	f007 f91e 	bl	800b468 <GUI_ALLOC_LockH>
 800422c:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800422e:	9005      	str	r0, [sp, #20]
 8004230:	f401 7320 	and.w	r3, r1, #640	; 0x280
 8004234:	2b80      	cmp	r3, #128	; 0x80
 8004236:	f8b0 8000 	ldrh.w	r8, [r0]
 800423a:	8842      	ldrh	r2, [r0, #2]
 800423c:	8886      	ldrh	r6, [r0, #4]
 800423e:	88c5      	ldrh	r5, [r0, #6]
 8004240:	d008      	beq.n	8004254 <WM__UpdateChildPositions+0x40>
 8004242:	f5b3 7f20 	cmp.w	r3, #640	; 0x280
 8004246:	d108      	bne.n	800425a <WM__UpdateChildPositions+0x46>
 8004248:	eb08 090a 	add.w	r9, r8, sl
 800424c:	fa1f f989 	uxth.w	r9, r9
 8004250:	9b03      	ldr	r3, [sp, #12]
 8004252:	e008      	b.n	8004266 <WM__UpdateChildPositions+0x52>
 8004254:	9803      	ldr	r0, [sp, #12]
 8004256:	b283      	uxth	r3, r0
 8004258:	e001      	b.n	800425e <WM__UpdateChildPositions+0x4a>
 800425a:	fa1f f38a 	uxth.w	r3, sl
 800425e:	eb03 0908 	add.w	r9, r3, r8
 8004262:	fa1f f989 	uxth.w	r9, r9
 8004266:	f401 61a0 	and.w	r1, r1, #1280	; 0x500
 800426a:	4433      	add	r3, r6
 800426c:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8004270:	b29b      	uxth	r3, r3
 8004272:	d008      	beq.n	8004286 <WM__UpdateChildPositions+0x72>
 8004274:	f5b1 6fa0 	cmp.w	r1, #1280	; 0x500
 8004278:	d108      	bne.n	800428c <WM__UpdateChildPositions+0x78>
 800427a:	eb02 0c0b 	add.w	ip, r2, fp
 800427e:	fa1f fc8c 	uxth.w	ip, ip
 8004282:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8004284:	e008      	b.n	8004298 <WM__UpdateChildPositions+0x84>
 8004286:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004288:	b28f      	uxth	r7, r1
 800428a:	e001      	b.n	8004290 <WM__UpdateChildPositions+0x7c>
 800428c:	fa1f f78b 	uxth.w	r7, fp
 8004290:	eb07 0c02 	add.w	ip, r7, r2
 8004294:	fa1f fc8c 	uxth.w	ip, ip
 8004298:	fa0f f989 	sxth.w	r9, r9
 800429c:	fa0f f888 	sxth.w	r8, r8
 80042a0:	b212      	sxth	r2, r2
 80042a2:	442f      	add	r7, r5
 80042a4:	fa0f fc8c 	sxth.w	ip, ip
 80042a8:	ebb9 0108 	subs.w	r1, r9, r8
 80042ac:	9202      	str	r2, [sp, #8]
 80042ae:	b2bf      	uxth	r7, r7
 80042b0:	ebc2 020c 	rsb	r2, r2, ip
 80042b4:	d100      	bne.n	80042b8 <WM__UpdateChildPositions+0xa4>
 80042b6:	b142      	cbz	r2, 80042ca <WM__UpdateChildPositions+0xb6>
 80042b8:	4620      	mov	r0, r4
 80042ba:	9301      	str	r3, [sp, #4]
 80042bc:	f8cd c000 	str.w	ip, [sp]
 80042c0:	f000 fa12 	bl	80046e8 <WM_MoveWindow>
 80042c4:	f8dd c000 	ldr.w	ip, [sp]
 80042c8:	9b01      	ldr	r3, [sp, #4]
 80042ca:	b21b      	sxth	r3, r3
 80042cc:	ebc9 0903 	rsb	r9, r9, r3
 80042d0:	b236      	sxth	r6, r6
 80042d2:	9b02      	ldr	r3, [sp, #8]
 80042d4:	ebc6 0808 	rsb	r8, r6, r8
 80042d8:	b23f      	sxth	r7, r7
 80042da:	b22d      	sxth	r5, r5
 80042dc:	ebcc 0c07 	rsb	ip, ip, r7
 80042e0:	1b5d      	subs	r5, r3, r5
 80042e2:	eb19 0108 	adds.w	r1, r9, r8
 80042e6:	eb0c 0205 	add.w	r2, ip, r5
 80042ea:	d100      	bne.n	80042ee <WM__UpdateChildPositions+0xda>
 80042ec:	b112      	cbz	r2, 80042f4 <WM__UpdateChildPositions+0xe0>
 80042ee:	4620      	mov	r0, r4
 80042f0:	f000 fbfe 	bl	8004af0 <WM_ResizeWindow>
 80042f4:	a806      	add	r0, sp, #24
 80042f6:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 80042fa:	6a1c      	ldr	r4, [r3, #32]
 80042fc:	f007 f8c2 	bl	800b484 <GUI_ALLOC_UnlockH>
 8004300:	e78f      	b.n	8004222 <WM__UpdateChildPositions+0xe>
 8004302:	b007      	add	sp, #28
 8004304:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004308 <WM__AddCriticalHandle>:
 8004308:	4b02      	ldr	r3, [pc, #8]	; (8004314 <WM__AddCriticalHandle+0xc>)
 800430a:	681a      	ldr	r2, [r3, #0]
 800430c:	6002      	str	r2, [r0, #0]
 800430e:	6018      	str	r0, [r3, #0]
 8004310:	4770      	bx	lr
 8004312:	bf00      	nop
 8004314:	20002cbc 	.word	0x20002cbc

08004318 <WM__GetClientRectEx>:
 8004318:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800431a:	460d      	mov	r5, r1
 800431c:	b158      	cbz	r0, 8004336 <WM__GetClientRectEx+0x1e>
 800431e:	b151      	cbz	r1, 8004336 <WM__GetClientRectEx+0x1e>
 8004320:	f007 f8a2 	bl	800b468 <GUI_ALLOC_LockH>
 8004324:	ac02      	add	r4, sp, #8
 8004326:	4629      	mov	r1, r5
 8004328:	f844 0d04 	str.w	r0, [r4, #-4]!
 800432c:	f001 f96a 	bl	8005604 <WM__GetClientRectWin>
 8004330:	4620      	mov	r0, r4
 8004332:	f007 f8a7 	bl	800b484 <GUI_ALLOC_UnlockH>
 8004336:	b003      	add	sp, #12
 8004338:	bd30      	pop	{r4, r5, pc}
	...

0800433c <WM_SetHasTrans>:
 800433c:	b513      	push	{r0, r1, r4, lr}
 800433e:	4604      	mov	r4, r0
 8004340:	b1b8      	cbz	r0, 8004372 <WM_SetHasTrans+0x36>
 8004342:	f007 f891 	bl	800b468 <GUI_ALLOC_LockH>
 8004346:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004348:	9001      	str	r0, [sp, #4]
 800434a:	07db      	lsls	r3, r3, #31
 800434c:	d40e      	bmi.n	800436c <WM_SetHasTrans+0x30>
 800434e:	4620      	mov	r0, r4
 8004350:	f000 fd16 	bl	8004d80 <WM_ValidateWindow>
 8004354:	9b01      	ldr	r3, [sp, #4]
 8004356:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004358:	f042 0201 	orr.w	r2, r2, #1
 800435c:	629a      	str	r2, [r3, #40]	; 0x28
 800435e:	4b06      	ldr	r3, [pc, #24]	; (8004378 <WM_SetHasTrans+0x3c>)
 8004360:	681a      	ldr	r2, [r3, #0]
 8004362:	4620      	mov	r0, r4
 8004364:	3201      	adds	r2, #1
 8004366:	601a      	str	r2, [r3, #0]
 8004368:	f001 fa96 	bl	8005898 <WM_InvalidateWindow>
 800436c:	a801      	add	r0, sp, #4
 800436e:	f007 f889 	bl	800b484 <GUI_ALLOC_UnlockH>
 8004372:	b002      	add	sp, #8
 8004374:	bd10      	pop	{r4, pc}
 8004376:	bf00      	nop
 8004378:	20002cd0 	.word	0x20002cd0

0800437c <WM_GetHasTrans>:
 800437c:	b508      	push	{r3, lr}
 800437e:	b128      	cbz	r0, 800438c <WM_GetHasTrans+0x10>
 8004380:	f007 f868 	bl	800b454 <GUI_ALLOC_h2p>
 8004384:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004386:	f000 0001 	and.w	r0, r0, #1
 800438a:	bd08      	pop	{r3, pc}
 800438c:	bd08      	pop	{r3, pc}

0800438e <_SetScrollbar>:
 800438e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004390:	460d      	mov	r5, r1
 8004392:	4611      	mov	r1, r2
 8004394:	4606      	mov	r6, r0
 8004396:	461f      	mov	r7, r3
 8004398:	f000 fa3a 	bl	8004810 <WM_GetDialogItem>
 800439c:	4604      	mov	r4, r0
 800439e:	b1a5      	cbz	r5, 80043ca <_SetScrollbar+0x3c>
 80043a0:	b920      	cbnz	r0, 80043ac <_SetScrollbar+0x1e>
 80043a2:	4630      	mov	r0, r6
 80043a4:	4639      	mov	r1, r7
 80043a6:	f007 fddb 	bl	800bf60 <SCROLLBAR_CreateAttached>
 80043aa:	e014      	b.n	80043d6 <_SetScrollbar+0x48>
 80043ac:	f007 f85c 	bl	800b468 <GUI_ALLOC_LockH>
 80043b0:	ab02      	add	r3, sp, #8
 80043b2:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80043b4:	f843 0d04 	str.w	r0, [r3, #-4]!
 80043b8:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80043bc:	f042 0202 	orr.w	r2, r2, #2
 80043c0:	6282      	str	r2, [r0, #40]	; 0x28
 80043c2:	4618      	mov	r0, r3
 80043c4:	f007 f85e 	bl	800b484 <GUI_ALLOC_UnlockH>
 80043c8:	e005      	b.n	80043d6 <_SetScrollbar+0x48>
 80043ca:	b120      	cbz	r0, 80043d6 <_SetScrollbar+0x48>
 80043cc:	f000 fcf0 	bl	8004db0 <WM_HideWindow>
 80043d0:	4620      	mov	r0, r4
 80043d2:	f001 fe33 	bl	800603c <WM__DeleteSecure>
 80043d6:	1c20      	adds	r0, r4, #0
 80043d8:	bf18      	it	ne
 80043da:	2001      	movne	r0, #1
 80043dc:	b003      	add	sp, #12
 80043de:	bdf0      	pop	{r4, r5, r6, r7, pc}

080043e0 <WM__SetScrollbarV>:
 80043e0:	22fe      	movs	r2, #254	; 0xfe
 80043e2:	2308      	movs	r3, #8
 80043e4:	f7ff bfd3 	b.w	800438e <_SetScrollbar>

080043e8 <WM__SetScrollbarH>:
 80043e8:	22ff      	movs	r2, #255	; 0xff
 80043ea:	2300      	movs	r3, #0
 80043ec:	f7ff bfcf 	b.w	800438e <_SetScrollbar>

080043f0 <WM_SetScrollbarH>:
 80043f0:	f7ff bffa 	b.w	80043e8 <WM__SetScrollbarH>

080043f4 <WM_SetScrollbarV>:
 80043f4:	f7ff bff4 	b.w	80043e0 <WM__SetScrollbarV>

080043f8 <_GetPrevChild>:
 80043f8:	b510      	push	{r4, lr}
 80043fa:	4604      	mov	r4, r0
 80043fc:	b918      	cbnz	r0, 8004406 <_GetPrevChild+0xe>
 80043fe:	4620      	mov	r0, r4
 8004400:	f7ff fe70 	bl	80040e4 <WM__GetLastSibling>
 8004404:	e003      	b.n	800440e <_GetPrevChild+0x16>
 8004406:	f7ff fe79 	bl	80040fc <WM__GetPrevSibling>
 800440a:	2800      	cmp	r0, #0
 800440c:	d0f7      	beq.n	80043fe <_GetPrevChild+0x6>
 800440e:	42a0      	cmp	r0, r4
 8004410:	bf08      	it	eq
 8004412:	2000      	moveq	r0, #0
 8004414:	bd10      	pop	{r4, pc}

08004416 <WM_SetFocusOnPrevChild>:
 8004416:	b538      	push	{r3, r4, r5, lr}
 8004418:	4604      	mov	r4, r0
 800441a:	b1b0      	cbz	r0, 800444a <WM_SetFocusOnPrevChild+0x34>
 800441c:	f7ff feac 	bl	8004178 <WM__GetFocusedChild>
 8004420:	f7ff ffea 	bl	80043f8 <_GetPrevChild>
 8004424:	4605      	mov	r5, r0
 8004426:	4604      	mov	r4, r0
 8004428:	4620      	mov	r0, r4
 800442a:	f000 fb2b 	bl	8004a84 <WM_IsFocusable>
 800442e:	b930      	cbnz	r0, 800443e <WM_SetFocusOnPrevChild+0x28>
 8004430:	b12c      	cbz	r4, 800443e <WM_SetFocusOnPrevChild+0x28>
 8004432:	4620      	mov	r0, r4
 8004434:	f7ff ffe0 	bl	80043f8 <_GetPrevChild>
 8004438:	42a8      	cmp	r0, r5
 800443a:	4604      	mov	r4, r0
 800443c:	d1f4      	bne.n	8004428 <WM_SetFocusOnPrevChild+0x12>
 800443e:	4620      	mov	r0, r4
 8004440:	f000 fbec 	bl	8004c1c <WM_SetFocus>
 8004444:	2800      	cmp	r0, #0
 8004446:	bf18      	it	ne
 8004448:	2400      	movne	r4, #0
 800444a:	4620      	mov	r0, r4
 800444c:	bd38      	pop	{r3, r4, r5, pc}

0800444e <_GetNextChild>:
 800444e:	b538      	push	{r3, r4, r5, lr}
 8004450:	4605      	mov	r5, r0
 8004452:	460c      	mov	r4, r1
 8004454:	b921      	cbnz	r1, 8004460 <_GetNextChild+0x12>
 8004456:	4628      	mov	r0, r5
 8004458:	f006 fffc 	bl	800b454 <GUI_ALLOC_h2p>
 800445c:	69c0      	ldr	r0, [r0, #28]
 800445e:	e005      	b.n	800446c <_GetNextChild+0x1e>
 8004460:	4608      	mov	r0, r1
 8004462:	f006 fff7 	bl	800b454 <GUI_ALLOC_h2p>
 8004466:	6a00      	ldr	r0, [r0, #32]
 8004468:	2800      	cmp	r0, #0
 800446a:	d0f4      	beq.n	8004456 <_GetNextChild+0x8>
 800446c:	42a0      	cmp	r0, r4
 800446e:	bf08      	it	eq
 8004470:	2000      	moveq	r0, #0
 8004472:	bd38      	pop	{r3, r4, r5, pc}

08004474 <WM_SetFocusOnNextChild>:
 8004474:	b570      	push	{r4, r5, r6, lr}
 8004476:	4605      	mov	r5, r0
 8004478:	b328      	cbz	r0, 80044c6 <WM_SetFocusOnNextChild+0x52>
 800447a:	f7ff fe7d 	bl	8004178 <WM__GetFocusedChild>
 800447e:	4601      	mov	r1, r0
 8004480:	4628      	mov	r0, r5
 8004482:	f7ff ffe4 	bl	800444e <_GetNextChild>
 8004486:	4606      	mov	r6, r0
 8004488:	4604      	mov	r4, r0
 800448a:	4620      	mov	r0, r4
 800448c:	f000 fafa 	bl	8004a84 <WM_IsFocusable>
 8004490:	b938      	cbnz	r0, 80044a2 <WM_SetFocusOnNextChild+0x2e>
 8004492:	b13c      	cbz	r4, 80044a4 <WM_SetFocusOnNextChild+0x30>
 8004494:	4621      	mov	r1, r4
 8004496:	4628      	mov	r0, r5
 8004498:	f7ff ffd9 	bl	800444e <_GetNextChild>
 800449c:	42b0      	cmp	r0, r6
 800449e:	4604      	mov	r4, r0
 80044a0:	d1f3      	bne.n	800448a <WM_SetFocusOnNextChild+0x16>
 80044a2:	b90c      	cbnz	r4, 80044a8 <WM_SetFocusOnNextChild+0x34>
 80044a4:	2400      	movs	r4, #0
 80044a6:	e00f      	b.n	80044c8 <WM_SetFocusOnNextChild+0x54>
 80044a8:	4d08      	ldr	r5, [pc, #32]	; (80044cc <WM_SetFocusOnNextChild+0x58>)
 80044aa:	4620      	mov	r0, r4
 80044ac:	682e      	ldr	r6, [r5, #0]
 80044ae:	f001 f8b5 	bl	800561c <WM__GetTopLevelLayer>
 80044b2:	1c43      	adds	r3, r0, #1
 80044b4:	d008      	beq.n	80044c8 <WM_SetFocusOnNextChild+0x54>
 80044b6:	6028      	str	r0, [r5, #0]
 80044b8:	4620      	mov	r0, r4
 80044ba:	f000 fbaf 	bl	8004c1c <WM_SetFocus>
 80044be:	602e      	str	r6, [r5, #0]
 80044c0:	2800      	cmp	r0, #0
 80044c2:	d1ef      	bne.n	80044a4 <WM_SetFocusOnNextChild+0x30>
 80044c4:	e000      	b.n	80044c8 <WM_SetFocusOnNextChild+0x54>
 80044c6:	4604      	mov	r4, r0
 80044c8:	4620      	mov	r0, r4
 80044ca:	bd70      	pop	{r4, r5, r6, pc}
 80044cc:	20002ca0 	.word	0x20002ca0

080044d0 <WM_SetCaptureMove>:
 80044d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80044d4:	b085      	sub	sp, #20
 80044d6:	4604      	mov	r4, r0
 80044d8:	460d      	mov	r5, r1
 80044da:	4691      	mov	r9, r2
 80044dc:	4698      	mov	r8, r3
 80044de:	f000 fab5 	bl	8004a4c <WM_HasCaptured>
 80044e2:	4e21      	ldr	r6, [pc, #132]	; (8004568 <WM_SetCaptureMove+0x98>)
 80044e4:	b940      	cbnz	r0, 80044f8 <WM_SetCaptureMove+0x28>
 80044e6:	4620      	mov	r0, r4
 80044e8:	2101      	movs	r1, #1
 80044ea:	f000 f859 	bl	80045a0 <WM_SetCapture>
 80044ee:	682b      	ldr	r3, [r5, #0]
 80044f0:	8033      	strh	r3, [r6, #0]
 80044f2:	686b      	ldr	r3, [r5, #4]
 80044f4:	8073      	strh	r3, [r6, #2]
 80044f6:	e034      	b.n	8004562 <WM_SetCaptureMove+0x92>
 80044f8:	682b      	ldr	r3, [r5, #0]
 80044fa:	f9b6 7000 	ldrsh.w	r7, [r6]
 80044fe:	686d      	ldr	r5, [r5, #4]
 8004500:	1bdf      	subs	r7, r3, r7
 8004502:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8004506:	4620      	mov	r0, r4
 8004508:	1aed      	subs	r5, r5, r3
 800450a:	f1b9 0f00 	cmp.w	r9, #0
 800450e:	d102      	bne.n	8004516 <WM_SetCaptureMove+0x46>
 8004510:	f1b8 0f00 	cmp.w	r8, #0
 8004514:	d021      	beq.n	800455a <WM_SetCaptureMove+0x8a>
 8004516:	4669      	mov	r1, sp
 8004518:	f000 fa39 	bl	800498e <WM_GetWindowRectEx>
 800451c:	f1b8 0f00 	cmp.w	r8, #0
 8004520:	d005      	beq.n	800452e <WM_SetCaptureMove+0x5e>
 8004522:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8004526:	3b01      	subs	r3, #1
 8004528:	4498      	add	r8, r3
 800452a:	f8ad 8006 	strh.w	r8, [sp, #6]
 800452e:	4620      	mov	r0, r4
 8004530:	f000 f9c4 	bl	80048bc <WM_GetParent>
 8004534:	a902      	add	r1, sp, #8
 8004536:	f000 fa2a 	bl	800498e <WM_GetWindowRectEx>
 800453a:	4668      	mov	r0, sp
 800453c:	4639      	mov	r1, r7
 800453e:	462a      	mov	r2, r5
 8004540:	f006 faa9 	bl	800aa96 <GUI_MoveRect>
 8004544:	a802      	add	r0, sp, #8
 8004546:	4601      	mov	r1, r0
 8004548:	464a      	mov	r2, r9
 800454a:	f004 fcb8 	bl	8008ebe <GUI__ReduceRect>
 800454e:	4668      	mov	r0, sp
 8004550:	a902      	add	r1, sp, #8
 8004552:	f006 faeb 	bl	800ab2c <GUI_RectsIntersect>
 8004556:	b120      	cbz	r0, 8004562 <WM_SetCaptureMove+0x92>
 8004558:	4620      	mov	r0, r4
 800455a:	4639      	mov	r1, r7
 800455c:	462a      	mov	r2, r5
 800455e:	f000 f8c3 	bl	80046e8 <WM_MoveWindow>
 8004562:	b005      	add	sp, #20
 8004564:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004568:	20002a1c 	.word	0x20002a1c

0800456c <WM__ReleaseCapture>:
 800456c:	b530      	push	{r4, r5, lr}
 800456e:	4d0a      	ldr	r5, [pc, #40]	; (8004598 <WM__ReleaseCapture+0x2c>)
 8004570:	4c0a      	ldr	r4, [pc, #40]	; (800459c <WM__ReleaseCapture+0x30>)
 8004572:	682b      	ldr	r3, [r5, #0]
 8004574:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8004578:	b085      	sub	sp, #20
 800457a:	b150      	cbz	r0, 8004592 <WM__ReleaseCapture+0x26>
 800457c:	a904      	add	r1, sp, #16
 800457e:	2318      	movs	r3, #24
 8004580:	f841 3d10 	str.w	r3, [r1, #-16]!
 8004584:	4669      	mov	r1, sp
 8004586:	f7ff fe13 	bl	80041b0 <WM__SendMessage>
 800458a:	682b      	ldr	r3, [r5, #0]
 800458c:	2200      	movs	r2, #0
 800458e:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 8004592:	b005      	add	sp, #20
 8004594:	bd30      	pop	{r4, r5, pc}
 8004596:	bf00      	nop
 8004598:	20002ca0 	.word	0x20002ca0
 800459c:	20002cc4 	.word	0x20002cc4

080045a0 <WM_SetCapture>:
 80045a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80045a2:	4b09      	ldr	r3, [pc, #36]	; (80045c8 <WM_SetCapture+0x28>)
 80045a4:	4a09      	ldr	r2, [pc, #36]	; (80045cc <WM_SetCapture+0x2c>)
 80045a6:	4604      	mov	r4, r0
 80045a8:	6818      	ldr	r0, [r3, #0]
 80045aa:	460f      	mov	r7, r1
 80045ac:	f852 1020 	ldr.w	r1, [r2, r0, lsl #2]
 80045b0:	42a1      	cmp	r1, r4
 80045b2:	4615      	mov	r5, r2
 80045b4:	461e      	mov	r6, r3
 80045b6:	d001      	beq.n	80045bc <WM_SetCapture+0x1c>
 80045b8:	f7ff ffd8 	bl	800456c <WM__ReleaseCapture>
 80045bc:	6833      	ldr	r3, [r6, #0]
 80045be:	f845 4023 	str.w	r4, [r5, r3, lsl #2]
 80045c2:	4b03      	ldr	r3, [pc, #12]	; (80045d0 <WM_SetCapture+0x30>)
 80045c4:	701f      	strb	r7, [r3, #0]
 80045c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80045c8:	20002ca0 	.word	0x20002ca0
 80045cc:	20002cc4 	.word	0x20002cc4
 80045d0:	20002ca4 	.word	0x20002ca4

080045d4 <_MoveDescendents>:
 80045d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80045d8:	b088      	sub	sp, #32
 80045da:	4606      	mov	r6, r0
 80045dc:	460c      	mov	r4, r1
 80045de:	4615      	mov	r5, r2
 80045e0:	a804      	add	r0, sp, #16
 80045e2:	2100      	movs	r1, #0
 80045e4:	2210      	movs	r2, #16
 80045e6:	f00b fb79 	bl	800fcdc <memset>
 80045ea:	b336      	cbz	r6, 800463a <_MoveDescendents+0x66>
 80045ec:	4630      	mov	r0, r6
 80045ee:	f006 ff3b 	bl	800b468 <GUI_ALLOC_LockH>
 80045f2:	4621      	mov	r1, r4
 80045f4:	462a      	mov	r2, r5
 80045f6:	9001      	str	r0, [sp, #4]
 80045f8:	f006 fa4d 	bl	800aa96 <GUI_MoveRect>
 80045fc:	9801      	ldr	r0, [sp, #4]
 80045fe:	4621      	mov	r1, r4
 8004600:	3008      	adds	r0, #8
 8004602:	462a      	mov	r2, r5
 8004604:	f006 fa47 	bl	800aa96 <GUI_MoveRect>
 8004608:	a808      	add	r0, sp, #32
 800460a:	f850 2d1c 	ldr.w	r2, [r0, #-28]!
 800460e:	f8d2 801c 	ldr.w	r8, [r2, #28]
 8004612:	6a17      	ldr	r7, [r2, #32]
 8004614:	f006 ff36 	bl	800b484 <GUI_ALLOC_UnlockH>
 8004618:	4640      	mov	r0, r8
 800461a:	4621      	mov	r1, r4
 800461c:	462a      	mov	r2, r5
 800461e:	f7ff ffd9 	bl	80045d4 <_MoveDescendents>
 8004622:	2303      	movs	r3, #3
 8004624:	9304      	str	r3, [sp, #16]
 8004626:	4630      	mov	r0, r6
 8004628:	ab02      	add	r3, sp, #8
 800462a:	a904      	add	r1, sp, #16
 800462c:	9307      	str	r3, [sp, #28]
 800462e:	9402      	str	r4, [sp, #8]
 8004630:	9503      	str	r5, [sp, #12]
 8004632:	463e      	mov	r6, r7
 8004634:	f7ff fdbc 	bl	80041b0 <WM__SendMessage>
 8004638:	e7d7      	b.n	80045ea <_MoveDescendents+0x16>
 800463a:	b008      	add	sp, #32
 800463c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004640 <WM__MoveWindow>:
 8004640:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004644:	b08b      	sub	sp, #44	; 0x2c
 8004646:	4606      	mov	r6, r0
 8004648:	460d      	mov	r5, r1
 800464a:	4614      	mov	r4, r2
 800464c:	a806      	add	r0, sp, #24
 800464e:	2100      	movs	r1, #0
 8004650:	2210      	movs	r2, #16
 8004652:	f00b fb43 	bl	800fcdc <memset>
 8004656:	2e00      	cmp	r6, #0
 8004658:	d043      	beq.n	80046e2 <WM__MoveWindow+0xa2>
 800465a:	b90d      	cbnz	r5, 8004660 <WM__MoveWindow+0x20>
 800465c:	2c00      	cmp	r4, #0
 800465e:	d040      	beq.n	80046e2 <WM__MoveWindow+0xa2>
 8004660:	4630      	mov	r0, r6
 8004662:	f006 ff01 	bl	800b468 <GUI_ALLOC_LockH>
 8004666:	4603      	mov	r3, r0
 8004668:	9001      	str	r0, [sp, #4]
 800466a:	c803      	ldmia	r0, {r0, r1}
 800466c:	f10d 0808 	add.w	r8, sp, #8
 8004670:	e888 0003 	stmia.w	r8, {r0, r1}
 8004674:	4622      	mov	r2, r4
 8004676:	4618      	mov	r0, r3
 8004678:	4629      	mov	r1, r5
 800467a:	f006 fa0c 	bl	800aa96 <GUI_MoveRect>
 800467e:	9801      	ldr	r0, [sp, #4]
 8004680:	af0a      	add	r7, sp, #40	; 0x28
 8004682:	4629      	mov	r1, r5
 8004684:	4622      	mov	r2, r4
 8004686:	3008      	adds	r0, #8
 8004688:	f006 fa05 	bl	800aa96 <GUI_MoveRect>
 800468c:	f857 3d24 	ldr.w	r3, [r7, #-36]!
 8004690:	f8d3 901c 	ldr.w	r9, [r3, #28]
 8004694:	4638      	mov	r0, r7
 8004696:	f006 fef5 	bl	800b484 <GUI_ALLOC_UnlockH>
 800469a:	4622      	mov	r2, r4
 800469c:	4648      	mov	r0, r9
 800469e:	4629      	mov	r1, r5
 80046a0:	f7ff ff98 	bl	80045d4 <_MoveDescendents>
 80046a4:	4630      	mov	r0, r6
 80046a6:	f006 fedf 	bl	800b468 <GUI_ALLOC_LockH>
 80046aa:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80046ac:	9001      	str	r0, [sp, #4]
 80046ae:	0792      	lsls	r2, r2, #30
 80046b0:	d50a      	bpl.n	80046c8 <WM__MoveWindow+0x88>
 80046b2:	6981      	ldr	r1, [r0, #24]
 80046b4:	b141      	cbz	r1, 80046c8 <WM__MoveWindow+0x88>
 80046b6:	6a02      	ldr	r2, [r0, #32]
 80046b8:	f001 f885 	bl	80057c6 <WM__InvalidateParent>
 80046bc:	9b01      	ldr	r3, [sp, #4]
 80046be:	4640      	mov	r0, r8
 80046c0:	6999      	ldr	r1, [r3, #24]
 80046c2:	6a1a      	ldr	r2, [r3, #32]
 80046c4:	f001 f87f 	bl	80057c6 <WM__InvalidateParent>
 80046c8:	4638      	mov	r0, r7
 80046ca:	f006 fedb 	bl	800b484 <GUI_ALLOC_UnlockH>
 80046ce:	2303      	movs	r3, #3
 80046d0:	9306      	str	r3, [sp, #24]
 80046d2:	4630      	mov	r0, r6
 80046d4:	ab04      	add	r3, sp, #16
 80046d6:	a906      	add	r1, sp, #24
 80046d8:	9309      	str	r3, [sp, #36]	; 0x24
 80046da:	9504      	str	r5, [sp, #16]
 80046dc:	9405      	str	r4, [sp, #20]
 80046de:	f7ff fd67 	bl	80041b0 <WM__SendMessage>
 80046e2:	b00b      	add	sp, #44	; 0x2c
 80046e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080046e8 <WM_MoveWindow>:
 80046e8:	f7ff bfaa 	b.w	8004640 <WM__MoveWindow>

080046ec <WM_DisableMemdev>:
 80046ec:	b508      	push	{r3, lr}
 80046ee:	b138      	cbz	r0, 8004700 <WM_DisableMemdev+0x14>
 80046f0:	f006 feb0 	bl	800b454 <GUI_ALLOC_h2p>
 80046f4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80046f6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80046fa:	f023 0304 	bic.w	r3, r3, #4
 80046fe:	6283      	str	r3, [r0, #40]	; 0x28
 8004700:	bd08      	pop	{r3, pc}

08004702 <WM_ForEachDesc>:
 8004702:	f7ff bcd1 	b.w	80040a8 <WM__ForEachDesc>

08004706 <WM_GetClientRectEx>:
 8004706:	f7ff be07 	b.w	8004318 <WM__GetClientRectEx>
	...

0800470c <WM_GetClientRect>:
 800470c:	4b04      	ldr	r3, [pc, #16]	; (8004720 <WM_GetClientRect+0x14>)
 800470e:	4601      	mov	r1, r0
 8004710:	6818      	ldr	r0, [r3, #0]
 8004712:	b910      	cbnz	r0, 800471a <WM_GetClientRect+0xe>
 8004714:	4b03      	ldr	r3, [pc, #12]	; (8004724 <WM_GetClientRect+0x18>)
 8004716:	681b      	ldr	r3, [r3, #0]
 8004718:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800471a:	f7ff bdfd 	b.w	8004318 <WM__GetClientRectEx>
 800471e:	bf00      	nop
 8004720:	20002c7c 	.word	0x20002c7c
 8004724:	200000b8 	.word	0x200000b8

08004728 <WM_GetClientWindow>:
 8004728:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800472a:	2300      	movs	r3, #0
 800472c:	a904      	add	r1, sp, #16
 800472e:	9303      	str	r3, [sp, #12]
 8004730:	2317      	movs	r3, #23
 8004732:	f841 3d10 	str.w	r3, [r1, #-16]!
 8004736:	4669      	mov	r1, sp
 8004738:	f000 ff55 	bl	80055e6 <WM_SendMessage>
 800473c:	9803      	ldr	r0, [sp, #12]
 800473e:	b005      	add	sp, #20
 8004740:	f85d fb04 	ldr.w	pc, [sp], #4

08004744 <WM_GetDesktopWindow>:
 8004744:	4b03      	ldr	r3, [pc, #12]	; (8004754 <WM_GetDesktopWindow+0x10>)
 8004746:	681b      	ldr	r3, [r3, #0]
 8004748:	7c5a      	ldrb	r2, [r3, #17]
 800474a:	4b03      	ldr	r3, [pc, #12]	; (8004758 <WM_GetDesktopWindow+0x14>)
 800474c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8004750:	4770      	bx	lr
 8004752:	bf00      	nop
 8004754:	200000b8 	.word	0x200000b8
 8004758:	20002c80 	.word	0x20002c80

0800475c <WM_CheckScrollBounds>:
 800475c:	6802      	ldr	r2, [r0, #0]
 800475e:	6883      	ldr	r3, [r0, #8]
 8004760:	1ad3      	subs	r3, r2, r3
 8004762:	6842      	ldr	r2, [r0, #4]
 8004764:	2a00      	cmp	r2, #0
 8004766:	bfbc      	itt	lt
 8004768:	2200      	movlt	r2, #0
 800476a:	6042      	strlt	r2, [r0, #4]
 800476c:	6842      	ldr	r2, [r0, #4]
 800476e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8004772:	429a      	cmp	r2, r3
 8004774:	bfc8      	it	gt
 8004776:	6043      	strgt	r3, [r0, #4]
 8004778:	4770      	bx	lr

0800477a <WM_GetFirstChild>:
 800477a:	b508      	push	{r3, lr}
 800477c:	4603      	mov	r3, r0
 800477e:	b110      	cbz	r0, 8004786 <WM_GetFirstChild+0xc>
 8004780:	f006 fe68 	bl	800b454 <GUI_ALLOC_h2p>
 8004784:	69c3      	ldr	r3, [r0, #28]
 8004786:	4618      	mov	r0, r3
 8004788:	bd08      	pop	{r3, pc}

0800478a <WM_GetFlags>:
 800478a:	b508      	push	{r3, lr}
 800478c:	b118      	cbz	r0, 8004796 <WM_GetFlags+0xc>
 800478e:	f006 fe61 	bl	800b454 <GUI_ALLOC_h2p>
 8004792:	8d00      	ldrh	r0, [r0, #40]	; 0x28
 8004794:	bd08      	pop	{r3, pc}
 8004796:	bd08      	pop	{r3, pc}

08004798 <WM_GetFocusedWindow>:
 8004798:	4b02      	ldr	r3, [pc, #8]	; (80047a4 <WM_GetFocusedWindow+0xc>)
 800479a:	681a      	ldr	r2, [r3, #0]
 800479c:	4b02      	ldr	r3, [pc, #8]	; (80047a8 <WM_GetFocusedWindow+0x10>)
 800479e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80047a2:	4770      	bx	lr
 80047a4:	20002ca0 	.word	0x20002ca0
 80047a8:	20002c90 	.word	0x20002c90

080047ac <WM_GetId>:
 80047ac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80047ae:	4604      	mov	r4, r0
 80047b0:	2210      	movs	r2, #16
 80047b2:	4668      	mov	r0, sp
 80047b4:	2100      	movs	r1, #0
 80047b6:	f00b fa91 	bl	800fcdc <memset>
 80047ba:	2315      	movs	r3, #21
 80047bc:	4620      	mov	r0, r4
 80047be:	4669      	mov	r1, sp
 80047c0:	9300      	str	r3, [sp, #0]
 80047c2:	f000 ff10 	bl	80055e6 <WM_SendMessage>
 80047c6:	9803      	ldr	r0, [sp, #12]
 80047c8:	b004      	add	sp, #16
 80047ca:	bd10      	pop	{r4, pc}

080047cc <_GetDialogItem>:
 80047cc:	b570      	push	{r4, r5, r6, lr}
 80047ce:	4606      	mov	r6, r0
 80047d0:	460d      	mov	r5, r1
 80047d2:	f006 fe3f 	bl	800b454 <GUI_ALLOC_h2p>
 80047d6:	69c4      	ldr	r4, [r0, #28]
 80047d8:	b14c      	cbz	r4, 80047ee <_GetDialogItem+0x22>
 80047da:	4620      	mov	r0, r4
 80047dc:	f7ff ffe6 	bl	80047ac <WM_GetId>
 80047e0:	42a8      	cmp	r0, r5
 80047e2:	4620      	mov	r0, r4
 80047e4:	d013      	beq.n	800480e <_GetDialogItem+0x42>
 80047e6:	f006 fe35 	bl	800b454 <GUI_ALLOC_h2p>
 80047ea:	6a04      	ldr	r4, [r0, #32]
 80047ec:	e7f4      	b.n	80047d8 <_GetDialogItem+0xc>
 80047ee:	4630      	mov	r0, r6
 80047f0:	f006 fe30 	bl	800b454 <GUI_ALLOC_h2p>
 80047f4:	69c4      	ldr	r4, [r0, #28]
 80047f6:	4620      	mov	r0, r4
 80047f8:	b144      	cbz	r4, 800480c <_GetDialogItem+0x40>
 80047fa:	4629      	mov	r1, r5
 80047fc:	f7ff ffe6 	bl	80047cc <_GetDialogItem>
 8004800:	b928      	cbnz	r0, 800480e <_GetDialogItem+0x42>
 8004802:	4620      	mov	r0, r4
 8004804:	f006 fe26 	bl	800b454 <GUI_ALLOC_h2p>
 8004808:	6a04      	ldr	r4, [r0, #32]
 800480a:	e7f4      	b.n	80047f6 <_GetDialogItem+0x2a>
 800480c:	bd70      	pop	{r4, r5, r6, pc}
 800480e:	bd70      	pop	{r4, r5, r6, pc}

08004810 <WM_GetDialogItem>:
 8004810:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004812:	460d      	mov	r5, r1
 8004814:	4604      	mov	r4, r0
 8004816:	b1c8      	cbz	r0, 800484c <WM_GetDialogItem+0x3c>
 8004818:	f006 fe26 	bl	800b468 <GUI_ALLOC_LockH>
 800481c:	ab02      	add	r3, sp, #8
 800481e:	69c4      	ldr	r4, [r0, #28]
 8004820:	f843 0d04 	str.w	r0, [r3, #-4]!
 8004824:	4618      	mov	r0, r3
 8004826:	f006 fe2d 	bl	800b484 <GUI_ALLOC_UnlockH>
 800482a:	b17c      	cbz	r4, 800484c <WM_GetDialogItem+0x3c>
 800482c:	4620      	mov	r0, r4
 800482e:	f7ff ffbd 	bl	80047ac <WM_GetId>
 8004832:	42a8      	cmp	r0, r5
 8004834:	d00a      	beq.n	800484c <WM_GetDialogItem+0x3c>
 8004836:	4620      	mov	r0, r4
 8004838:	4629      	mov	r1, r5
 800483a:	f7ff ffc7 	bl	80047cc <_GetDialogItem>
 800483e:	b920      	cbnz	r0, 800484a <WM_GetDialogItem+0x3a>
 8004840:	4620      	mov	r0, r4
 8004842:	f006 fe07 	bl	800b454 <GUI_ALLOC_h2p>
 8004846:	6a04      	ldr	r4, [r0, #32]
 8004848:	e7ef      	b.n	800482a <WM_GetDialogItem+0x1a>
 800484a:	4604      	mov	r4, r0
 800484c:	4620      	mov	r0, r4
 800484e:	b003      	add	sp, #12
 8004850:	bd30      	pop	{r4, r5, pc}

08004852 <WM_GetInsideRectEx>:
 8004852:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004854:	9103      	str	r1, [sp, #12]
 8004856:	a904      	add	r1, sp, #16
 8004858:	2314      	movs	r3, #20
 800485a:	f841 3d10 	str.w	r3, [r1, #-16]!
 800485e:	4669      	mov	r1, sp
 8004860:	f000 fec1 	bl	80055e6 <WM_SendMessage>
 8004864:	b005      	add	sp, #20
 8004866:	f85d fb04 	ldr.w	pc, [sp], #4

0800486a <WM_GetNextSibling>:
 800486a:	b508      	push	{r3, lr}
 800486c:	4603      	mov	r3, r0
 800486e:	b110      	cbz	r0, 8004876 <WM_GetNextSibling+0xc>
 8004870:	f006 fdf0 	bl	800b454 <GUI_ALLOC_h2p>
 8004874:	6a03      	ldr	r3, [r0, #32]
 8004876:	4618      	mov	r0, r3
 8004878:	bd08      	pop	{r3, pc}

0800487a <WM_GetWindowOrgX>:
 800487a:	b508      	push	{r3, lr}
 800487c:	b120      	cbz	r0, 8004888 <WM_GetWindowOrgX+0xe>
 800487e:	f006 fde9 	bl	800b454 <GUI_ALLOC_h2p>
 8004882:	f9b0 0000 	ldrsh.w	r0, [r0]
 8004886:	bd08      	pop	{r3, pc}
 8004888:	bd08      	pop	{r3, pc}

0800488a <WM_GetWindowOrgY>:
 800488a:	b508      	push	{r3, lr}
 800488c:	b120      	cbz	r0, 8004898 <WM_GetWindowOrgY+0xe>
 800488e:	f006 fde1 	bl	800b454 <GUI_ALLOC_h2p>
 8004892:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 8004896:	bd08      	pop	{r3, pc}
 8004898:	bd08      	pop	{r3, pc}
	...

0800489c <WM_GetOrgX>:
 800489c:	4b02      	ldr	r3, [pc, #8]	; (80048a8 <WM_GetOrgX+0xc>)
 800489e:	681b      	ldr	r3, [r3, #0]
 80048a0:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80048a2:	f7ff bfea 	b.w	800487a <WM_GetWindowOrgX>
 80048a6:	bf00      	nop
 80048a8:	200000b8 	.word	0x200000b8

080048ac <WM_GetOrgY>:
 80048ac:	4b02      	ldr	r3, [pc, #8]	; (80048b8 <WM_GetOrgY+0xc>)
 80048ae:	681b      	ldr	r3, [r3, #0]
 80048b0:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80048b2:	f7ff bfea 	b.w	800488a <WM_GetWindowOrgY>
 80048b6:	bf00      	nop
 80048b8:	200000b8 	.word	0x200000b8

080048bc <WM_GetParent>:
 80048bc:	b508      	push	{r3, lr}
 80048be:	4603      	mov	r3, r0
 80048c0:	b110      	cbz	r0, 80048c8 <WM_GetParent+0xc>
 80048c2:	f006 fdc7 	bl	800b454 <GUI_ALLOC_h2p>
 80048c6:	6983      	ldr	r3, [r0, #24]
 80048c8:	4618      	mov	r0, r3
 80048ca:	bd08      	pop	{r3, pc}

080048cc <WM_BringToBottom>:
 80048cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80048d0:	4604      	mov	r4, r0
 80048d2:	b087      	sub	sp, #28
 80048d4:	2800      	cmp	r0, #0
 80048d6:	d039      	beq.n	800494c <WM_BringToBottom+0x80>
 80048d8:	f006 fdc6 	bl	800b468 <GUI_ALLOC_LockH>
 80048dc:	4603      	mov	r3, r0
 80048de:	9001      	str	r0, [sp, #4]
 80048e0:	c803      	ldmia	r0, {r0, r1}
 80048e2:	ad04      	add	r5, sp, #16
 80048e4:	e885 0003 	stmia.w	r5, {r0, r1}
 80048e8:	a801      	add	r0, sp, #4
 80048ea:	6a1e      	ldr	r6, [r3, #32]
 80048ec:	f8d3 9028 	ldr.w	r9, [r3, #40]	; 0x28
 80048f0:	f006 fdc8 	bl	800b484 <GUI_ALLOC_UnlockH>
 80048f4:	4620      	mov	r0, r4
 80048f6:	f7ff fc01 	bl	80040fc <WM__GetPrevSibling>
 80048fa:	4607      	mov	r7, r0
 80048fc:	b330      	cbz	r0, 800494c <WM_BringToBottom+0x80>
 80048fe:	4620      	mov	r0, r4
 8004900:	f7ff ffdc 	bl	80048bc <WM_GetParent>
 8004904:	f019 0f02 	tst.w	r9, #2
 8004908:	4680      	mov	r8, r0
 800490a:	d004      	beq.n	8004916 <WM_BringToBottom+0x4a>
 800490c:	4628      	mov	r0, r5
 800490e:	4641      	mov	r1, r8
 8004910:	4632      	mov	r2, r6
 8004912:	f000 ff6d 	bl	80057f0 <WM__InvalidateRectEx>
 8004916:	4620      	mov	r0, r4
 8004918:	f006 fda6 	bl	800b468 <GUI_ALLOC_LockH>
 800491c:	9001      	str	r0, [sp, #4]
 800491e:	4640      	mov	r0, r8
 8004920:	f006 fda2 	bl	800b468 <GUI_ALLOC_LockH>
 8004924:	9003      	str	r0, [sp, #12]
 8004926:	4638      	mov	r0, r7
 8004928:	f006 fd9e 	bl	800b468 <GUI_ALLOC_LockH>
 800492c:	9b03      	ldr	r3, [sp, #12]
 800492e:	9a01      	ldr	r2, [sp, #4]
 8004930:	69d9      	ldr	r1, [r3, #28]
 8004932:	6206      	str	r6, [r0, #32]
 8004934:	9002      	str	r0, [sp, #8]
 8004936:	6211      	str	r1, [r2, #32]
 8004938:	a801      	add	r0, sp, #4
 800493a:	61dc      	str	r4, [r3, #28]
 800493c:	f006 fda2 	bl	800b484 <GUI_ALLOC_UnlockH>
 8004940:	a803      	add	r0, sp, #12
 8004942:	f006 fd9f 	bl	800b484 <GUI_ALLOC_UnlockH>
 8004946:	a802      	add	r0, sp, #8
 8004948:	f006 fd9c 	bl	800b484 <GUI_ALLOC_UnlockH>
 800494c:	b007      	add	sp, #28
 800494e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08004952 <WM_GetScrollbarH>:
 8004952:	b110      	cbz	r0, 800495a <WM_GetScrollbarH+0x8>
 8004954:	21ff      	movs	r1, #255	; 0xff
 8004956:	f7ff bf39 	b.w	80047cc <_GetDialogItem>
 800495a:	4770      	bx	lr

0800495c <WM_GetScrollbarV>:
 800495c:	b110      	cbz	r0, 8004964 <WM_GetScrollbarV+0x8>
 800495e:	21fe      	movs	r1, #254	; 0xfe
 8004960:	f7ff bf34 	b.w	80047cc <_GetDialogItem>
 8004964:	4770      	bx	lr

08004966 <WM_GetScrollPartner>:
 8004966:	b538      	push	{r3, r4, r5, lr}
 8004968:	4605      	mov	r5, r0
 800496a:	f7ff ff1f 	bl	80047ac <WM_GetId>
 800496e:	28ff      	cmp	r0, #255	; 0xff
 8004970:	4604      	mov	r4, r0
 8004972:	d003      	beq.n	800497c <WM_GetScrollPartner+0x16>
 8004974:	28fe      	cmp	r0, #254	; 0xfe
 8004976:	bf08      	it	eq
 8004978:	24ff      	moveq	r4, #255	; 0xff
 800497a:	e000      	b.n	800497e <WM_GetScrollPartner+0x18>
 800497c:	24fe      	movs	r4, #254	; 0xfe
 800497e:	4628      	mov	r0, r5
 8004980:	f7ff ff9c 	bl	80048bc <WM_GetParent>
 8004984:	4621      	mov	r1, r4
 8004986:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800498a:	f7ff bf41 	b.w	8004810 <WM_GetDialogItem>

0800498e <WM_GetWindowRectEx>:
 800498e:	b510      	push	{r4, lr}
 8004990:	460c      	mov	r4, r1
 8004992:	b130      	cbz	r0, 80049a2 <WM_GetWindowRectEx+0x14>
 8004994:	b129      	cbz	r1, 80049a2 <WM_GetWindowRectEx+0x14>
 8004996:	f006 fd5d 	bl	800b454 <GUI_ALLOC_h2p>
 800499a:	4603      	mov	r3, r0
 800499c:	cb03      	ldmia	r3!, {r0, r1}
 800499e:	6020      	str	r0, [r4, #0]
 80049a0:	6061      	str	r1, [r4, #4]
 80049a2:	bd10      	pop	{r4, pc}

080049a4 <WM_GetInsideRectExScrollbar>:
 80049a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80049a6:	460c      	mov	r4, r1
 80049a8:	b087      	sub	sp, #28
 80049aa:	4606      	mov	r6, r0
 80049ac:	2800      	cmp	r0, #0
 80049ae:	d04b      	beq.n	8004a48 <WM_GetInsideRectExScrollbar+0xa4>
 80049b0:	2900      	cmp	r1, #0
 80049b2:	d049      	beq.n	8004a48 <WM_GetInsideRectExScrollbar+0xa4>
 80049b4:	21ff      	movs	r1, #255	; 0xff
 80049b6:	f7ff ff2b 	bl	8004810 <WM_GetDialogItem>
 80049ba:	21fe      	movs	r1, #254	; 0xfe
 80049bc:	4605      	mov	r5, r0
 80049be:	4630      	mov	r0, r6
 80049c0:	f7ff ff26 	bl	8004810 <WM_GetDialogItem>
 80049c4:	4669      	mov	r1, sp
 80049c6:	4607      	mov	r7, r0
 80049c8:	4630      	mov	r0, r6
 80049ca:	f7ff ffe0 	bl	800498e <WM_GetWindowRectEx>
 80049ce:	4630      	mov	r0, r6
 80049d0:	a902      	add	r1, sp, #8
 80049d2:	f7ff ff3e 	bl	8004852 <WM_GetInsideRectEx>
 80049d6:	b1c7      	cbz	r7, 8004a0a <WM_GetInsideRectExScrollbar+0x66>
 80049d8:	4638      	mov	r0, r7
 80049da:	a904      	add	r1, sp, #16
 80049dc:	f7ff ffd7 	bl	800498e <WM_GetWindowRectEx>
 80049e0:	f9bd 1000 	ldrsh.w	r1, [sp]
 80049e4:	f9bd 2002 	ldrsh.w	r2, [sp, #2]
 80049e8:	a804      	add	r0, sp, #16
 80049ea:	4249      	negs	r1, r1
 80049ec:	4252      	negs	r2, r2
 80049ee:	f006 f852 	bl	800aa96 <GUI_MoveRect>
 80049f2:	4638      	mov	r0, r7
 80049f4:	f7ff fec9 	bl	800478a <WM_GetFlags>
 80049f8:	f000 0082 	and.w	r0, r0, #130	; 0x82
 80049fc:	2882      	cmp	r0, #130	; 0x82
 80049fe:	d104      	bne.n	8004a0a <WM_GetInsideRectExScrollbar+0x66>
 8004a00:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8004a04:	3b01      	subs	r3, #1
 8004a06:	f8ad 300c 	strh.w	r3, [sp, #12]
 8004a0a:	b1cd      	cbz	r5, 8004a40 <WM_GetInsideRectExScrollbar+0x9c>
 8004a0c:	4628      	mov	r0, r5
 8004a0e:	a904      	add	r1, sp, #16
 8004a10:	f7ff ffbd 	bl	800498e <WM_GetWindowRectEx>
 8004a14:	f9bd 1000 	ldrsh.w	r1, [sp]
 8004a18:	f9bd 2002 	ldrsh.w	r2, [sp, #2]
 8004a1c:	a804      	add	r0, sp, #16
 8004a1e:	4249      	negs	r1, r1
 8004a20:	4252      	negs	r2, r2
 8004a22:	f006 f838 	bl	800aa96 <GUI_MoveRect>
 8004a26:	4628      	mov	r0, r5
 8004a28:	f7ff feaf 	bl	800478a <WM_GetFlags>
 8004a2c:	f400 7081 	and.w	r0, r0, #258	; 0x102
 8004a30:	f5b0 7f81 	cmp.w	r0, #258	; 0x102
 8004a34:	d104      	bne.n	8004a40 <WM_GetInsideRectExScrollbar+0x9c>
 8004a36:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8004a3a:	3b01      	subs	r3, #1
 8004a3c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8004a40:	ab02      	add	r3, sp, #8
 8004a42:	cb03      	ldmia	r3!, {r0, r1}
 8004a44:	6020      	str	r0, [r4, #0]
 8004a46:	6061      	str	r1, [r4, #4]
 8004a48:	b007      	add	sp, #28
 8004a4a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004a4c <WM_HasCaptured>:
 8004a4c:	4b04      	ldr	r3, [pc, #16]	; (8004a60 <WM_HasCaptured+0x14>)
 8004a4e:	681a      	ldr	r2, [r3, #0]
 8004a50:	4b04      	ldr	r3, [pc, #16]	; (8004a64 <WM_HasCaptured+0x18>)
 8004a52:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004a56:	1ac3      	subs	r3, r0, r3
 8004a58:	4258      	negs	r0, r3
 8004a5a:	4158      	adcs	r0, r3
 8004a5c:	4770      	bx	lr
 8004a5e:	bf00      	nop
 8004a60:	20002ca0 	.word	0x20002ca0
 8004a64:	20002cc4 	.word	0x20002cc4

08004a68 <WM_HasFocus>:
 8004a68:	4b04      	ldr	r3, [pc, #16]	; (8004a7c <WM_HasFocus+0x14>)
 8004a6a:	681a      	ldr	r2, [r3, #0]
 8004a6c:	4b04      	ldr	r3, [pc, #16]	; (8004a80 <WM_HasFocus+0x18>)
 8004a6e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004a72:	1ac3      	subs	r3, r0, r3
 8004a74:	4258      	negs	r0, r3
 8004a76:	4158      	adcs	r0, r3
 8004a78:	4770      	bx	lr
 8004a7a:	bf00      	nop
 8004a7c:	20002ca0 	.word	0x20002ca0
 8004a80:	20002c90 	.word	0x20002c90

08004a84 <WM_IsFocusable>:
 8004a84:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004a86:	4604      	mov	r4, r0
 8004a88:	b908      	cbnz	r0, 8004a8e <WM_IsFocusable+0xa>
 8004a8a:	2000      	movs	r0, #0
 8004a8c:	e011      	b.n	8004ab2 <WM_IsFocusable+0x2e>
 8004a8e:	f006 fce1 	bl	800b454 <GUI_ALLOC_h2p>
 8004a92:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004a94:	079a      	lsls	r2, r3, #30
 8004a96:	d5f8      	bpl.n	8004a8a <WM_IsFocusable+0x6>
 8004a98:	f013 0310 	ands.w	r3, r3, #16
 8004a9c:	d1f5      	bne.n	8004a8a <WM_IsFocusable+0x6>
 8004a9e:	a904      	add	r1, sp, #16
 8004aa0:	9303      	str	r3, [sp, #12]
 8004aa2:	231f      	movs	r3, #31
 8004aa4:	f841 3d10 	str.w	r3, [r1, #-16]!
 8004aa8:	4620      	mov	r0, r4
 8004aaa:	4669      	mov	r1, sp
 8004aac:	f000 fd9b 	bl	80055e6 <WM_SendMessage>
 8004ab0:	9803      	ldr	r0, [sp, #12]
 8004ab2:	b004      	add	sp, #16
 8004ab4:	bd10      	pop	{r4, pc}

08004ab6 <WM_IsWindow>:
 8004ab6:	f000 bd4d 	b.w	8005554 <WM__IsWindow>
	...

08004abc <WM_OnKey>:
 8004abc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8004abe:	4a0a      	ldr	r2, [pc, #40]	; (8004ae8 <WM_OnKey+0x2c>)
 8004ac0:	4603      	mov	r3, r0
 8004ac2:	6810      	ldr	r0, [r2, #0]
 8004ac4:	4a09      	ldr	r2, [pc, #36]	; (8004aec <WM_OnKey+0x30>)
 8004ac6:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8004aca:	b148      	cbz	r0, 8004ae0 <WM_OnKey+0x24>
 8004acc:	9300      	str	r3, [sp, #0]
 8004ace:	230e      	movs	r3, #14
 8004ad0:	9101      	str	r1, [sp, #4]
 8004ad2:	9302      	str	r3, [sp, #8]
 8004ad4:	a902      	add	r1, sp, #8
 8004ad6:	ab00      	add	r3, sp, #0
 8004ad8:	9305      	str	r3, [sp, #20]
 8004ada:	f7ff fb69 	bl	80041b0 <WM__SendMessage>
 8004ade:	2001      	movs	r0, #1
 8004ae0:	b007      	add	sp, #28
 8004ae2:	f85d fb04 	ldr.w	pc, [sp], #4
 8004ae6:	bf00      	nop
 8004ae8:	20002ca0 	.word	0x20002ca0
 8004aec:	20002c90 	.word	0x20002c90

08004af0 <WM_ResizeWindow>:
 8004af0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004af4:	ea51 0302 	orrs.w	r3, r1, r2
 8004af8:	b08a      	sub	sp, #40	; 0x28
 8004afa:	4680      	mov	r8, r0
 8004afc:	460e      	mov	r6, r1
 8004afe:	4617      	mov	r7, r2
 8004b00:	d06e      	beq.n	8004be0 <WM_ResizeWindow+0xf0>
 8004b02:	2800      	cmp	r0, #0
 8004b04:	d06c      	beq.n	8004be0 <WM_ResizeWindow+0xf0>
 8004b06:	f006 fcaf 	bl	800b468 <GUI_ALLOC_LockH>
 8004b0a:	4603      	mov	r3, r0
 8004b0c:	9003      	str	r0, [sp, #12]
 8004b0e:	c803      	ldmia	r0, {r0, r1}
 8004b10:	ad04      	add	r5, sp, #16
 8004b12:	ac06      	add	r4, sp, #24
 8004b14:	e885 0003 	stmia.w	r5, {r0, r1}
 8004b18:	e884 0003 	stmia.w	r4, {r0, r1}
 8004b1c:	b17e      	cbz	r6, 8004b3e <WM_ResizeWindow+0x4e>
 8004b1e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004b20:	f402 7220 	and.w	r2, r2, #640	; 0x280
 8004b24:	2a80      	cmp	r2, #128	; 0x80
 8004b26:	d105      	bne.n	8004b34 <WM_ResizeWindow+0x44>
 8004b28:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 8004b2c:	1b96      	subs	r6, r2, r6
 8004b2e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8004b32:	e004      	b.n	8004b3e <WM_ResizeWindow+0x4e>
 8004b34:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 8004b38:	4416      	add	r6, r2
 8004b3a:	f8ad 601c 	strh.w	r6, [sp, #28]
 8004b3e:	b187      	cbz	r7, 8004b62 <WM_ResizeWindow+0x72>
 8004b40:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004b42:	f402 62a0 	and.w	r2, r2, #1280	; 0x500
 8004b46:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 8004b4a:	d105      	bne.n	8004b58 <WM_ResizeWindow+0x68>
 8004b4c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8004b50:	1bd7      	subs	r7, r2, r7
 8004b52:	f8ad 701a 	strh.w	r7, [sp, #26]
 8004b56:	e004      	b.n	8004b62 <WM_ResizeWindow+0x72>
 8004b58:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8004b5c:	4417      	add	r7, r2
 8004b5e:	f8ad 701e 	strh.w	r7, [sp, #30]
 8004b62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004b64:	03da      	lsls	r2, r3, #15
 8004b66:	d502      	bpl.n	8004b6e <WM_ResizeWindow+0x7e>
 8004b68:	4640      	mov	r0, r8
 8004b6a:	f000 fd03 	bl	8005574 <WM__InvalidateDrawAndDescs>
 8004b6e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8004b72:	9b03      	ldr	r3, [sp, #12]
 8004b74:	e883 0003 	stmia.w	r3, {r0, r1}
 8004b78:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004b7a:	079b      	lsls	r3, r3, #30
 8004b7c:	d50a      	bpl.n	8004b94 <WM_ResizeWindow+0xa4>
 8004b7e:	a808      	add	r0, sp, #32
 8004b80:	4629      	mov	r1, r5
 8004b82:	4622      	mov	r2, r4
 8004b84:	f005 ff5c 	bl	800aa40 <GUI_MergeRect>
 8004b88:	9b03      	ldr	r3, [sp, #12]
 8004b8a:	a808      	add	r0, sp, #32
 8004b8c:	6999      	ldr	r1, [r3, #24]
 8004b8e:	6a1a      	ldr	r2, [r3, #32]
 8004b90:	f000 fe2e 	bl	80057f0 <WM__InvalidateRectEx>
 8004b94:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 8004b98:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8004b9c:	f9bd 701e 	ldrsh.w	r7, [sp, #30]
 8004ba0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8004ba4:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 8004ba8:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 8004bac:	f9bd 501a 	ldrsh.w	r5, [sp, #26]
 8004bb0:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8004bb4:	1ae3      	subs	r3, r4, r3
 8004bb6:	1a38      	subs	r0, r7, r0
 8004bb8:	ac0a      	add	r4, sp, #40	; 0x28
 8004bba:	1aaa      	subs	r2, r5, r2
 8004bbc:	9000      	str	r0, [sp, #0]
 8004bbe:	1a71      	subs	r1, r6, r1
 8004bc0:	9803      	ldr	r0, [sp, #12]
 8004bc2:	f7ff fb27 	bl	8004214 <WM__UpdateChildPositions>
 8004bc6:	f854 1d1c 	ldr.w	r1, [r4, #-28]!
 8004bca:	f101 0008 	add.w	r0, r1, #8
 8004bce:	f004 f8f8 	bl	8008dc2 <GUI__IntersectRect>
 8004bd2:	4640      	mov	r0, r8
 8004bd4:	2105      	movs	r1, #5
 8004bd6:	f000 fd0a 	bl	80055ee <WM__SendMsgNoData>
 8004bda:	4620      	mov	r0, r4
 8004bdc:	f006 fc52 	bl	800b484 <GUI_ALLOC_UnlockH>
 8004be0:	b00a      	add	sp, #40	; 0x28
 8004be2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004be6 <WM_SendMessageNoPara>:
 8004be6:	f7ff bb01 	b.w	80041ec <WM__SendMessageNoPara>

08004bea <WM_SendToParent>:
 8004bea:	b538      	push	{r3, r4, r5, lr}
 8004bec:	4605      	mov	r5, r0
 8004bee:	460c      	mov	r4, r1
 8004bf0:	b141      	cbz	r1, 8004c04 <WM_SendToParent+0x1a>
 8004bf2:	f7ff fe63 	bl	80048bc <WM_GetParent>
 8004bf6:	b128      	cbz	r0, 8004c04 <WM_SendToParent+0x1a>
 8004bf8:	60a5      	str	r5, [r4, #8]
 8004bfa:	4621      	mov	r1, r4
 8004bfc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004c00:	f7ff bad6 	b.w	80041b0 <WM__SendMessage>
 8004c04:	bd38      	pop	{r3, r4, r5, pc}

08004c06 <WM_NotifyParent>:
 8004c06:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004c08:	2326      	movs	r3, #38	; 0x26
 8004c0a:	9103      	str	r1, [sp, #12]
 8004c0c:	4669      	mov	r1, sp
 8004c0e:	9300      	str	r3, [sp, #0]
 8004c10:	f7ff ffeb 	bl	8004bea <WM_SendToParent>
 8004c14:	b005      	add	sp, #20
 8004c16:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08004c1c <WM_SetFocus>:
 8004c1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004c1e:	b087      	sub	sp, #28
 8004c20:	4604      	mov	r4, r0
 8004c22:	2100      	movs	r1, #0
 8004c24:	a802      	add	r0, sp, #8
 8004c26:	2210      	movs	r2, #16
 8004c28:	f00b f858 	bl	800fcdc <memset>
 8004c2c:	2c00      	cmp	r4, #0
 8004c2e:	d03a      	beq.n	8004ca6 <WM_SetFocus+0x8a>
 8004c30:	4b1f      	ldr	r3, [pc, #124]	; (8004cb0 <WM_SetFocus+0x94>)
 8004c32:	4a20      	ldr	r2, [pc, #128]	; (8004cb4 <WM_SetFocus+0x98>)
 8004c34:	6819      	ldr	r1, [r3, #0]
 8004c36:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 8004c3a:	4284      	cmp	r4, r0
 8004c3c:	4616      	mov	r6, r2
 8004c3e:	461f      	mov	r7, r3
 8004c40:	d031      	beq.n	8004ca6 <WM_SetFocus+0x8a>
 8004c42:	231e      	movs	r3, #30
 8004c44:	e88d 0011 	stmia.w	sp, {r0, r4}
 8004c48:	9302      	str	r3, [sp, #8]
 8004c4a:	b110      	cbz	r0, 8004c52 <WM_SetFocus+0x36>
 8004c4c:	a902      	add	r1, sp, #8
 8004c4e:	f7ff faaf 	bl	80041b0 <WM__SendMessage>
 8004c52:	2301      	movs	r3, #1
 8004c54:	4620      	mov	r0, r4
 8004c56:	a902      	add	r1, sp, #8
 8004c58:	9305      	str	r3, [sp, #20]
 8004c5a:	f7ff faa9 	bl	80041b0 <WM__SendMessage>
 8004c5e:	9d05      	ldr	r5, [sp, #20]
 8004c60:	bb15      	cbnz	r5, 8004ca8 <WM_SetFocus+0x8c>
 8004c62:	683b      	ldr	r3, [r7, #0]
 8004c64:	f846 4023 	str.w	r4, [r6, r3, lsl #2]
 8004c68:	4620      	mov	r0, r4
 8004c6a:	f7ff fe27 	bl	80048bc <WM_GetParent>
 8004c6e:	4604      	mov	r4, r0
 8004c70:	b138      	cbz	r0, 8004c82 <WM_SetFocus+0x66>
 8004c72:	2320      	movs	r3, #32
 8004c74:	9302      	str	r3, [sp, #8]
 8004c76:	a902      	add	r1, sp, #8
 8004c78:	ab00      	add	r3, sp, #0
 8004c7a:	9305      	str	r3, [sp, #20]
 8004c7c:	f7ff fa98 	bl	80041b0 <WM__SendMessage>
 8004c80:	e7f2      	b.n	8004c68 <WM_SetFocus+0x4c>
 8004c82:	9c00      	ldr	r4, [sp, #0]
 8004c84:	4620      	mov	r0, r4
 8004c86:	f000 fc65 	bl	8005554 <WM__IsWindow>
 8004c8a:	b168      	cbz	r0, 8004ca8 <WM_SetFocus+0x8c>
 8004c8c:	4620      	mov	r0, r4
 8004c8e:	f7ff fe15 	bl	80048bc <WM_GetParent>
 8004c92:	4604      	mov	r4, r0
 8004c94:	b140      	cbz	r0, 8004ca8 <WM_SetFocus+0x8c>
 8004c96:	2320      	movs	r3, #32
 8004c98:	9302      	str	r3, [sp, #8]
 8004c9a:	a902      	add	r1, sp, #8
 8004c9c:	ab00      	add	r3, sp, #0
 8004c9e:	9305      	str	r3, [sp, #20]
 8004ca0:	f7ff fa86 	bl	80041b0 <WM__SendMessage>
 8004ca4:	e7f2      	b.n	8004c8c <WM_SetFocus+0x70>
 8004ca6:	2501      	movs	r5, #1
 8004ca8:	4628      	mov	r0, r5
 8004caa:	b007      	add	sp, #28
 8004cac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004cae:	bf00      	nop
 8004cb0:	20002ca0 	.word	0x20002ca0
 8004cb4:	20002c90 	.word	0x20002c90

08004cb8 <WM_SetScrollState>:
 8004cb8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004cba:	b130      	cbz	r0, 8004cca <WM_SetScrollState+0x12>
 8004cbc:	b129      	cbz	r1, 8004cca <WM_SetScrollState+0x12>
 8004cbe:	2324      	movs	r3, #36	; 0x24
 8004cc0:	9103      	str	r1, [sp, #12]
 8004cc2:	4669      	mov	r1, sp
 8004cc4:	9300      	str	r3, [sp, #0]
 8004cc6:	f000 fc8e 	bl	80055e6 <WM_SendMessage>
 8004cca:	b005      	add	sp, #20
 8004ccc:	f85d fb04 	ldr.w	pc, [sp], #4

08004cd0 <WM_SetSize>:
 8004cd0:	e92d 41e7 	stmdb	sp!, {r0, r1, r2, r5, r6, r7, r8, lr}
 8004cd4:	460e      	mov	r6, r1
 8004cd6:	4690      	mov	r8, r2
 8004cd8:	4607      	mov	r7, r0
 8004cda:	b1d0      	cbz	r0, 8004d12 <WM_SetSize+0x42>
 8004cdc:	f006 fbc4 	bl	800b468 <GUI_ALLOC_LockH>
 8004ce0:	4603      	mov	r3, r0
 8004ce2:	a802      	add	r0, sp, #8
 8004ce4:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8004ce8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8004cec:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 8004cf0:	f840 3d04 	str.w	r3, [r0, #-4]!
 8004cf4:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8004cf8:	1a8a      	subs	r2, r1, r2
 8004cfa:	1aed      	subs	r5, r5, r3
 8004cfc:	43d2      	mvns	r2, r2
 8004cfe:	43ed      	mvns	r5, r5
 8004d00:	4416      	add	r6, r2
 8004d02:	4445      	add	r5, r8
 8004d04:	f006 fbbe 	bl	800b484 <GUI_ALLOC_UnlockH>
 8004d08:	4638      	mov	r0, r7
 8004d0a:	4631      	mov	r1, r6
 8004d0c:	462a      	mov	r2, r5
 8004d0e:	f7ff feef 	bl	8004af0 <WM_ResizeWindow>
 8004d12:	b003      	add	sp, #12
 8004d14:	e8bd 81e0 	ldmia.w	sp!, {r5, r6, r7, r8, pc}

08004d18 <WM_SetUserClipRect>:
 8004d18:	4b04      	ldr	r3, [pc, #16]	; (8004d2c <WM_SetUserClipRect+0x14>)
 8004d1a:	b510      	push	{r4, lr}
 8004d1c:	681b      	ldr	r3, [r3, #0]
 8004d1e:	6c5c      	ldr	r4, [r3, #68]	; 0x44
 8004d20:	6458      	str	r0, [r3, #68]	; 0x44
 8004d22:	f000 fbf3 	bl	800550c <WM__ActivateClipRect>
 8004d26:	4620      	mov	r0, r4
 8004d28:	bd10      	pop	{r4, pc}
 8004d2a:	bf00      	nop
 8004d2c:	200000b8 	.word	0x200000b8

08004d30 <WM_InvalidateWindowAndDescs>:
 8004d30:	b510      	push	{r4, lr}
 8004d32:	4604      	mov	r4, r0
 8004d34:	b170      	cbz	r0, 8004d54 <WM_InvalidateWindowAndDescs+0x24>
 8004d36:	f000 fdaf 	bl	8005898 <WM_InvalidateWindow>
 8004d3a:	4620      	mov	r0, r4
 8004d3c:	f7ff fd1d 	bl	800477a <WM_GetFirstChild>
 8004d40:	4604      	mov	r4, r0
 8004d42:	b13c      	cbz	r4, 8004d54 <WM_InvalidateWindowAndDescs+0x24>
 8004d44:	4620      	mov	r0, r4
 8004d46:	f7ff fff3 	bl	8004d30 <WM_InvalidateWindowAndDescs>
 8004d4a:	4620      	mov	r0, r4
 8004d4c:	f006 fb82 	bl	800b454 <GUI_ALLOC_h2p>
 8004d50:	6a04      	ldr	r4, [r0, #32]
 8004d52:	e7f6      	b.n	8004d42 <WM_InvalidateWindowAndDescs+0x12>
 8004d54:	bd10      	pop	{r4, pc}

08004d56 <WM_ShowWindow>:
 8004d56:	b513      	push	{r0, r1, r4, lr}
 8004d58:	4604      	mov	r4, r0
 8004d5a:	b170      	cbz	r0, 8004d7a <WM_ShowWindow+0x24>
 8004d5c:	f006 fb84 	bl	800b468 <GUI_ALLOC_LockH>
 8004d60:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8004d62:	9001      	str	r0, [sp, #4]
 8004d64:	0793      	lsls	r3, r2, #30
 8004d66:	d405      	bmi.n	8004d74 <WM_ShowWindow+0x1e>
 8004d68:	f042 0202 	orr.w	r2, r2, #2
 8004d6c:	6282      	str	r2, [r0, #40]	; 0x28
 8004d6e:	4620      	mov	r0, r4
 8004d70:	f7ff ffde 	bl	8004d30 <WM_InvalidateWindowAndDescs>
 8004d74:	a801      	add	r0, sp, #4
 8004d76:	f006 fb85 	bl	800b484 <GUI_ALLOC_UnlockH>
 8004d7a:	b002      	add	sp, #8
 8004d7c:	bd10      	pop	{r4, pc}
	...

08004d80 <WM_ValidateWindow>:
 8004d80:	b507      	push	{r0, r1, r2, lr}
 8004d82:	b178      	cbz	r0, 8004da4 <WM_ValidateWindow+0x24>
 8004d84:	f006 fb70 	bl	800b468 <GUI_ALLOC_LockH>
 8004d88:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004d8a:	9001      	str	r0, [sp, #4]
 8004d8c:	069a      	lsls	r2, r3, #26
 8004d8e:	d506      	bpl.n	8004d9e <WM_ValidateWindow+0x1e>
 8004d90:	f023 0320 	bic.w	r3, r3, #32
 8004d94:	6283      	str	r3, [r0, #40]	; 0x28
 8004d96:	4b05      	ldr	r3, [pc, #20]	; (8004dac <WM_ValidateWindow+0x2c>)
 8004d98:	881a      	ldrh	r2, [r3, #0]
 8004d9a:	3a01      	subs	r2, #1
 8004d9c:	801a      	strh	r2, [r3, #0]
 8004d9e:	a801      	add	r0, sp, #4
 8004da0:	f006 fb70 	bl	800b484 <GUI_ALLOC_UnlockH>
 8004da4:	b003      	add	sp, #12
 8004da6:	f85d fb04 	ldr.w	pc, [sp], #4
 8004daa:	bf00      	nop
 8004dac:	20002c98 	.word	0x20002c98

08004db0 <WM_HideWindow>:
 8004db0:	b513      	push	{r0, r1, r4, lr}
 8004db2:	b188      	cbz	r0, 8004dd8 <WM_HideWindow+0x28>
 8004db4:	f006 fb58 	bl	800b468 <GUI_ALLOC_LockH>
 8004db8:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8004dba:	ac02      	add	r4, sp, #8
 8004dbc:	0791      	lsls	r1, r2, #30
 8004dbe:	f844 0d04 	str.w	r0, [r4, #-4]!
 8004dc2:	d506      	bpl.n	8004dd2 <WM_HideWindow+0x22>
 8004dc4:	f022 0202 	bic.w	r2, r2, #2
 8004dc8:	6282      	str	r2, [r0, #40]	; 0x28
 8004dca:	6981      	ldr	r1, [r0, #24]
 8004dcc:	6a02      	ldr	r2, [r0, #32]
 8004dce:	f000 fd0f 	bl	80057f0 <WM__InvalidateRectEx>
 8004dd2:	4620      	mov	r0, r4
 8004dd4:	f006 fb56 	bl	800b484 <GUI_ALLOC_UnlockH>
 8004dd8:	b002      	add	sp, #8
 8004dda:	bd10      	pop	{r4, pc}

08004ddc <WM__GetWindowSizeX>:
 8004ddc:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8004de0:	f9b0 3000 	ldrsh.w	r3, [r0]
 8004de4:	1ad0      	subs	r0, r2, r3
 8004de6:	3001      	adds	r0, #1
 8004de8:	4770      	bx	lr

08004dea <WM__GetWindowSizeY>:
 8004dea:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8004dee:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8004df2:	1ad0      	subs	r0, r2, r3
 8004df4:	3001      	adds	r0, #1
 8004df6:	4770      	bx	lr

08004df8 <WM_GetWindowSizeX>:
 8004df8:	b513      	push	{r0, r1, r4, lr}
 8004dfa:	b908      	cbnz	r0, 8004e00 <WM_GetWindowSizeX+0x8>
 8004dfc:	f000 fef0 	bl	8005be0 <WM_GetActiveWindow>
 8004e00:	f006 fb32 	bl	800b468 <GUI_ALLOC_LockH>
 8004e04:	ab02      	add	r3, sp, #8
 8004e06:	f9b0 2000 	ldrsh.w	r2, [r0]
 8004e0a:	f843 0d04 	str.w	r0, [r3, #-4]!
 8004e0e:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8004e12:	4618      	mov	r0, r3
 8004e14:	1aa4      	subs	r4, r4, r2
 8004e16:	f006 fb35 	bl	800b484 <GUI_ALLOC_UnlockH>
 8004e1a:	3401      	adds	r4, #1
 8004e1c:	4620      	mov	r0, r4
 8004e1e:	b002      	add	sp, #8
 8004e20:	bd10      	pop	{r4, pc}

08004e22 <WM_GetWindowSizeY>:
 8004e22:	b513      	push	{r0, r1, r4, lr}
 8004e24:	b908      	cbnz	r0, 8004e2a <WM_GetWindowSizeY+0x8>
 8004e26:	f000 fedb 	bl	8005be0 <WM_GetActiveWindow>
 8004e2a:	f006 fb1d 	bl	800b468 <GUI_ALLOC_LockH>
 8004e2e:	ab02      	add	r3, sp, #8
 8004e30:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8004e34:	f843 0d04 	str.w	r0, [r3, #-4]!
 8004e38:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8004e3c:	4618      	mov	r0, r3
 8004e3e:	1aa4      	subs	r4, r4, r2
 8004e40:	f006 fb20 	bl	800b484 <GUI_ALLOC_UnlockH>
 8004e44:	3401      	adds	r4, #1
 8004e46:	4620      	mov	r0, r4
 8004e48:	b002      	add	sp, #8
 8004e4a:	bd10      	pop	{r4, pc}

08004e4c <_cbInvalidateOne>:
 8004e4c:	f000 bd24 	b.w	8005898 <WM_InvalidateWindow>

08004e50 <WM_BringToTop>:
 8004e50:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004e52:	4605      	mov	r5, r0
 8004e54:	2800      	cmp	r0, #0
 8004e56:	d032      	beq.n	8004ebe <WM_BringToTop+0x6e>
 8004e58:	f006 fb06 	bl	800b468 <GUI_ALLOC_LockH>
 8004e5c:	ac02      	add	r4, sp, #8
 8004e5e:	4603      	mov	r3, r0
 8004e60:	f844 0d08 	str.w	r0, [r4, #-8]!
 8004e64:	6a00      	ldr	r0, [r0, #32]
 8004e66:	b908      	cbnz	r0, 8004e6c <WM_BringToTop+0x1c>
 8004e68:	4668      	mov	r0, sp
 8004e6a:	e00e      	b.n	8004e8a <WM_BringToTop+0x3a>
 8004e6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004e6e:	071a      	lsls	r2, r3, #28
 8004e70:	d411      	bmi.n	8004e96 <WM_BringToTop+0x46>
 8004e72:	f006 faf9 	bl	800b468 <GUI_ALLOC_LockH>
 8004e76:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004e78:	ae02      	add	r6, sp, #8
 8004e7a:	071b      	lsls	r3, r3, #28
 8004e7c:	f846 0d04 	str.w	r0, [r6, #-4]!
 8004e80:	d506      	bpl.n	8004e90 <WM_BringToTop+0x40>
 8004e82:	4668      	mov	r0, sp
 8004e84:	f006 fafe 	bl	800b484 <GUI_ALLOC_UnlockH>
 8004e88:	4630      	mov	r0, r6
 8004e8a:	f006 fafb 	bl	800b484 <GUI_ALLOC_UnlockH>
 8004e8e:	e016      	b.n	8004ebe <WM_BringToTop+0x6e>
 8004e90:	4630      	mov	r0, r6
 8004e92:	f006 faf7 	bl	800b484 <GUI_ALLOC_UnlockH>
 8004e96:	9b00      	ldr	r3, [sp, #0]
 8004e98:	4668      	mov	r0, sp
 8004e9a:	699e      	ldr	r6, [r3, #24]
 8004e9c:	f006 faf2 	bl	800b484 <GUI_ALLOC_UnlockH>
 8004ea0:	4628      	mov	r0, r5
 8004ea2:	f000 fae5 	bl	8005470 <WM__RemoveWindowFromList>
 8004ea6:	4631      	mov	r1, r6
 8004ea8:	4628      	mov	r0, r5
 8004eaa:	f000 fa8f 	bl	80053cc <WM__InsertWindowIntoList>
 8004eae:	4628      	mov	r0, r5
 8004eb0:	f000 fcf2 	bl	8005898 <WM_InvalidateWindow>
 8004eb4:	4628      	mov	r0, r5
 8004eb6:	4903      	ldr	r1, [pc, #12]	; (8004ec4 <WM_BringToTop+0x74>)
 8004eb8:	2200      	movs	r2, #0
 8004eba:	f7ff fc22 	bl	8004702 <WM_ForEachDesc>
 8004ebe:	b002      	add	sp, #8
 8004ec0:	bd70      	pop	{r4, r5, r6, pc}
 8004ec2:	bf00      	nop
 8004ec4:	08004e4d 	.word	0x08004e4d

08004ec8 <_OnExit>:
 8004ec8:	b538      	push	{r3, r4, r5, lr}
 8004eca:	4b19      	ldr	r3, [pc, #100]	; (8004f30 <_OnExit+0x68>)
 8004ecc:	4d19      	ldr	r5, [pc, #100]	; (8004f34 <_OnExit+0x6c>)
 8004ece:	4a1a      	ldr	r2, [pc, #104]	; (8004f38 <_OnExit+0x70>)
 8004ed0:	481a      	ldr	r0, [pc, #104]	; (8004f3c <_OnExit+0x74>)
 8004ed2:	2400      	movs	r4, #0
 8004ed4:	701c      	strb	r4, [r3, #0]
 8004ed6:	4b1a      	ldr	r3, [pc, #104]	; (8004f40 <_OnExit+0x78>)
 8004ed8:	6014      	str	r4, [r2, #0]
 8004eda:	601c      	str	r4, [r3, #0]
 8004edc:	4b19      	ldr	r3, [pc, #100]	; (8004f44 <_OnExit+0x7c>)
 8004ede:	6054      	str	r4, [r2, #4]
 8004ee0:	601c      	str	r4, [r3, #0]
 8004ee2:	4b19      	ldr	r3, [pc, #100]	; (8004f48 <_OnExit+0x80>)
 8004ee4:	601c      	str	r4, [r3, #0]
 8004ee6:	605c      	str	r4, [r3, #4]
 8004ee8:	4b18      	ldr	r3, [pc, #96]	; (8004f4c <_OnExit+0x84>)
 8004eea:	601c      	str	r4, [r3, #0]
 8004eec:	4b18      	ldr	r3, [pc, #96]	; (8004f50 <_OnExit+0x88>)
 8004eee:	601c      	str	r4, [r3, #0]
 8004ef0:	4b18      	ldr	r3, [pc, #96]	; (8004f54 <_OnExit+0x8c>)
 8004ef2:	601c      	str	r4, [r3, #0]
 8004ef4:	4b18      	ldr	r3, [pc, #96]	; (8004f58 <_OnExit+0x90>)
 8004ef6:	601c      	str	r4, [r3, #0]
 8004ef8:	4b18      	ldr	r3, [pc, #96]	; (8004f5c <_OnExit+0x94>)
 8004efa:	4621      	mov	r1, r4
 8004efc:	601c      	str	r4, [r3, #0]
 8004efe:	2218      	movs	r2, #24
 8004f00:	682b      	ldr	r3, [r5, #0]
 8004f02:	4798      	blx	r3
 8004f04:	4b16      	ldr	r3, [pc, #88]	; (8004f60 <_OnExit+0x98>)
 8004f06:	4817      	ldr	r0, [pc, #92]	; (8004f64 <_OnExit+0x9c>)
 8004f08:	601c      	str	r4, [r3, #0]
 8004f0a:	4b17      	ldr	r3, [pc, #92]	; (8004f68 <_OnExit+0xa0>)
 8004f0c:	4621      	mov	r1, r4
 8004f0e:	601c      	str	r4, [r3, #0]
 8004f10:	605c      	str	r4, [r3, #4]
 8004f12:	2210      	movs	r2, #16
 8004f14:	682b      	ldr	r3, [r5, #0]
 8004f16:	4798      	blx	r3
 8004f18:	682b      	ldr	r3, [r5, #0]
 8004f1a:	4814      	ldr	r0, [pc, #80]	; (8004f6c <_OnExit+0xa4>)
 8004f1c:	4621      	mov	r1, r4
 8004f1e:	2210      	movs	r2, #16
 8004f20:	4798      	blx	r3
 8004f22:	682b      	ldr	r3, [r5, #0]
 8004f24:	4812      	ldr	r0, [pc, #72]	; (8004f70 <_OnExit+0xa8>)
 8004f26:	4621      	mov	r1, r4
 8004f28:	2210      	movs	r2, #16
 8004f2a:	4798      	blx	r3
 8004f2c:	bd38      	pop	{r3, r4, r5, pc}
 8004f2e:	bf00      	nop
 8004f30:	20002a48 	.word	0x20002a48
 8004f34:	200000a4 	.word	0x200000a4
 8004f38:	20002c90 	.word	0x20002c90
 8004f3c:	20002a2c 	.word	0x20002a2c
 8004f40:	20002a28 	.word	0x20002a28
 8004f44:	20002cbc 	.word	0x20002cbc
 8004f48:	20002cc4 	.word	0x20002cc4
 8004f4c:	20002cd0 	.word	0x20002cd0
 8004f50:	20002c7c 	.word	0x20002c7c
 8004f54:	20002cb0 	.word	0x20002cb0
 8004f58:	20002cc0 	.word	0x20002cc0
 8004f5c:	20002a44 	.word	0x20002a44
 8004f60:	20002c8c 	.word	0x20002c8c
 8004f64:	20002e18 	.word	0x20002e18
 8004f68:	20002c80 	.word	0x20002c80
 8004f6c:	20002e08 	.word	0x20002e08
 8004f70:	20002df8 	.word	0x20002df8

08004f74 <_Paint1>:
 8004f74:	b510      	push	{r4, lr}
 8004f76:	4604      	mov	r4, r0
 8004f78:	f006 fa6c 	bl	800b454 <GUI_ALLOC_h2p>
 8004f7c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8004f7e:	4a04      	ldr	r2, [pc, #16]	; (8004f90 <_Paint1+0x1c>)
 8004f80:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8004f84:	4b03      	ldr	r3, [pc, #12]	; (8004f94 <_Paint1+0x20>)
 8004f86:	4620      	mov	r0, r4
 8004f88:	bf08      	it	eq
 8004f8a:	4613      	moveq	r3, r2
 8004f8c:	4798      	blx	r3
 8004f8e:	bd10      	pop	{r4, pc}
 8004f90:	08005e81 	.word	0x08005e81
 8004f94:	0800640d 	.word	0x0800640d

08004f98 <_Findy1>:
 8004f98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004f9a:	4605      	mov	r5, r0
 8004f9c:	b085      	sub	sp, #20
 8004f9e:	460c      	mov	r4, r1
 8004fa0:	4616      	mov	r6, r2
 8004fa2:	2d00      	cmp	r5, #0
 8004fa4:	d04c      	beq.n	8005040 <_Findy1+0xa8>
 8004fa6:	4628      	mov	r0, r5
 8004fa8:	f006 fa5e 	bl	800b468 <GUI_ALLOC_LockH>
 8004fac:	6a87      	ldr	r7, [r0, #40]	; 0x28
 8004fae:	9001      	str	r0, [sp, #4]
 8004fb0:	07bb      	lsls	r3, r7, #30
 8004fb2:	4601      	mov	r1, r0
 8004fb4:	d53d      	bpl.n	8005032 <_Findy1+0x9a>
 8004fb6:	ad02      	add	r5, sp, #8
 8004fb8:	b126      	cbz	r6, 8004fc4 <_Findy1+0x2c>
 8004fba:	4628      	mov	r0, r5
 8004fbc:	4632      	mov	r2, r6
 8004fbe:	f003 ff1e 	bl	8008dfe <GUI__IntersectRects>
 8004fc2:	e002      	b.n	8004fca <_Findy1+0x32>
 8004fc4:	c803      	ldmia	r0, {r0, r1}
 8004fc6:	e885 0003 	stmia.w	r5, {r0, r1}
 8004fca:	4620      	mov	r0, r4
 8004fcc:	4629      	mov	r1, r5
 8004fce:	f005 fdad 	bl	800ab2c <GUI_RectsIntersect>
 8004fd2:	b370      	cbz	r0, 8005032 <_Findy1+0x9a>
 8004fd4:	f017 0f01 	tst.w	r7, #1
 8004fd8:	9b01      	ldr	r3, [sp, #4]
 8004fda:	d11e      	bne.n	800501a <_Findy1+0x82>
 8004fdc:	b13e      	cbz	r6, 8004fee <_Findy1+0x56>
 8004fde:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8004fe2:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8004fe6:	429a      	cmp	r2, r3
 8004fe8:	bfa8      	it	ge
 8004fea:	4613      	movge	r3, r2
 8004fec:	e001      	b.n	8004ff2 <_Findy1+0x5a>
 8004fee:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8004ff2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8004ff6:	4293      	cmp	r3, r2
 8004ff8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8004ffc:	dd06      	ble.n	800500c <_Findy1+0x74>
 8004ffe:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8005002:	b219      	sxth	r1, r3
 8005004:	428a      	cmp	r2, r1
 8005006:	db14      	blt.n	8005032 <_Findy1+0x9a>
 8005008:	3b01      	subs	r3, #1
 800500a:	e004      	b.n	8005016 <_Findy1+0x7e>
 800500c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8005010:	b219      	sxth	r1, r3
 8005012:	428a      	cmp	r2, r1
 8005014:	dd0d      	ble.n	8005032 <_Findy1+0x9a>
 8005016:	80e3      	strh	r3, [r4, #6]
 8005018:	e00b      	b.n	8005032 <_Findy1+0x9a>
 800501a:	69df      	ldr	r7, [r3, #28]
 800501c:	b14f      	cbz	r7, 8005032 <_Findy1+0x9a>
 800501e:	4638      	mov	r0, r7
 8005020:	4621      	mov	r1, r4
 8005022:	462a      	mov	r2, r5
 8005024:	f7ff ffb8 	bl	8004f98 <_Findy1>
 8005028:	4638      	mov	r0, r7
 800502a:	f006 fa13 	bl	800b454 <GUI_ALLOC_h2p>
 800502e:	6a07      	ldr	r7, [r0, #32]
 8005030:	e7f4      	b.n	800501c <_Findy1+0x84>
 8005032:	a804      	add	r0, sp, #16
 8005034:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 8005038:	6a1d      	ldr	r5, [r3, #32]
 800503a:	f006 fa23 	bl	800b484 <GUI_ALLOC_UnlockH>
 800503e:	e7b0      	b.n	8004fa2 <_Findy1+0xa>
 8005040:	b005      	add	sp, #20
 8005042:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005044 <_Findx0>:
 8005044:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005048:	4604      	mov	r4, r0
 800504a:	460f      	mov	r7, r1
 800504c:	4690      	mov	r8, r2
 800504e:	2500      	movs	r5, #0
 8005050:	2c00      	cmp	r4, #0
 8005052:	d037      	beq.n	80050c4 <_Findx0+0x80>
 8005054:	4620      	mov	r0, r4
 8005056:	f006 fa07 	bl	800b468 <GUI_ALLOC_LockH>
 800505a:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800505c:	9001      	str	r0, [sp, #4]
 800505e:	07b2      	lsls	r2, r6, #30
 8005060:	4601      	mov	r1, r0
 8005062:	d528      	bpl.n	80050b6 <_Findx0+0x72>
 8005064:	ac02      	add	r4, sp, #8
 8005066:	f1b8 0f00 	cmp.w	r8, #0
 800506a:	d004      	beq.n	8005076 <_Findx0+0x32>
 800506c:	4620      	mov	r0, r4
 800506e:	4642      	mov	r2, r8
 8005070:	f003 fec5 	bl	8008dfe <GUI__IntersectRects>
 8005074:	e002      	b.n	800507c <_Findx0+0x38>
 8005076:	c803      	ldmia	r0, {r0, r1}
 8005078:	e884 0003 	stmia.w	r4, {r0, r1}
 800507c:	4638      	mov	r0, r7
 800507e:	4621      	mov	r1, r4
 8005080:	f005 fd54 	bl	800ab2c <GUI_RectsIntersect>
 8005084:	b1b8      	cbz	r0, 80050b6 <_Findx0+0x72>
 8005086:	07f3      	lsls	r3, r6, #31
 8005088:	d405      	bmi.n	8005096 <_Findx0+0x52>
 800508a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800508e:	3301      	adds	r3, #1
 8005090:	803b      	strh	r3, [r7, #0]
 8005092:	2501      	movs	r5, #1
 8005094:	e00f      	b.n	80050b6 <_Findx0+0x72>
 8005096:	9b01      	ldr	r3, [sp, #4]
 8005098:	69de      	ldr	r6, [r3, #28]
 800509a:	b166      	cbz	r6, 80050b6 <_Findx0+0x72>
 800509c:	4630      	mov	r0, r6
 800509e:	4639      	mov	r1, r7
 80050a0:	4622      	mov	r2, r4
 80050a2:	f7ff ffcf 	bl	8005044 <_Findx0>
 80050a6:	2800      	cmp	r0, #0
 80050a8:	4630      	mov	r0, r6
 80050aa:	bf18      	it	ne
 80050ac:	2501      	movne	r5, #1
 80050ae:	f006 f9d1 	bl	800b454 <GUI_ALLOC_h2p>
 80050b2:	6a06      	ldr	r6, [r0, #32]
 80050b4:	e7f1      	b.n	800509a <_Findx0+0x56>
 80050b6:	a804      	add	r0, sp, #16
 80050b8:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 80050bc:	6a1c      	ldr	r4, [r3, #32]
 80050be:	f006 f9e1 	bl	800b484 <GUI_ALLOC_UnlockH>
 80050c2:	e7c5      	b.n	8005050 <_Findx0+0xc>
 80050c4:	4628      	mov	r0, r5
 80050c6:	b004      	add	sp, #16
 80050c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080050cc <_Findx1>:
 80050cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80050ce:	4604      	mov	r4, r0
 80050d0:	b085      	sub	sp, #20
 80050d2:	460e      	mov	r6, r1
 80050d4:	4617      	mov	r7, r2
 80050d6:	2c00      	cmp	r4, #0
 80050d8:	d031      	beq.n	800513e <_Findx1+0x72>
 80050da:	4620      	mov	r0, r4
 80050dc:	f006 f9c4 	bl	800b468 <GUI_ALLOC_LockH>
 80050e0:	6a85      	ldr	r5, [r0, #40]	; 0x28
 80050e2:	9001      	str	r0, [sp, #4]
 80050e4:	07aa      	lsls	r2, r5, #30
 80050e6:	4601      	mov	r1, r0
 80050e8:	d522      	bpl.n	8005130 <_Findx1+0x64>
 80050ea:	ac02      	add	r4, sp, #8
 80050ec:	b127      	cbz	r7, 80050f8 <_Findx1+0x2c>
 80050ee:	4620      	mov	r0, r4
 80050f0:	463a      	mov	r2, r7
 80050f2:	f003 fe84 	bl	8008dfe <GUI__IntersectRects>
 80050f6:	e002      	b.n	80050fe <_Findx1+0x32>
 80050f8:	c803      	ldmia	r0, {r0, r1}
 80050fa:	e884 0003 	stmia.w	r4, {r0, r1}
 80050fe:	4630      	mov	r0, r6
 8005100:	4621      	mov	r1, r4
 8005102:	f005 fd13 	bl	800ab2c <GUI_RectsIntersect>
 8005106:	b198      	cbz	r0, 8005130 <_Findx1+0x64>
 8005108:	07eb      	lsls	r3, r5, #31
 800510a:	d404      	bmi.n	8005116 <_Findx1+0x4a>
 800510c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8005110:	3b01      	subs	r3, #1
 8005112:	80b3      	strh	r3, [r6, #4]
 8005114:	e00c      	b.n	8005130 <_Findx1+0x64>
 8005116:	9b01      	ldr	r3, [sp, #4]
 8005118:	69dd      	ldr	r5, [r3, #28]
 800511a:	b14d      	cbz	r5, 8005130 <_Findx1+0x64>
 800511c:	4628      	mov	r0, r5
 800511e:	4631      	mov	r1, r6
 8005120:	4622      	mov	r2, r4
 8005122:	f7ff ffd3 	bl	80050cc <_Findx1>
 8005126:	4628      	mov	r0, r5
 8005128:	f006 f994 	bl	800b454 <GUI_ALLOC_h2p>
 800512c:	6a05      	ldr	r5, [r0, #32]
 800512e:	e7f4      	b.n	800511a <_Findx1+0x4e>
 8005130:	a804      	add	r0, sp, #16
 8005132:	f850 3d0c 	ldr.w	r3, [r0, #-12]!
 8005136:	6a1c      	ldr	r4, [r3, #32]
 8005138:	f006 f9a4 	bl	800b484 <GUI_ALLOC_UnlockH>
 800513c:	e7cb      	b.n	80050d6 <_Findx1+0xa>
 800513e:	b005      	add	sp, #20
 8005140:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08005144 <_Paint1Trans>:
 8005144:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005148:	4d21      	ldr	r5, [pc, #132]	; (80051d0 <_Paint1Trans+0x8c>)
 800514a:	682b      	ldr	r3, [r5, #0]
 800514c:	4606      	mov	r6, r0
 800514e:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8005150:	f006 f98a 	bl	800b468 <GUI_ALLOC_LockH>
 8005154:	9000      	str	r0, [sp, #0]
 8005156:	4630      	mov	r0, r6
 8005158:	f006 f986 	bl	800b468 <GUI_ALLOC_LockH>
 800515c:	ac02      	add	r4, sp, #8
 800515e:	4601      	mov	r1, r0
 8005160:	9001      	str	r0, [sp, #4]
 8005162:	f854 0d08 	ldr.w	r0, [r4, #-8]!
 8005166:	3008      	adds	r0, #8
 8005168:	f005 fce0 	bl	800ab2c <GUI_RectsIntersect>
 800516c:	4607      	mov	r7, r0
 800516e:	b328      	cbz	r0, 80051bc <_Paint1Trans+0x78>
 8005170:	9901      	ldr	r1, [sp, #4]
 8005172:	9a00      	ldr	r2, [sp, #0]
 8005174:	682b      	ldr	r3, [r5, #0]
 8005176:	4c17      	ldr	r4, [pc, #92]	; (80051d4 <_Paint1Trans+0x90>)
 8005178:	6d1f      	ldr	r7, [r3, #80]	; 0x50
 800517a:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 800517e:	f101 0008 	add.w	r0, r1, #8
 8005182:	3208      	adds	r2, #8
 8005184:	f003 fe3b 	bl	8008dfe <GUI__IntersectRects>
 8005188:	4668      	mov	r0, sp
 800518a:	f006 f97b 	bl	800b484 <GUI_ALLOC_UnlockH>
 800518e:	9a01      	ldr	r2, [sp, #4]
 8005190:	682b      	ldr	r3, [r5, #0]
 8005192:	f9b2 1000 	ldrsh.w	r1, [r2]
 8005196:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 800519a:	64d9      	str	r1, [r3, #76]	; 0x4c
 800519c:	651a      	str	r2, [r3, #80]	; 0x50
 800519e:	a801      	add	r0, sp, #4
 80051a0:	6026      	str	r6, [r4, #0]
 80051a2:	f006 f96f 	bl	800b484 <GUI_ALLOC_UnlockH>
 80051a6:	4630      	mov	r0, r6
 80051a8:	f7ff fee4 	bl	8004f74 <_Paint1>
 80051ac:	2300      	movs	r3, #0
 80051ae:	6023      	str	r3, [r4, #0]
 80051b0:	682b      	ldr	r3, [r5, #0]
 80051b2:	651f      	str	r7, [r3, #80]	; 0x50
 80051b4:	f8c3 804c 	str.w	r8, [r3, #76]	; 0x4c
 80051b8:	2701      	movs	r7, #1
 80051ba:	e005      	b.n	80051c8 <_Paint1Trans+0x84>
 80051bc:	4668      	mov	r0, sp
 80051be:	f006 f961 	bl	800b484 <GUI_ALLOC_UnlockH>
 80051c2:	a801      	add	r0, sp, #4
 80051c4:	f006 f95e 	bl	800b484 <GUI_ALLOC_UnlockH>
 80051c8:	4638      	mov	r0, r7
 80051ca:	b002      	add	sp, #8
 80051cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80051d0:	200000b8 	.word	0x200000b8
 80051d4:	20002c7c 	.word	0x20002c7c

080051d8 <_PaintTransChildren>:
 80051d8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80051dc:	4606      	mov	r6, r0
 80051de:	f006 f943 	bl	800b468 <GUI_ALLOC_LockH>
 80051e2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80051e4:	9001      	str	r0, [sp, #4]
 80051e6:	079b      	lsls	r3, r3, #30
 80051e8:	d405      	bmi.n	80051f6 <_PaintTransChildren+0x1e>
 80051ea:	a801      	add	r0, sp, #4
 80051ec:	f006 f94a 	bl	800b484 <GUI_ALLOC_UnlockH>
 80051f0:	b002      	add	sp, #8
 80051f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80051f6:	69c4      	ldr	r4, [r0, #28]
 80051f8:	2c00      	cmp	r4, #0
 80051fa:	d0f6      	beq.n	80051ea <_PaintTransChildren+0x12>
 80051fc:	4620      	mov	r0, r4
 80051fe:	f006 f933 	bl	800b468 <GUI_ALLOC_LockH>
 8005202:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005204:	ad02      	add	r5, sp, #8
 8005206:	f003 0303 	and.w	r3, r3, #3
 800520a:	2b03      	cmp	r3, #3
 800520c:	f845 0d08 	str.w	r0, [r5, #-8]!
 8005210:	d137      	bne.n	8005282 <_PaintTransChildren+0xaa>
 8005212:	9901      	ldr	r1, [sp, #4]
 8005214:	3108      	adds	r1, #8
 8005216:	f005 fc89 	bl	800ab2c <GUI_RectsIntersect>
 800521a:	2800      	cmp	r0, #0
 800521c:	d031      	beq.n	8005282 <_PaintTransChildren+0xaa>
 800521e:	a802      	add	r0, sp, #8
 8005220:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8005224:	f8b3 9008 	ldrh.w	r9, [r3, #8]
 8005228:	f8b3 800a 	ldrh.w	r8, [r3, #10]
 800522c:	899f      	ldrh	r7, [r3, #12]
 800522e:	f8b3 a00e 	ldrh.w	sl, [r3, #14]
 8005232:	f006 f927 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005236:	4668      	mov	r0, sp
 8005238:	f006 f924 	bl	800b484 <GUI_ALLOC_UnlockH>
 800523c:	4620      	mov	r0, r4
 800523e:	f7ff ff81 	bl	8005144 <_Paint1Trans>
 8005242:	b170      	cbz	r0, 8005262 <_PaintTransChildren+0x8a>
 8005244:	4620      	mov	r0, r4
 8005246:	f006 f905 	bl	800b454 <GUI_ALLOC_h2p>
 800524a:	9000      	str	r0, [sp, #0]
 800524c:	4620      	mov	r0, r4
 800524e:	f7ff ffc3 	bl	80051d8 <_PaintTransChildren>
 8005252:	4620      	mov	r0, r4
 8005254:	f006 f8fe 	bl	800b454 <GUI_ALLOC_h2p>
 8005258:	9000      	str	r0, [sp, #0]
 800525a:	4630      	mov	r0, r6
 800525c:	f006 f8fa 	bl	800b454 <GUI_ALLOC_h2p>
 8005260:	9001      	str	r0, [sp, #4]
 8005262:	4630      	mov	r0, r6
 8005264:	f006 f900 	bl	800b468 <GUI_ALLOC_LockH>
 8005268:	9001      	str	r0, [sp, #4]
 800526a:	4620      	mov	r0, r4
 800526c:	f006 f8fc 	bl	800b468 <GUI_ALLOC_LockH>
 8005270:	9b01      	ldr	r3, [sp, #4]
 8005272:	9000      	str	r0, [sp, #0]
 8005274:	f8a3 9008 	strh.w	r9, [r3, #8]
 8005278:	f8a3 800a 	strh.w	r8, [r3, #10]
 800527c:	819f      	strh	r7, [r3, #12]
 800527e:	f8a3 a00e 	strh.w	sl, [r3, #14]
 8005282:	9b00      	ldr	r3, [sp, #0]
 8005284:	4668      	mov	r0, sp
 8005286:	6a1c      	ldr	r4, [r3, #32]
 8005288:	f006 f8fc 	bl	800b484 <GUI_ALLOC_UnlockH>
 800528c:	e7b4      	b.n	80051f8 <_PaintTransChildren+0x20>
	...

08005290 <WM__PaintWinAndOverlays>:
 8005290:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005292:	4604      	mov	r4, r0
 8005294:	f006 f8e8 	bl	800b468 <GUI_ALLOC_LockH>
 8005298:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800529a:	9001      	str	r0, [sp, #4]
 800529c:	f640 0301 	movw	r3, #2049	; 0x801
 80052a0:	4013      	ands	r3, r2
 80052a2:	2b01      	cmp	r3, #1
 80052a4:	d005      	beq.n	80052b2 <WM__PaintWinAndOverlays+0x22>
 80052a6:	a801      	add	r0, sp, #4
 80052a8:	f006 f8ec 	bl	800b484 <GUI_ALLOC_UnlockH>
 80052ac:	4620      	mov	r0, r4
 80052ae:	f7ff fe61 	bl	8004f74 <_Paint1>
 80052b2:	4b14      	ldr	r3, [pc, #80]	; (8005304 <WM__PaintWinAndOverlays+0x74>)
 80052b4:	681b      	ldr	r3, [r3, #0]
 80052b6:	b313      	cbz	r3, 80052fe <WM__PaintWinAndOverlays+0x6e>
 80052b8:	4620      	mov	r0, r4
 80052ba:	f7ff ff8d 	bl	80051d8 <_PaintTransChildren>
 80052be:	4620      	mov	r0, r4
 80052c0:	f006 f8c8 	bl	800b454 <GUI_ALLOC_h2p>
 80052c4:	6985      	ldr	r5, [r0, #24]
 80052c6:	6a04      	ldr	r4, [r0, #32]
 80052c8:	b1cd      	cbz	r5, 80052fe <WM__PaintWinAndOverlays+0x6e>
 80052ca:	b194      	cbz	r4, 80052f2 <WM__PaintWinAndOverlays+0x62>
 80052cc:	4620      	mov	r0, r4
 80052ce:	f006 f8c1 	bl	800b454 <GUI_ALLOC_h2p>
 80052d2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80052d4:	f003 0303 	and.w	r3, r3, #3
 80052d8:	2b03      	cmp	r3, #3
 80052da:	d102      	bne.n	80052e2 <WM__PaintWinAndOverlays+0x52>
 80052dc:	4620      	mov	r0, r4
 80052de:	f7ff ff31 	bl	8005144 <_Paint1Trans>
 80052e2:	4620      	mov	r0, r4
 80052e4:	f7ff ff78 	bl	80051d8 <_PaintTransChildren>
 80052e8:	4620      	mov	r0, r4
 80052ea:	f006 f8b3 	bl	800b454 <GUI_ALLOC_h2p>
 80052ee:	6a04      	ldr	r4, [r0, #32]
 80052f0:	e7eb      	b.n	80052ca <WM__PaintWinAndOverlays+0x3a>
 80052f2:	4628      	mov	r0, r5
 80052f4:	f006 f8ae 	bl	800b454 <GUI_ALLOC_h2p>
 80052f8:	6a04      	ldr	r4, [r0, #32]
 80052fa:	6985      	ldr	r5, [r0, #24]
 80052fc:	e7e4      	b.n	80052c8 <WM__PaintWinAndOverlays+0x38>
 80052fe:	b003      	add	sp, #12
 8005300:	bd30      	pop	{r4, r5, pc}
 8005302:	bf00      	nop
 8005304:	20002cd0 	.word	0x20002cd0

08005308 <_cbPaintMemDev>:
 8005308:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800530c:	4d17      	ldr	r5, [pc, #92]	; (800536c <_cbPaintMemDev+0x64>)
 800530e:	682b      	ldr	r3, [r5, #0]
 8005310:	4606      	mov	r6, r0
 8005312:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8005314:	f006 f8a8 	bl	800b468 <GUI_ALLOC_LockH>
 8005318:	682a      	ldr	r2, [r5, #0]
 800531a:	f8b0 a008 	ldrh.w	sl, [r0, #8]
 800531e:	f8b0 900a 	ldrh.w	r9, [r0, #10]
 8005322:	f8b0 800c 	ldrh.w	r8, [r0, #12]
 8005326:	89c7      	ldrh	r7, [r0, #14]
 8005328:	ac02      	add	r4, sp, #8
 800532a:	3208      	adds	r2, #8
 800532c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8005330:	f100 0308 	add.w	r3, r0, #8
 8005334:	e892 0003 	ldmia.w	r2, {r0, r1}
 8005338:	e883 0003 	stmia.w	r3, {r0, r1}
 800533c:	4620      	mov	r0, r4
 800533e:	f006 f8a1 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005342:	6830      	ldr	r0, [r6, #0]
 8005344:	f7ff ffa4 	bl	8005290 <WM__PaintWinAndOverlays>
 8005348:	682b      	ldr	r3, [r5, #0]
 800534a:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800534c:	f006 f88c 	bl	800b468 <GUI_ALLOC_LockH>
 8005350:	9001      	str	r0, [sp, #4]
 8005352:	f8a0 a008 	strh.w	sl, [r0, #8]
 8005356:	f8a0 900a 	strh.w	r9, [r0, #10]
 800535a:	f8a0 800c 	strh.w	r8, [r0, #12]
 800535e:	81c7      	strh	r7, [r0, #14]
 8005360:	4620      	mov	r0, r4
 8005362:	f006 f88f 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005366:	b002      	add	sp, #8
 8005368:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800536c:	200000b8 	.word	0x200000b8

08005370 <WM__ClipAtParentBorders>:
 8005370:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005372:	4607      	mov	r7, r0
 8005374:	460d      	mov	r5, r1
 8005376:	4628      	mov	r0, r5
 8005378:	f006 f876 	bl	800b468 <GUI_ALLOC_LockH>
 800537c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800537e:	ac02      	add	r4, sp, #8
 8005380:	f013 0602 	ands.w	r6, r3, #2
 8005384:	4601      	mov	r1, r0
 8005386:	f844 0d04 	str.w	r0, [r4, #-4]!
 800538a:	d104      	bne.n	8005396 <WM__ClipAtParentBorders+0x26>
 800538c:	4620      	mov	r0, r4
 800538e:	f006 f879 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005392:	4630      	mov	r0, r6
 8005394:	e016      	b.n	80053c4 <WM__ClipAtParentBorders+0x54>
 8005396:	4638      	mov	r0, r7
 8005398:	f003 fd13 	bl	8008dc2 <GUI__IntersectRect>
 800539c:	9b01      	ldr	r3, [sp, #4]
 800539e:	699e      	ldr	r6, [r3, #24]
 80053a0:	4620      	mov	r0, r4
 80053a2:	b956      	cbnz	r6, 80053ba <WM__ClipAtParentBorders+0x4a>
 80053a4:	f006 f86e 	bl	800b484 <GUI_ALLOC_UnlockH>
 80053a8:	4b07      	ldr	r3, [pc, #28]	; (80053c8 <WM__ClipAtParentBorders+0x58>)
 80053aa:	681a      	ldr	r2, [r3, #0]
 80053ac:	4295      	cmp	r5, r2
 80053ae:	d008      	beq.n	80053c2 <WM__ClipAtParentBorders+0x52>
 80053b0:	6858      	ldr	r0, [r3, #4]
 80053b2:	1a2b      	subs	r3, r5, r0
 80053b4:	4258      	negs	r0, r3
 80053b6:	4158      	adcs	r0, r3
 80053b8:	e004      	b.n	80053c4 <WM__ClipAtParentBorders+0x54>
 80053ba:	f006 f863 	bl	800b484 <GUI_ALLOC_UnlockH>
 80053be:	4635      	mov	r5, r6
 80053c0:	e7d9      	b.n	8005376 <WM__ClipAtParentBorders+0x6>
 80053c2:	2001      	movs	r0, #1
 80053c4:	b003      	add	sp, #12
 80053c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80053c8:	20002c80 	.word	0x20002c80

080053cc <WM__InsertWindowIntoList>:
 80053cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80053ce:	4604      	mov	r4, r0
 80053d0:	b085      	sub	sp, #20
 80053d2:	460d      	mov	r5, r1
 80053d4:	2900      	cmp	r1, #0
 80053d6:	d049      	beq.n	800546c <WM__InsertWindowIntoList+0xa0>
 80053d8:	f006 f846 	bl	800b468 <GUI_ALLOC_LockH>
 80053dc:	2300      	movs	r3, #0
 80053de:	6203      	str	r3, [r0, #32]
 80053e0:	6185      	str	r5, [r0, #24]
 80053e2:	9001      	str	r0, [sp, #4]
 80053e4:	4628      	mov	r0, r5
 80053e6:	f006 f83f 	bl	800b468 <GUI_ALLOC_LockH>
 80053ea:	9b01      	ldr	r3, [sp, #4]
 80053ec:	69c5      	ldr	r5, [r0, #28]
 80053ee:	9002      	str	r0, [sp, #8]
 80053f0:	6a9f      	ldr	r7, [r3, #40]	; 0x28
 80053f2:	b92d      	cbnz	r5, 8005400 <WM__InsertWindowIntoList+0x34>
 80053f4:	61c4      	str	r4, [r0, #28]
 80053f6:	a801      	add	r0, sp, #4
 80053f8:	f006 f844 	bl	800b484 <GUI_ALLOC_UnlockH>
 80053fc:	a802      	add	r0, sp, #8
 80053fe:	e033      	b.n	8005468 <WM__InsertWindowIntoList+0x9c>
 8005400:	4628      	mov	r0, r5
 8005402:	f006 f831 	bl	800b468 <GUI_ALLOC_LockH>
 8005406:	ae04      	add	r6, sp, #16
 8005408:	f007 0708 	and.w	r7, r7, #8
 800540c:	f846 0d04 	str.w	r0, [r6, #-4]!
 8005410:	b977      	cbnz	r7, 8005430 <WM__InsertWindowIntoList+0x64>
 8005412:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005414:	071a      	lsls	r2, r3, #28
 8005416:	d50b      	bpl.n	8005430 <WM__InsertWindowIntoList+0x64>
 8005418:	9b01      	ldr	r3, [sp, #4]
 800541a:	621d      	str	r5, [r3, #32]
 800541c:	9b02      	ldr	r3, [sp, #8]
 800541e:	a801      	add	r0, sp, #4
 8005420:	61dc      	str	r4, [r3, #28]
 8005422:	f006 f82f 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005426:	a802      	add	r0, sp, #8
 8005428:	f006 f82c 	bl	800b484 <GUI_ALLOC_UnlockH>
 800542c:	4630      	mov	r0, r6
 800542e:	e01b      	b.n	8005468 <WM__InsertWindowIntoList+0x9c>
 8005430:	a802      	add	r0, sp, #8
 8005432:	f006 f827 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005436:	4630      	mov	r0, r6
 8005438:	f006 f824 	bl	800b484 <GUI_ALLOC_UnlockH>
 800543c:	4628      	mov	r0, r5
 800543e:	f006 f809 	bl	800b454 <GUI_ALLOC_h2p>
 8005442:	9003      	str	r0, [sp, #12]
 8005444:	9b03      	ldr	r3, [sp, #12]
 8005446:	6a1d      	ldr	r5, [r3, #32]
 8005448:	b90d      	cbnz	r5, 800544e <WM__InsertWindowIntoList+0x82>
 800544a:	621c      	str	r4, [r3, #32]
 800544c:	e00b      	b.n	8005466 <WM__InsertWindowIntoList+0x9a>
 800544e:	4628      	mov	r0, r5
 8005450:	f006 f800 	bl	800b454 <GUI_ALLOC_h2p>
 8005454:	2f00      	cmp	r7, #0
 8005456:	d1f4      	bne.n	8005442 <WM__InsertWindowIntoList+0x76>
 8005458:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800545a:	071b      	lsls	r3, r3, #28
 800545c:	d5f1      	bpl.n	8005442 <WM__InsertWindowIntoList+0x76>
 800545e:	9b03      	ldr	r3, [sp, #12]
 8005460:	621c      	str	r4, [r3, #32]
 8005462:	9b01      	ldr	r3, [sp, #4]
 8005464:	621d      	str	r5, [r3, #32]
 8005466:	a801      	add	r0, sp, #4
 8005468:	f006 f80c 	bl	800b484 <GUI_ALLOC_UnlockH>
 800546c:	b005      	add	sp, #20
 800546e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005470 <WM__RemoveWindowFromList>:
 8005470:	b570      	push	{r4, r5, r6, lr}
 8005472:	4604      	mov	r4, r0
 8005474:	f005 ffee 	bl	800b454 <GUI_ALLOC_h2p>
 8005478:	4605      	mov	r5, r0
 800547a:	6980      	ldr	r0, [r0, #24]
 800547c:	b1a8      	cbz	r0, 80054aa <WM__RemoveWindowFromList+0x3a>
 800547e:	f005 ffe9 	bl	800b454 <GUI_ALLOC_h2p>
 8005482:	69c3      	ldr	r3, [r0, #28]
 8005484:	42a3      	cmp	r3, r4
 8005486:	4606      	mov	r6, r0
 8005488:	d105      	bne.n	8005496 <WM__RemoveWindowFromList+0x26>
 800548a:	4618      	mov	r0, r3
 800548c:	f005 ffe2 	bl	800b454 <GUI_ALLOC_h2p>
 8005490:	6a03      	ldr	r3, [r0, #32]
 8005492:	61f3      	str	r3, [r6, #28]
 8005494:	bd70      	pop	{r4, r5, r6, pc}
 8005496:	b143      	cbz	r3, 80054aa <WM__RemoveWindowFromList+0x3a>
 8005498:	4618      	mov	r0, r3
 800549a:	f005 ffdb 	bl	800b454 <GUI_ALLOC_h2p>
 800549e:	6a03      	ldr	r3, [r0, #32]
 80054a0:	42a3      	cmp	r3, r4
 80054a2:	d1f8      	bne.n	8005496 <WM__RemoveWindowFromList+0x26>
 80054a4:	6a2b      	ldr	r3, [r5, #32]
 80054a6:	6203      	str	r3, [r0, #32]
 80054a8:	bd70      	pop	{r4, r5, r6, pc}
 80054aa:	bd70      	pop	{r4, r5, r6, pc}

080054ac <WM__Client2Screen>:
 80054ac:	4603      	mov	r3, r0
 80054ae:	4608      	mov	r0, r1
 80054b0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80054b4:	f9b3 1000 	ldrsh.w	r1, [r3]
 80054b8:	f005 baed 	b.w	800aa96 <GUI_MoveRect>

080054bc <_SetClipRectUserIntersect>:
 80054bc:	4b11      	ldr	r3, [pc, #68]	; (8005504 <_SetClipRectUserIntersect+0x48>)
 80054be:	b530      	push	{r4, r5, lr}
 80054c0:	681c      	ldr	r4, [r3, #0]
 80054c2:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80054c4:	b085      	sub	sp, #20
 80054c6:	4605      	mov	r5, r0
 80054c8:	b1ba      	cbz	r2, 80054fa <_SetClipRectUserIntersect+0x3e>
 80054ca:	6810      	ldr	r0, [r2, #0]
 80054cc:	6851      	ldr	r1, [r2, #4]
 80054ce:	ab02      	add	r3, sp, #8
 80054d0:	c303      	stmia	r3!, {r0, r1}
 80054d2:	4b0d      	ldr	r3, [pc, #52]	; (8005508 <_SetClipRectUserIntersect+0x4c>)
 80054d4:	6818      	ldr	r0, [r3, #0]
 80054d6:	b900      	cbnz	r0, 80054da <_SetClipRectUserIntersect+0x1e>
 80054d8:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80054da:	f005 ffc5 	bl	800b468 <GUI_ALLOC_LockH>
 80054de:	ac04      	add	r4, sp, #16
 80054e0:	a902      	add	r1, sp, #8
 80054e2:	f844 0d0c 	str.w	r0, [r4, #-12]!
 80054e6:	f7ff ffe1 	bl	80054ac <WM__Client2Screen>
 80054ea:	4620      	mov	r0, r4
 80054ec:	f005 ffca 	bl	800b484 <GUI_ALLOC_UnlockH>
 80054f0:	a802      	add	r0, sp, #8
 80054f2:	4629      	mov	r1, r5
 80054f4:	f003 fc65 	bl	8008dc2 <GUI__IntersectRect>
 80054f8:	a802      	add	r0, sp, #8
 80054fa:	f002 ff7d 	bl	80083f8 <LCD_SetClipRectEx>
 80054fe:	b005      	add	sp, #20
 8005500:	bd30      	pop	{r4, r5, pc}
 8005502:	bf00      	nop
 8005504:	200000b8 	.word	0x200000b8
 8005508:	20002c7c 	.word	0x20002c7c

0800550c <WM__ActivateClipRect>:
 800550c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800550e:	4b0e      	ldr	r3, [pc, #56]	; (8005548 <WM__ActivateClipRect+0x3c>)
 8005510:	681b      	ldr	r3, [r3, #0]
 8005512:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 8005516:	b10a      	cbz	r2, 800551c <WM__ActivateClipRect+0x10>
 8005518:	480c      	ldr	r0, [pc, #48]	; (800554c <WM__ActivateClipRect+0x40>)
 800551a:	e011      	b.n	8005540 <WM__ActivateClipRect+0x34>
 800551c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800551e:	f005 ffa3 	bl	800b468 <GUI_ALLOC_LockH>
 8005522:	9001      	str	r0, [sp, #4]
 8005524:	c803      	ldmia	r0, {r0, r1}
 8005526:	ac02      	add	r4, sp, #8
 8005528:	e884 0003 	stmia.w	r4, {r0, r1}
 800552c:	a801      	add	r0, sp, #4
 800552e:	f005 ffa9 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005532:	4b07      	ldr	r3, [pc, #28]	; (8005550 <WM__ActivateClipRect+0x44>)
 8005534:	6819      	ldr	r1, [r3, #0]
 8005536:	b111      	cbz	r1, 800553e <WM__ActivateClipRect+0x32>
 8005538:	4620      	mov	r0, r4
 800553a:	f7ff ff19 	bl	8005370 <WM__ClipAtParentBorders>
 800553e:	4620      	mov	r0, r4
 8005540:	f7ff ffbc 	bl	80054bc <_SetClipRectUserIntersect>
 8005544:	b004      	add	sp, #16
 8005546:	bd10      	pop	{r4, pc}
 8005548:	200000b8 	.word	0x200000b8
 800554c:	20002a34 	.word	0x20002a34
 8005550:	20002c7c 	.word	0x20002c7c

08005554 <WM__IsWindow>:
 8005554:	4b06      	ldr	r3, [pc, #24]	; (8005570 <WM__IsWindow+0x1c>)
 8005556:	b510      	push	{r4, lr}
 8005558:	4604      	mov	r4, r0
 800555a:	6818      	ldr	r0, [r3, #0]
 800555c:	b128      	cbz	r0, 800556a <WM__IsWindow+0x16>
 800555e:	42a0      	cmp	r0, r4
 8005560:	d004      	beq.n	800556c <WM__IsWindow+0x18>
 8005562:	f005 ff77 	bl	800b454 <GUI_ALLOC_h2p>
 8005566:	6940      	ldr	r0, [r0, #20]
 8005568:	e7f8      	b.n	800555c <WM__IsWindow+0x8>
 800556a:	bd10      	pop	{r4, pc}
 800556c:	2001      	movs	r0, #1
 800556e:	bd10      	pop	{r4, pc}
 8005570:	20002c9c 	.word	0x20002c9c

08005574 <WM__InvalidateDrawAndDescs>:
 8005574:	b513      	push	{r0, r1, r4, lr}
 8005576:	4604      	mov	r4, r0
 8005578:	b300      	cbz	r0, 80055bc <WM__InvalidateDrawAndDescs+0x48>
 800557a:	f005 ff75 	bl	800b468 <GUI_ALLOC_LockH>
 800557e:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8005580:	9001      	str	r0, [sp, #4]
 8005582:	0793      	lsls	r3, r2, #30
 8005584:	d517      	bpl.n	80055b6 <WM__InvalidateDrawAndDescs+0x42>
 8005586:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005588:	b140      	cbz	r0, 800559c <WM__InvalidateDrawAndDescs+0x28>
 800558a:	4b0d      	ldr	r3, [pc, #52]	; (80055c0 <WM__InvalidateDrawAndDescs+0x4c>)
 800558c:	681b      	ldr	r3, [r3, #0]
 800558e:	42a3      	cmp	r3, r4
 8005590:	d004      	beq.n	800559c <WM__InvalidateDrawAndDescs+0x28>
 8005592:	f001 fe07 	bl	80071a4 <GUI_MEMDEV_Delete>
 8005596:	9b01      	ldr	r3, [sp, #4]
 8005598:	2200      	movs	r2, #0
 800559a:	625a      	str	r2, [r3, #36]	; 0x24
 800559c:	4620      	mov	r0, r4
 800559e:	f7ff f8ec 	bl	800477a <WM_GetFirstChild>
 80055a2:	4604      	mov	r4, r0
 80055a4:	b13c      	cbz	r4, 80055b6 <WM__InvalidateDrawAndDescs+0x42>
 80055a6:	4620      	mov	r0, r4
 80055a8:	f7ff ffe4 	bl	8005574 <WM__InvalidateDrawAndDescs>
 80055ac:	4620      	mov	r0, r4
 80055ae:	f005 ff51 	bl	800b454 <GUI_ALLOC_h2p>
 80055b2:	6a04      	ldr	r4, [r0, #32]
 80055b4:	e7f6      	b.n	80055a4 <WM__InvalidateDrawAndDescs+0x30>
 80055b6:	a801      	add	r0, sp, #4
 80055b8:	f005 ff64 	bl	800b484 <GUI_ALLOC_UnlockH>
 80055bc:	b002      	add	sp, #8
 80055be:	bd10      	pop	{r4, pc}
 80055c0:	20002ccc 	.word	0x20002ccc

080055c4 <WM__RectIsNZ>:
 80055c4:	f9b0 2000 	ldrsh.w	r2, [r0]
 80055c8:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80055cc:	429a      	cmp	r2, r3
 80055ce:	dc08      	bgt.n	80055e2 <WM__RectIsNZ+0x1e>
 80055d0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80055d4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80055d8:	429a      	cmp	r2, r3
 80055da:	bfcc      	ite	gt
 80055dc:	2000      	movgt	r0, #0
 80055de:	2001      	movle	r0, #1
 80055e0:	4770      	bx	lr
 80055e2:	2000      	movs	r0, #0
 80055e4:	4770      	bx	lr

080055e6 <WM_SendMessage>:
 80055e6:	b108      	cbz	r0, 80055ec <WM_SendMessage+0x6>
 80055e8:	f7fe bde2 	b.w	80041b0 <WM__SendMessage>
 80055ec:	4770      	bx	lr

080055ee <WM__SendMsgNoData>:
 80055ee:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80055f0:	ab04      	add	r3, sp, #16
 80055f2:	9001      	str	r0, [sp, #4]
 80055f4:	f843 1d10 	str.w	r1, [r3, #-16]!
 80055f8:	4669      	mov	r1, sp
 80055fa:	f7fe fdd9 	bl	80041b0 <WM__SendMessage>
 80055fe:	b005      	add	sp, #20
 8005600:	f85d fb04 	ldr.w	pc, [sp], #4

08005604 <WM__GetClientRectWin>:
 8005604:	2300      	movs	r3, #0
 8005606:	800b      	strh	r3, [r1, #0]
 8005608:	8882      	ldrh	r2, [r0, #4]
 800560a:	804b      	strh	r3, [r1, #2]
 800560c:	8803      	ldrh	r3, [r0, #0]
 800560e:	1ad3      	subs	r3, r2, r3
 8005610:	808b      	strh	r3, [r1, #4]
 8005612:	88c2      	ldrh	r2, [r0, #6]
 8005614:	8843      	ldrh	r3, [r0, #2]
 8005616:	1ad3      	subs	r3, r2, r3
 8005618:	80cb      	strh	r3, [r1, #6]
 800561a:	4770      	bx	lr

0800561c <WM__GetTopLevelLayer>:
 800561c:	b510      	push	{r4, lr}
 800561e:	4604      	mov	r4, r0
 8005620:	f005 ff18 	bl	800b454 <GUI_ALLOC_h2p>
 8005624:	6980      	ldr	r0, [r0, #24]
 8005626:	2800      	cmp	r0, #0
 8005628:	d1f9      	bne.n	800561e <WM__GetTopLevelLayer+0x2>
 800562a:	4b05      	ldr	r3, [pc, #20]	; (8005640 <WM__GetTopLevelLayer+0x24>)
 800562c:	681a      	ldr	r2, [r3, #0]
 800562e:	4294      	cmp	r4, r2
 8005630:	d005      	beq.n	800563e <WM__GetTopLevelLayer+0x22>
 8005632:	6858      	ldr	r0, [r3, #4]
 8005634:	4284      	cmp	r4, r0
 8005636:	bf14      	ite	ne
 8005638:	f04f 30ff 	movne.w	r0, #4294967295
 800563c:	2001      	moveq	r0, #1
 800563e:	bd10      	pop	{r4, pc}
 8005640:	20002c80 	.word	0x20002c80

08005644 <_Invalidate1Abs>:
 8005644:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005646:	b085      	sub	sp, #20
 8005648:	4606      	mov	r6, r0
 800564a:	460d      	mov	r5, r1
 800564c:	4617      	mov	r7, r2
 800564e:	f005 ff01 	bl	800b454 <GUI_ALLOC_h2p>
 8005652:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8005654:	9001      	str	r0, [sp, #4]
 8005656:	07a3      	lsls	r3, r4, #30
 8005658:	d53e      	bpl.n	80056d8 <_Invalidate1Abs+0x94>
 800565a:	4628      	mov	r0, r5
 800565c:	f7ff ffb2 	bl	80055c4 <WM__RectIsNZ>
 8005660:	2800      	cmp	r0, #0
 8005662:	d039      	beq.n	80056d8 <_Invalidate1Abs+0x94>
 8005664:	f640 0301 	movw	r3, #2049	; 0x801
 8005668:	4023      	ands	r3, r4
 800566a:	2b01      	cmp	r3, #1
 800566c:	d034      	beq.n	80056d8 <_Invalidate1Abs+0x94>
 800566e:	4630      	mov	r0, r6
 8005670:	f005 fefa 	bl	800b468 <GUI_ALLOC_LockH>
 8005674:	ac02      	add	r4, sp, #8
 8005676:	4602      	mov	r2, r0
 8005678:	9001      	str	r0, [sp, #4]
 800567a:	4629      	mov	r1, r5
 800567c:	4620      	mov	r0, r4
 800567e:	f003 fbbe 	bl	8008dfe <GUI__IntersectRects>
 8005682:	4620      	mov	r0, r4
 8005684:	f7ff ff9e 	bl	80055c4 <WM__RectIsNZ>
 8005688:	b318      	cbz	r0, 80056d2 <_Invalidate1Abs+0x8e>
 800568a:	9b01      	ldr	r3, [sp, #4]
 800568c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800568e:	f244 0120 	movw	r1, #16416	; 0x4020
 8005692:	4011      	ands	r1, r2
 8005694:	f103 0508 	add.w	r5, r3, #8
 8005698:	b129      	cbz	r1, 80056a6 <_Invalidate1Abs+0x62>
 800569a:	4628      	mov	r0, r5
 800569c:	4629      	mov	r1, r5
 800569e:	4622      	mov	r2, r4
 80056a0:	f005 f9ce 	bl	800aa40 <GUI_MergeRect>
 80056a4:	e015      	b.n	80056d2 <_Invalidate1Abs+0x8e>
 80056a6:	e894 0003 	ldmia.w	r4, {r0, r1}
 80056aa:	4317      	orrs	r7, r2
 80056ac:	e885 0003 	stmia.w	r5, {r0, r1}
 80056b0:	629f      	str	r7, [r3, #40]	; 0x28
 80056b2:	4b0a      	ldr	r3, [pc, #40]	; (80056dc <_Invalidate1Abs+0x98>)
 80056b4:	881a      	ldrh	r2, [r3, #0]
 80056b6:	4630      	mov	r0, r6
 80056b8:	3201      	adds	r2, #1
 80056ba:	801a      	strh	r2, [r3, #0]
 80056bc:	f7ff ffae 	bl	800561c <WM__GetTopLevelLayer>
 80056c0:	4b07      	ldr	r3, [pc, #28]	; (80056e0 <_Invalidate1Abs+0x9c>)
 80056c2:	2201      	movs	r2, #1
 80056c4:	fa02 f000 	lsl.w	r0, r2, r0
 80056c8:	681a      	ldr	r2, [r3, #0]
 80056ca:	4302      	orrs	r2, r0
 80056cc:	601a      	str	r2, [r3, #0]
 80056ce:	f003 feaf 	bl	8009430 <GUI_SignalEvent>
 80056d2:	a801      	add	r0, sp, #4
 80056d4:	f005 fed6 	bl	800b484 <GUI_ALLOC_UnlockH>
 80056d8:	b005      	add	sp, #20
 80056da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80056dc:	20002c98 	.word	0x20002c98
 80056e0:	20002ca8 	.word	0x20002ca8

080056e4 <WM__Invalidate1Abs>:
 80056e4:	2220      	movs	r2, #32
 80056e6:	f7ff bfad 	b.w	8005644 <_Invalidate1Abs>

080056ea <WM_InvalidateWindowAndDescsEx>:
 80056ea:	b5f0      	push	{r4, r5, r6, r7, lr}
 80056ec:	460f      	mov	r7, r1
 80056ee:	b085      	sub	sp, #20
 80056f0:	4615      	mov	r5, r2
 80056f2:	4606      	mov	r6, r0
 80056f4:	b348      	cbz	r0, 800574a <WM_InvalidateWindowAndDescsEx+0x60>
 80056f6:	f005 feb7 	bl	800b468 <GUI_ALLOC_LockH>
 80056fa:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80056fc:	ac04      	add	r4, sp, #16
 80056fe:	079b      	lsls	r3, r3, #30
 8005700:	4602      	mov	r2, r0
 8005702:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8005706:	d403      	bmi.n	8005710 <WM_InvalidateWindowAndDescsEx+0x26>
 8005708:	4620      	mov	r0, r4
 800570a:	f005 febb 	bl	800b484 <GUI_ALLOC_UnlockH>
 800570e:	e01c      	b.n	800574a <WM_InvalidateWindowAndDescsEx+0x60>
 8005710:	a802      	add	r0, sp, #8
 8005712:	4639      	mov	r1, r7
 8005714:	f003 fb73 	bl	8008dfe <GUI__IntersectRects>
 8005718:	2800      	cmp	r0, #0
 800571a:	d0f5      	beq.n	8005708 <WM_InvalidateWindowAndDescsEx+0x1e>
 800571c:	4620      	mov	r0, r4
 800571e:	f005 feb1 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005722:	4630      	mov	r0, r6
 8005724:	a902      	add	r1, sp, #8
 8005726:	462a      	mov	r2, r5
 8005728:	f7ff ff8c 	bl	8005644 <_Invalidate1Abs>
 800572c:	4630      	mov	r0, r6
 800572e:	f7ff f824 	bl	800477a <WM_GetFirstChild>
 8005732:	4604      	mov	r4, r0
 8005734:	b14c      	cbz	r4, 800574a <WM_InvalidateWindowAndDescsEx+0x60>
 8005736:	4620      	mov	r0, r4
 8005738:	a902      	add	r1, sp, #8
 800573a:	462a      	mov	r2, r5
 800573c:	f7ff ffd5 	bl	80056ea <WM_InvalidateWindowAndDescsEx>
 8005740:	4620      	mov	r0, r4
 8005742:	f005 fe87 	bl	800b454 <GUI_ALLOC_h2p>
 8005746:	6a04      	ldr	r4, [r0, #32]
 8005748:	e7f4      	b.n	8005734 <WM_InvalidateWindowAndDescsEx+0x4a>
 800574a:	b005      	add	sp, #20
 800574c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800574e <WM__InvalidateRect>:
 800574e:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005752:	4680      	mov	r8, r0
 8005754:	4617      	mov	r7, r2
 8005756:	461d      	mov	r5, r3
 8005758:	460c      	mov	r4, r1
 800575a:	2900      	cmp	r1, #0
 800575c:	d030      	beq.n	80057c0 <WM__InvalidateRect+0x72>
 800575e:	4608      	mov	r0, r1
 8005760:	f005 fe82 	bl	800b468 <GUI_ALLOC_LockH>
 8005764:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8005766:	9001      	str	r0, [sp, #4]
 8005768:	07b3      	lsls	r3, r6, #30
 800576a:	4602      	mov	r2, r0
 800576c:	d525      	bpl.n	80057ba <WM__InvalidateRect+0x6c>
 800576e:	a802      	add	r0, sp, #8
 8005770:	4641      	mov	r1, r8
 8005772:	f003 fb44 	bl	8008dfe <GUI__IntersectRects>
 8005776:	b300      	cbz	r0, 80057ba <WM__InvalidateRect+0x6c>
 8005778:	f640 0301 	movw	r3, #2049	; 0x801
 800577c:	4033      	ands	r3, r6
 800577e:	2b01      	cmp	r3, #1
 8005780:	d107      	bne.n	8005792 <WM__InvalidateRect+0x44>
 8005782:	9b01      	ldr	r3, [sp, #4]
 8005784:	a802      	add	r0, sp, #8
 8005786:	6999      	ldr	r1, [r3, #24]
 8005788:	6a1a      	ldr	r2, [r3, #32]
 800578a:	462b      	mov	r3, r5
 800578c:	f7ff ffdf 	bl	800574e <WM__InvalidateRect>
 8005790:	e004      	b.n	800579c <WM__InvalidateRect+0x4e>
 8005792:	4620      	mov	r0, r4
 8005794:	a902      	add	r1, sp, #8
 8005796:	462a      	mov	r2, r5
 8005798:	f7ff ff54 	bl	8005644 <_Invalidate1Abs>
 800579c:	9b01      	ldr	r3, [sp, #4]
 800579e:	69dc      	ldr	r4, [r3, #28]
 80057a0:	b15c      	cbz	r4, 80057ba <WM__InvalidateRect+0x6c>
 80057a2:	42bc      	cmp	r4, r7
 80057a4:	d009      	beq.n	80057ba <WM__InvalidateRect+0x6c>
 80057a6:	4620      	mov	r0, r4
 80057a8:	a902      	add	r1, sp, #8
 80057aa:	462a      	mov	r2, r5
 80057ac:	f7ff ff9d 	bl	80056ea <WM_InvalidateWindowAndDescsEx>
 80057b0:	4620      	mov	r0, r4
 80057b2:	f005 fe4f 	bl	800b454 <GUI_ALLOC_h2p>
 80057b6:	6a04      	ldr	r4, [r0, #32]
 80057b8:	e7f2      	b.n	80057a0 <WM__InvalidateRect+0x52>
 80057ba:	a801      	add	r0, sp, #4
 80057bc:	f005 fe62 	bl	800b484 <GUI_ALLOC_UnlockH>
 80057c0:	b004      	add	sp, #16
 80057c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080057c6 <WM__InvalidateParent>:
 80057c6:	b570      	push	{r4, r5, r6, lr}
 80057c8:	4605      	mov	r5, r0
 80057ca:	4608      	mov	r0, r1
 80057cc:	460c      	mov	r4, r1
 80057ce:	4616      	mov	r6, r2
 80057d0:	f005 fe40 	bl	800b454 <GUI_ALLOC_h2p>
 80057d4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80057d6:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80057da:	4628      	mov	r0, r5
 80057dc:	4621      	mov	r1, r4
 80057de:	4632      	mov	r2, r6
 80057e0:	bf0c      	ite	eq
 80057e2:	2320      	moveq	r3, #32
 80057e4:	f44f 4380 	movne.w	r3, #16384	; 0x4000
 80057e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80057ec:	f7ff bfaf 	b.w	800574e <WM__InvalidateRect>

080057f0 <WM__InvalidateRectEx>:
 80057f0:	2320      	movs	r3, #32
 80057f2:	f7ff bfac 	b.w	800574e <WM__InvalidateRect>

080057f6 <WM__DetachWindow>:
 80057f6:	b513      	push	{r0, r1, r4, lr}
 80057f8:	4604      	mov	r4, r0
 80057fa:	f005 fe35 	bl	800b468 <GUI_ALLOC_LockH>
 80057fe:	6981      	ldr	r1, [r0, #24]
 8005800:	9001      	str	r0, [sp, #4]
 8005802:	b141      	cbz	r1, 8005816 <WM__DetachWindow+0x20>
 8005804:	6a02      	ldr	r2, [r0, #32]
 8005806:	f7ff fff3 	bl	80057f0 <WM__InvalidateRectEx>
 800580a:	4620      	mov	r0, r4
 800580c:	f7ff fe30 	bl	8005470 <WM__RemoveWindowFromList>
 8005810:	9b01      	ldr	r3, [sp, #4]
 8005812:	2200      	movs	r2, #0
 8005814:	619a      	str	r2, [r3, #24]
 8005816:	a801      	add	r0, sp, #4
 8005818:	f005 fe34 	bl	800b484 <GUI_ALLOC_UnlockH>
 800581c:	b002      	add	sp, #8
 800581e:	bd10      	pop	{r4, pc}

08005820 <WM_InvalidateRect>:
 8005820:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005822:	460f      	mov	r7, r1
 8005824:	b087      	sub	sp, #28
 8005826:	4605      	mov	r5, r0
 8005828:	2800      	cmp	r0, #0
 800582a:	d033      	beq.n	8005894 <WM_InvalidateRect+0x74>
 800582c:	f005 fe1c 	bl	800b468 <GUI_ALLOC_LockH>
 8005830:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8005832:	9001      	str	r0, [sp, #4]
 8005834:	07b2      	lsls	r2, r6, #30
 8005836:	d52a      	bpl.n	800588e <WM_InvalidateRect+0x6e>
 8005838:	c803      	ldmia	r0, {r0, r1}
 800583a:	ac04      	add	r4, sp, #16
 800583c:	03f3      	lsls	r3, r6, #15
 800583e:	e884 0003 	stmia.w	r4, {r0, r1}
 8005842:	d502      	bpl.n	800584a <WM_InvalidateRect+0x2a>
 8005844:	4628      	mov	r0, r5
 8005846:	f7ff fe95 	bl	8005574 <WM__InvalidateDrawAndDescs>
 800584a:	b15f      	cbz	r7, 8005864 <WM_InvalidateRect+0x44>
 800584c:	6838      	ldr	r0, [r7, #0]
 800584e:	6879      	ldr	r1, [r7, #4]
 8005850:	ab02      	add	r3, sp, #8
 8005852:	c303      	stmia	r3!, {r0, r1}
 8005854:	9801      	ldr	r0, [sp, #4]
 8005856:	a902      	add	r1, sp, #8
 8005858:	f7ff fe28 	bl	80054ac <WM__Client2Screen>
 800585c:	4620      	mov	r0, r4
 800585e:	a902      	add	r1, sp, #8
 8005860:	f003 faaf 	bl	8008dc2 <GUI__IntersectRect>
 8005864:	4620      	mov	r0, r4
 8005866:	4629      	mov	r1, r5
 8005868:	f7ff fd82 	bl	8005370 <WM__ClipAtParentBorders>
 800586c:	b178      	cbz	r0, 800588e <WM_InvalidateRect+0x6e>
 800586e:	f640 0301 	movw	r3, #2049	; 0x801
 8005872:	4033      	ands	r3, r6
 8005874:	2b01      	cmp	r3, #1
 8005876:	d106      	bne.n	8005886 <WM_InvalidateRect+0x66>
 8005878:	9b01      	ldr	r3, [sp, #4]
 800587a:	4620      	mov	r0, r4
 800587c:	6999      	ldr	r1, [r3, #24]
 800587e:	6a1a      	ldr	r2, [r3, #32]
 8005880:	f7ff ffb6 	bl	80057f0 <WM__InvalidateRectEx>
 8005884:	e003      	b.n	800588e <WM_InvalidateRect+0x6e>
 8005886:	4628      	mov	r0, r5
 8005888:	4621      	mov	r1, r4
 800588a:	f7ff ff2b 	bl	80056e4 <WM__Invalidate1Abs>
 800588e:	a801      	add	r0, sp, #4
 8005890:	f005 fdf8 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005894:	b007      	add	sp, #28
 8005896:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005898 <WM_InvalidateWindow>:
 8005898:	2100      	movs	r1, #0
 800589a:	f7ff bfc1 	b.w	8005820 <WM_InvalidateRect>

0800589e <WM__SelectTopLevelLayer>:
 800589e:	b508      	push	{r3, lr}
 80058a0:	f7ff febc 	bl	800561c <WM__GetTopLevelLayer>
 80058a4:	2800      	cmp	r0, #0
 80058a6:	db03      	blt.n	80058b0 <WM__SelectTopLevelLayer+0x12>
 80058a8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80058ac:	f003 bfca 	b.w	8009844 <GUI_SelectLayer>
 80058b0:	bd08      	pop	{r3, pc}
	...

080058b4 <WM_SelectWindow>:
 80058b4:	4a0d      	ldr	r2, [pc, #52]	; (80058ec <WM_SelectWindow+0x38>)
 80058b6:	6813      	ldr	r3, [r2, #0]
 80058b8:	b570      	push	{r4, r5, r6, lr}
 80058ba:	6c9d      	ldr	r5, [r3, #72]	; 0x48
 80058bc:	4604      	mov	r4, r0
 80058be:	4616      	mov	r6, r2
 80058c0:	b908      	cbnz	r0, 80058c6 <WM_SelectWindow+0x12>
 80058c2:	4a0b      	ldr	r2, [pc, #44]	; (80058f0 <WM_SelectWindow+0x3c>)
 80058c4:	6814      	ldr	r4, [r2, #0]
 80058c6:	649c      	str	r4, [r3, #72]	; 0x48
 80058c8:	4620      	mov	r0, r4
 80058ca:	f7ff ffe8 	bl	800589e <WM__SelectTopLevelLayer>
 80058ce:	f003 f98b 	bl	8008be8 <LCD_SetClipRectMax>
 80058d2:	4620      	mov	r0, r4
 80058d4:	f005 fdbe 	bl	800b454 <GUI_ALLOC_h2p>
 80058d8:	6833      	ldr	r3, [r6, #0]
 80058da:	f9b0 1000 	ldrsh.w	r1, [r0]
 80058de:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80058e2:	64d9      	str	r1, [r3, #76]	; 0x4c
 80058e4:	651a      	str	r2, [r3, #80]	; 0x50
 80058e6:	4628      	mov	r0, r5
 80058e8:	bd70      	pop	{r4, r5, r6, pc}
 80058ea:	bf00      	nop
 80058ec:	200000b8 	.word	0x200000b8
 80058f0:	20002c9c 	.word	0x20002c9c

080058f4 <WM_CreateWindowAsChild>:
 80058f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80058f8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80058fa:	469b      	mov	fp, r3
 80058fc:	4b4b      	ldr	r3, [pc, #300]	; (8005a2c <WM_CreateWindowAsChild+0x138>)
 80058fe:	4607      	mov	r7, r0
 8005900:	4688      	mov	r8, r1
 8005902:	4692      	mov	sl, r2
 8005904:	681e      	ldr	r6, [r3, #0]
 8005906:	bb65      	cbnz	r5, 8005962 <WM_CreateWindowAsChild+0x6e>
 8005908:	4b49      	ldr	r3, [pc, #292]	; (8005a30 <WM_CreateWindowAsChild+0x13c>)
 800590a:	881b      	ldrh	r3, [r3, #0]
 800590c:	b363      	cbz	r3, 8005968 <WM_CreateWindowAsChild+0x74>
 800590e:	4b49      	ldr	r3, [pc, #292]	; (8005a34 <WM_CreateWindowAsChild+0x140>)
 8005910:	681b      	ldr	r3, [r3, #0]
 8005912:	7c5a      	ldrb	r2, [r3, #17]
 8005914:	4b48      	ldr	r3, [pc, #288]	; (8005a38 <WM_CreateWindowAsChild+0x144>)
 8005916:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800591a:	1c5a      	adds	r2, r3, #1
 800591c:	d024      	beq.n	8005968 <WM_CreateWindowAsChild+0x74>
 800591e:	b31b      	cbz	r3, 8005968 <WM_CreateWindowAsChild+0x74>
 8005920:	461d      	mov	r5, r3
 8005922:	4628      	mov	r0, r5
 8005924:	f005 fda0 	bl	800b468 <GUI_ALLOC_LockH>
 8005928:	f9b0 2000 	ldrsh.w	r2, [r0]
 800592c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8005930:	9001      	str	r0, [sp, #4]
 8005932:	4417      	add	r7, r2
 8005934:	4498      	add	r8, r3
 8005936:	f1ba 0f00 	cmp.w	sl, #0
 800593a:	d105      	bne.n	8005948 <WM_CreateWindowAsChild+0x54>
 800593c:	f9b0 a004 	ldrsh.w	sl, [r0, #4]
 8005940:	ebc2 0a0a 	rsb	sl, r2, sl
 8005944:	f10a 0a01 	add.w	sl, sl, #1
 8005948:	f1bb 0f00 	cmp.w	fp, #0
 800594c:	d105      	bne.n	800595a <WM_CreateWindowAsChild+0x66>
 800594e:	f9b0 b006 	ldrsh.w	fp, [r0, #6]
 8005952:	ebc3 0b0b 	rsb	fp, r3, fp
 8005956:	f10b 0b01 	add.w	fp, fp, #1
 800595a:	a801      	add	r0, sp, #4
 800595c:	f005 fd92 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005960:	e002      	b.n	8005968 <WM_CreateWindowAsChild+0x74>
 8005962:	1c6b      	adds	r3, r5, #1
 8005964:	d1dd      	bne.n	8005922 <WM_CreateWindowAsChild+0x2e>
 8005966:	2500      	movs	r5, #0
 8005968:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800596a:	302c      	adds	r0, #44	; 0x2c
 800596c:	f005 ff76 	bl	800b85c <GUI_ALLOC_AllocZero>
 8005970:	4604      	mov	r4, r0
 8005972:	2800      	cmp	r0, #0
 8005974:	d056      	beq.n	8005a24 <WM_CreateWindowAsChild+0x130>
 8005976:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005978:	431e      	orrs	r6, r3
 800597a:	4b2d      	ldr	r3, [pc, #180]	; (8005a30 <WM_CreateWindowAsChild+0x13c>)
 800597c:	881a      	ldrh	r2, [r3, #0]
 800597e:	3201      	adds	r2, #1
 8005980:	801a      	strh	r2, [r3, #0]
 8005982:	f005 fd71 	bl	800b468 <GUI_ALLOC_LockH>
 8005986:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005988:	6103      	str	r3, [r0, #16]
 800598a:	f10d 0908 	add.w	r9, sp, #8
 800598e:	4b2b      	ldr	r3, [pc, #172]	; (8005a3c <WM_CreateWindowAsChild+0x148>)
 8005990:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8005992:	f849 0d08 	str.w	r0, [r9, #-8]!
 8005996:	4033      	ands	r3, r6
 8005998:	8007      	strh	r7, [r0, #0]
 800599a:	f8a0 8002 	strh.w	r8, [r0, #2]
 800599e:	4457      	add	r7, sl
 80059a0:	44d8      	add	r8, fp
 80059a2:	4313      	orrs	r3, r2
 80059a4:	3f01      	subs	r7, #1
 80059a6:	f108 38ff 	add.w	r8, r8, #4294967295
 80059aa:	6283      	str	r3, [r0, #40]	; 0x28
 80059ac:	8087      	strh	r7, [r0, #4]
 80059ae:	f8a0 8006 	strh.w	r8, [r0, #6]
 80059b2:	4668      	mov	r0, sp
 80059b4:	f005 fd66 	bl	800b484 <GUI_ALLOC_UnlockH>
 80059b8:	4b21      	ldr	r3, [pc, #132]	; (8005a40 <WM_CreateWindowAsChild+0x14c>)
 80059ba:	6818      	ldr	r0, [r3, #0]
 80059bc:	b148      	cbz	r0, 80059d2 <WM_CreateWindowAsChild+0xde>
 80059be:	f005 fd49 	bl	800b454 <GUI_ALLOC_h2p>
 80059c2:	4607      	mov	r7, r0
 80059c4:	4620      	mov	r0, r4
 80059c6:	f005 fd45 	bl	800b454 <GUI_ALLOC_h2p>
 80059ca:	697b      	ldr	r3, [r7, #20]
 80059cc:	6143      	str	r3, [r0, #20]
 80059ce:	617c      	str	r4, [r7, #20]
 80059d0:	e000      	b.n	80059d4 <WM_CreateWindowAsChild+0xe0>
 80059d2:	601c      	str	r4, [r3, #0]
 80059d4:	4629      	mov	r1, r5
 80059d6:	4620      	mov	r0, r4
 80059d8:	f7ff fcf8 	bl	80053cc <WM__InsertWindowIntoList>
 80059dc:	06b5      	lsls	r5, r6, #26
 80059de:	d502      	bpl.n	80059e6 <WM_CreateWindowAsChild+0xf2>
 80059e0:	4620      	mov	r0, r4
 80059e2:	f7ff ff67 	bl	80058b4 <WM_SelectWindow>
 80059e6:	07f0      	lsls	r0, r6, #31
 80059e8:	d503      	bpl.n	80059f2 <WM_CreateWindowAsChild+0xfe>
 80059ea:	4b16      	ldr	r3, [pc, #88]	; (8005a44 <WM_CreateWindowAsChild+0x150>)
 80059ec:	681a      	ldr	r2, [r3, #0]
 80059ee:	3201      	adds	r2, #1
 80059f0:	601a      	str	r2, [r3, #0]
 80059f2:	0671      	lsls	r1, r6, #25
 80059f4:	d502      	bpl.n	80059fc <WM_CreateWindowAsChild+0x108>
 80059f6:	4620      	mov	r0, r4
 80059f8:	f7fe ff68 	bl	80048cc <WM_BringToBottom>
 80059fc:	07b2      	lsls	r2, r6, #30
 80059fe:	d50d      	bpl.n	8005a1c <WM_CreateWindowAsChild+0x128>
 8005a00:	4620      	mov	r0, r4
 8005a02:	f005 fd31 	bl	800b468 <GUI_ALLOC_LockH>
 8005a06:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005a08:	9000      	str	r0, [sp, #0]
 8005a0a:	f043 0302 	orr.w	r3, r3, #2
 8005a0e:	6283      	str	r3, [r0, #40]	; 0x28
 8005a10:	4668      	mov	r0, sp
 8005a12:	f005 fd37 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005a16:	4620      	mov	r0, r4
 8005a18:	f7ff ff3e 	bl	8005898 <WM_InvalidateWindow>
 8005a1c:	4620      	mov	r0, r4
 8005a1e:	2101      	movs	r1, #1
 8005a20:	f7ff fde5 	bl	80055ee <WM__SendMsgNoData>
 8005a24:	4620      	mov	r0, r4
 8005a26:	b003      	add	sp, #12
 8005a28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a2c:	20002cb0 	.word	0x20002cb0
 8005a30:	20002c78 	.word	0x20002c78
 8005a34:	200000b8 	.word	0x200000b8
 8005a38:	20002c80 	.word	0x20002c80
 8005a3c:	003f3f9f 	.word	0x003f3f9f
 8005a40:	20002c9c 	.word	0x20002c9c
 8005a44:	20002cd0 	.word	0x20002cd0

08005a48 <WM_DeleteWindow>:
 8005a48:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005a4a:	4604      	mov	r4, r0
 8005a4c:	2800      	cmp	r0, #0
 8005a4e:	d06e      	beq.n	8005b2e <WM_DeleteWindow+0xe6>
 8005a50:	f7ff fd80 	bl	8005554 <WM__IsWindow>
 8005a54:	2800      	cmp	r0, #0
 8005a56:	d06a      	beq.n	8005b2e <WM_DeleteWindow+0xe6>
 8005a58:	4620      	mov	r0, r4
 8005a5a:	f7ff fddf 	bl	800561c <WM__GetTopLevelLayer>
 8005a5e:	210b      	movs	r1, #11
 8005a60:	4605      	mov	r5, r0
 8005a62:	4620      	mov	r0, r4
 8005a64:	f7ff fdc3 	bl	80055ee <WM__SendMsgNoData>
 8005a68:	4620      	mov	r0, r4
 8005a6a:	f007 f96f 	bl	800cd4c <WM__DeleteAssocTimer>
 8005a6e:	4620      	mov	r0, r4
 8005a70:	f005 fcfa 	bl	800b468 <GUI_ALLOC_LockH>
 8005a74:	9001      	str	r0, [sp, #4]
 8005a76:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005a78:	b108      	cbz	r0, 8005a7e <WM_DeleteWindow+0x36>
 8005a7a:	f001 fb93 	bl	80071a4 <GUI_MEMDEV_Delete>
 8005a7e:	4b2d      	ldr	r3, [pc, #180]	; (8005b34 <WM_DeleteWindow+0xec>)
 8005a80:	4a2d      	ldr	r2, [pc, #180]	; (8005b38 <WM_DeleteWindow+0xf0>)
 8005a82:	2100      	movs	r1, #0
 8005a84:	6019      	str	r1, [r3, #0]
 8005a86:	4b2d      	ldr	r3, [pc, #180]	; (8005b3c <WM_DeleteWindow+0xf4>)
 8005a88:	681b      	ldr	r3, [r3, #0]
 8005a8a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8005a8e:	42a0      	cmp	r0, r4
 8005a90:	bf08      	it	eq
 8005a92:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 8005a96:	4a2a      	ldr	r2, [pc, #168]	; (8005b40 <WM_DeleteWindow+0xf8>)
 8005a98:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8005a9c:	42a1      	cmp	r1, r4
 8005a9e:	bf04      	itt	eq
 8005aa0:	2100      	moveq	r1, #0
 8005aa2:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 8005aa6:	4b27      	ldr	r3, [pc, #156]	; (8005b44 <WM_DeleteWindow+0xfc>)
 8005aa8:	681b      	ldr	r3, [r3, #0]
 8005aaa:	b12b      	cbz	r3, 8005ab8 <WM_DeleteWindow+0x70>
 8005aac:	685a      	ldr	r2, [r3, #4]
 8005aae:	42a2      	cmp	r2, r4
 8005ab0:	bf04      	itt	eq
 8005ab2:	2200      	moveq	r2, #0
 8005ab4:	605a      	streq	r2, [r3, #4]
 8005ab6:	e7f7      	b.n	8005aa8 <WM_DeleteWindow+0x60>
 8005ab8:	4620      	mov	r0, r4
 8005aba:	2107      	movs	r1, #7
 8005abc:	f7ff f8a3 	bl	8004c06 <WM_NotifyParent>
 8005ac0:	9e01      	ldr	r6, [sp, #4]
 8005ac2:	69f0      	ldr	r0, [r6, #28]
 8005ac4:	f7ff ffc0 	bl	8005a48 <WM_DeleteWindow>
 8005ac8:	69f3      	ldr	r3, [r6, #28]
 8005aca:	2b00      	cmp	r3, #0
 8005acc:	d1f9      	bne.n	8005ac2 <WM_DeleteWindow+0x7a>
 8005ace:	4620      	mov	r0, r4
 8005ad0:	f7ff fe91 	bl	80057f6 <WM__DetachWindow>
 8005ad4:	4b1c      	ldr	r3, [pc, #112]	; (8005b48 <WM_DeleteWindow+0x100>)
 8005ad6:	6818      	ldr	r0, [r3, #0]
 8005ad8:	b150      	cbz	r0, 8005af0 <WM_DeleteWindow+0xa8>
 8005ada:	f005 fcbb 	bl	800b454 <GUI_ALLOC_h2p>
 8005ade:	4606      	mov	r6, r0
 8005ae0:	6940      	ldr	r0, [r0, #20]
 8005ae2:	42a0      	cmp	r0, r4
 8005ae4:	d1f8      	bne.n	8005ad8 <WM_DeleteWindow+0x90>
 8005ae6:	4620      	mov	r0, r4
 8005ae8:	f005 fcb4 	bl	800b454 <GUI_ALLOC_h2p>
 8005aec:	6943      	ldr	r3, [r0, #20]
 8005aee:	6173      	str	r3, [r6, #20]
 8005af0:	9b01      	ldr	r3, [sp, #4]
 8005af2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005af4:	07da      	lsls	r2, r3, #31
 8005af6:	d503      	bpl.n	8005b00 <WM_DeleteWindow+0xb8>
 8005af8:	4a14      	ldr	r2, [pc, #80]	; (8005b4c <WM_DeleteWindow+0x104>)
 8005afa:	6811      	ldr	r1, [r2, #0]
 8005afc:	3901      	subs	r1, #1
 8005afe:	6011      	str	r1, [r2, #0]
 8005b00:	069b      	lsls	r3, r3, #26
 8005b02:	d503      	bpl.n	8005b0c <WM_DeleteWindow+0xc4>
 8005b04:	4b12      	ldr	r3, [pc, #72]	; (8005b50 <WM_DeleteWindow+0x108>)
 8005b06:	881a      	ldrh	r2, [r3, #0]
 8005b08:	3a01      	subs	r2, #1
 8005b0a:	801a      	strh	r2, [r3, #0]
 8005b0c:	a801      	add	r0, sp, #4
 8005b0e:	f005 fcb9 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005b12:	4b10      	ldr	r3, [pc, #64]	; (8005b54 <WM_DeleteWindow+0x10c>)
 8005b14:	881a      	ldrh	r2, [r3, #0]
 8005b16:	4620      	mov	r0, r4
 8005b18:	3a01      	subs	r2, #1
 8005b1a:	801a      	strh	r2, [r3, #0]
 8005b1c:	f005 fcde 	bl	800b4dc <GUI_ALLOC_Free>
 8005b20:	2d00      	cmp	r5, #0
 8005b22:	db04      	blt.n	8005b2e <WM_DeleteWindow+0xe6>
 8005b24:	4b0c      	ldr	r3, [pc, #48]	; (8005b58 <WM_DeleteWindow+0x110>)
 8005b26:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8005b2a:	f7ff fec3 	bl	80058b4 <WM_SelectWindow>
 8005b2e:	b002      	add	sp, #8
 8005b30:	bd70      	pop	{r4, r5, r6, pc}
 8005b32:	bf00      	nop
 8005b34:	20002a44 	.word	0x20002a44
 8005b38:	20002c90 	.word	0x20002c90
 8005b3c:	20002ca0 	.word	0x20002ca0
 8005b40:	20002cc4 	.word	0x20002cc4
 8005b44:	20002cbc 	.word	0x20002cbc
 8005b48:	20002c9c 	.word	0x20002c9c
 8005b4c:	20002cd0 	.word	0x20002cd0
 8005b50:	20002c98 	.word	0x20002c98
 8005b54:	20002c78 	.word	0x20002c78
 8005b58:	20002c80 	.word	0x20002c80

08005b5c <_Exec1Input>:
 8005b5c:	4b1b      	ldr	r3, [pc, #108]	; (8005bcc <_Exec1Input+0x70>)
 8005b5e:	681a      	ldr	r2, [r3, #0]
 8005b60:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005b62:	461e      	mov	r6, r3
 8005b64:	b1d2      	cbz	r2, 8005b9c <_Exec1Input+0x40>
 8005b66:	4b1a      	ldr	r3, [pc, #104]	; (8005bd0 <_Exec1Input+0x74>)
 8005b68:	681c      	ldr	r4, [r3, #0]
 8005b6a:	b1b4      	cbz	r4, 8005b9a <_Exec1Input+0x3e>
 8005b6c:	4620      	mov	r0, r4
 8005b6e:	f005 fc7b 	bl	800b468 <GUI_ALLOC_LockH>
 8005b72:	4603      	mov	r3, r0
 8005b74:	a802      	add	r0, sp, #8
 8005b76:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005b78:	f840 3d04 	str.w	r3, [r0, #-4]!
 8005b7c:	f412 4f00 	tst.w	r2, #32768	; 0x8000
 8005b80:	695d      	ldr	r5, [r3, #20]
 8005b82:	d006      	beq.n	8005b92 <_Exec1Input+0x36>
 8005b84:	f005 fc7e 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005b88:	4620      	mov	r0, r4
 8005b8a:	f7ff ff5d 	bl	8005a48 <WM_DeleteWindow>
 8005b8e:	462c      	mov	r4, r5
 8005b90:	e7eb      	b.n	8005b6a <_Exec1Input+0xe>
 8005b92:	462c      	mov	r4, r5
 8005b94:	f005 fc76 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005b98:	e7e7      	b.n	8005b6a <_Exec1Input+0xe>
 8005b9a:	6034      	str	r4, [r6, #0]
 8005b9c:	4b0d      	ldr	r3, [pc, #52]	; (8005bd4 <_Exec1Input+0x78>)
 8005b9e:	681b      	ldr	r3, [r3, #0]
 8005ba0:	b103      	cbz	r3, 8005ba4 <_Exec1Input+0x48>
 8005ba2:	4798      	blx	r3
 8005ba4:	4b0c      	ldr	r3, [pc, #48]	; (8005bd8 <_Exec1Input+0x7c>)
 8005ba6:	681b      	ldr	r3, [r3, #0]
 8005ba8:	b953      	cbnz	r3, 8005bc0 <_Exec1Input+0x64>
 8005baa:	4b0c      	ldr	r3, [pc, #48]	; (8005bdc <_Exec1Input+0x80>)
 8005bac:	681b      	ldr	r3, [r3, #0]
 8005bae:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 8005bb2:	b148      	cbz	r0, 8005bc8 <_Exec1Input+0x6c>
 8005bb4:	f003 fe64 	bl	8009880 <GUI_PollKeyMsg>
 8005bb8:	3000      	adds	r0, #0
 8005bba:	bf18      	it	ne
 8005bbc:	2001      	movne	r0, #1
 8005bbe:	e003      	b.n	8005bc8 <_Exec1Input+0x6c>
 8005bc0:	4798      	blx	r3
 8005bc2:	2800      	cmp	r0, #0
 8005bc4:	d0f1      	beq.n	8005baa <_Exec1Input+0x4e>
 8005bc6:	2001      	movs	r0, #1
 8005bc8:	b002      	add	sp, #8
 8005bca:	bd70      	pop	{r4, r5, r6, pc}
 8005bcc:	20002a28 	.word	0x20002a28
 8005bd0:	20002c9c 	.word	0x20002c9c
 8005bd4:	20002c88 	.word	0x20002c88
 8005bd8:	20002d34 	.word	0x20002d34
 8005bdc:	200000b8 	.word	0x200000b8

08005be0 <WM_GetActiveWindow>:
 8005be0:	4b01      	ldr	r3, [pc, #4]	; (8005be8 <WM_GetActiveWindow+0x8>)
 8005be2:	681b      	ldr	r3, [r3, #0]
 8005be4:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8005be6:	4770      	bx	lr
 8005be8:	200000b8 	.word	0x200000b8

08005bec <WM__GetNextIVR>:
 8005bec:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005bf0:	4f5d      	ldr	r7, [pc, #372]	; (8005d68 <WM__GetNextIVR+0x17c>)
 8005bf2:	683b      	ldr	r3, [r7, #0]
 8005bf4:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 8005bf8:	2800      	cmp	r0, #0
 8005bfa:	f000 80b2 	beq.w	8005d62 <WM__GetNextIVR+0x176>
 8005bfe:	4b5b      	ldr	r3, [pc, #364]	; (8005d6c <WM__GetNextIVR+0x180>)
 8005c00:	695a      	ldr	r2, [r3, #20]
 8005c02:	2a01      	cmp	r2, #1
 8005c04:	461c      	mov	r4, r3
 8005c06:	dd03      	ble.n	8005c10 <WM__GetNextIVR+0x24>
 8005c08:	3a01      	subs	r2, #1
 8005c0a:	615a      	str	r2, [r3, #20]
 8005c0c:	2000      	movs	r0, #0
 8005c0e:	e0a8      	b.n	8005d62 <WM__GetNextIVR+0x176>
 8005c10:	f104 0608 	add.w	r6, r4, #8
 8005c14:	691b      	ldr	r3, [r3, #16]
 8005c16:	e896 0003 	ldmia.w	r6, {r0, r1}
 8005c1a:	3301      	adds	r3, #1
 8005c1c:	ad02      	add	r5, sp, #8
 8005c1e:	6123      	str	r3, [r4, #16]
 8005c20:	e885 0003 	stmia.w	r5, {r0, r1}
 8005c24:	b923      	cbnz	r3, 8005c30 <WM__GetNextIVR+0x44>
 8005c26:	8823      	ldrh	r3, [r4, #0]
 8005c28:	f8ad 3008 	strh.w	r3, [sp, #8]
 8005c2c:	8863      	ldrh	r3, [r4, #2]
 8005c2e:	e011      	b.n	8005c54 <WM__GetNextIVR+0x68>
 8005c30:	89a3      	ldrh	r3, [r4, #12]
 8005c32:	8962      	ldrh	r2, [r4, #10]
 8005c34:	f8ad 200a 	strh.w	r2, [sp, #10]
 8005c38:	3301      	adds	r3, #1
 8005c3a:	b29b      	uxth	r3, r3
 8005c3c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8005c40:	f8ad 3008 	strh.w	r3, [sp, #8]
 8005c44:	b21b      	sxth	r3, r3
 8005c46:	429a      	cmp	r2, r3
 8005c48:	da06      	bge.n	8005c58 <WM__GetNextIVR+0x6c>
 8005c4a:	8823      	ldrh	r3, [r4, #0]
 8005c4c:	f8ad 3008 	strh.w	r3, [sp, #8]
 8005c50:	89e3      	ldrh	r3, [r4, #14]
 8005c52:	3301      	adds	r3, #1
 8005c54:	f8ad 300a 	strh.w	r3, [sp, #10]
 8005c58:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8005c5c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8005c60:	f8df 8108 	ldr.w	r8, [pc, #264]	; 8005d6c <WM__GetNextIVR+0x180>
 8005c64:	429a      	cmp	r2, r3
 8005c66:	dd04      	ble.n	8005c72 <WM__GetNextIVR+0x86>
 8005c68:	6963      	ldr	r3, [r4, #20]
 8005c6a:	3b01      	subs	r3, #1
 8005c6c:	2000      	movs	r0, #0
 8005c6e:	6163      	str	r3, [r4, #20]
 8005c70:	e077      	b.n	8005d62 <WM__GetNextIVR+0x176>
 8005c72:	683b      	ldr	r3, [r7, #0]
 8005c74:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8005c76:	f005 fbf7 	bl	800b468 <GUI_ALLOC_LockH>
 8005c7a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8005c7e:	f9b8 3000 	ldrsh.w	r3, [r8]
 8005c82:	9001      	str	r0, [sp, #4]
 8005c84:	429a      	cmp	r2, r3
 8005c86:	d11c      	bne.n	8005cc2 <WM__GetNextIVR+0xd6>
 8005c88:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8005c8c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8005c90:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8005c94:	f8ad 300c 	strh.w	r3, [sp, #12]
 8005c98:	4b33      	ldr	r3, [pc, #204]	; (8005d68 <WM__GetNextIVR+0x17c>)
 8005c9a:	681b      	ldr	r3, [r3, #0]
 8005c9c:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8005c9e:	b15a      	cbz	r2, 8005cb8 <WM__GetNextIVR+0xcc>
 8005ca0:	4610      	mov	r0, r2
 8005ca2:	f005 fbd7 	bl	800b454 <GUI_ALLOC_h2p>
 8005ca6:	4680      	mov	r8, r0
 8005ca8:	2200      	movs	r2, #0
 8005caa:	6a00      	ldr	r0, [r0, #32]
 8005cac:	4629      	mov	r1, r5
 8005cae:	f7ff f973 	bl	8004f98 <_Findy1>
 8005cb2:	f8d8 2018 	ldr.w	r2, [r8, #24]
 8005cb6:	e7f2      	b.n	8005c9e <WM__GetNextIVR+0xb2>
 8005cb8:	9b01      	ldr	r3, [sp, #4]
 8005cba:	4629      	mov	r1, r5
 8005cbc:	69d8      	ldr	r0, [r3, #28]
 8005cbe:	f7ff f96b 	bl	8004f98 <_Findy1>
 8005cc2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8005cc6:	f8ad 300c 	strh.w	r3, [sp, #12]
 8005cca:	683b      	ldr	r3, [r7, #0]
 8005ccc:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8005cce:	b16a      	cbz	r2, 8005cec <WM__GetNextIVR+0x100>
 8005cd0:	4610      	mov	r0, r2
 8005cd2:	f005 fbbf 	bl	800b454 <GUI_ALLOC_h2p>
 8005cd6:	4629      	mov	r1, r5
 8005cd8:	4680      	mov	r8, r0
 8005cda:	2200      	movs	r2, #0
 8005cdc:	6a00      	ldr	r0, [r0, #32]
 8005cde:	f7ff f9b1 	bl	8005044 <_Findx0>
 8005ce2:	2800      	cmp	r0, #0
 8005ce4:	d1ed      	bne.n	8005cc2 <WM__GetNextIVR+0xd6>
 8005ce6:	f8d8 2018 	ldr.w	r2, [r8, #24]
 8005cea:	e7f0      	b.n	8005cce <WM__GetNextIVR+0xe2>
 8005cec:	9b01      	ldr	r3, [sp, #4]
 8005cee:	4629      	mov	r1, r5
 8005cf0:	69d8      	ldr	r0, [r3, #28]
 8005cf2:	f7ff f9a7 	bl	8005044 <_Findx0>
 8005cf6:	2800      	cmp	r0, #0
 8005cf8:	d1e3      	bne.n	8005cc2 <WM__GetNextIVR+0xd6>
 8005cfa:	88a3      	ldrh	r3, [r4, #4]
 8005cfc:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8005d00:	f8ad 300c 	strh.w	r3, [sp, #12]
 8005d04:	b21b      	sxth	r3, r3
 8005d06:	429a      	cmp	r2, r3
 8005d08:	dd07      	ble.n	8005d1a <WM__GetNextIVR+0x12e>
 8005d0a:	e895 0003 	ldmia.w	r5, {r0, r1}
 8005d0e:	e886 0003 	stmia.w	r6, {r0, r1}
 8005d12:	a801      	add	r0, sp, #4
 8005d14:	f005 fbb6 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005d18:	e797      	b.n	8005c4a <WM__GetNextIVR+0x5e>
 8005d1a:	683b      	ldr	r3, [r7, #0]
 8005d1c:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8005d1e:	b152      	cbz	r2, 8005d36 <WM__GetNextIVR+0x14a>
 8005d20:	4610      	mov	r0, r2
 8005d22:	f005 fb97 	bl	800b454 <GUI_ALLOC_h2p>
 8005d26:	4607      	mov	r7, r0
 8005d28:	2200      	movs	r2, #0
 8005d2a:	6a00      	ldr	r0, [r0, #32]
 8005d2c:	4629      	mov	r1, r5
 8005d2e:	f7ff f9cd 	bl	80050cc <_Findx1>
 8005d32:	69ba      	ldr	r2, [r7, #24]
 8005d34:	e7f3      	b.n	8005d1e <WM__GetNextIVR+0x132>
 8005d36:	af04      	add	r7, sp, #16
 8005d38:	4629      	mov	r1, r5
 8005d3a:	f857 3d0c 	ldr.w	r3, [r7, #-12]!
 8005d3e:	69d8      	ldr	r0, [r3, #28]
 8005d40:	f7ff f9c4 	bl	80050cc <_Findx1>
 8005d44:	4638      	mov	r0, r7
 8005d46:	f005 fb9d 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005d4a:	6923      	ldr	r3, [r4, #16]
 8005d4c:	f644 6220 	movw	r2, #20000	; 0x4e20
 8005d50:	4293      	cmp	r3, r2
 8005d52:	dc89      	bgt.n	8005c68 <WM__GetNextIVR+0x7c>
 8005d54:	e895 0003 	ldmia.w	r5, {r0, r1}
 8005d58:	e886 0003 	stmia.w	r6, {r0, r1}
 8005d5c:	f7ff fbd6 	bl	800550c <WM__ActivateClipRect>
 8005d60:	2001      	movs	r0, #1
 8005d62:	b004      	add	sp, #16
 8005d64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005d68:	200000b8 	.word	0x200000b8
 8005d6c:	20002a2c 	.word	0x20002a2c

08005d70 <WM__InitIVRSearch>:
 8005d70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005d74:	4f39      	ldr	r7, [pc, #228]	; (8005e5c <WM__InitIVRSearch+0xec>)
 8005d76:	683b      	ldr	r3, [r7, #0]
 8005d78:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 8005d7c:	b086      	sub	sp, #24
 8005d7e:	4606      	mov	r6, r0
 8005d80:	b912      	cbnz	r2, 8005d88 <WM__InitIVRSearch+0x18>
 8005d82:	f7ff fbc3 	bl	800550c <WM__ActivateClipRect>
 8005d86:	e064      	b.n	8005e52 <WM__InitIVRSearch+0xe2>
 8005d88:	4d35      	ldr	r5, [pc, #212]	; (8005e60 <WM__InitIVRSearch+0xf0>)
 8005d8a:	696a      	ldr	r2, [r5, #20]
 8005d8c:	3201      	adds	r2, #1
 8005d8e:	2a01      	cmp	r2, #1
 8005d90:	616a      	str	r2, [r5, #20]
 8005d92:	462c      	mov	r4, r5
 8005d94:	dc5d      	bgt.n	8005e52 <WM__InitIVRSearch+0xe2>
 8005d96:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8005d98:	f005 fb66 	bl	800b468 <GUI_ALLOC_LockH>
 8005d9c:	f04f 32ff 	mov.w	r2, #4294967295
 8005da0:	612a      	str	r2, [r5, #16]
 8005da2:	4a30      	ldr	r2, [pc, #192]	; (8005e64 <WM__InitIVRSearch+0xf4>)
 8005da4:	9000      	str	r0, [sp, #0]
 8005da6:	7812      	ldrb	r2, [r2, #0]
 8005da8:	b12a      	cbz	r2, 8005db6 <WM__InitIVRSearch+0x46>
 8005daa:	f100 0308 	add.w	r3, r0, #8
 8005dae:	aa02      	add	r2, sp, #8
 8005db0:	e893 0003 	ldmia.w	r3, {r0, r1}
 8005db4:	e005      	b.n	8005dc2 <WM__InitIVRSearch+0x52>
 8005db6:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8005db8:	f012 0802 	ands.w	r8, r2, #2
 8005dbc:	d00a      	beq.n	8005dd4 <WM__InitIVRSearch+0x64>
 8005dbe:	c803      	ldmia	r0, {r0, r1}
 8005dc0:	aa02      	add	r2, sp, #8
 8005dc2:	e882 0003 	stmia.w	r2, {r0, r1}
 8005dc6:	ad02      	add	r5, sp, #8
 8005dc8:	b166      	cbz	r6, 8005de4 <WM__InitIVRSearch+0x74>
 8005dca:	4628      	mov	r0, r5
 8005dcc:	4631      	mov	r1, r6
 8005dce:	f002 fff8 	bl	8008dc2 <GUI__IntersectRect>
 8005dd2:	e007      	b.n	8005de4 <WM__InitIVRSearch+0x74>
 8005dd4:	696b      	ldr	r3, [r5, #20]
 8005dd6:	4668      	mov	r0, sp
 8005dd8:	3b01      	subs	r3, #1
 8005dda:	616b      	str	r3, [r5, #20]
 8005ddc:	f005 fb52 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005de0:	4640      	mov	r0, r8
 8005de2:	e037      	b.n	8005e54 <WM__InitIVRSearch+0xe4>
 8005de4:	683b      	ldr	r3, [r7, #0]
 8005de6:	4e20      	ldr	r6, [pc, #128]	; (8005e68 <WM__InitIVRSearch+0xf8>)
 8005de8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005dea:	b1c2      	cbz	r2, 8005e1e <WM__InitIVRSearch+0xae>
 8005dec:	9b00      	ldr	r3, [sp, #0]
 8005dee:	6810      	ldr	r0, [r2, #0]
 8005df0:	6851      	ldr	r1, [r2, #4]
 8005df2:	9301      	str	r3, [sp, #4]
 8005df4:	ab04      	add	r3, sp, #16
 8005df6:	c303      	stmia	r3!, {r0, r1}
 8005df8:	6833      	ldr	r3, [r6, #0]
 8005dfa:	b133      	cbz	r3, 8005e0a <WM__InitIVRSearch+0x9a>
 8005dfc:	a801      	add	r0, sp, #4
 8005dfe:	f005 fb41 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005e02:	6830      	ldr	r0, [r6, #0]
 8005e04:	f005 fb30 	bl	800b468 <GUI_ALLOC_LockH>
 8005e08:	9001      	str	r0, [sp, #4]
 8005e0a:	9801      	ldr	r0, [sp, #4]
 8005e0c:	a904      	add	r1, sp, #16
 8005e0e:	f7ff fb4d 	bl	80054ac <WM__Client2Screen>
 8005e12:	4628      	mov	r0, r5
 8005e14:	a904      	add	r1, sp, #16
 8005e16:	f002 ffd4 	bl	8008dc2 <GUI__IntersectRect>
 8005e1a:	a801      	add	r0, sp, #4
 8005e1c:	e000      	b.n	8005e20 <WM__InitIVRSearch+0xb0>
 8005e1e:	4668      	mov	r0, sp
 8005e20:	f005 fb30 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005e24:	6831      	ldr	r1, [r6, #0]
 8005e26:	b119      	cbz	r1, 8005e30 <WM__InitIVRSearch+0xc0>
 8005e28:	4628      	mov	r0, r5
 8005e2a:	f7ff faa1 	bl	8005370 <WM__ClipAtParentBorders>
 8005e2e:	b128      	cbz	r0, 8005e3c <WM__InitIVRSearch+0xcc>
 8005e30:	683b      	ldr	r3, [r7, #0]
 8005e32:	4628      	mov	r0, r5
 8005e34:	6c99      	ldr	r1, [r3, #72]	; 0x48
 8005e36:	f7ff fa9b 	bl	8005370 <WM__ClipAtParentBorders>
 8005e3a:	b918      	cbnz	r0, 8005e44 <WM__InitIVRSearch+0xd4>
 8005e3c:	6963      	ldr	r3, [r4, #20]
 8005e3e:	3b01      	subs	r3, #1
 8005e40:	6163      	str	r3, [r4, #20]
 8005e42:	e007      	b.n	8005e54 <WM__InitIVRSearch+0xe4>
 8005e44:	e895 0003 	ldmia.w	r5, {r0, r1}
 8005e48:	e884 0003 	stmia.w	r4, {r0, r1}
 8005e4c:	f7ff fece 	bl	8005bec <WM__GetNextIVR>
 8005e50:	e000      	b.n	8005e54 <WM__InitIVRSearch+0xe4>
 8005e52:	2001      	movs	r0, #1
 8005e54:	b006      	add	sp, #24
 8005e56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005e5a:	bf00      	nop
 8005e5c:	200000b8 	.word	0x200000b8
 8005e60:	20002a2c 	.word	0x20002a2c
 8005e64:	20002cac 	.word	0x20002cac
 8005e68:	20002c7c 	.word	0x20002c7c

08005e6c <WM_SetDefault>:
 8005e6c:	b508      	push	{r3, lr}
 8005e6e:	f004 fedf 	bl	800ac30 <GL_SetDefault>
 8005e72:	4b02      	ldr	r3, [pc, #8]	; (8005e7c <WM_SetDefault+0x10>)
 8005e74:	681b      	ldr	r3, [r3, #0]
 8005e76:	2200      	movs	r2, #0
 8005e78:	645a      	str	r2, [r3, #68]	; 0x44
 8005e7a:	bd08      	pop	{r3, pc}
 8005e7c:	200000b8 	.word	0x200000b8

08005e80 <WM__Paint1>:
 8005e80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e82:	b089      	sub	sp, #36	; 0x24
 8005e84:	4604      	mov	r4, r0
 8005e86:	f005 faef 	bl	800b468 <GUI_ALLOC_LockH>
 8005e8a:	6907      	ldr	r7, [r0, #16]
 8005e8c:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8005e8e:	9001      	str	r0, [sp, #4]
 8005e90:	3008      	adds	r0, #8
 8005e92:	c803      	ldmia	r0, {r0, r1}
 8005e94:	ad02      	add	r5, sp, #8
 8005e96:	e885 0003 	stmia.w	r5, {r0, r1}
 8005e9a:	a801      	add	r0, sp, #4
 8005e9c:	f005 faf2 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005ea0:	2f00      	cmp	r7, #0
 8005ea2:	d031      	beq.n	8005f08 <WM__Paint1+0x88>
 8005ea4:	07b3      	lsls	r3, r6, #30
 8005ea6:	d52f      	bpl.n	8005f08 <WM__Paint1+0x88>
 8005ea8:	4620      	mov	r0, r4
 8005eaa:	212e      	movs	r1, #46	; 0x2e
 8005eac:	f7fe fe9b 	bl	8004be6 <WM_SendMessageNoPara>
 8005eb0:	4b16      	ldr	r3, [pc, #88]	; (8005f0c <WM__Paint1+0x8c>)
 8005eb2:	781a      	ldrb	r2, [r3, #0]
 8005eb4:	f416 5f80 	tst.w	r6, #4096	; 0x1000
 8005eb8:	f102 0201 	add.w	r2, r2, #1
 8005ebc:	701a      	strb	r2, [r3, #0]
 8005ebe:	461e      	mov	r6, r3
 8005ec0:	d00a      	beq.n	8005ed8 <WM__Paint1+0x58>
 8005ec2:	230f      	movs	r3, #15
 8005ec4:	9405      	str	r4, [sp, #20]
 8005ec6:	9304      	str	r3, [sp, #16]
 8005ec8:	9507      	str	r5, [sp, #28]
 8005eca:	f7ff ffcf 	bl	8005e6c <WM_SetDefault>
 8005ece:	4620      	mov	r0, r4
 8005ed0:	a904      	add	r1, sp, #16
 8005ed2:	f7fe f96d 	bl	80041b0 <WM__SendMessage>
 8005ed6:	e010      	b.n	8005efa <WM__Paint1+0x7a>
 8005ed8:	4628      	mov	r0, r5
 8005eda:	f7ff ff49 	bl	8005d70 <WM__InitIVRSearch>
 8005ede:	b160      	cbz	r0, 8005efa <WM__Paint1+0x7a>
 8005ee0:	230f      	movs	r3, #15
 8005ee2:	9304      	str	r3, [sp, #16]
 8005ee4:	9405      	str	r4, [sp, #20]
 8005ee6:	9507      	str	r5, [sp, #28]
 8005ee8:	f7ff ffc0 	bl	8005e6c <WM_SetDefault>
 8005eec:	4620      	mov	r0, r4
 8005eee:	a904      	add	r1, sp, #16
 8005ef0:	f7fe f95e 	bl	80041b0 <WM__SendMessage>
 8005ef4:	f7ff fe7a 	bl	8005bec <WM__GetNextIVR>
 8005ef8:	e7f1      	b.n	8005ede <WM__Paint1+0x5e>
 8005efa:	7833      	ldrb	r3, [r6, #0]
 8005efc:	4620      	mov	r0, r4
 8005efe:	3b01      	subs	r3, #1
 8005f00:	212f      	movs	r1, #47	; 0x2f
 8005f02:	7033      	strb	r3, [r6, #0]
 8005f04:	f7fe fe6f 	bl	8004be6 <WM_SendMessageNoPara>
 8005f08:	b009      	add	sp, #36	; 0x24
 8005f0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005f0c:	20002cac 	.word	0x20002cac

08005f10 <WM__Paint>:
 8005f10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005f12:	b089      	sub	sp, #36	; 0x24
 8005f14:	ac06      	add	r4, sp, #24
 8005f16:	9003      	str	r0, [sp, #12]
 8005f18:	f005 faa6 	bl	800b468 <GUI_ALLOC_LockH>
 8005f1c:	f100 0208 	add.w	r2, r0, #8
 8005f20:	4603      	mov	r3, r0
 8005f22:	9005      	str	r0, [sp, #20]
 8005f24:	e892 0003 	ldmia.w	r2, {r0, r1}
 8005f28:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 8005f2a:	699e      	ldr	r6, [r3, #24]
 8005f2c:	691f      	ldr	r7, [r3, #16]
 8005f2e:	e884 0003 	stmia.w	r4, {r0, r1}
 8005f32:	a805      	add	r0, sp, #20
 8005f34:	f005 faa6 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005f38:	f244 0320 	movw	r3, #16416	; 0x4020
 8005f3c:	402b      	ands	r3, r5
 8005f3e:	2b00      	cmp	r3, #0
 8005f40:	d034      	beq.n	8005fac <WM__Paint+0x9c>
 8005f42:	b1bf      	cbz	r7, 8005f74 <WM__Paint+0x64>
 8005f44:	4620      	mov	r0, r4
 8005f46:	9903      	ldr	r1, [sp, #12]
 8005f48:	f7ff fa12 	bl	8005370 <WM__ClipAtParentBorders>
 8005f4c:	b190      	cbz	r0, 8005f74 <WM__Paint+0x64>
 8005f4e:	9803      	ldr	r0, [sp, #12]
 8005f50:	f7ff fcb0 	bl	80058b4 <WM_SelectWindow>
 8005f54:	0769      	lsls	r1, r5, #29
 8005f56:	d50f      	bpl.n	8005f78 <WM__Paint+0x68>
 8005f58:	b126      	cbz	r6, 8005f64 <WM__Paint+0x54>
 8005f5a:	f005 0501 	and.w	r5, r5, #1
 8005f5e:	f085 0501 	eor.w	r5, r5, #1
 8005f62:	e000      	b.n	8005f66 <WM__Paint+0x56>
 8005f64:	2501      	movs	r5, #1
 8005f66:	9500      	str	r5, [sp, #0]
 8005f68:	4620      	mov	r0, r4
 8005f6a:	4912      	ldr	r1, [pc, #72]	; (8005fb4 <WM__Paint+0xa4>)
 8005f6c:	aa03      	add	r2, sp, #12
 8005f6e:	2300      	movs	r3, #0
 8005f70:	f000 faaa 	bl	80064c8 <GUI_MEMDEV_Draw>
 8005f74:	2400      	movs	r4, #0
 8005f76:	e003      	b.n	8005f80 <WM__Paint+0x70>
 8005f78:	9803      	ldr	r0, [sp, #12]
 8005f7a:	f7ff f989 	bl	8005290 <WM__PaintWinAndOverlays>
 8005f7e:	2401      	movs	r4, #1
 8005f80:	9803      	ldr	r0, [sp, #12]
 8005f82:	f005 fa71 	bl	800b468 <GUI_ALLOC_LockH>
 8005f86:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8005f88:	9005      	str	r0, [sp, #20]
 8005f8a:	f422 4380 	bic.w	r3, r2, #16384	; 0x4000
 8005f8e:	f023 0320 	bic.w	r3, r3, #32
 8005f92:	0492      	lsls	r2, r2, #18
 8005f94:	bf48      	it	mi
 8005f96:	f043 0304 	orrmi.w	r3, r3, #4
 8005f9a:	6283      	str	r3, [r0, #40]	; 0x28
 8005f9c:	a805      	add	r0, sp, #20
 8005f9e:	f005 fa71 	bl	800b484 <GUI_ALLOC_UnlockH>
 8005fa2:	4b05      	ldr	r3, [pc, #20]	; (8005fb8 <WM__Paint+0xa8>)
 8005fa4:	881a      	ldrh	r2, [r3, #0]
 8005fa6:	3a01      	subs	r2, #1
 8005fa8:	801a      	strh	r2, [r3, #0]
 8005faa:	e000      	b.n	8005fae <WM__Paint+0x9e>
 8005fac:	461c      	mov	r4, r3
 8005fae:	4620      	mov	r0, r4
 8005fb0:	b009      	add	sp, #36	; 0x24
 8005fb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005fb4:	08005309 	.word	0x08005309
 8005fb8:	20002c98 	.word	0x20002c98

08005fbc <_Exec1Draw>:
 8005fbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005fc0:	4b1a      	ldr	r3, [pc, #104]	; (800602c <_Exec1Draw+0x70>)
 8005fc2:	681a      	ldr	r2, [r3, #0]
 8005fc4:	f892 0054 	ldrb.w	r0, [r2, #84]	; 0x54
 8005fc8:	b09c      	sub	sp, #112	; 0x70
 8005fca:	461d      	mov	r5, r3
 8005fcc:	2800      	cmp	r0, #0
 8005fce:	d02a      	beq.n	8006026 <_Exec1Draw+0x6a>
 8005fd0:	4b17      	ldr	r3, [pc, #92]	; (8006030 <_Exec1Draw+0x74>)
 8005fd2:	8818      	ldrh	r0, [r3, #0]
 8005fd4:	b338      	cbz	r0, 8006026 <_Exec1Draw+0x6a>
 8005fd6:	4a17      	ldr	r2, [pc, #92]	; (8006034 <_Exec1Draw+0x78>)
 8005fd8:	6814      	ldr	r4, [r2, #0]
 8005fda:	4616      	mov	r6, r2
 8005fdc:	b90c      	cbnz	r4, 8005fe2 <_Exec1Draw+0x26>
 8005fde:	4b16      	ldr	r3, [pc, #88]	; (8006038 <_Exec1Draw+0x7c>)
 8005fe0:	681c      	ldr	r4, [r3, #0]
 8005fe2:	4668      	mov	r0, sp
 8005fe4:	f004 fdc0 	bl	800ab68 <GUI_SaveContext_W>
 8005fe8:	682b      	ldr	r3, [r5, #0]
 8005fea:	6b1f      	ldr	r7, [r3, #48]	; 0x30
 8005fec:	6b5d      	ldr	r5, [r3, #52]	; 0x34
 8005fee:	b924      	cbnz	r4, 8005ffa <_Exec1Draw+0x3e>
 8005ff0:	2400      	movs	r4, #0
 8005ff2:	e00d      	b.n	8006010 <_Exec1Draw+0x54>
 8005ff4:	f1b8 0f00 	cmp.w	r8, #0
 8005ff8:	d10a      	bne.n	8006010 <_Exec1Draw+0x54>
 8005ffa:	4620      	mov	r0, r4
 8005ffc:	f7ff ff88 	bl	8005f10 <WM__Paint>
 8006000:	4680      	mov	r8, r0
 8006002:	4620      	mov	r0, r4
 8006004:	f005 fa26 	bl	800b454 <GUI_ALLOC_h2p>
 8006008:	6944      	ldr	r4, [r0, #20]
 800600a:	2c00      	cmp	r4, #0
 800600c:	d1f2      	bne.n	8005ff4 <_Exec1Draw+0x38>
 800600e:	e7ef      	b.n	8005ff0 <_Exec1Draw+0x34>
 8006010:	4638      	mov	r0, r7
 8006012:	6034      	str	r4, [r6, #0]
 8006014:	f004 fdc7 	bl	800aba6 <GUI_SetColor>
 8006018:	4628      	mov	r0, r5
 800601a:	f004 fdc2 	bl	800aba2 <GUI_SetBkColor>
 800601e:	4668      	mov	r0, sp
 8006020:	f004 fdac 	bl	800ab7c <GUI_RestoreContext>
 8006024:	2001      	movs	r0, #1
 8006026:	b01c      	add	sp, #112	; 0x70
 8006028:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800602c:	200000b8 	.word	0x200000b8
 8006030:	20002c98 	.word	0x20002c98
 8006034:	20002a44 	.word	0x20002a44
 8006038:	20002c9c 	.word	0x20002c9c

0800603c <WM__DeleteSecure>:
 800603c:	b508      	push	{r3, lr}
 800603e:	f005 fa09 	bl	800b454 <GUI_ALLOC_h2p>
 8006042:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8006044:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006048:	6283      	str	r3, [r0, #40]	; 0x28
 800604a:	4b02      	ldr	r3, [pc, #8]	; (8006054 <WM__DeleteSecure+0x18>)
 800604c:	2201      	movs	r2, #1
 800604e:	601a      	str	r2, [r3, #0]
 8006050:	bd08      	pop	{r3, pc}
 8006052:	bf00      	nop
 8006054:	20002a28 	.word	0x20002a28

08006058 <WM_Exec>:
 8006058:	4b18      	ldr	r3, [pc, #96]	; (80060bc <WM_Exec+0x64>)
 800605a:	681b      	ldr	r3, [r3, #0]
 800605c:	b570      	push	{r4, r5, r6, lr}
 800605e:	b103      	cbz	r3, 8006062 <WM_Exec+0xa>
 8006060:	4798      	blx	r3
 8006062:	2500      	movs	r5, #0
 8006064:	f7ff fd7a 	bl	8005b5c <_Exec1Input>
 8006068:	b108      	cbz	r0, 800606e <WM_Exec+0x16>
 800606a:	2501      	movs	r5, #1
 800606c:	e7fa      	b.n	8006064 <WM_Exec+0xc>
 800606e:	4b14      	ldr	r3, [pc, #80]	; (80060c0 <WM_Exec+0x68>)
 8006070:	681b      	ldr	r3, [r3, #0]
 8006072:	f893 4054 	ldrb.w	r4, [r3, #84]	; 0x54
 8006076:	b144      	cbz	r4, 800608a <WM_Exec+0x32>
 8006078:	4b12      	ldr	r3, [pc, #72]	; (80060c4 <WM_Exec+0x6c>)
 800607a:	881c      	ldrh	r4, [r3, #0]
 800607c:	b12c      	cbz	r4, 800608a <WM_Exec+0x32>
 800607e:	4b12      	ldr	r3, [pc, #72]	; (80060c8 <WM_Exec+0x70>)
 8006080:	681b      	ldr	r3, [r3, #0]
 8006082:	b1a3      	cbz	r3, 80060ae <WM_Exec+0x56>
 8006084:	681b      	ldr	r3, [r3, #0]
 8006086:	4798      	blx	r3
 8006088:	2401      	movs	r4, #1
 800608a:	f7ff ff97 	bl	8005fbc <_Exec1Draw>
 800608e:	4606      	mov	r6, r0
 8006090:	b108      	cbz	r0, 8006096 <WM_Exec+0x3e>
 8006092:	2501      	movs	r5, #1
 8006094:	e7f9      	b.n	800608a <WM_Exec+0x32>
 8006096:	b174      	cbz	r4, 80060b6 <WM_Exec+0x5e>
 8006098:	4b0b      	ldr	r3, [pc, #44]	; (80060c8 <WM_Exec+0x70>)
 800609a:	681b      	ldr	r3, [r3, #0]
 800609c:	b123      	cbz	r3, 80060a8 <WM_Exec+0x50>
 800609e:	685b      	ldr	r3, [r3, #4]
 80060a0:	4798      	blx	r3
 80060a2:	4b0a      	ldr	r3, [pc, #40]	; (80060cc <WM_Exec+0x74>)
 80060a4:	601e      	str	r6, [r3, #0]
 80060a6:	e006      	b.n	80060b6 <WM_Exec+0x5e>
 80060a8:	f003 f810 	bl	80090cc <GUI__ManageCache>
 80060ac:	e003      	b.n	80060b6 <WM_Exec+0x5e>
 80060ae:	2001      	movs	r0, #1
 80060b0:	f003 f80c 	bl	80090cc <GUI__ManageCache>
 80060b4:	e7e8      	b.n	8006088 <WM_Exec+0x30>
 80060b6:	4628      	mov	r0, r5
 80060b8:	bd70      	pop	{r4, r5, r6, pc}
 80060ba:	bf00      	nop
 80060bc:	20002c8c 	.word	0x20002c8c
 80060c0:	200000b8 	.word	0x200000b8
 80060c4:	20002c98 	.word	0x20002c98
 80060c8:	20002cc0 	.word	0x20002cc0
 80060cc:	20002ca8 	.word	0x20002ca8

080060d0 <WM_Activate>:
 80060d0:	4b02      	ldr	r3, [pc, #8]	; (80060dc <WM_Activate+0xc>)
 80060d2:	681b      	ldr	r3, [r3, #0]
 80060d4:	2201      	movs	r2, #1
 80060d6:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 80060da:	4770      	bx	lr
 80060dc:	200000b8 	.word	0x200000b8

080060e0 <WM_Deactivate>:
 80060e0:	4b03      	ldr	r3, [pc, #12]	; (80060f0 <WM_Deactivate+0x10>)
 80060e2:	681b      	ldr	r3, [r3, #0]
 80060e4:	2200      	movs	r2, #0
 80060e6:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 80060ea:	f002 bd7d 	b.w	8008be8 <LCD_SetClipRectMax>
 80060ee:	bf00      	nop
 80060f0:	200000b8 	.word	0x200000b8

080060f4 <WM_DefaultProc>:
 80060f4:	b510      	push	{r4, lr}
 80060f6:	4604      	mov	r4, r0
 80060f8:	6840      	ldr	r0, [r0, #4]
 80060fa:	6823      	ldr	r3, [r4, #0]
 80060fc:	68e1      	ldr	r1, [r4, #12]
 80060fe:	2b17      	cmp	r3, #23
 8006100:	d00f      	beq.n	8006122 <WM_DefaultProc+0x2e>
 8006102:	dc06      	bgt.n	8006112 <WM_DefaultProc+0x1e>
 8006104:	2b0e      	cmp	r3, #14
 8006106:	d00e      	beq.n	8006126 <WM_DefaultProc+0x32>
 8006108:	2b14      	cmp	r3, #20
 800610a:	d114      	bne.n	8006136 <WM_DefaultProc+0x42>
 800610c:	f7fe f904 	bl	8004318 <WM__GetClientRectEx>
 8006110:	e011      	b.n	8006136 <WM_DefaultProc+0x42>
 8006112:	2b22      	cmp	r3, #34	; 0x22
 8006114:	d00c      	beq.n	8006130 <WM_DefaultProc+0x3c>
 8006116:	2b28      	cmp	r3, #40	; 0x28
 8006118:	d10d      	bne.n	8006136 <WM_DefaultProc+0x42>
 800611a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800611e:	f7ff bbbb 	b.w	8005898 <WM_InvalidateWindow>
 8006122:	60e0      	str	r0, [r4, #12]
 8006124:	bd10      	pop	{r4, pc}
 8006126:	4621      	mov	r1, r4
 8006128:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800612c:	f7fe bd5d 	b.w	8004bea <WM_SendToParent>
 8006130:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8006134:	e000      	b.n	8006138 <WM_DefaultProc+0x44>
 8006136:	2300      	movs	r3, #0
 8006138:	60e3      	str	r3, [r4, #12]
 800613a:	bd10      	pop	{r4, pc}

0800613c <_cbBackWin>:
 800613c:	6803      	ldr	r3, [r0, #0]
 800613e:	2b0e      	cmp	r3, #14
 8006140:	b510      	push	{r4, lr}
 8006142:	4604      	mov	r4, r0
 8006144:	d002      	beq.n	800614c <_cbBackWin+0x10>
 8006146:	2b0f      	cmp	r3, #15
 8006148:	d009      	beq.n	800615e <_cbBackWin+0x22>
 800614a:	e020      	b.n	800618e <_cbBackWin+0x52>
 800614c:	68c3      	ldr	r3, [r0, #12]
 800614e:	685a      	ldr	r2, [r3, #4]
 8006150:	2a01      	cmp	r2, #1
 8006152:	d121      	bne.n	8006198 <_cbBackWin+0x5c>
 8006154:	6818      	ldr	r0, [r3, #0]
 8006156:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800615a:	f003 bb89 	b.w	8009870 <GUI_StoreKey>
 800615e:	4a0f      	ldr	r2, [pc, #60]	; (800619c <_cbBackWin+0x60>)
 8006160:	6843      	ldr	r3, [r0, #4]
 8006162:	6811      	ldr	r1, [r2, #0]
 8006164:	428b      	cmp	r3, r1
 8006166:	d006      	beq.n	8006176 <_cbBackWin+0x3a>
 8006168:	6852      	ldr	r2, [r2, #4]
 800616a:	4293      	cmp	r3, r2
 800616c:	bf14      	ite	ne
 800616e:	f04f 33ff 	movne.w	r3, #4294967295
 8006172:	2301      	moveq	r3, #1
 8006174:	e000      	b.n	8006178 <_cbBackWin+0x3c>
 8006176:	2300      	movs	r3, #0
 8006178:	4a09      	ldr	r2, [pc, #36]	; (80061a0 <_cbBackWin+0x64>)
 800617a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800617e:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8006182:	4298      	cmp	r0, r3
 8006184:	d003      	beq.n	800618e <_cbBackWin+0x52>
 8006186:	f004 fd0c 	bl	800aba2 <GUI_SetBkColor>
 800618a:	f004 faf9 	bl	800a780 <GUI_Clear>
 800618e:	4620      	mov	r0, r4
 8006190:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006194:	f7ff bfae 	b.w	80060f4 <WM_DefaultProc>
 8006198:	bd10      	pop	{r4, pc}
 800619a:	bf00      	nop
 800619c:	20002c80 	.word	0x20002c80
 80061a0:	20002cb4 	.word	0x20002cb4

080061a4 <WM_Init>:
 80061a4:	b530      	push	{r4, r5, lr}
 80061a6:	4b2b      	ldr	r3, [pc, #172]	; (8006254 <WM_Init+0xb0>)
 80061a8:	7818      	ldrb	r0, [r3, #0]
 80061aa:	b085      	sub	sp, #20
 80061ac:	461d      	mov	r5, r3
 80061ae:	2800      	cmp	r0, #0
 80061b0:	d14d      	bne.n	800624e <WM_Init+0xaa>
 80061b2:	4b29      	ldr	r3, [pc, #164]	; (8006258 <WM_Init+0xb4>)
 80061b4:	6018      	str	r0, [r3, #0]
 80061b6:	4b29      	ldr	r3, [pc, #164]	; (800625c <WM_Init+0xb8>)
 80061b8:	6018      	str	r0, [r3, #0]
 80061ba:	4b29      	ldr	r3, [pc, #164]	; (8006260 <WM_Init+0xbc>)
 80061bc:	681b      	ldr	r3, [r3, #0]
 80061be:	6458      	str	r0, [r3, #68]	; 0x44
 80061c0:	4b28      	ldr	r3, [pc, #160]	; (8006264 <WM_Init+0xc0>)
 80061c2:	8018      	strh	r0, [r3, #0]
 80061c4:	4b28      	ldr	r3, [pc, #160]	; (8006268 <WM_Init+0xc4>)
 80061c6:	4604      	mov	r4, r0
 80061c8:	8018      	strh	r0, [r3, #0]
 80061ca:	4620      	mov	r0, r4
 80061cc:	f004 f98e 	bl	800a4ec <GUI_DEVICE__GetpDriver>
 80061d0:	b1c0      	cbz	r0, 8006204 <WM_Init+0x60>
 80061d2:	f04f 32ff 	mov.w	r2, #4294967295
 80061d6:	2302      	movs	r3, #2
 80061d8:	e88d 000c 	stmia.w	sp, {r2, r3}
 80061dc:	2000      	movs	r0, #0
 80061de:	f643 72ff 	movw	r2, #16383	; 0x3fff
 80061e2:	4b22      	ldr	r3, [pc, #136]	; (800626c <WM_Init+0xc8>)
 80061e4:	9302      	str	r3, [sp, #8]
 80061e6:	9003      	str	r0, [sp, #12]
 80061e8:	4613      	mov	r3, r2
 80061ea:	4601      	mov	r1, r0
 80061ec:	f7ff fb82 	bl	80058f4 <WM_CreateWindowAsChild>
 80061f0:	4b1f      	ldr	r3, [pc, #124]	; (8006270 <WM_Init+0xcc>)
 80061f2:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 80061f6:	4b1f      	ldr	r3, [pc, #124]	; (8006274 <WM_Init+0xd0>)
 80061f8:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 80061fc:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8006200:	f7ff fb4a 	bl	8005898 <WM_InvalidateWindow>
 8006204:	3401      	adds	r4, #1
 8006206:	2c02      	cmp	r4, #2
 8006208:	d1df      	bne.n	80061ca <WM_Init+0x26>
 800620a:	481b      	ldr	r0, [pc, #108]	; (8006278 <WM_Init+0xd4>)
 800620c:	f7fe f87c 	bl	8004308 <WM__AddCriticalHandle>
 8006210:	481a      	ldr	r0, [pc, #104]	; (800627c <WM_Init+0xd8>)
 8006212:	f7fe f879 	bl	8004308 <WM__AddCriticalHandle>
 8006216:	481a      	ldr	r0, [pc, #104]	; (8006280 <WM_Init+0xdc>)
 8006218:	f7fe f876 	bl	8004308 <WM__AddCriticalHandle>
 800621c:	4819      	ldr	r0, [pc, #100]	; (8006284 <WM_Init+0xe0>)
 800621e:	f7fe f873 	bl	8004308 <WM__AddCriticalHandle>
 8006222:	4819      	ldr	r0, [pc, #100]	; (8006288 <WM_Init+0xe4>)
 8006224:	f7fe f870 	bl	8004308 <WM__AddCriticalHandle>
 8006228:	4818      	ldr	r0, [pc, #96]	; (800628c <WM_Init+0xe8>)
 800622a:	f7fe f86d 	bl	8004308 <WM__AddCriticalHandle>
 800622e:	4b10      	ldr	r3, [pc, #64]	; (8006270 <WM_Init+0xcc>)
 8006230:	6818      	ldr	r0, [r3, #0]
 8006232:	f7ff fb3f 	bl	80058b4 <WM_SelectWindow>
 8006236:	f7ff ff4b 	bl	80060d0 <WM_Activate>
 800623a:	2301      	movs	r3, #1
 800623c:	702b      	strb	r3, [r5, #0]
 800623e:	4814      	ldr	r0, [pc, #80]	; (8006290 <WM_Init+0xec>)
 8006240:	4b14      	ldr	r3, [pc, #80]	; (8006294 <WM_Init+0xf0>)
 8006242:	6003      	str	r3, [r0, #0]
 8006244:	b005      	add	sp, #20
 8006246:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800624a:	f004 baa9 	b.w	800a7a0 <GUI__RegisterExit>
 800624e:	b005      	add	sp, #20
 8006250:	bd30      	pop	{r4, r5, pc}
 8006252:	bf00      	nop
 8006254:	20002a48 	.word	0x20002a48
 8006258:	20002c9c 	.word	0x20002c9c
 800625c:	20002a44 	.word	0x20002a44
 8006260:	200000b8 	.word	0x200000b8
 8006264:	20002c98 	.word	0x20002c98
 8006268:	20002c78 	.word	0x20002c78
 800626c:	0800613d 	.word	0x0800613d
 8006270:	20002c80 	.word	0x20002c80
 8006274:	20002cb4 	.word	0x20002cb4
 8006278:	20002e18 	.word	0x20002e18
 800627c:	20002e08 	.word	0x20002e08
 8006280:	20002df8 	.word	0x20002df8
 8006284:	20002e20 	.word	0x20002e20
 8006288:	20002e10 	.word	0x20002e10
 800628c:	20002e00 	.word	0x20002e00
 8006290:	20002a20 	.word	0x20002a20
 8006294:	08004ec9 	.word	0x08004ec9

08006298 <_CreateStaticDevice>:
 8006298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800629c:	b087      	sub	sp, #28
 800629e:	4604      	mov	r4, r0
 80062a0:	f005 f8e2 	bl	800b468 <GUI_ALLOC_LockH>
 80062a4:	af06      	add	r7, sp, #24
 80062a6:	f8b0 8000 	ldrh.w	r8, [r0]
 80062aa:	8886      	ldrh	r6, [r0, #4]
 80062ac:	f8b0 9002 	ldrh.w	r9, [r0, #2]
 80062b0:	f8b0 b006 	ldrh.w	fp, [r0, #6]
 80062b4:	f847 0d04 	str.w	r0, [r7, #-4]!
 80062b8:	fa0f f888 	sxth.w	r8, r8
 80062bc:	b236      	sxth	r6, r6
 80062be:	ebc8 0606 	rsb	r6, r8, r6
 80062c2:	f8d0 a024 	ldr.w	sl, [r0, #36]	; 0x24
 80062c6:	3601      	adds	r6, #1
 80062c8:	4638      	mov	r0, r7
 80062ca:	fa0f f989 	sxth.w	r9, r9
 80062ce:	fa0f f58b 	sxth.w	r5, fp
 80062d2:	f005 f8d7 	bl	800b484 <GUI_ALLOC_UnlockH>
 80062d6:	ebc9 0505 	rsb	r5, r9, r5
 80062da:	2e00      	cmp	r6, #0
 80062dc:	f105 0501 	add.w	r5, r5, #1
 80062e0:	dd4d      	ble.n	800637e <_CreateStaticDevice+0xe6>
 80062e2:	2d00      	cmp	r5, #0
 80062e4:	dd4b      	ble.n	800637e <_CreateStaticDevice+0xe6>
 80062e6:	f1ba 0f00 	cmp.w	sl, #0
 80062ea:	d04a      	beq.n	8006382 <_CreateStaticDevice+0xea>
 80062ec:	4650      	mov	r0, sl
 80062ee:	f005 f8bb 	bl	800b468 <GUI_ALLOC_LockH>
 80062f2:	ab06      	add	r3, sp, #24
 80062f4:	8886      	ldrh	r6, [r0, #4]
 80062f6:	f843 0d08 	str.w	r0, [r3, #-8]!
 80062fa:	88c5      	ldrh	r5, [r0, #6]
 80062fc:	b236      	sxth	r6, r6
 80062fe:	4618      	mov	r0, r3
 8006300:	f005 f8c0 	bl	800b484 <GUI_ALLOC_UnlockH>
 8006304:	4546      	cmp	r6, r8
 8006306:	d102      	bne.n	800630e <_CreateStaticDevice+0x76>
 8006308:	b22d      	sxth	r5, r5
 800630a:	454d      	cmp	r5, r9
 800630c:	d032      	beq.n	8006374 <_CreateStaticDevice+0xdc>
 800630e:	4650      	mov	r0, sl
 8006310:	4641      	mov	r1, r8
 8006312:	464a      	mov	r2, r9
 8006314:	f000 f888 	bl	8006428 <GUI_MEMDEV_SetOrg>
 8006318:	e02c      	b.n	8006374 <_CreateStaticDevice+0xdc>
 800631a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800631c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006320:	6283      	str	r3, [r0, #40]	; 0x28
 8006322:	4638      	mov	r0, r7
 8006324:	f005 f8ae 	bl	800b484 <GUI_ALLOC_UnlockH>
 8006328:	4640      	mov	r0, r8
 800632a:	f000 ff99 	bl	8007260 <GUI_MEMDEV_Select>
 800632e:	4607      	mov	r7, r0
 8006330:	4650      	mov	r0, sl
 8006332:	f003 fa75 	bl	8009820 <GUI__AlphaPreserveTrans>
 8006336:	4640      	mov	r0, r8
 8006338:	f000 f8b6 	bl	80064a8 <GUI_MEMDEV_GetDataPtr>
 800633c:	4a2d      	ldr	r2, [pc, #180]	; (80063f4 <_CreateStaticDevice+0x15c>)
 800633e:	4b2e      	ldr	r3, [pc, #184]	; (80063f8 <_CreateStaticDevice+0x160>)
 8006340:	7811      	ldrb	r1, [r2, #0]
 8006342:	681b      	ldr	r3, [r3, #0]
 8006344:	4375      	muls	r5, r6
 8006346:	00aa      	lsls	r2, r5, #2
 8006348:	4e2c      	ldr	r6, [pc, #176]	; (80063fc <_CreateStaticDevice+0x164>)
 800634a:	4d2d      	ldr	r5, [pc, #180]	; (8006400 <_CreateStaticDevice+0x168>)
 800634c:	4798      	blx	r3
 800634e:	4620      	mov	r0, r4
 8006350:	f8d5 8000 	ldr.w	r8, [r5]
 8006354:	6034      	str	r4, [r6, #0]
 8006356:	f7fe fa90 	bl	800487a <WM_GetWindowOrgX>
 800635a:	6028      	str	r0, [r5, #0]
 800635c:	4620      	mov	r0, r4
 800635e:	f7ff fd8f 	bl	8005e80 <WM__Paint1>
 8006362:	2000      	movs	r0, #0
 8006364:	f8c5 8000 	str.w	r8, [r5]
 8006368:	6030      	str	r0, [r6, #0]
 800636a:	f003 fa59 	bl	8009820 <GUI__AlphaPreserveTrans>
 800636e:	4638      	mov	r0, r7
 8006370:	f000 ff76 	bl	8007260 <GUI_MEMDEV_Select>
 8006374:	4620      	mov	r0, r4
 8006376:	f005 f86d 	bl	800b454 <GUI_ALLOC_h2p>
 800637a:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800637c:	e037      	b.n	80063ee <_CreateStaticDevice+0x156>
 800637e:	2000      	movs	r0, #0
 8006380:	e035      	b.n	80063ee <_CreateStaticDevice+0x156>
 8006382:	f7fe f9df 	bl	8004744 <WM_GetDesktopWindow>
 8006386:	4284      	cmp	r4, r0
 8006388:	d112      	bne.n	80063b0 <_CreateStaticDevice+0x118>
 800638a:	f002 f8c7 	bl	800851c <LCD_GetXSize>
 800638e:	4682      	mov	sl, r0
 8006390:	f002 f8cc 	bl	800852c <LCD_GetYSize>
 8006394:	4556      	cmp	r6, sl
 8006396:	dc02      	bgt.n	800639e <_CreateStaticDevice+0x106>
 8006398:	4285      	cmp	r5, r0
 800639a:	dd09      	ble.n	80063b0 <_CreateStaticDevice+0x118>
 800639c:	e000      	b.n	80063a0 <_CreateStaticDevice+0x108>
 800639e:	4656      	mov	r6, sl
 80063a0:	4285      	cmp	r5, r0
 80063a2:	bfa8      	it	ge
 80063a4:	4605      	movge	r5, r0
 80063a6:	4631      	mov	r1, r6
 80063a8:	4620      	mov	r0, r4
 80063aa:	462a      	mov	r2, r5
 80063ac:	f7fe fc90 	bl	8004cd0 <WM_SetSize>
 80063b0:	4b14      	ldr	r3, [pc, #80]	; (8006404 <_CreateStaticDevice+0x16c>)
 80063b2:	9301      	str	r3, [sp, #4]
 80063b4:	f04f 0a01 	mov.w	sl, #1
 80063b8:	4b13      	ldr	r3, [pc, #76]	; (8006408 <_CreateStaticDevice+0x170>)
 80063ba:	9302      	str	r3, [sp, #8]
 80063bc:	4640      	mov	r0, r8
 80063be:	4649      	mov	r1, r9
 80063c0:	4632      	mov	r2, r6
 80063c2:	462b      	mov	r3, r5
 80063c4:	f8cd a000 	str.w	sl, [sp]
 80063c8:	f000 fe54 	bl	8007074 <GUI_MEMDEV__CreateFixed>
 80063cc:	4680      	mov	r8, r0
 80063ce:	4620      	mov	r0, r4
 80063d0:	f005 f84a 	bl	800b468 <GUI_ALLOC_LockH>
 80063d4:	9005      	str	r0, [sp, #20]
 80063d6:	f8c0 8024 	str.w	r8, [r0, #36]	; 0x24
 80063da:	f1b8 0f00 	cmp.w	r8, #0
 80063de:	d19c      	bne.n	800631a <_CreateStaticDevice+0x82>
 80063e0:	4638      	mov	r0, r7
 80063e2:	f005 f84f 	bl	800b484 <GUI_ALLOC_UnlockH>
 80063e6:	4620      	mov	r0, r4
 80063e8:	f7ff fd4a 	bl	8005e80 <WM__Paint1>
 80063ec:	4640      	mov	r0, r8
 80063ee:	b007      	add	sp, #28
 80063f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80063f4:	20000094 	.word	0x20000094
 80063f8:	200000a4 	.word	0x200000a4
 80063fc:	20002ccc 	.word	0x20002ccc
 8006400:	20002ce4 	.word	0x20002ce4
 8006404:	0800ff04 	.word	0x0800ff04
 8006408:	0801205c 	.word	0x0801205c

0800640c <GUI_MEMDEV_Paint1Static>:
 800640c:	b538      	push	{r3, r4, r5, lr}
 800640e:	4605      	mov	r5, r0
 8006410:	2405      	movs	r4, #5
 8006412:	4628      	mov	r0, r5
 8006414:	f7ff ff40 	bl	8006298 <_CreateStaticDevice>
 8006418:	b910      	cbnz	r0, 8006420 <GUI_MEMDEV_Paint1Static+0x14>
 800641a:	3c01      	subs	r4, #1
 800641c:	d1f9      	bne.n	8006412 <GUI_MEMDEV_Paint1Static+0x6>
 800641e:	bd38      	pop	{r3, r4, r5, pc}
 8006420:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006424:	f007 b9c8 	b.w	800d7b8 <GUI_MEMDEV_Write>

08006428 <GUI_MEMDEV_SetOrg>:
 8006428:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800642a:	460d      	mov	r5, r1
 800642c:	4614      	mov	r4, r2
 800642e:	b918      	cbnz	r0, 8006438 <GUI_MEMDEV_SetOrg+0x10>
 8006430:	4b11      	ldr	r3, [pc, #68]	; (8006478 <GUI_MEMDEV_SetOrg+0x50>)
 8006432:	681b      	ldr	r3, [r3, #0]
 8006434:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006436:	b1e8      	cbz	r0, 8006474 <GUI_MEMDEV_SetOrg+0x4c>
 8006438:	f005 f816 	bl	800b468 <GUI_ALLOC_LockH>
 800643c:	b2a4      	uxth	r4, r4
 800643e:	b2ad      	uxth	r5, r5
 8006440:	80c4      	strh	r4, [r0, #6]
 8006442:	8085      	strh	r5, [r0, #4]
 8006444:	9000      	str	r0, [sp, #0]
 8006446:	f002 fbcf 	bl	8008be8 <LCD_SetClipRectMax>
 800644a:	9b00      	ldr	r3, [sp, #0]
 800644c:	6958      	ldr	r0, [r3, #20]
 800644e:	b170      	cbz	r0, 800646e <GUI_MEMDEV_SetOrg+0x46>
 8006450:	f005 f80a 	bl	800b468 <GUI_ALLOC_LockH>
 8006454:	9b00      	ldr	r3, [sp, #0]
 8006456:	9001      	str	r0, [sp, #4]
 8006458:	891a      	ldrh	r2, [r3, #8]
 800645a:	895b      	ldrh	r3, [r3, #10]
 800645c:	8082      	strh	r2, [r0, #4]
 800645e:	80c3      	strh	r3, [r0, #6]
 8006460:	b112      	cbz	r2, 8006468 <GUI_MEMDEV_SetOrg+0x40>
 8006462:	b10b      	cbz	r3, 8006468 <GUI_MEMDEV_SetOrg+0x40>
 8006464:	8005      	strh	r5, [r0, #0]
 8006466:	8044      	strh	r4, [r0, #2]
 8006468:	a801      	add	r0, sp, #4
 800646a:	f005 f80b 	bl	800b484 <GUI_ALLOC_UnlockH>
 800646e:	4668      	mov	r0, sp
 8006470:	f005 f808 	bl	800b484 <GUI_ALLOC_UnlockH>
 8006474:	b003      	add	sp, #12
 8006476:	bd30      	pop	{r4, r5, pc}
 8006478:	200000b8 	.word	0x200000b8

0800647c <GUI_MEMDEV_GetYSize>:
 800647c:	b513      	push	{r0, r1, r4, lr}
 800647e:	b920      	cbnz	r0, 800648a <GUI_MEMDEV_GetYSize+0xe>
 8006480:	4b08      	ldr	r3, [pc, #32]	; (80064a4 <GUI_MEMDEV_GetYSize+0x28>)
 8006482:	681b      	ldr	r3, [r3, #0]
 8006484:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006486:	4604      	mov	r4, r0
 8006488:	b148      	cbz	r0, 800649e <GUI_MEMDEV_GetYSize+0x22>
 800648a:	f004 ffed 	bl	800b468 <GUI_ALLOC_LockH>
 800648e:	ab02      	add	r3, sp, #8
 8006490:	f9b0 400a 	ldrsh.w	r4, [r0, #10]
 8006494:	f843 0d04 	str.w	r0, [r3, #-4]!
 8006498:	4618      	mov	r0, r3
 800649a:	f004 fff3 	bl	800b484 <GUI_ALLOC_UnlockH>
 800649e:	4620      	mov	r0, r4
 80064a0:	b002      	add	sp, #8
 80064a2:	bd10      	pop	{r4, pc}
 80064a4:	200000b8 	.word	0x200000b8

080064a8 <GUI_MEMDEV_GetDataPtr>:
 80064a8:	b513      	push	{r0, r1, r4, lr}
 80064aa:	b150      	cbz	r0, 80064c2 <GUI_MEMDEV_GetDataPtr+0x1a>
 80064ac:	f004 ffdc 	bl	800b468 <GUI_ALLOC_LockH>
 80064b0:	4604      	mov	r4, r0
 80064b2:	a802      	add	r0, sp, #8
 80064b4:	f840 4d04 	str.w	r4, [r0, #-4]!
 80064b8:	f004 ffe4 	bl	800b484 <GUI_ALLOC_UnlockH>
 80064bc:	f104 0018 	add.w	r0, r4, #24
 80064c0:	e7ff      	b.n	80064c2 <GUI_MEMDEV_GetDataPtr+0x1a>
 80064c2:	b002      	add	sp, #8
 80064c4:	bd10      	pop	{r4, pc}
	...

080064c8 <GUI_MEMDEV_Draw>:
 80064c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80064cc:	461e      	mov	r6, r3
 80064ce:	b089      	sub	sp, #36	; 0x24
 80064d0:	4b4e      	ldr	r3, [pc, #312]	; (800660c <GUI_MEMDEV_Draw+0x144>)
 80064d2:	9204      	str	r2, [sp, #16]
 80064d4:	681a      	ldr	r2, [r3, #0]
 80064d6:	9103      	str	r1, [sp, #12]
 80064d8:	7c54      	ldrb	r4, [r2, #17]
 80064da:	4a4d      	ldr	r2, [pc, #308]	; (8006610 <GUI_MEMDEV_Draw+0x148>)
 80064dc:	5712      	ldrsb	r2, [r2, r4]
 80064de:	2a01      	cmp	r2, #1
 80064e0:	4605      	mov	r5, r0
 80064e2:	469b      	mov	fp, r3
 80064e4:	4620      	mov	r0, r4
 80064e6:	dd06      	ble.n	80064f6 <GUI_MEMDEV_Draw+0x2e>
 80064e8:	f002 f806 	bl	80084f8 <LCD_GetXSizeEx>
 80064ec:	4607      	mov	r7, r0
 80064ee:	4620      	mov	r0, r4
 80064f0:	f002 f805 	bl	80084fe <LCD_GetYSizeEx>
 80064f4:	e005      	b.n	8006502 <GUI_MEMDEV_Draw+0x3a>
 80064f6:	f002 f805 	bl	8008504 <LCD_GetVXSizeEx>
 80064fa:	4607      	mov	r7, r0
 80064fc:	4620      	mov	r0, r4
 80064fe:	f002 f804 	bl	800850a <LCD_GetVYSizeEx>
 8006502:	4604      	mov	r4, r0
 8006504:	b325      	cbz	r5, 8006550 <GUI_MEMDEV_Draw+0x88>
 8006506:	a806      	add	r0, sp, #24
 8006508:	a907      	add	r1, sp, #28
 800650a:	f004 fa87 	bl	800aa1c <GUI_GetOrg>
 800650e:	9b06      	ldr	r3, [sp, #24]
 8006510:	f9b5 a000 	ldrsh.w	sl, [r5]
 8006514:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8006518:	f9b5 8002 	ldrsh.w	r8, [r5, #2]
 800651c:	441f      	add	r7, r3
 800651e:	9b07      	ldr	r3, [sp, #28]
 8006520:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8006524:	3f01      	subs	r7, #1
 8006526:	4297      	cmp	r7, r2
 8006528:	bfd4      	ite	le
 800652a:	ebca 0707 	rsble	r7, sl, r7
 800652e:	ebca 0702 	rsbgt	r7, sl, r2
 8006532:	441c      	add	r4, r3
 8006534:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8006538:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 800653c:	3c01      	subs	r4, #1
 800653e:	4294      	cmp	r4, r2
 8006540:	bfd4      	ite	le
 8006542:	ebc8 0404 	rsble	r4, r8, r4
 8006546:	ebc8 0402 	rsbgt	r4, r8, r2
 800654a:	3701      	adds	r7, #1
 800654c:	3401      	adds	r4, #1
 800654e:	e001      	b.n	8006554 <GUI_MEMDEV_Draw+0x8c>
 8006550:	46a8      	mov	r8, r5
 8006552:	46aa      	mov	sl, r5
 8006554:	b906      	cbnz	r6, 8006558 <GUI_MEMDEV_Draw+0x90>
 8006556:	4266      	negs	r6, r4
 8006558:	2f00      	cmp	r7, #0
 800655a:	dd52      	ble.n	8006602 <GUI_MEMDEV_Draw+0x13a>
 800655c:	2c00      	cmp	r4, #0
 800655e:	dd50      	ble.n	8006602 <GUI_MEMDEV_Draw+0x13a>
 8006560:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006562:	9300      	str	r3, [sp, #0]
 8006564:	4650      	mov	r0, sl
 8006566:	4641      	mov	r1, r8
 8006568:	463a      	mov	r2, r7
 800656a:	4633      	mov	r3, r6
 800656c:	f000 fe3c 	bl	80071e8 <GUI_MEMDEV_CreateEx>
 8006570:	4605      	mov	r5, r0
 8006572:	b920      	cbnz	r0, 800657e <GUI_MEMDEV_Draw+0xb6>
 8006574:	9804      	ldr	r0, [sp, #16]
 8006576:	9b03      	ldr	r3, [sp, #12]
 8006578:	4798      	blx	r3
 800657a:	2001      	movs	r0, #1
 800657c:	e042      	b.n	8006604 <GUI_MEMDEV_Draw+0x13c>
 800657e:	f7ff ff7d 	bl	800647c <GUI_MEMDEV_GetYSize>
 8006582:	42a0      	cmp	r0, r4
 8006584:	4606      	mov	r6, r0
 8006586:	d006      	beq.n	8006596 <GUI_MEMDEV_Draw+0xce>
 8006588:	f8db 3000 	ldr.w	r3, [fp]
 800658c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 800658e:	b110      	cbz	r0, 8006596 <GUI_MEMDEV_Draw+0xce>
 8006590:	2132      	movs	r1, #50	; 0x32
 8006592:	f7fd fe2b 	bl	80041ec <WM__SendMessageNoPara>
 8006596:	4628      	mov	r0, r5
 8006598:	f000 fe62 	bl	8007260 <GUI_MEMDEV_Select>
 800659c:	4273      	negs	r3, r6
 800659e:	9305      	str	r3, [sp, #20]
 80065a0:	46a1      	mov	r9, r4
 80065a2:	2700      	movs	r7, #0
 80065a4:	45b1      	cmp	r9, r6
 80065a6:	da03      	bge.n	80065b0 <GUI_MEMDEV_Draw+0xe8>
 80065a8:	4628      	mov	r0, r5
 80065aa:	4649      	mov	r1, r9
 80065ac:	f007 fa04 	bl	800d9b8 <GUI_MEMDEV_ReduceYSize>
 80065b0:	b147      	cbz	r7, 80065c4 <GUI_MEMDEV_Draw+0xfc>
 80065b2:	4628      	mov	r0, r5
 80065b4:	4651      	mov	r1, sl
 80065b6:	eb07 0208 	add.w	r2, r7, r8
 80065ba:	f7ff ff35 	bl	8006428 <GUI_MEMDEV_SetOrg>
 80065be:	4628      	mov	r0, r5
 80065c0:	f007 fa10 	bl	800d9e4 <GUI_MEMDEV_Clear>
 80065c4:	9b03      	ldr	r3, [sp, #12]
 80065c6:	9804      	ldr	r0, [sp, #16]
 80065c8:	4798      	blx	r3
 80065ca:	4b12      	ldr	r3, [pc, #72]	; (8006614 <GUI_MEMDEV_Draw+0x14c>)
 80065cc:	681b      	ldr	r3, [r3, #0]
 80065ce:	b10b      	cbz	r3, 80065d4 <GUI_MEMDEV_Draw+0x10c>
 80065d0:	2000      	movs	r0, #0
 80065d2:	4798      	blx	r3
 80065d4:	4628      	mov	r0, r5
 80065d6:	f000 febb 	bl	8007350 <GUI_MEMDEV_CopyToLCD>
 80065da:	4437      	add	r7, r6
 80065dc:	9b05      	ldr	r3, [sp, #20]
 80065de:	42a7      	cmp	r7, r4
 80065e0:	4499      	add	r9, r3
 80065e2:	dbdf      	blt.n	80065a4 <GUI_MEMDEV_Draw+0xdc>
 80065e4:	4628      	mov	r0, r5
 80065e6:	f000 fddd 	bl	80071a4 <GUI_MEMDEV_Delete>
 80065ea:	2000      	movs	r0, #0
 80065ec:	f000 fe38 	bl	8007260 <GUI_MEMDEV_Select>
 80065f0:	42a6      	cmp	r6, r4
 80065f2:	d006      	beq.n	8006602 <GUI_MEMDEV_Draw+0x13a>
 80065f4:	f8db 3000 	ldr.w	r3, [fp]
 80065f8:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80065fa:	b110      	cbz	r0, 8006602 <GUI_MEMDEV_Draw+0x13a>
 80065fc:	2133      	movs	r1, #51	; 0x33
 80065fe:	f7fd fdf5 	bl	80041ec <WM__SendMessageNoPara>
 8006602:	2000      	movs	r0, #0
 8006604:	b009      	add	sp, #36	; 0x24
 8006606:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800660a:	bf00      	nop
 800660c:	200000b8 	.word	0x200000b8
 8006610:	20002cd4 	.word	0x20002cd4
 8006614:	20002a4c 	.word	0x20002a4c

08006618 <_GetDevData>:
 8006618:	4802      	ldr	r0, [pc, #8]	; (8006624 <_GetDevData+0xc>)
 800661a:	2901      	cmp	r1, #1
 800661c:	bf18      	it	ne
 800661e:	2000      	movne	r0, #0
 8006620:	4770      	bx	lr
 8006622:	bf00      	nop
 8006624:	0800ff04 	.word	0x0800ff04

08006628 <_GetDevFunc>:
 8006628:	4802      	ldr	r0, [pc, #8]	; (8006634 <_GetDevFunc+0xc>)
 800662a:	2916      	cmp	r1, #22
 800662c:	bf18      	it	ne
 800662e:	2000      	movne	r0, #0
 8006630:	4770      	bx	lr
 8006632:	bf00      	nop
 8006634:	0800d5c9 	.word	0x0800d5c9

08006638 <_GetDevProp>:
 8006638:	2908      	cmp	r1, #8
 800663a:	bf0c      	ite	eq
 800663c:	2020      	moveq	r0, #32
 800663e:	2000      	movne	r0, #0
 8006640:	4770      	bx	lr

08006642 <_SetOrg>:
 8006642:	b508      	push	{r3, lr}
 8006644:	6800      	ldr	r0, [r0, #0]
 8006646:	68c3      	ldr	r3, [r0, #12]
 8006648:	6a1b      	ldr	r3, [r3, #32]
 800664a:	4798      	blx	r3
 800664c:	bd08      	pop	{r3, pc}

0800664e <_GetRect>:
 800664e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006650:	6880      	ldr	r0, [r0, #8]
 8006652:	460c      	mov	r4, r1
 8006654:	f004 ff08 	bl	800b468 <GUI_ALLOC_LockH>
 8006658:	4603      	mov	r3, r0
 800665a:	a802      	add	r0, sp, #8
 800665c:	8899      	ldrh	r1, [r3, #4]
 800665e:	88da      	ldrh	r2, [r3, #6]
 8006660:	891d      	ldrh	r5, [r3, #8]
 8006662:	f840 3d04 	str.w	r3, [r0, #-4]!
 8006666:	895b      	ldrh	r3, [r3, #10]
 8006668:	8021      	strh	r1, [r4, #0]
 800666a:	8062      	strh	r2, [r4, #2]
 800666c:	4429      	add	r1, r5
 800666e:	441a      	add	r2, r3
 8006670:	3901      	subs	r1, #1
 8006672:	3a01      	subs	r2, #1
 8006674:	80a1      	strh	r1, [r4, #4]
 8006676:	80e2      	strh	r2, [r4, #6]
 8006678:	f004 ff04 	bl	800b484 <GUI_ALLOC_UnlockH>
 800667c:	b003      	add	sp, #12
 800667e:	bd30      	pop	{r4, r5, pc}

08006680 <_XY2PTR>:
 8006680:	4b0e      	ldr	r3, [pc, #56]	; (80066bc <_XY2PTR+0x3c>)
 8006682:	681b      	ldr	r3, [r3, #0]
 8006684:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006686:	4605      	mov	r5, r0
 8006688:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800668a:	460e      	mov	r6, r1
 800668c:	f004 feec 	bl	800b468 <GUI_ALLOC_LockH>
 8006690:	4603      	mov	r3, r0
 8006692:	a802      	add	r0, sp, #8
 8006694:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 8006698:	f840 3d04 	str.w	r3, [r0, #-4]!
 800669c:	f103 0118 	add.w	r1, r3, #24
 80066a0:	1b36      	subs	r6, r6, r4
 80066a2:	68dc      	ldr	r4, [r3, #12]
 80066a4:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80066a8:	fb04 1406 	mla	r4, r4, r6, r1
 80066ac:	1aed      	subs	r5, r5, r3
 80066ae:	f004 fee9 	bl	800b484 <GUI_ALLOC_UnlockH>
 80066b2:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 80066b6:	4620      	mov	r0, r4
 80066b8:	b002      	add	sp, #8
 80066ba:	bd70      	pop	{r4, r5, r6, pc}
 80066bc:	200000b8 	.word	0x200000b8

080066c0 <_GetPixelIndex>:
 80066c0:	b508      	push	{r3, lr}
 80066c2:	4608      	mov	r0, r1
 80066c4:	4611      	mov	r1, r2
 80066c6:	f7ff ffdb 	bl	8006680 <_XY2PTR>
 80066ca:	6800      	ldr	r0, [r0, #0]
 80066cc:	bd08      	pop	{r3, pc}
	...

080066d0 <_XorPixel>:
 80066d0:	4b15      	ldr	r3, [pc, #84]	; (8006728 <_XorPixel+0x58>)
 80066d2:	681b      	ldr	r3, [r3, #0]
 80066d4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80066d6:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80066d8:	4615      	mov	r5, r2
 80066da:	460e      	mov	r6, r1
 80066dc:	f004 fec4 	bl	800b468 <GUI_ALLOC_LockH>
 80066e0:	4629      	mov	r1, r5
 80066e2:	9000      	str	r0, [sp, #0]
 80066e4:	4630      	mov	r0, r6
 80066e6:	f7ff ffcb 	bl	8006680 <_XY2PTR>
 80066ea:	9b00      	ldr	r3, [sp, #0]
 80066ec:	681b      	ldr	r3, [r3, #0]
 80066ee:	691b      	ldr	r3, [r3, #16]
 80066f0:	4604      	mov	r4, r0
 80066f2:	689b      	ldr	r3, [r3, #8]
 80066f4:	4798      	blx	r3
 80066f6:	6823      	ldr	r3, [r4, #0]
 80066f8:	4058      	eors	r0, r3
 80066fa:	9b00      	ldr	r3, [sp, #0]
 80066fc:	6020      	str	r0, [r4, #0]
 80066fe:	6958      	ldr	r0, [r3, #20]
 8006700:	b160      	cbz	r0, 800671c <_XorPixel+0x4c>
 8006702:	f004 feb1 	bl	800b468 <GUI_ALLOC_LockH>
 8006706:	ac02      	add	r4, sp, #8
 8006708:	6883      	ldr	r3, [r0, #8]
 800670a:	f844 0d04 	str.w	r0, [r4, #-4]!
 800670e:	681b      	ldr	r3, [r3, #0]
 8006710:	4631      	mov	r1, r6
 8006712:	462a      	mov	r2, r5
 8006714:	4798      	blx	r3
 8006716:	4620      	mov	r0, r4
 8006718:	f004 feb4 	bl	800b484 <GUI_ALLOC_UnlockH>
 800671c:	4668      	mov	r0, sp
 800671e:	f004 feb1 	bl	800b484 <GUI_ALLOC_UnlockH>
 8006722:	b002      	add	sp, #8
 8006724:	bd70      	pop	{r4, r5, r6, pc}
 8006726:	bf00      	nop
 8006728:	200000b8 	.word	0x200000b8

0800672c <_SetPixelIndex>:
 800672c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800672e:	461c      	mov	r4, r3
 8006730:	4b10      	ldr	r3, [pc, #64]	; (8006774 <_SetPixelIndex+0x48>)
 8006732:	681b      	ldr	r3, [r3, #0]
 8006734:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006736:	460e      	mov	r6, r1
 8006738:	4615      	mov	r5, r2
 800673a:	f004 fe95 	bl	800b468 <GUI_ALLOC_LockH>
 800673e:	4629      	mov	r1, r5
 8006740:	9000      	str	r0, [sp, #0]
 8006742:	4630      	mov	r0, r6
 8006744:	f7ff ff9c 	bl	8006680 <_XY2PTR>
 8006748:	9b00      	ldr	r3, [sp, #0]
 800674a:	6004      	str	r4, [r0, #0]
 800674c:	6958      	ldr	r0, [r3, #20]
 800674e:	b160      	cbz	r0, 800676a <_SetPixelIndex+0x3e>
 8006750:	f004 fe8a 	bl	800b468 <GUI_ALLOC_LockH>
 8006754:	ac02      	add	r4, sp, #8
 8006756:	6883      	ldr	r3, [r0, #8]
 8006758:	f844 0d04 	str.w	r0, [r4, #-4]!
 800675c:	681b      	ldr	r3, [r3, #0]
 800675e:	4631      	mov	r1, r6
 8006760:	462a      	mov	r2, r5
 8006762:	4798      	blx	r3
 8006764:	4620      	mov	r0, r4
 8006766:	f004 fe8d 	bl	800b484 <GUI_ALLOC_UnlockH>
 800676a:	4668      	mov	r0, sp
 800676c:	f004 fe8a 	bl	800b484 <GUI_ALLOC_UnlockH>
 8006770:	b002      	add	sp, #8
 8006772:	bd70      	pop	{r4, r5, r6, pc}
 8006774:	200000b8 	.word	0x200000b8

08006778 <_DrawVLine>:
 8006778:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800677c:	4d2c      	ldr	r5, [pc, #176]	; (8006830 <_DrawVLine+0xb8>)
 800677e:	461e      	mov	r6, r3
 8006780:	682b      	ldr	r3, [r5, #0]
 8006782:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006784:	460f      	mov	r7, r1
 8006786:	4614      	mov	r4, r2
 8006788:	f004 fe6e 	bl	800b468 <GUI_ALLOC_LockH>
 800678c:	9000      	str	r0, [sp, #0]
 800678e:	6940      	ldr	r0, [r0, #20]
 8006790:	46a9      	mov	r9, r5
 8006792:	b108      	cbz	r0, 8006798 <_DrawVLine+0x20>
 8006794:	f004 fe68 	bl	800b468 <GUI_ALLOC_LockH>
 8006798:	9001      	str	r0, [sp, #4]
 800679a:	4621      	mov	r1, r4
 800679c:	4638      	mov	r0, r7
 800679e:	f7ff ff6f 	bl	8006680 <_XY2PTR>
 80067a2:	f8d9 2000 	ldr.w	r2, [r9]
 80067a6:	9b00      	ldr	r3, [sp, #0]
 80067a8:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
 80067aa:	7c12      	ldrb	r2, [r2, #16]
 80067ac:	f8d3 800c 	ldr.w	r8, [r3, #12]
 80067b0:	f8d1 9000 	ldr.w	r9, [r1]
 80067b4:	07d2      	lsls	r2, r2, #31
 80067b6:	4605      	mov	r5, r0
 80067b8:	d51f      	bpl.n	80067fa <_DrawVLine+0x82>
 80067ba:	681b      	ldr	r3, [r3, #0]
 80067bc:	691b      	ldr	r3, [r3, #16]
 80067be:	689b      	ldr	r3, [r3, #8]
 80067c0:	4798      	blx	r3
 80067c2:	4680      	mov	r8, r0
 80067c4:	9801      	ldr	r0, [sp, #4]
 80067c6:	b128      	cbz	r0, 80067d4 <_DrawVLine+0x5c>
 80067c8:	6882      	ldr	r2, [r0, #8]
 80067ca:	4639      	mov	r1, r7
 80067cc:	f8d2 c000 	ldr.w	ip, [r2]
 80067d0:	4622      	mov	r2, r4
 80067d2:	47e0      	blx	ip
 80067d4:	682b      	ldr	r3, [r5, #0]
 80067d6:	ea83 0308 	eor.w	r3, r3, r8
 80067da:	602b      	str	r3, [r5, #0]
 80067dc:	9b00      	ldr	r3, [sp, #0]
 80067de:	3401      	adds	r4, #1
 80067e0:	68db      	ldr	r3, [r3, #12]
 80067e2:	42b4      	cmp	r4, r6
 80067e4:	441d      	add	r5, r3
 80067e6:	dded      	ble.n	80067c4 <_DrawVLine+0x4c>
 80067e8:	4668      	mov	r0, sp
 80067ea:	f004 fe4b 	bl	800b484 <GUI_ALLOC_UnlockH>
 80067ee:	9b01      	ldr	r3, [sp, #4]
 80067f0:	b1d3      	cbz	r3, 8006828 <_DrawVLine+0xb0>
 80067f2:	a801      	add	r0, sp, #4
 80067f4:	f004 fe46 	bl	800b484 <GUI_ALLOC_UnlockH>
 80067f8:	e016      	b.n	8006828 <_DrawVLine+0xb0>
 80067fa:	9b01      	ldr	r3, [sp, #4]
 80067fc:	b163      	cbz	r3, 8006818 <_DrawVLine+0xa0>
 80067fe:	9801      	ldr	r0, [sp, #4]
 8006800:	6883      	ldr	r3, [r0, #8]
 8006802:	4622      	mov	r2, r4
 8006804:	681b      	ldr	r3, [r3, #0]
 8006806:	4639      	mov	r1, r7
 8006808:	3401      	adds	r4, #1
 800680a:	4798      	blx	r3
 800680c:	42b4      	cmp	r4, r6
 800680e:	f8c5 9000 	str.w	r9, [r5]
 8006812:	4445      	add	r5, r8
 8006814:	ddf3      	ble.n	80067fe <_DrawVLine+0x86>
 8006816:	e7e7      	b.n	80067e8 <_DrawVLine+0x70>
 8006818:	1b34      	subs	r4, r6, r4
 800681a:	3401      	adds	r4, #1
 800681c:	3c01      	subs	r4, #1
 800681e:	f8c5 9000 	str.w	r9, [r5]
 8006822:	4445      	add	r5, r8
 8006824:	d1fa      	bne.n	800681c <_DrawVLine+0xa4>
 8006826:	e7df      	b.n	80067e8 <_DrawVLine+0x70>
 8006828:	b003      	add	sp, #12
 800682a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800682e:	bf00      	nop
 8006830:	200000b8 	.word	0x200000b8

08006834 <_FillRect>:
 8006834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006838:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 80068e8 <_FillRect+0xb4>
 800683c:	4614      	mov	r4, r2
 800683e:	f8db 2000 	ldr.w	r2, [fp]
 8006842:	b085      	sub	sp, #20
 8006844:	6e10      	ldr	r0, [r2, #96]	; 0x60
 8006846:	460f      	mov	r7, r1
 8006848:	461d      	mov	r5, r3
 800684a:	f004 fe0d 	bl	800b468 <GUI_ALLOC_LockH>
 800684e:	4621      	mov	r1, r4
 8006850:	9002      	str	r0, [sp, #8]
 8006852:	4638      	mov	r0, r7
 8006854:	f7ff ff14 	bl	8006680 <_XY2PTR>
 8006858:	9a02      	ldr	r2, [sp, #8]
 800685a:	f8db 3000 	ldr.w	r3, [fp]
 800685e:	f8d2 900c 	ldr.w	r9, [r2, #12]
 8006862:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006864:	4606      	mov	r6, r0
 8006866:	6950      	ldr	r0, [r2, #20]
 8006868:	f8d3 a000 	ldr.w	sl, [r3]
 800686c:	1bed      	subs	r5, r5, r7
 800686e:	3501      	adds	r5, #1
 8006870:	b338      	cbz	r0, 80068c2 <_FillRect+0x8e>
 8006872:	f004 fdf9 	bl	800b468 <GUI_ALLOC_LockH>
 8006876:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8006878:	f10d 0810 	add.w	r8, sp, #16
 800687c:	1b13      	subs	r3, r2, r4
 800687e:	f848 0d04 	str.w	r0, [r8, #-4]!
 8006882:	3301      	adds	r3, #1
 8006884:	9300      	str	r3, [sp, #0]
 8006886:	4639      	mov	r1, r7
 8006888:	4622      	mov	r2, r4
 800688a:	462b      	mov	r3, r5
 800688c:	f007 f87e 	bl	800d98c <GUI_USAGE_AddRect>
 8006890:	4640      	mov	r0, r8
 8006892:	f004 fdf7 	bl	800b484 <GUI_ALLOC_UnlockH>
 8006896:	e014      	b.n	80068c2 <_FillRect+0x8e>
 8006898:	f8db 3000 	ldr.w	r3, [fp]
 800689c:	7c1b      	ldrb	r3, [r3, #16]
 800689e:	07db      	lsls	r3, r3, #31
 80068a0:	d513      	bpl.n	80068ca <_FillRect+0x96>
 80068a2:	9b02      	ldr	r3, [sp, #8]
 80068a4:	681b      	ldr	r3, [r3, #0]
 80068a6:	691b      	ldr	r3, [r3, #16]
 80068a8:	689b      	ldr	r3, [r3, #8]
 80068aa:	4798      	blx	r3
 80068ac:	4632      	mov	r2, r6
 80068ae:	462b      	mov	r3, r5
 80068b0:	6811      	ldr	r1, [r2, #0]
 80068b2:	3b01      	subs	r3, #1
 80068b4:	ea81 0100 	eor.w	r1, r1, r0
 80068b8:	f842 1b04 	str.w	r1, [r2], #4
 80068bc:	d1f8      	bne.n	80068b0 <_FillRect+0x7c>
 80068be:	444e      	add	r6, r9
 80068c0:	3401      	adds	r4, #1
 80068c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80068c4:	429c      	cmp	r4, r3
 80068c6:	dde7      	ble.n	8006898 <_FillRect+0x64>
 80068c8:	e008      	b.n	80068dc <_FillRect+0xa8>
 80068ca:	2d00      	cmp	r5, #0
 80068cc:	ddf7      	ble.n	80068be <_FillRect+0x8a>
 80068ce:	462b      	mov	r3, r5
 80068d0:	4632      	mov	r2, r6
 80068d2:	3b01      	subs	r3, #1
 80068d4:	f842 ab04 	str.w	sl, [r2], #4
 80068d8:	d1fb      	bne.n	80068d2 <_FillRect+0x9e>
 80068da:	e7f0      	b.n	80068be <_FillRect+0x8a>
 80068dc:	a802      	add	r0, sp, #8
 80068de:	f004 fdd1 	bl	800b484 <GUI_ALLOC_UnlockH>
 80068e2:	b005      	add	sp, #20
 80068e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80068e8:	200000b8 	.word	0x200000b8

080068ec <_DrawHLine>:
 80068ec:	b507      	push	{r0, r1, r2, lr}
 80068ee:	9200      	str	r2, [sp, #0]
 80068f0:	f7ff ffa0 	bl	8006834 <_FillRect>
 80068f4:	b003      	add	sp, #12
 80068f6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080068fc <_DrawBitmap>:
 80068fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006900:	4c90      	ldr	r4, [pc, #576]	; (8006b44 <_DrawBitmap+0x248>)
 8006902:	b091      	sub	sp, #68	; 0x44
 8006904:	469b      	mov	fp, r3
 8006906:	6823      	ldr	r3, [r4, #0]
 8006908:	9008      	str	r0, [sp, #32]
 800690a:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800690c:	9207      	str	r2, [sp, #28]
 800690e:	460e      	mov	r6, r1
 8006910:	f8dd a074 	ldr.w	sl, [sp, #116]	; 0x74
 8006914:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8006916:	2800      	cmp	r0, #0
 8006918:	f000 838b 	beq.w	8007032 <_DrawBitmap+0x736>
 800691c:	f004 fda4 	bl	800b468 <GUI_ALLOC_LockH>
 8006920:	900e      	str	r0, [sp, #56]	; 0x38
 8006922:	6940      	ldr	r0, [r0, #20]
 8006924:	b108      	cbz	r0, 800692a <_DrawBitmap+0x2e>
 8006926:	f004 fd9f 	bl	800b468 <GUI_ALLOC_LockH>
 800692a:	900f      	str	r0, [sp, #60]	; 0x3c
 800692c:	a810      	add	r0, sp, #64	; 0x40
 800692e:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 8006932:	68db      	ldr	r3, [r3, #12]
 8006934:	930a      	str	r3, [sp, #40]	; 0x28
 8006936:	f004 fda5 	bl	800b484 <GUI_ALLOC_UnlockH>
 800693a:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800693c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800693e:	4437      	add	r7, r6
 8006940:	9704      	str	r7, [sp, #16]
 8006942:	b150      	cbz	r0, 800695a <_DrawBitmap+0x5e>
 8006944:	6823      	ldr	r3, [r4, #0]
 8006946:	7c1b      	ldrb	r3, [r3, #16]
 8006948:	079c      	lsls	r4, r3, #30
 800694a:	d406      	bmi.n	800695a <_DrawBitmap+0x5e>
 800694c:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800694e:	9700      	str	r7, [sp, #0]
 8006950:	9904      	ldr	r1, [sp, #16]
 8006952:	9a07      	ldr	r2, [sp, #28]
 8006954:	465b      	mov	r3, fp
 8006956:	f007 f819 	bl	800d98c <GUI_USAGE_AddRect>
 800695a:	9804      	ldr	r0, [sp, #16]
 800695c:	9907      	ldr	r1, [sp, #28]
 800695e:	f7ff fe8f 	bl	8006680 <_XY2PTR>
 8006962:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8006964:	2f17      	cmp	r7, #23
 8006966:	4606      	mov	r6, r0
 8006968:	dd64      	ble.n	8006a34 <_DrawBitmap+0x138>
 800696a:	ea4f 078b 	mov.w	r7, fp, lsl #2
 800696e:	9706      	str	r7, [sp, #24]
 8006970:	f04f 0900 	mov.w	r9, #0
 8006974:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8006976:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8006978:	45b9      	cmp	r9, r7
 800697a:	da57      	bge.n	8006a2c <_DrawBitmap+0x130>
 800697c:	b130      	cbz	r0, 800698c <_DrawBitmap+0x90>
 800697e:	6883      	ldr	r3, [r0, #8]
 8006980:	9a07      	ldr	r2, [sp, #28]
 8006982:	685c      	ldr	r4, [r3, #4]
 8006984:	9904      	ldr	r1, [sp, #16]
 8006986:	444a      	add	r2, r9
 8006988:	465b      	mov	r3, fp
 800698a:	47a0      	blx	r4
 800698c:	9f08      	ldr	r7, [sp, #32]
 800698e:	693b      	ldr	r3, [r7, #16]
 8006990:	68d8      	ldr	r0, [r3, #12]
 8006992:	b130      	cbz	r0, 80069a2 <_DrawBitmap+0xa6>
 8006994:	4b6c      	ldr	r3, [pc, #432]	; (8006b48 <_DrawBitmap+0x24c>)
 8006996:	9a06      	ldr	r2, [sp, #24]
 8006998:	681b      	ldr	r3, [r3, #0]
 800699a:	4630      	mov	r0, r6
 800699c:	4651      	mov	r1, sl
 800699e:	4798      	blx	r3
 80069a0:	e03d      	b.n	8006a1e <_DrawBitmap+0x122>
 80069a2:	685b      	ldr	r3, [r3, #4]
 80069a4:	4798      	blx	r3
 80069a6:	0e00      	lsrs	r0, r0, #24
 80069a8:	9005      	str	r0, [sp, #20]
 80069aa:	4635      	mov	r5, r6
 80069ac:	465f      	mov	r7, fp
 80069ae:	4654      	mov	r4, sl
 80069b0:	463b      	mov	r3, r7
 80069b2:	4622      	mov	r2, r4
 80069b4:	f04f 0800 	mov.w	r8, #0
 80069b8:	f852 1b04 	ldr.w	r1, [r2], #4
 80069bc:	9805      	ldr	r0, [sp, #20]
 80069be:	0e09      	lsrs	r1, r1, #24
 80069c0:	4281      	cmp	r1, r0
 80069c2:	9805      	ldr	r0, [sp, #20]
 80069c4:	bf08      	it	eq
 80069c6:	f108 0801 	addeq.w	r8, r8, #1
 80069ca:	4281      	cmp	r1, r0
 80069cc:	f103 33ff 	add.w	r3, r3, #4294967295
 80069d0:	d012      	beq.n	80069f8 <_DrawBitmap+0xfc>
 80069d2:	f1b8 0f00 	cmp.w	r8, #0
 80069d6:	d012      	beq.n	80069fe <_DrawBitmap+0x102>
 80069d8:	4a5b      	ldr	r2, [pc, #364]	; (8006b48 <_DrawBitmap+0x24c>)
 80069da:	ea4f 0388 	mov.w	r3, r8, lsl #2
 80069de:	f8d2 c000 	ldr.w	ip, [r2]
 80069e2:	9303      	str	r3, [sp, #12]
 80069e4:	4628      	mov	r0, r5
 80069e6:	4621      	mov	r1, r4
 80069e8:	461a      	mov	r2, r3
 80069ea:	47e0      	blx	ip
 80069ec:	9b03      	ldr	r3, [sp, #12]
 80069ee:	ebc8 0707 	rsb	r7, r8, r7
 80069f2:	441d      	add	r5, r3
 80069f4:	441c      	add	r4, r3
 80069f6:	e010      	b.n	8006a1a <_DrawBitmap+0x11e>
 80069f8:	2b00      	cmp	r3, #0
 80069fa:	d1dd      	bne.n	80069b8 <_DrawBitmap+0xbc>
 80069fc:	e7e9      	b.n	80069d2 <_DrawBitmap+0xd6>
 80069fe:	6820      	ldr	r0, [r4, #0]
 8006a00:	0e02      	lsrs	r2, r0, #24
 8006a02:	2aff      	cmp	r2, #255	; 0xff
 8006a04:	d006      	beq.n	8006a14 <_DrawBitmap+0x118>
 8006a06:	4b51      	ldr	r3, [pc, #324]	; (8006b4c <_DrawBitmap+0x250>)
 8006a08:	6829      	ldr	r1, [r5, #0]
 8006a0a:	681b      	ldr	r3, [r3, #0]
 8006a0c:	43d2      	mvns	r2, r2
 8006a0e:	b2d2      	uxtb	r2, r2
 8006a10:	4798      	blx	r3
 8006a12:	6028      	str	r0, [r5, #0]
 8006a14:	3504      	adds	r5, #4
 8006a16:	3404      	adds	r4, #4
 8006a18:	3f01      	subs	r7, #1
 8006a1a:	2f00      	cmp	r7, #0
 8006a1c:	d1c8      	bne.n	80069b0 <_DrawBitmap+0xb4>
 8006a1e:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8006a20:	44ba      	add	sl, r7
 8006a22:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8006a24:	f109 0901 	add.w	r9, r9, #1
 8006a28:	443e      	add	r6, r7
 8006a2a:	e7a3      	b.n	8006974 <_DrawBitmap+0x78>
 8006a2c:	2800      	cmp	r0, #0
 8006a2e:	f040 82fd 	bne.w	800702c <_DrawBitmap+0x730>
 8006a32:	e2fe      	b.n	8007032 <_DrawBitmap+0x736>
 8006a34:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8006a36:	2f10      	cmp	r7, #16
 8006a38:	d134      	bne.n	8006aa4 <_DrawBitmap+0x1a8>
 8006a3a:	1f06      	subs	r6, r0, #4
 8006a3c:	2500      	movs	r5, #0
 8006a3e:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8006a40:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8006a42:	42bd      	cmp	r5, r7
 8006a44:	f280 80a3 	bge.w	8006b8e <_DrawBitmap+0x292>
 8006a48:	9f07      	ldr	r7, [sp, #28]
 8006a4a:	442f      	add	r7, r5
 8006a4c:	b13c      	cbz	r4, 8006a5e <_DrawBitmap+0x162>
 8006a4e:	68a3      	ldr	r3, [r4, #8]
 8006a50:	9904      	ldr	r1, [sp, #16]
 8006a52:	f8d3 c004 	ldr.w	ip, [r3, #4]
 8006a56:	4620      	mov	r0, r4
 8006a58:	463a      	mov	r2, r7
 8006a5a:	465b      	mov	r3, fp
 8006a5c:	47e0      	blx	ip
 8006a5e:	f1aa 0902 	sub.w	r9, sl, #2
 8006a62:	9605      	str	r6, [sp, #20]
 8006a64:	46d8      	mov	r8, fp
 8006a66:	9808      	ldr	r0, [sp, #32]
 8006a68:	9904      	ldr	r1, [sp, #16]
 8006a6a:	6903      	ldr	r3, [r0, #16]
 8006a6c:	f839 0f02 	ldrh.w	r0, [r9, #2]!
 8006a70:	685b      	ldr	r3, [r3, #4]
 8006a72:	4459      	add	r1, fp
 8006a74:	ebc8 0101 	rsb	r1, r8, r1
 8006a78:	9103      	str	r1, [sp, #12]
 8006a7a:	4798      	blx	r3
 8006a7c:	9b05      	ldr	r3, [sp, #20]
 8006a7e:	9903      	ldr	r1, [sp, #12]
 8006a80:	f843 0f04 	str.w	r0, [r3, #4]!
 8006a84:	9305      	str	r3, [sp, #20]
 8006a86:	b124      	cbz	r4, 8006a92 <_DrawBitmap+0x196>
 8006a88:	68a3      	ldr	r3, [r4, #8]
 8006a8a:	4620      	mov	r0, r4
 8006a8c:	681b      	ldr	r3, [r3, #0]
 8006a8e:	463a      	mov	r2, r7
 8006a90:	4798      	blx	r3
 8006a92:	f1b8 0801 	subs.w	r8, r8, #1
 8006a96:	d1e6      	bne.n	8006a66 <_DrawBitmap+0x16a>
 8006a98:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8006a9a:	44ba      	add	sl, r7
 8006a9c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8006a9e:	3501      	adds	r5, #1
 8006aa0:	443e      	add	r6, r7
 8006aa2:	e7cc      	b.n	8006a3e <_DrawBitmap+0x142>
 8006aa4:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8006aa6:	2f08      	cmp	r7, #8
 8006aa8:	f100 0604 	add.w	r6, r0, #4
 8006aac:	d173      	bne.n	8006b96 <_DrawBitmap+0x29a>
 8006aae:	9f07      	ldr	r7, [sp, #28]
 8006ab0:	9907      	ldr	r1, [sp, #28]
 8006ab2:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8006ab4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8006ab6:	1a7b      	subs	r3, r7, r1
 8006ab8:	4293      	cmp	r3, r2
 8006aba:	f1a6 0004 	sub.w	r0, r6, #4
 8006abe:	da66      	bge.n	8006b8e <_DrawBitmap+0x292>
 8006ac0:	4b20      	ldr	r3, [pc, #128]	; (8006b44 <_DrawBitmap+0x248>)
 8006ac2:	681b      	ldr	r3, [r3, #0]
 8006ac4:	7c1b      	ldrb	r3, [r3, #16]
 8006ac6:	b36d      	cbz	r5, 8006b24 <_DrawBitmap+0x228>
 8006ac8:	f013 0303 	ands.w	r3, r3, #3
 8006acc:	d005      	beq.n	8006ada <_DrawBitmap+0x1de>
 8006ace:	2b02      	cmp	r3, #2
 8006ad0:	d157      	bne.n	8006b82 <_DrawBitmap+0x286>
 8006ad2:	46b1      	mov	r9, r6
 8006ad4:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8006ad8:	e01c      	b.n	8006b14 <_DrawBitmap+0x218>
 8006ada:	f81a 2003 	ldrb.w	r2, [sl, r3]
 8006ade:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8006ae2:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8006ae6:	3301      	adds	r3, #1
 8006ae8:	455b      	cmp	r3, fp
 8006aea:	d1f6      	bne.n	8006ada <_DrawBitmap+0x1de>
 8006aec:	e049      	b.n	8006b82 <_DrawBitmap+0x286>
 8006aee:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8006af2:	f849 3c04 	str.w	r3, [r9, #-4]
 8006af6:	b12c      	cbz	r4, 8006b04 <_DrawBitmap+0x208>
 8006af8:	68a3      	ldr	r3, [r4, #8]
 8006afa:	4620      	mov	r0, r4
 8006afc:	681b      	ldr	r3, [r3, #0]
 8006afe:	4641      	mov	r1, r8
 8006b00:	463a      	mov	r2, r7
 8006b02:	4798      	blx	r3
 8006b04:	9b04      	ldr	r3, [sp, #16]
 8006b06:	f108 0801 	add.w	r8, r8, #1
 8006b0a:	445b      	add	r3, fp
 8006b0c:	4543      	cmp	r3, r8
 8006b0e:	f109 0904 	add.w	r9, r9, #4
 8006b12:	d036      	beq.n	8006b82 <_DrawBitmap+0x286>
 8006b14:	9804      	ldr	r0, [sp, #16]
 8006b16:	ebc0 030a 	rsb	r3, r0, sl
 8006b1a:	f813 3008 	ldrb.w	r3, [r3, r8]
 8006b1e:	2b00      	cmp	r3, #0
 8006b20:	d0f0      	beq.n	8006b04 <_DrawBitmap+0x208>
 8006b22:	e7e4      	b.n	8006aee <_DrawBitmap+0x1f2>
 8006b24:	f013 0303 	ands.w	r3, r3, #3
 8006b28:	d005      	beq.n	8006b36 <_DrawBitmap+0x23a>
 8006b2a:	2b02      	cmp	r3, #2
 8006b2c:	d129      	bne.n	8006b82 <_DrawBitmap+0x286>
 8006b2e:	46b1      	mov	r9, r6
 8006b30:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8006b34:	e01d      	b.n	8006b72 <_DrawBitmap+0x276>
 8006b36:	4b04      	ldr	r3, [pc, #16]	; (8006b48 <_DrawBitmap+0x24c>)
 8006b38:	4651      	mov	r1, sl
 8006b3a:	681b      	ldr	r3, [r3, #0]
 8006b3c:	465a      	mov	r2, fp
 8006b3e:	4798      	blx	r3
 8006b40:	e01f      	b.n	8006b82 <_DrawBitmap+0x286>
 8006b42:	bf00      	nop
 8006b44:	200000b8 	.word	0x200000b8
 8006b48:	200000a8 	.word	0x200000a8
 8006b4c:	200000ac 	.word	0x200000ac
 8006b50:	f849 3c04 	str.w	r3, [r9, #-4]
 8006b54:	b12c      	cbz	r4, 8006b62 <_DrawBitmap+0x266>
 8006b56:	68a3      	ldr	r3, [r4, #8]
 8006b58:	4620      	mov	r0, r4
 8006b5a:	681b      	ldr	r3, [r3, #0]
 8006b5c:	4641      	mov	r1, r8
 8006b5e:	463a      	mov	r2, r7
 8006b60:	4798      	blx	r3
 8006b62:	9b04      	ldr	r3, [sp, #16]
 8006b64:	f108 0801 	add.w	r8, r8, #1
 8006b68:	445b      	add	r3, fp
 8006b6a:	4543      	cmp	r3, r8
 8006b6c:	f109 0904 	add.w	r9, r9, #4
 8006b70:	d007      	beq.n	8006b82 <_DrawBitmap+0x286>
 8006b72:	9904      	ldr	r1, [sp, #16]
 8006b74:	ebc1 030a 	rsb	r3, r1, sl
 8006b78:	f813 3008 	ldrb.w	r3, [r3, r8]
 8006b7c:	2b00      	cmp	r3, #0
 8006b7e:	d0f0      	beq.n	8006b62 <_DrawBitmap+0x266>
 8006b80:	e7e6      	b.n	8006b50 <_DrawBitmap+0x254>
 8006b82:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8006b84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006b86:	4492      	add	sl, r2
 8006b88:	3701      	adds	r7, #1
 8006b8a:	441e      	add	r6, r3
 8006b8c:	e790      	b.n	8006ab0 <_DrawBitmap+0x1b4>
 8006b8e:	2c00      	cmp	r4, #0
 8006b90:	f040 824c 	bne.w	800702c <_DrawBitmap+0x730>
 8006b94:	e24d      	b.n	8007032 <_DrawBitmap+0x736>
 8006b96:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8006b98:	4bb2      	ldr	r3, [pc, #712]	; (8006e64 <_DrawBitmap+0x568>)
 8006b9a:	9608      	str	r6, [sp, #32]
 8006b9c:	007f      	lsls	r7, r7, #1
 8006b9e:	970c      	str	r7, [sp, #48]	; 0x30
 8006ba0:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8006ba2:	00bf      	lsls	r7, r7, #2
 8006ba4:	970d      	str	r7, [sp, #52]	; 0x34
 8006ba6:	9f07      	ldr	r7, [sp, #28]
 8006ba8:	9705      	str	r7, [sp, #20]
 8006baa:	2d00      	cmp	r5, #0
 8006bac:	bf08      	it	eq
 8006bae:	461d      	moveq	r5, r3
 8006bb0:	9f08      	ldr	r7, [sp, #32]
 8006bb2:	9807      	ldr	r0, [sp, #28]
 8006bb4:	1f3c      	subs	r4, r7, #4
 8006bb6:	9f05      	ldr	r7, [sp, #20]
 8006bb8:	1a3b      	subs	r3, r7, r0
 8006bba:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8006bbc:	42bb      	cmp	r3, r7
 8006bbe:	f280 8233 	bge.w	8007028 <_DrawBitmap+0x72c>
 8006bc2:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8006bc4:	2f02      	cmp	r7, #2
 8006bc6:	f000 80ad 	beq.w	8006d24 <_DrawBitmap+0x428>
 8006bca:	2f04      	cmp	r7, #4
 8006bcc:	f000 8150 	beq.w	8006e70 <_DrawBitmap+0x574>
 8006bd0:	2f01      	cmp	r7, #1
 8006bd2:	f040 821f 	bne.w	8007014 <_DrawBitmap+0x718>
 8006bd6:	f8df 9294 	ldr.w	r9, [pc, #660]	; 8006e6c <_DrawBitmap+0x570>
 8006bda:	f8d9 3000 	ldr.w	r3, [r9]
 8006bde:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8006be0:	f004 fc42 	bl	800b468 <GUI_ALLOC_LockH>
 8006be4:	f89a 3000 	ldrb.w	r3, [sl]
 8006be8:	4a9f      	ldr	r2, [pc, #636]	; (8006e68 <_DrawBitmap+0x56c>)
 8006bea:	991e      	ldr	r1, [sp, #120]	; 0x78
 8006bec:	5cd6      	ldrb	r6, [r2, r3]
 8006bee:	f8d9 3000 	ldr.w	r3, [r9]
 8006bf2:	900e      	str	r0, [sp, #56]	; 0x38
 8006bf4:	7c1b      	ldrb	r3, [r3, #16]
 8006bf6:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 8006bfa:	f003 0303 	and.w	r3, r3, #3
 8006bfe:	2b02      	cmp	r3, #2
 8006c00:	465f      	mov	r7, fp
 8006c02:	f1c1 0808 	rsb	r8, r1, #8
 8006c06:	fa46 f601 	asr.w	r6, r6, r1
 8006c0a:	d020      	beq.n	8006c4e <_DrawBitmap+0x352>
 8006c0c:	2b03      	cmp	r3, #3
 8006c0e:	d061      	beq.n	8006cd4 <_DrawBitmap+0x3d8>
 8006c10:	2b01      	cmp	r3, #1
 8006c12:	d05f      	beq.n	8006cd4 <_DrawBitmap+0x3d8>
 8006c14:	4652      	mov	r2, sl
 8006c16:	4547      	cmp	r7, r8
 8006c18:	bf38      	it	cc
 8006c1a:	46b8      	movcc	r8, r7
 8006c1c:	ebc8 0707 	rsb	r7, r8, r7
 8006c20:	4643      	mov	r3, r8
 8006c22:	4621      	mov	r1, r4
 8006c24:	f006 0001 	and.w	r0, r6, #1
 8006c28:	3b01      	subs	r3, #1
 8006c2a:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8006c2e:	f841 0b04 	str.w	r0, [r1], #4
 8006c32:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8006c36:	d1f5      	bne.n	8006c24 <_DrawBitmap+0x328>
 8006c38:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8006c3c:	2f00      	cmp	r7, #0
 8006c3e:	d06d      	beq.n	8006d1c <_DrawBitmap+0x420>
 8006c40:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8006c44:	4988      	ldr	r1, [pc, #544]	; (8006e68 <_DrawBitmap+0x56c>)
 8006c46:	f04f 0808 	mov.w	r8, #8
 8006c4a:	5cce      	ldrb	r6, [r1, r3]
 8006c4c:	e7e3      	b.n	8006c16 <_DrawBitmap+0x31a>
 8006c4e:	686b      	ldr	r3, [r5, #4]
 8006c50:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8006c54:	930b      	str	r3, [sp, #44]	; 0x2c
 8006c56:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 8006c5a:	4547      	cmp	r7, r8
 8006c5c:	bf38      	it	cc
 8006c5e:	46b8      	movcc	r8, r7
 8006c60:	ebc8 0707 	rsb	r7, r8, r7
 8006c64:	f1bc 0f00 	cmp.w	ip, #0
 8006c68:	d026      	beq.n	8006cb8 <_DrawBitmap+0x3bc>
 8006c6a:	b91e      	cbnz	r6, 8006c74 <_DrawBitmap+0x378>
 8006c6c:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8006c70:	44c1      	add	r9, r8
 8006c72:	e025      	b.n	8006cc0 <_DrawBitmap+0x3c4>
 8006c74:	07f0      	lsls	r0, r6, #31
 8006c76:	d50c      	bpl.n	8006c92 <_DrawBitmap+0x396>
 8006c78:	f8dc 3008 	ldr.w	r3, [ip, #8]
 8006c7c:	9a05      	ldr	r2, [sp, #20]
 8006c7e:	681b      	ldr	r3, [r3, #0]
 8006c80:	f8cd c00c 	str.w	ip, [sp, #12]
 8006c84:	4660      	mov	r0, ip
 8006c86:	4649      	mov	r1, r9
 8006c88:	4798      	blx	r3
 8006c8a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006c8c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8006c90:	6023      	str	r3, [r4, #0]
 8006c92:	f1b8 0801 	subs.w	r8, r8, #1
 8006c96:	f109 0901 	add.w	r9, r9, #1
 8006c9a:	f104 0404 	add.w	r4, r4, #4
 8006c9e:	d00f      	beq.n	8006cc0 <_DrawBitmap+0x3c4>
 8006ca0:	0876      	lsrs	r6, r6, #1
 8006ca2:	e7e2      	b.n	8006c6a <_DrawBitmap+0x36e>
 8006ca4:	07f1      	lsls	r1, r6, #31
 8006ca6:	bf44      	itt	mi
 8006ca8:	9b0b      	ldrmi	r3, [sp, #44]	; 0x2c
 8006caa:	6023      	strmi	r3, [r4, #0]
 8006cac:	f1b8 0801 	subs.w	r8, r8, #1
 8006cb0:	f104 0404 	add.w	r4, r4, #4
 8006cb4:	d004      	beq.n	8006cc0 <_DrawBitmap+0x3c4>
 8006cb6:	0876      	lsrs	r6, r6, #1
 8006cb8:	2e00      	cmp	r6, #0
 8006cba:	d1f3      	bne.n	8006ca4 <_DrawBitmap+0x3a8>
 8006cbc:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8006cc0:	b367      	cbz	r7, 8006d1c <_DrawBitmap+0x420>
 8006cc2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006cc4:	4a68      	ldr	r2, [pc, #416]	; (8006e68 <_DrawBitmap+0x56c>)
 8006cc6:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8006cca:	9009      	str	r0, [sp, #36]	; 0x24
 8006ccc:	5cd6      	ldrb	r6, [r2, r3]
 8006cce:	f04f 0808 	mov.w	r8, #8
 8006cd2:	e7c2      	b.n	8006c5a <_DrawBitmap+0x35e>
 8006cd4:	6803      	ldr	r3, [r0, #0]
 8006cd6:	691b      	ldr	r3, [r3, #16]
 8006cd8:	689b      	ldr	r3, [r3, #8]
 8006cda:	4798      	blx	r3
 8006cdc:	4651      	mov	r1, sl
 8006cde:	4547      	cmp	r7, r8
 8006ce0:	bf38      	it	cc
 8006ce2:	46b8      	movcc	r8, r7
 8006ce4:	ebc8 0707 	rsb	r7, r8, r7
 8006ce8:	1d23      	adds	r3, r4, #4
 8006cea:	46c6      	mov	lr, r8
 8006cec:	07f2      	lsls	r2, r6, #31
 8006cee:	d504      	bpl.n	8006cfa <_DrawBitmap+0x3fe>
 8006cf0:	f853 2c04 	ldr.w	r2, [r3, #-4]
 8006cf4:	4042      	eors	r2, r0
 8006cf6:	f843 2c04 	str.w	r2, [r3, #-4]
 8006cfa:	f1be 0e01 	subs.w	lr, lr, #1
 8006cfe:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8006d02:	f103 0304 	add.w	r3, r3, #4
 8006d06:	d1f1      	bne.n	8006cec <_DrawBitmap+0x3f0>
 8006d08:	eb04 0488 	add.w	r4, r4, r8, lsl #2
 8006d0c:	b137      	cbz	r7, 8006d1c <_DrawBitmap+0x420>
 8006d0e:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8006d12:	4a55      	ldr	r2, [pc, #340]	; (8006e68 <_DrawBitmap+0x56c>)
 8006d14:	f04f 0808 	mov.w	r8, #8
 8006d18:	5cd6      	ldrb	r6, [r2, r3]
 8006d1a:	e7e0      	b.n	8006cde <_DrawBitmap+0x3e2>
 8006d1c:	a80e      	add	r0, sp, #56	; 0x38
 8006d1e:	f004 fbb1 	bl	800b484 <GUI_ALLOC_UnlockH>
 8006d22:	e177      	b.n	8007014 <_DrawBitmap+0x718>
 8006d24:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8006d26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006d28:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 8006d2c:	f1c7 0604 	rsb	r6, r7, #4
 8006d30:	f89a 7000 	ldrb.w	r7, [sl]
 8006d34:	409f      	lsls	r7, r3
 8006d36:	4b4d      	ldr	r3, [pc, #308]	; (8006e6c <_DrawBitmap+0x570>)
 8006d38:	681b      	ldr	r3, [r3, #0]
 8006d3a:	7c1b      	ldrb	r3, [r3, #16]
 8006d3c:	f003 0303 	and.w	r3, r3, #3
 8006d40:	2b01      	cmp	r3, #1
 8006d42:	b2f6      	uxtb	r6, r6
 8006d44:	b2ff      	uxtb	r7, r7
 8006d46:	d066      	beq.n	8006e16 <_DrawBitmap+0x51a>
 8006d48:	d308      	bcc.n	8006d5c <_DrawBitmap+0x460>
 8006d4a:	2b02      	cmp	r3, #2
 8006d4c:	f040 8162 	bne.w	8007014 <_DrawBitmap+0x718>
 8006d50:	9804      	ldr	r0, [sp, #16]
 8006d52:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 8006d56:	46d8      	mov	r8, fp
 8006d58:	9006      	str	r0, [sp, #24]
 8006d5a:	e03e      	b.n	8006dda <_DrawBitmap+0x4de>
 8006d5c:	4652      	mov	r2, sl
 8006d5e:	465b      	mov	r3, fp
 8006d60:	429e      	cmp	r6, r3
 8006d62:	bfc8      	it	gt
 8006d64:	b2de      	uxtbgt	r6, r3
 8006d66:	1b9b      	subs	r3, r3, r6
 8006d68:	4631      	mov	r1, r6
 8006d6a:	4620      	mov	r0, r4
 8006d6c:	ea4f 1c97 	mov.w	ip, r7, lsr #6
 8006d70:	3901      	subs	r1, #1
 8006d72:	f855 c02c 	ldr.w	ip, [r5, ip, lsl #2]
 8006d76:	f840 cb04 	str.w	ip, [r0], #4
 8006d7a:	00bf      	lsls	r7, r7, #2
 8006d7c:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 8006d80:	b2ff      	uxtb	r7, r7
 8006d82:	d1f3      	bne.n	8006d6c <_DrawBitmap+0x470>
 8006d84:	3e01      	subs	r6, #1
 8006d86:	b2f6      	uxtb	r6, r6
 8006d88:	3601      	adds	r6, #1
 8006d8a:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 8006d8e:	2b00      	cmp	r3, #0
 8006d90:	f000 8140 	beq.w	8007014 <_DrawBitmap+0x718>
 8006d94:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 8006d98:	2604      	movs	r6, #4
 8006d9a:	e7e1      	b.n	8006d60 <_DrawBitmap+0x464>
 8006d9c:	9906      	ldr	r1, [sp, #24]
 8006d9e:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 8006da2:	4449      	add	r1, r9
 8006da4:	d122      	bne.n	8006dec <_DrawBitmap+0x4f0>
 8006da6:	f109 0901 	add.w	r9, r9, #1
 8006daa:	fa5f f289 	uxtb.w	r2, r9
 8006dae:	00bf      	lsls	r7, r7, #2
 8006db0:	4296      	cmp	r6, r2
 8006db2:	b2ff      	uxtb	r7, r7
 8006db4:	d1f2      	bne.n	8006d9c <_DrawBitmap+0x4a0>
 8006db6:	9f06      	ldr	r7, [sp, #24]
 8006db8:	3e01      	subs	r6, #1
 8006dba:	b2f6      	uxtb	r6, r6
 8006dbc:	1c7b      	adds	r3, r7, #1
 8006dbe:	1c72      	adds	r2, r6, #1
 8006dc0:	199e      	adds	r6, r3, r6
 8006dc2:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8006dc6:	9606      	str	r6, [sp, #24]
 8006dc8:	f1b8 0f00 	cmp.w	r8, #0
 8006dcc:	f000 8122 	beq.w	8007014 <_DrawBitmap+0x718>
 8006dd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006dd2:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 8006dd6:	9309      	str	r3, [sp, #36]	; 0x24
 8006dd8:	2604      	movs	r6, #4
 8006dda:	4546      	cmp	r6, r8
 8006ddc:	bfc8      	it	gt
 8006dde:	fa5f f688 	uxtbgt.w	r6, r8
 8006de2:	ebc6 0808 	rsb	r8, r6, r8
 8006de6:	f04f 0900 	mov.w	r9, #0
 8006dea:	e7d7      	b.n	8006d9c <_DrawBitmap+0x4a0>
 8006dec:	09ba      	lsrs	r2, r7, #6
 8006dee:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8006df2:	f844 2029 	str.w	r2, [r4, r9, lsl #2]
 8006df6:	f1bc 0f00 	cmp.w	ip, #0
 8006dfa:	d0d4      	beq.n	8006da6 <_DrawBitmap+0x4aa>
 8006dfc:	f8dc 2008 	ldr.w	r2, [ip, #8]
 8006e00:	6812      	ldr	r2, [r2, #0]
 8006e02:	920b      	str	r2, [sp, #44]	; 0x2c
 8006e04:	4660      	mov	r0, ip
 8006e06:	f8cd c00c 	str.w	ip, [sp, #12]
 8006e0a:	9a05      	ldr	r2, [sp, #20]
 8006e0c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006e0e:	4798      	blx	r3
 8006e10:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8006e14:	e7c7      	b.n	8006da6 <_DrawBitmap+0x4aa>
 8006e16:	4650      	mov	r0, sl
 8006e18:	465b      	mov	r3, fp
 8006e1a:	429e      	cmp	r6, r3
 8006e1c:	bfc8      	it	gt
 8006e1e:	b2de      	uxtbgt	r6, r3
 8006e20:	1b9b      	subs	r3, r3, r6
 8006e22:	1d22      	adds	r2, r4, #4
 8006e24:	46b4      	mov	ip, r6
 8006e26:	f017 0fc0 	tst.w	r7, #192	; 0xc0
 8006e2a:	d005      	beq.n	8006e38 <_DrawBitmap+0x53c>
 8006e2c:	f852 1c04 	ldr.w	r1, [r2, #-4]
 8006e30:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 8006e34:	f842 1c04 	str.w	r1, [r2, #-4]
 8006e38:	f10c 3cff 	add.w	ip, ip, #4294967295
 8006e3c:	00bf      	lsls	r7, r7, #2
 8006e3e:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 8006e42:	b2ff      	uxtb	r7, r7
 8006e44:	f102 0204 	add.w	r2, r2, #4
 8006e48:	d1ed      	bne.n	8006e26 <_DrawBitmap+0x52a>
 8006e4a:	3e01      	subs	r6, #1
 8006e4c:	b2f6      	uxtb	r6, r6
 8006e4e:	3601      	adds	r6, #1
 8006e50:	eb04 0486 	add.w	r4, r4, r6, lsl #2
 8006e54:	2b00      	cmp	r3, #0
 8006e56:	f000 80dd 	beq.w	8007014 <_DrawBitmap+0x718>
 8006e5a:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 8006e5e:	2604      	movs	r6, #4
 8006e60:	e7db      	b.n	8006e1a <_DrawBitmap+0x51e>
 8006e62:	bf00      	nop
 8006e64:	0800fec4 	.word	0x0800fec4
 8006e68:	08011ec4 	.word	0x08011ec4
 8006e6c:	200000b8 	.word	0x200000b8
 8006e70:	4a71      	ldr	r2, [pc, #452]	; (8007038 <_DrawBitmap+0x73c>)
 8006e72:	f89a 3000 	ldrb.w	r3, [sl]
 8006e76:	6812      	ldr	r2, [r2, #0]
 8006e78:	980d      	ldr	r0, [sp, #52]	; 0x34
 8006e7a:	7c12      	ldrb	r2, [r2, #16]
 8006e7c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8006e7e:	f002 0203 	and.w	r2, r2, #3
 8006e82:	4083      	lsls	r3, r0
 8006e84:	2a01      	cmp	r2, #1
 8006e86:	b2de      	uxtb	r6, r3
 8006e88:	f000 809c 	beq.w	8006fc4 <_DrawBitmap+0x6c8>
 8006e8c:	d302      	bcc.n	8006e94 <_DrawBitmap+0x598>
 8006e8e:	2a02      	cmp	r2, #2
 8006e90:	d035      	beq.n	8006efe <_DrawBitmap+0x602>
 8006e92:	e0bf      	b.n	8007014 <_DrawBitmap+0x718>
 8006e94:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8006e96:	b15f      	cbz	r7, 8006eb0 <_DrawBitmap+0x5b4>
 8006e98:	0936      	lsrs	r6, r6, #4
 8006e9a:	f10a 0201 	add.w	r2, sl, #1
 8006e9e:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8006ea2:	6023      	str	r3, [r4, #0]
 8006ea4:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8006ea8:	9c08      	ldr	r4, [sp, #32]
 8006eaa:	f10b 33ff 	add.w	r3, fp, #4294967295
 8006eae:	e001      	b.n	8006eb4 <_DrawBitmap+0x5b8>
 8006eb0:	465b      	mov	r3, fp
 8006eb2:	4652      	mov	r2, sl
 8006eb4:	2b01      	cmp	r3, #1
 8006eb6:	dd1a      	ble.n	8006eee <_DrawBitmap+0x5f2>
 8006eb8:	1058      	asrs	r0, r3, #1
 8006eba:	f104 0108 	add.w	r1, r4, #8
 8006ebe:	f003 0301 	and.w	r3, r3, #1
 8006ec2:	eb02 0800 	add.w	r8, r2, r0
 8006ec6:	ea4f 1c16 	mov.w	ip, r6, lsr #4
 8006eca:	f006 060f 	and.w	r6, r6, #15
 8006ece:	f855 702c 	ldr.w	r7, [r5, ip, lsl #2]
 8006ed2:	f841 7c08 	str.w	r7, [r1, #-8]
 8006ed6:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8006eda:	f841 6c04 	str.w	r6, [r1, #-4]
 8006ede:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 8006ee2:	4542      	cmp	r2, r8
 8006ee4:	f101 0108 	add.w	r1, r1, #8
 8006ee8:	d1ed      	bne.n	8006ec6 <_DrawBitmap+0x5ca>
 8006eea:	eb04 04c0 	add.w	r4, r4, r0, lsl #3
 8006eee:	2b00      	cmp	r3, #0
 8006ef0:	f000 8090 	beq.w	8007014 <_DrawBitmap+0x718>
 8006ef4:	0936      	lsrs	r6, r6, #4
 8006ef6:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8006efa:	6023      	str	r3, [r4, #0]
 8006efc:	e08a      	b.n	8007014 <_DrawBitmap+0x718>
 8006efe:	981e      	ldr	r0, [sp, #120]	; 0x78
 8006f00:	b1c0      	cbz	r0, 8006f34 <_DrawBitmap+0x638>
 8006f02:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 8006f06:	d00a      	beq.n	8006f1e <_DrawBitmap+0x622>
 8006f08:	0936      	lsrs	r6, r6, #4
 8006f0a:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8006f0e:	6023      	str	r3, [r4, #0]
 8006f10:	b12f      	cbz	r7, 8006f1e <_DrawBitmap+0x622>
 8006f12:	68bb      	ldr	r3, [r7, #8]
 8006f14:	9904      	ldr	r1, [sp, #16]
 8006f16:	681b      	ldr	r3, [r3, #0]
 8006f18:	9a05      	ldr	r2, [sp, #20]
 8006f1a:	4638      	mov	r0, r7
 8006f1c:	4798      	blx	r3
 8006f1e:	9904      	ldr	r1, [sp, #16]
 8006f20:	9c08      	ldr	r4, [sp, #32]
 8006f22:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8006f26:	f101 0801 	add.w	r8, r1, #1
 8006f2a:	f10b 3cff 	add.w	ip, fp, #4294967295
 8006f2e:	f10a 0901 	add.w	r9, sl, #1
 8006f32:	e011      	b.n	8006f58 <_DrawBitmap+0x65c>
 8006f34:	46dc      	mov	ip, fp
 8006f36:	46d1      	mov	r9, sl
 8006f38:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8006f3c:	e00c      	b.n	8006f58 <_DrawBitmap+0x65c>
 8006f3e:	f016 0ff0 	tst.w	r6, #240	; 0xf0
 8006f42:	d10d      	bne.n	8006f60 <_DrawBitmap+0x664>
 8006f44:	f016 060f 	ands.w	r6, r6, #15
 8006f48:	d11b      	bne.n	8006f82 <_DrawBitmap+0x686>
 8006f4a:	f819 6f01 	ldrb.w	r6, [r9, #1]!
 8006f4e:	3408      	adds	r4, #8
 8006f50:	f108 0802 	add.w	r8, r8, #2
 8006f54:	f1ac 0c02 	sub.w	ip, ip, #2
 8006f58:	f1bc 0f01 	cmp.w	ip, #1
 8006f5c:	dcef      	bgt.n	8006f3e <_DrawBitmap+0x642>
 8006f5e:	e021      	b.n	8006fa4 <_DrawBitmap+0x6a8>
 8006f60:	0933      	lsrs	r3, r6, #4
 8006f62:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8006f66:	6023      	str	r3, [r4, #0]
 8006f68:	2f00      	cmp	r7, #0
 8006f6a:	d0eb      	beq.n	8006f44 <_DrawBitmap+0x648>
 8006f6c:	68bb      	ldr	r3, [r7, #8]
 8006f6e:	9a05      	ldr	r2, [sp, #20]
 8006f70:	681b      	ldr	r3, [r3, #0]
 8006f72:	f8cd c00c 	str.w	ip, [sp, #12]
 8006f76:	4638      	mov	r0, r7
 8006f78:	4641      	mov	r1, r8
 8006f7a:	4798      	blx	r3
 8006f7c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8006f80:	e7e0      	b.n	8006f44 <_DrawBitmap+0x648>
 8006f82:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8006f86:	6063      	str	r3, [r4, #4]
 8006f88:	2f00      	cmp	r7, #0
 8006f8a:	d0de      	beq.n	8006f4a <_DrawBitmap+0x64e>
 8006f8c:	68bb      	ldr	r3, [r7, #8]
 8006f8e:	9a05      	ldr	r2, [sp, #20]
 8006f90:	681b      	ldr	r3, [r3, #0]
 8006f92:	f8cd c00c 	str.w	ip, [sp, #12]
 8006f96:	4638      	mov	r0, r7
 8006f98:	f108 0101 	add.w	r1, r8, #1
 8006f9c:	4798      	blx	r3
 8006f9e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8006fa2:	e7d2      	b.n	8006f4a <_DrawBitmap+0x64e>
 8006fa4:	f1bc 0f00 	cmp.w	ip, #0
 8006fa8:	d034      	beq.n	8007014 <_DrawBitmap+0x718>
 8006faa:	0936      	lsrs	r6, r6, #4
 8006fac:	d032      	beq.n	8007014 <_DrawBitmap+0x718>
 8006fae:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8006fb2:	6023      	str	r3, [r4, #0]
 8006fb4:	b377      	cbz	r7, 8007014 <_DrawBitmap+0x718>
 8006fb6:	68bb      	ldr	r3, [r7, #8]
 8006fb8:	9a05      	ldr	r2, [sp, #20]
 8006fba:	681b      	ldr	r3, [r3, #0]
 8006fbc:	4638      	mov	r0, r7
 8006fbe:	4641      	mov	r1, r8
 8006fc0:	4798      	blx	r3
 8006fc2:	e027      	b.n	8007014 <_DrawBitmap+0x718>
 8006fc4:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8006fc6:	f1c7 0302 	rsb	r3, r7, #2
 8006fca:	b2db      	uxtb	r3, r3
 8006fcc:	4657      	mov	r7, sl
 8006fce:	465a      	mov	r2, fp
 8006fd0:	4293      	cmp	r3, r2
 8006fd2:	bfc8      	it	gt
 8006fd4:	b2d3      	uxtbgt	r3, r2
 8006fd6:	1ad2      	subs	r2, r2, r3
 8006fd8:	1d20      	adds	r0, r4, #4
 8006fda:	469c      	mov	ip, r3
 8006fdc:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 8006fe0:	d005      	beq.n	8006fee <_DrawBitmap+0x6f2>
 8006fe2:	f850 1c04 	ldr.w	r1, [r0, #-4]
 8006fe6:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 8006fea:	f840 1c04 	str.w	r1, [r0, #-4]
 8006fee:	f10c 3cff 	add.w	ip, ip, #4294967295
 8006ff2:	0136      	lsls	r6, r6, #4
 8006ff4:	f01c 0cff 	ands.w	ip, ip, #255	; 0xff
 8006ff8:	b2f6      	uxtb	r6, r6
 8006ffa:	f100 0004 	add.w	r0, r0, #4
 8006ffe:	d1ed      	bne.n	8006fdc <_DrawBitmap+0x6e0>
 8007000:	3b01      	subs	r3, #1
 8007002:	b2db      	uxtb	r3, r3
 8007004:	3301      	adds	r3, #1
 8007006:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800700a:	b11a      	cbz	r2, 8007014 <_DrawBitmap+0x718>
 800700c:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8007010:	2302      	movs	r3, #2
 8007012:	e7dd      	b.n	8006fd0 <_DrawBitmap+0x6d4>
 8007014:	9b05      	ldr	r3, [sp, #20]
 8007016:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8007018:	3301      	adds	r3, #1
 800701a:	44ba      	add	sl, r7
 800701c:	9305      	str	r3, [sp, #20]
 800701e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8007020:	9b08      	ldr	r3, [sp, #32]
 8007022:	443b      	add	r3, r7
 8007024:	9308      	str	r3, [sp, #32]
 8007026:	e5c3      	b.n	8006bb0 <_DrawBitmap+0x2b4>
 8007028:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800702a:	b113      	cbz	r3, 8007032 <_DrawBitmap+0x736>
 800702c:	a80f      	add	r0, sp, #60	; 0x3c
 800702e:	f004 fa29 	bl	800b484 <GUI_ALLOC_UnlockH>
 8007032:	b011      	add	sp, #68	; 0x44
 8007034:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007038:	200000b8 	.word	0x200000b8

0800703c <GUI_MEMDEV__WriteToActiveAt>:
 800703c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007040:	460e      	mov	r6, r1
 8007042:	4690      	mov	r8, r2
 8007044:	4607      	mov	r7, r0
 8007046:	f004 fa0f 	bl	800b468 <GUI_ALLOC_LockH>
 800704a:	6803      	ldr	r3, [r0, #0]
 800704c:	ac02      	add	r4, sp, #8
 800704e:	68db      	ldr	r3, [r3, #12]
 8007050:	f844 0d04 	str.w	r0, [r4, #-4]!
 8007054:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007056:	2000      	movs	r0, #0
 8007058:	2116      	movs	r1, #22
 800705a:	4798      	blx	r3
 800705c:	4605      	mov	r5, r0
 800705e:	4620      	mov	r0, r4
 8007060:	f004 fa10 	bl	800b484 <GUI_ALLOC_UnlockH>
 8007064:	b11d      	cbz	r5, 800706e <GUI_MEMDEV__WriteToActiveAt+0x32>
 8007066:	4638      	mov	r0, r7
 8007068:	4631      	mov	r1, r6
 800706a:	4642      	mov	r2, r8
 800706c:	47a8      	blx	r5
 800706e:	b002      	add	sp, #8
 8007070:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007074 <GUI_MEMDEV__CreateFixed>:
 8007074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007078:	4e3e      	ldr	r6, [pc, #248]	; (8007174 <GUI_MEMDEV__CreateFixed+0x100>)
 800707a:	b087      	sub	sp, #28
 800707c:	461d      	mov	r5, r3
 800707e:	6833      	ldr	r3, [r6, #0]
 8007080:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8007082:	7c5b      	ldrb	r3, [r3, #17]
 8007084:	4683      	mov	fp, r0
 8007086:	468a      	mov	sl, r1
 8007088:	4690      	mov	r8, r2
 800708a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800708c:	9912      	ldr	r1, [sp, #72]	; 0x48
 800708e:	2200      	movs	r2, #0
 8007090:	f003 fa3e 	bl	800a510 <GUI_DEVICE_Create>
 8007094:	4604      	mov	r4, r0
 8007096:	2800      	cmp	r0, #0
 8007098:	d033      	beq.n	8007102 <GUI_MEMDEV__CreateFixed+0x8e>
 800709a:	6903      	ldr	r3, [r0, #16]
 800709c:	689b      	ldr	r3, [r3, #8]
 800709e:	4798      	blx	r3
 80070a0:	f001 fae1 	bl	8008666 <LCD__GetBPPDevice>
 80070a4:	fb08 f600 	mul.w	r6, r8, r0
 80070a8:	9003      	str	r0, [sp, #12]
 80070aa:	3607      	adds	r6, #7
 80070ac:	f004 fb1c 	bl	800b6e8 <GUI_ALLOC_RequestSize>
 80070b0:	f017 0901 	ands.w	r9, r7, #1
 80070b4:	ea4f 06d6 	mov.w	r6, r6, lsr #3
 80070b8:	d104      	bne.n	80070c4 <GUI_MEMDEV__CreateFixed+0x50>
 80070ba:	2304      	movs	r3, #4
 80070bc:	fb90 f0f3 	sdiv	r0, r0, r3
 80070c0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80070c4:	2d00      	cmp	r5, #0
 80070c6:	dc09      	bgt.n	80070dc <GUI_MEMDEV__CreateFixed+0x68>
 80070c8:	b11e      	cbz	r6, 80070d2 <GUI_MEMDEV__CreateFixed+0x5e>
 80070ca:	3818      	subs	r0, #24
 80070cc:	fbb0 f0f6 	udiv	r0, r0, r6
 80070d0:	e000      	b.n	80070d4 <GUI_MEMDEV__CreateFixed+0x60>
 80070d2:	4630      	mov	r0, r6
 80070d4:	426d      	negs	r5, r5
 80070d6:	42a8      	cmp	r0, r5
 80070d8:	bfb8      	it	lt
 80070da:	4605      	movlt	r5, r0
 80070dc:	f1b9 0f00 	cmp.w	r9, #0
 80070e0:	d109      	bne.n	80070f6 <GUI_MEMDEV__CreateFixed+0x82>
 80070e2:	f8cd 9000 	str.w	r9, [sp]
 80070e6:	4658      	mov	r0, fp
 80070e8:	4651      	mov	r1, sl
 80070ea:	4642      	mov	r2, r8
 80070ec:	462b      	mov	r3, r5
 80070ee:	f006 fc0d 	bl	800d90c <GUI_USAGE_BM_Create>
 80070f2:	4607      	mov	r7, r0
 80070f4:	e000      	b.n	80070f8 <GUI_MEMDEV__CreateFixed+0x84>
 80070f6:	2700      	movs	r7, #0
 80070f8:	2d00      	cmp	r5, #0
 80070fa:	dc04      	bgt.n	8007106 <GUI_MEMDEV__CreateFixed+0x92>
 80070fc:	4620      	mov	r0, r4
 80070fe:	f003 fa05 	bl	800a50c <GUI_DEVICE_Delete>
 8007102:	2000      	movs	r0, #0
 8007104:	e032      	b.n	800716c <GUI_MEMDEV__CreateFixed+0xf8>
 8007106:	fb06 f005 	mul.w	r0, r6, r5
 800710a:	3018      	adds	r0, #24
 800710c:	f1b9 0f00 	cmp.w	r9, #0
 8007110:	d002      	beq.n	8007118 <GUI_MEMDEV__CreateFixed+0xa4>
 8007112:	f004 fb75 	bl	800b800 <GUI_ALLOC_AllocNoInit>
 8007116:	e001      	b.n	800711c <GUI_MEMDEV__CreateFixed+0xa8>
 8007118:	f004 fba0 	bl	800b85c <GUI_ALLOC_AllocZero>
 800711c:	4681      	mov	r9, r0
 800711e:	b940      	cbnz	r0, 8007132 <GUI_MEMDEV__CreateFixed+0xbe>
 8007120:	4620      	mov	r0, r4
 8007122:	f003 f9f3 	bl	800a50c <GUI_DEVICE_Delete>
 8007126:	2f00      	cmp	r7, #0
 8007128:	d0eb      	beq.n	8007102 <GUI_MEMDEV__CreateFixed+0x8e>
 800712a:	4638      	mov	r0, r7
 800712c:	f004 f9d6 	bl	800b4dc <GUI_ALLOC_Free>
 8007130:	e01b      	b.n	800716a <GUI_MEMDEV__CreateFixed+0xf6>
 8007132:	f004 f999 	bl	800b468 <GUI_ALLOC_LockH>
 8007136:	4603      	mov	r3, r0
 8007138:	a806      	add	r0, sp, #24
 800713a:	9a03      	ldr	r2, [sp, #12]
 800713c:	f840 3d04 	str.w	r3, [r0, #-4]!
 8007140:	611a      	str	r2, [r3, #16]
 8007142:	601c      	str	r4, [r3, #0]
 8007144:	f8a3 b004 	strh.w	fp, [r3, #4]
 8007148:	f8a3 a006 	strh.w	sl, [r3, #6]
 800714c:	f8a3 8008 	strh.w	r8, [r3, #8]
 8007150:	815d      	strh	r5, [r3, #10]
 8007152:	60de      	str	r6, [r3, #12]
 8007154:	615f      	str	r7, [r3, #20]
 8007156:	f004 f995 	bl	800b484 <GUI_ALLOC_UnlockH>
 800715a:	4a06      	ldr	r2, [pc, #24]	; (8007174 <GUI_MEMDEV__CreateFixed+0x100>)
 800715c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800715e:	6123      	str	r3, [r4, #16]
 8007160:	6813      	ldr	r3, [r2, #0]
 8007162:	f8c4 9008 	str.w	r9, [r4, #8]
 8007166:	7c5b      	ldrb	r3, [r3, #17]
 8007168:	61a3      	str	r3, [r4, #24]
 800716a:	4648      	mov	r0, r9
 800716c:	b007      	add	sp, #28
 800716e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007172:	bf00      	nop
 8007174:	200000b8 	.word	0x200000b8

08007178 <GUI_MEMDEV_GetBitsPerPixel>:
 8007178:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800717a:	4605      	mov	r5, r0
 800717c:	b170      	cbz	r0, 800719c <GUI_MEMDEV_GetBitsPerPixel+0x24>
 800717e:	f004 f973 	bl	800b468 <GUI_ALLOC_LockH>
 8007182:	6803      	ldr	r3, [r0, #0]
 8007184:	ac02      	add	r4, sp, #8
 8007186:	691b      	ldr	r3, [r3, #16]
 8007188:	f844 0d04 	str.w	r0, [r4, #-4]!
 800718c:	689b      	ldr	r3, [r3, #8]
 800718e:	4798      	blx	r3
 8007190:	f001 fa69 	bl	8008666 <LCD__GetBPPDevice>
 8007194:	4605      	mov	r5, r0
 8007196:	4620      	mov	r0, r4
 8007198:	f004 f974 	bl	800b484 <GUI_ALLOC_UnlockH>
 800719c:	4628      	mov	r0, r5
 800719e:	b003      	add	sp, #12
 80071a0:	bd30      	pop	{r4, r5, pc}
	...

080071a4 <GUI_MEMDEV_Delete>:
 80071a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80071a6:	4604      	mov	r4, r0
 80071a8:	b1d0      	cbz	r0, 80071e0 <GUI_MEMDEV_Delete+0x3c>
 80071aa:	4b0e      	ldr	r3, [pc, #56]	; (80071e4 <GUI_MEMDEV_Delete+0x40>)
 80071ac:	681b      	ldr	r3, [r3, #0]
 80071ae:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80071b0:	4283      	cmp	r3, r0
 80071b2:	d101      	bne.n	80071b8 <GUI_MEMDEV_Delete+0x14>
 80071b4:	f003 fcec 	bl	800ab90 <GUI_SelectLCD>
 80071b8:	4620      	mov	r0, r4
 80071ba:	f004 f955 	bl	800b468 <GUI_ALLOC_LockH>
 80071be:	9001      	str	r0, [sp, #4]
 80071c0:	6940      	ldr	r0, [r0, #20]
 80071c2:	b108      	cbz	r0, 80071c8 <GUI_MEMDEV_Delete+0x24>
 80071c4:	f006 fbce 	bl	800d964 <GUI_USAGE_DecUseCnt>
 80071c8:	ad02      	add	r5, sp, #8
 80071ca:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 80071ce:	6818      	ldr	r0, [r3, #0]
 80071d0:	f003 f99c 	bl	800a50c <GUI_DEVICE_Delete>
 80071d4:	4628      	mov	r0, r5
 80071d6:	f004 f955 	bl	800b484 <GUI_ALLOC_UnlockH>
 80071da:	4620      	mov	r0, r4
 80071dc:	f004 f97e 	bl	800b4dc <GUI_ALLOC_Free>
 80071e0:	b003      	add	sp, #12
 80071e2:	bd30      	pop	{r4, r5, pc}
 80071e4:	200000b8 	.word	0x200000b8

080071e8 <GUI_MEMDEV_CreateEx>:
 80071e8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80071ec:	469a      	mov	sl, r3
 80071ee:	4b19      	ldr	r3, [pc, #100]	; (8007254 <GUI_MEMDEV_CreateEx+0x6c>)
 80071f0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80071f2:	681b      	ldr	r3, [r3, #0]
 80071f4:	4607      	mov	r7, r0
 80071f6:	7c58      	ldrb	r0, [r3, #17]
 80071f8:	4b17      	ldr	r3, [pc, #92]	; (8007258 <GUI_MEMDEV_CreateEx+0x70>)
 80071fa:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 80071fe:	4688      	mov	r8, r1
 8007200:	4691      	mov	r9, r2
 8007202:	68e3      	ldr	r3, [r4, #12]
 8007204:	681b      	ldr	r3, [r3, #0]
 8007206:	2b04      	cmp	r3, #4
 8007208:	d006      	beq.n	8007218 <GUI_MEMDEV_CreateEx+0x30>
 800720a:	6824      	ldr	r4, [r4, #0]
 800720c:	2c00      	cmp	r4, #0
 800720e:	d1f8      	bne.n	8007202 <GUI_MEMDEV_CreateEx+0x1a>
 8007210:	f003 f96c 	bl	800a4ec <GUI_DEVICE__GetpDriver>
 8007214:	4604      	mov	r4, r0
 8007216:	b130      	cbz	r0, 8007226 <GUI_MEMDEV_CreateEx+0x3e>
 8007218:	68e3      	ldr	r3, [r4, #12]
 800721a:	4620      	mov	r0, r4
 800721c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800721e:	2101      	movs	r1, #1
 8007220:	4798      	blx	r3
 8007222:	4606      	mov	r6, r0
 8007224:	b908      	cbnz	r0, 800722a <GUI_MEMDEV_CreateEx+0x42>
 8007226:	2000      	movs	r0, #0
 8007228:	e010      	b.n	800724c <GUI_MEMDEV_CreateEx+0x64>
 800722a:	6924      	ldr	r4, [r4, #16]
 800722c:	68a3      	ldr	r3, [r4, #8]
 800722e:	4798      	blx	r3
 8007230:	3001      	adds	r0, #1
 8007232:	bf04      	itt	eq
 8007234:	f045 0501 	orreq.w	r5, r5, #1
 8007238:	4c08      	ldreq	r4, [pc, #32]	; (800725c <GUI_MEMDEV_CreateEx+0x74>)
 800723a:	9402      	str	r4, [sp, #8]
 800723c:	e88d 0060 	stmia.w	sp, {r5, r6}
 8007240:	4638      	mov	r0, r7
 8007242:	4641      	mov	r1, r8
 8007244:	464a      	mov	r2, r9
 8007246:	4653      	mov	r3, sl
 8007248:	f7ff ff14 	bl	8007074 <GUI_MEMDEV__CreateFixed>
 800724c:	b004      	add	sp, #16
 800724e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007252:	bf00      	nop
 8007254:	200000b8 	.word	0x200000b8
 8007258:	20002d28 	.word	0x20002d28
 800725c:	0801205c 	.word	0x0801205c

08007260 <GUI_MEMDEV_Select>:
 8007260:	4b11      	ldr	r3, [pc, #68]	; (80072a8 <GUI_MEMDEV_Select+0x48>)
 8007262:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007264:	681a      	ldr	r2, [r3, #0]
 8007266:	4604      	mov	r4, r0
 8007268:	6e16      	ldr	r6, [r2, #96]	; 0x60
 800726a:	461f      	mov	r7, r3
 800726c:	b910      	cbnz	r0, 8007274 <GUI_MEMDEV_Select+0x14>
 800726e:	f003 fc8f 	bl	800ab90 <GUI_SelectLCD>
 8007272:	e016      	b.n	80072a2 <GUI_MEMDEV_Select+0x42>
 8007274:	b10e      	cbz	r6, 800727a <GUI_MEMDEV_Select+0x1a>
 8007276:	f003 fc8b 	bl	800ab90 <GUI_SelectLCD>
 800727a:	f7fe ff31 	bl	80060e0 <WM_Deactivate>
 800727e:	4620      	mov	r0, r4
 8007280:	f004 f8f2 	bl	800b468 <GUI_ALLOC_LockH>
 8007284:	ad02      	add	r5, sp, #8
 8007286:	683b      	ldr	r3, [r7, #0]
 8007288:	f845 0d04 	str.w	r0, [r5, #-4]!
 800728c:	661c      	str	r4, [r3, #96]	; 0x60
 800728e:	6800      	ldr	r0, [r0, #0]
 8007290:	f003 f97e 	bl	800a590 <GUI_DEVICE_Link>
 8007294:	4628      	mov	r0, r5
 8007296:	f004 f8f5 	bl	800b484 <GUI_ALLOC_UnlockH>
 800729a:	f001 f89b 	bl	80083d4 <LCD_UpdateColorIndices>
 800729e:	f001 fca3 	bl	8008be8 <LCD_SetClipRectMax>
 80072a2:	4630      	mov	r0, r6
 80072a4:	b003      	add	sp, #12
 80072a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80072a8:	200000b8 	.word	0x200000b8

080072ac <GUI_MEMDEV_CopyToLCDAt>:
 80072ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80072b0:	460c      	mov	r4, r1
 80072b2:	b085      	sub	sp, #20
 80072b4:	4615      	mov	r5, r2
 80072b6:	4606      	mov	r6, r0
 80072b8:	2800      	cmp	r0, #0
 80072ba:	d041      	beq.n	8007340 <GUI_MEMDEV_CopyToLCDAt+0x94>
 80072bc:	2000      	movs	r0, #0
 80072be:	f003 fc74 	bl	800abaa <GUI_SetDrawMode>
 80072c2:	4b21      	ldr	r3, [pc, #132]	; (8007348 <GUI_MEMDEV_CopyToLCDAt+0x9c>)
 80072c4:	681b      	ldr	r3, [r3, #0]
 80072c6:	4607      	mov	r7, r0
 80072c8:	4630      	mov	r0, r6
 80072ca:	f8d3 8060 	ldr.w	r8, [r3, #96]	; 0x60
 80072ce:	f004 f8cb 	bl	800b468 <GUI_ALLOC_LockH>
 80072d2:	6803      	ldr	r3, [r0, #0]
 80072d4:	9001      	str	r0, [sp, #4]
 80072d6:	6998      	ldr	r0, [r3, #24]
 80072d8:	f002 fab4 	bl	8009844 <GUI_SelectLayer>
 80072dc:	4b1b      	ldr	r3, [pc, #108]	; (800734c <GUI_MEMDEV_CopyToLCDAt+0xa0>)
 80072de:	429c      	cmp	r4, r3
 80072e0:	9b01      	ldr	r3, [sp, #4]
 80072e2:	bf04      	itt	eq
 80072e4:	f9b3 4004 	ldrsheq.w	r4, [r3, #4]
 80072e8:	f9b3 5006 	ldrsheq.w	r5, [r3, #6]
 80072ec:	891a      	ldrh	r2, [r3, #8]
 80072ee:	895b      	ldrh	r3, [r3, #10]
 80072f0:	f8ad 4008 	strh.w	r4, [sp, #8]
 80072f4:	3a01      	subs	r2, #1
 80072f6:	3b01      	subs	r3, #1
 80072f8:	4422      	add	r2, r4
 80072fa:	442b      	add	r3, r5
 80072fc:	4681      	mov	r9, r0
 80072fe:	f8ad 200c 	strh.w	r2, [sp, #12]
 8007302:	f8ad 300e 	strh.w	r3, [sp, #14]
 8007306:	f8ad 500a 	strh.w	r5, [sp, #10]
 800730a:	f7fe fee1 	bl	80060d0 <WM_Activate>
 800730e:	a801      	add	r0, sp, #4
 8007310:	f004 f8b8 	bl	800b484 <GUI_ALLOC_UnlockH>
 8007314:	a802      	add	r0, sp, #8
 8007316:	f7fe fd2b 	bl	8005d70 <WM__InitIVRSearch>
 800731a:	b948      	cbnz	r0, 8007330 <GUI_MEMDEV_CopyToLCDAt+0x84>
 800731c:	4648      	mov	r0, r9
 800731e:	f002 fa91 	bl	8009844 <GUI_SelectLayer>
 8007322:	4640      	mov	r0, r8
 8007324:	f7ff ff9c 	bl	8007260 <GUI_MEMDEV_Select>
 8007328:	4638      	mov	r0, r7
 800732a:	f003 fc3e 	bl	800abaa <GUI_SetDrawMode>
 800732e:	e007      	b.n	8007340 <GUI_MEMDEV_CopyToLCDAt+0x94>
 8007330:	4630      	mov	r0, r6
 8007332:	4621      	mov	r1, r4
 8007334:	462a      	mov	r2, r5
 8007336:	f005 fdb5 	bl	800cea4 <GUI_MEMDEV__WriteToActiveOpaque>
 800733a:	f7fe fc57 	bl	8005bec <WM__GetNextIVR>
 800733e:	e7ec      	b.n	800731a <GUI_MEMDEV_CopyToLCDAt+0x6e>
 8007340:	b005      	add	sp, #20
 8007342:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007346:	bf00      	nop
 8007348:	200000b8 	.word	0x200000b8
 800734c:	fffff001 	.word	0xfffff001

08007350 <GUI_MEMDEV_CopyToLCD>:
 8007350:	4901      	ldr	r1, [pc, #4]	; (8007358 <GUI_MEMDEV_CopyToLCD+0x8>)
 8007352:	460a      	mov	r2, r1
 8007354:	f7ff bfaa 	b.w	80072ac <GUI_MEMDEV_CopyToLCDAt>
 8007358:	fffff001 	.word	0xfffff001

0800735c <_SetPhysRAMAddr>:
 800735c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800735e:	4604      	mov	r4, r0
 8007360:	460e      	mov	r6, r1
 8007362:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 8007366:	212a      	movs	r1, #42	; 0x2a
 8007368:	4615      	mov	r5, r2
 800736a:	4798      	blx	r3
 800736c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800736e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007372:	4431      	add	r1, r6
 8007374:	4620      	mov	r0, r4
 8007376:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800737a:	4798      	blx	r3
 800737c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800737e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007382:	b2b7      	uxth	r7, r6
 8007384:	4439      	add	r1, r7
 8007386:	4620      	mov	r0, r4
 8007388:	b2c9      	uxtb	r1, r1
 800738a:	4798      	blx	r3
 800738c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800738e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007392:	4431      	add	r1, r6
 8007394:	4620      	mov	r0, r4
 8007396:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800739a:	4798      	blx	r3
 800739c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800739e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80073a2:	4439      	add	r1, r7
 80073a4:	4620      	mov	r0, r4
 80073a6:	b2c9      	uxtb	r1, r1
 80073a8:	4798      	blx	r3
 80073aa:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 80073ae:	4620      	mov	r0, r4
 80073b0:	212b      	movs	r1, #43	; 0x2b
 80073b2:	4798      	blx	r3
 80073b4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80073b6:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80073ba:	4429      	add	r1, r5
 80073bc:	4620      	mov	r0, r4
 80073be:	f3c1 210f 	ubfx	r1, r1, #8, #16
 80073c2:	4798      	blx	r3
 80073c4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80073c6:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80073ca:	b2ae      	uxth	r6, r5
 80073cc:	4431      	add	r1, r6
 80073ce:	4620      	mov	r0, r4
 80073d0:	b2c9      	uxtb	r1, r1
 80073d2:	4798      	blx	r3
 80073d4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80073d6:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80073da:	4429      	add	r1, r5
 80073dc:	4620      	mov	r0, r4
 80073de:	f3c1 210f 	ubfx	r1, r1, #8, #16
 80073e2:	4798      	blx	r3
 80073e4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80073e6:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80073ea:	4431      	add	r1, r6
 80073ec:	4620      	mov	r0, r4
 80073ee:	b2c9      	uxtb	r1, r1
 80073f0:	4798      	blx	r3
 80073f2:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 80073f6:	4620      	mov	r0, r4
 80073f8:	212c      	movs	r1, #44	; 0x2c
 80073fa:	4798      	blx	r3
 80073fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080073fe <_SetRect>:
 80073fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007402:	4604      	mov	r4, r0
 8007404:	4688      	mov	r8, r1
 8007406:	461f      	mov	r7, r3
 8007408:	212a      	movs	r1, #42	; 0x2a
 800740a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800740e:	9d06      	ldr	r5, [sp, #24]
 8007410:	4616      	mov	r6, r2
 8007412:	4798      	blx	r3
 8007414:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8007416:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800741a:	4441      	add	r1, r8
 800741c:	4620      	mov	r0, r4
 800741e:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8007422:	4798      	blx	r3
 8007424:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8007426:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800742a:	4441      	add	r1, r8
 800742c:	4620      	mov	r0, r4
 800742e:	b2c9      	uxtb	r1, r1
 8007430:	4798      	blx	r3
 8007432:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8007434:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007438:	4439      	add	r1, r7
 800743a:	4620      	mov	r0, r4
 800743c:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8007440:	4798      	blx	r3
 8007442:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8007444:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007448:	4439      	add	r1, r7
 800744a:	4620      	mov	r0, r4
 800744c:	b2c9      	uxtb	r1, r1
 800744e:	4798      	blx	r3
 8007450:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 8007454:	4620      	mov	r0, r4
 8007456:	212b      	movs	r1, #43	; 0x2b
 8007458:	4798      	blx	r3
 800745a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800745c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007460:	4431      	add	r1, r6
 8007462:	4620      	mov	r0, r4
 8007464:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8007468:	4798      	blx	r3
 800746a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800746c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8007470:	4431      	add	r1, r6
 8007472:	4620      	mov	r0, r4
 8007474:	b2c9      	uxtb	r1, r1
 8007476:	4798      	blx	r3
 8007478:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800747a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800747e:	4429      	add	r1, r5
 8007480:	4620      	mov	r0, r4
 8007482:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8007486:	4798      	blx	r3
 8007488:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800748a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800748e:	4429      	add	r1, r5
 8007490:	4620      	mov	r0, r4
 8007492:	b2c9      	uxtb	r1, r1
 8007494:	4798      	blx	r3
 8007496:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 800749a:	4620      	mov	r0, r4
 800749c:	212c      	movs	r1, #44	; 0x2c
 800749e:	4798      	blx	r3
 80074a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080074a4 <_SetOrientation>:
 80074a4:	b513      	push	{r0, r1, r4, lr}
 80074a6:	4a0d      	ldr	r2, [pc, #52]	; (80074dc <_SetOrientation+0x38>)
 80074a8:	4604      	mov	r4, r0
 80074aa:	6851      	ldr	r1, [r2, #4]
 80074ac:	6810      	ldr	r0, [r2, #0]
 80074ae:	466b      	mov	r3, sp
 80074b0:	c303      	stmia	r3!, {r0, r1}
 80074b2:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
 80074b6:	4620      	mov	r0, r4
 80074b8:	2136      	movs	r1, #54	; 0x36
 80074ba:	4798      	blx	r3
 80074bc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80074be:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 80074c0:	aa02      	add	r2, sp, #8
 80074c2:	4413      	add	r3, r2
 80074c4:	f021 01e0 	bic.w	r1, r1, #224	; 0xe0
 80074c8:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 80074cc:	4319      	orrs	r1, r3
 80074ce:	4620      	mov	r0, r4
 80074d0:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80074d4:	b289      	uxth	r1, r1
 80074d6:	4798      	blx	r3
 80074d8:	b002      	add	sp, #8
 80074da:	bd10      	pop	{r4, pc}
 80074dc:	0800fdc4 	.word	0x0800fdc4

080074e0 <_ReadPixel_16bpp_B8>:
 80074e0:	b513      	push	{r0, r1, r4, lr}
 80074e2:	4604      	mov	r4, r0
 80074e4:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
 80074e8:	202e      	movs	r0, #46	; 0x2e
 80074ea:	4798      	blx	r3
 80074ec:	6a21      	ldr	r1, [r4, #32]
 80074ee:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 80074f2:	4668      	mov	r0, sp
 80074f4:	3103      	adds	r1, #3
 80074f6:	4798      	blx	r3
 80074f8:	6a22      	ldr	r2, [r4, #32]
 80074fa:	ab00      	add	r3, sp, #0
 80074fc:	4413      	add	r3, r2
 80074fe:	f81d 2002 	ldrb.w	r2, [sp, r2]
 8007502:	7859      	ldrb	r1, [r3, #1]
 8007504:	7898      	ldrb	r0, [r3, #2]
 8007506:	08d2      	lsrs	r2, r2, #3
 8007508:	0889      	lsrs	r1, r1, #2
 800750a:	02d2      	lsls	r2, r2, #11
 800750c:	ea42 1241 	orr.w	r2, r2, r1, lsl #5
 8007510:	ea42 00d0 	orr.w	r0, r2, r0, lsr #3
 8007514:	b002      	add	sp, #8
 8007516:	bd10      	pop	{r4, pc}

08007518 <_ReadPixel_16bpp_B16_I>:
 8007518:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800751a:	4604      	mov	r4, r0
 800751c:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 8007520:	202e      	movs	r0, #46	; 0x2e
 8007522:	4798      	blx	r3
 8007524:	6a21      	ldr	r1, [r4, #32]
 8007526:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
 800752a:	4668      	mov	r0, sp
 800752c:	3102      	adds	r1, #2
 800752e:	4798      	blx	r3
 8007530:	6a23      	ldr	r3, [r4, #32]
 8007532:	a900      	add	r1, sp, #0
 8007534:	eb01 0243 	add.w	r2, r1, r3, lsl #1
 8007538:	f83d 0013 	ldrh.w	r0, [sp, r3, lsl #1]
 800753c:	8852      	ldrh	r2, [r2, #2]
 800753e:	f402 417c 	and.w	r1, r2, #64512	; 0xfc00
 8007542:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8007546:	ea42 1251 	orr.w	r2, r2, r1, lsr #5
 800754a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 800754e:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
 8007552:	b004      	add	sp, #16
 8007554:	bd10      	pop	{r4, pc}

08007556 <_SetReg_B8>:
 8007556:	b538      	push	{r3, r4, r5, lr}
 8007558:	4604      	mov	r4, r0
 800755a:	460d      	mov	r5, r1
 800755c:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
 8007560:	0a08      	lsrs	r0, r1, #8
 8007562:	4798      	blx	r3
 8007564:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8007568:	b2e8      	uxtb	r0, r5
 800756a:	4798      	blx	r3
 800756c:	bd38      	pop	{r3, r4, r5, pc}

0800756e <_SetReg_B16>:
 800756e:	b508      	push	{r3, lr}
 8007570:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 8007574:	4608      	mov	r0, r1
 8007576:	4798      	blx	r3
 8007578:	bd08      	pop	{r3, pc}

0800757a <_WritePara_B8>:
 800757a:	b508      	push	{r3, lr}
 800757c:	f8d0 3118 	ldr.w	r3, [r0, #280]	; 0x118
 8007580:	b2c8      	uxtb	r0, r1
 8007582:	4798      	blx	r3
 8007584:	bd08      	pop	{r3, pc}

08007586 <_WritePara_B16>:
 8007586:	b508      	push	{r3, lr}
 8007588:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800758c:	4608      	mov	r0, r1
 800758e:	4798      	blx	r3
 8007590:	bd08      	pop	{r3, pc}
	...

08007594 <_SetInterface>:
 8007594:	2908      	cmp	r1, #8
 8007596:	d002      	beq.n	800759e <_SetInterface+0xa>
 8007598:	2910      	cmp	r1, #16
 800759a:	d005      	beq.n	80075a8 <_SetInterface+0x14>
 800759c:	4770      	bx	lr
 800759e:	4b06      	ldr	r3, [pc, #24]	; (80075b8 <_SetInterface+0x24>)
 80075a0:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 80075a4:	4b05      	ldr	r3, [pc, #20]	; (80075bc <_SetInterface+0x28>)
 80075a6:	e003      	b.n	80075b0 <_SetInterface+0x1c>
 80075a8:	4b05      	ldr	r3, [pc, #20]	; (80075c0 <_SetInterface+0x2c>)
 80075aa:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 80075ae:	4b05      	ldr	r3, [pc, #20]	; (80075c4 <_SetInterface+0x30>)
 80075b0:	f8c0 3090 	str.w	r3, [r0, #144]	; 0x90
 80075b4:	4770      	bx	lr
 80075b6:	bf00      	nop
 80075b8:	08007557 	.word	0x08007557
 80075bc:	0800757b 	.word	0x0800757b
 80075c0:	0800756f 	.word	0x0800756f
 80075c4:	08007587 	.word	0x08007587

080075c8 <_ReadRect_16bpp_B8>:
 80075c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80075ca:	b085      	sub	sp, #20
 80075cc:	6884      	ldr	r4, [r0, #8]
 80075ce:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80075d0:	9700      	str	r7, [sp, #0]
 80075d2:	1abd      	subs	r5, r7, r2
 80075d4:	1a58      	subs	r0, r3, r1
 80075d6:	3501      	adds	r5, #1
 80075d8:	fb00 5505 	mla	r5, r0, r5, r5
 80075dc:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 80075e0:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80075e2:	4620      	mov	r0, r4
 80075e4:	47b8      	blx	r7
 80075e6:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 80075ea:	202e      	movs	r0, #46	; 0x2e
 80075ec:	4798      	blx	r3
 80075ee:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 80075f2:	6a21      	ldr	r1, [r4, #32]
 80075f4:	a802      	add	r0, sp, #8
 80075f6:	4798      	blx	r3
 80075f8:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 80075fc:	a802      	add	r0, sp, #8
 80075fe:	2103      	movs	r1, #3
 8007600:	4798      	blx	r3
 8007602:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8007606:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800760a:	08db      	lsrs	r3, r3, #3
 800760c:	0892      	lsrs	r2, r2, #2
 800760e:	02db      	lsls	r3, r3, #11
 8007610:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007614:	f89d 200a 	ldrb.w	r2, [sp, #10]
 8007618:	3d01      	subs	r5, #1
 800761a:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 800761e:	f826 3b02 	strh.w	r3, [r6], #2
 8007622:	d1e9      	bne.n	80075f8 <_ReadRect_16bpp_B8+0x30>
 8007624:	b005      	add	sp, #20
 8007626:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007628 <_ReadRect_16bpp_B16_I>:
 8007628:	b5f0      	push	{r4, r5, r6, r7, lr}
 800762a:	b087      	sub	sp, #28
 800762c:	6884      	ldr	r4, [r0, #8]
 800762e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8007630:	9700      	str	r7, [sp, #0]
 8007632:	1abd      	subs	r5, r7, r2
 8007634:	1a58      	subs	r0, r3, r1
 8007636:	3501      	adds	r5, #1
 8007638:	fb00 5505 	mla	r5, r0, r5, r5
 800763c:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8007640:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8007642:	4620      	mov	r0, r4
 8007644:	47b8      	blx	r7
 8007646:	f8d4 3134 	ldr.w	r3, [r4, #308]	; 0x134
 800764a:	202e      	movs	r0, #46	; 0x2e
 800764c:	4798      	blx	r3
 800764e:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
 8007652:	6a21      	ldr	r1, [r4, #32]
 8007654:	a802      	add	r0, sp, #8
 8007656:	4798      	blx	r3
 8007658:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
 800765c:	a802      	add	r0, sp, #8
 800765e:	2102      	movs	r1, #2
 8007660:	4798      	blx	r3
 8007662:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8007666:	f403 427c 	and.w	r2, r3, #64512	; 0xfc00
 800766a:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 800766e:	ea43 1352 	orr.w	r3, r3, r2, lsr #5
 8007672:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8007676:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 800767a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800767e:	3d01      	subs	r5, #1
 8007680:	f826 3b02 	strh.w	r3, [r6], #2
 8007684:	d1e8      	bne.n	8007658 <_ReadRect_16bpp_B16_I+0x30>
 8007686:	b007      	add	sp, #28
 8007688:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800768c <GUIDRV_FlexColor_SetFunc66709>:
 800768c:	b510      	push	{r4, lr}
 800768e:	4604      	mov	r4, r0
 8007690:	f000 fdae 	bl	80081f0 <GUIDRV_FlexColor__InitOnce>
 8007694:	68a3      	ldr	r3, [r4, #8]
 8007696:	4a12      	ldr	r2, [pc, #72]	; (80076e0 <GUIDRV_FlexColor_SetFunc66709+0x54>)
 8007698:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
 800769c:	4a11      	ldr	r2, [pc, #68]	; (80076e4 <GUIDRV_FlexColor_SetFunc66709+0x58>)
 800769e:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
 80076a2:	4a11      	ldr	r2, [pc, #68]	; (80076e8 <GUIDRV_FlexColor_SetFunc66709+0x5c>)
 80076a4:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
 80076a8:	4a10      	ldr	r2, [pc, #64]	; (80076ec <GUIDRV_FlexColor_SetFunc66709+0x60>)
 80076aa:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 80076ae:	2200      	movs	r2, #0
 80076b0:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 80076b4:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
 80076b8:	4a0d      	ldr	r2, [pc, #52]	; (80076f0 <GUIDRV_FlexColor_SetFunc66709+0x64>)
 80076ba:	490e      	ldr	r1, [pc, #56]	; (80076f4 <GUIDRV_FlexColor_SetFunc66709+0x68>)
 80076bc:	6812      	ldr	r2, [r2, #0]
 80076be:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
 80076c2:	8cda      	ldrh	r2, [r3, #38]	; 0x26
 80076c4:	6809      	ldr	r1, [r1, #0]
 80076c6:	f8c3 10b4 	str.w	r1, [r3, #180]	; 0xb4
 80076ca:	f022 0203 	bic.w	r2, r2, #3
 80076ce:	490a      	ldr	r1, [pc, #40]	; (80076f8 <GUIDRV_FlexColor_SetFunc66709+0x6c>)
 80076d0:	84da      	strh	r2, [r3, #38]	; 0x26
 80076d2:	4a0a      	ldr	r2, [pc, #40]	; (80076fc <GUIDRV_FlexColor_SetFunc66709+0x70>)
 80076d4:	f8c3 10cc 	str.w	r1, [r3, #204]	; 0xcc
 80076d8:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 80076dc:	bd10      	pop	{r4, pc}
 80076de:	bf00      	nop
 80076e0:	0800735d 	.word	0x0800735d
 80076e4:	080073ff 	.word	0x080073ff
 80076e8:	080074a5 	.word	0x080074a5
 80076ec:	080074e1 	.word	0x080074e1
 80076f0:	2000009c 	.word	0x2000009c
 80076f4:	20000098 	.word	0x20000098
 80076f8:	080075c9 	.word	0x080075c9
 80076fc:	08007595 	.word	0x08007595

08007700 <_ReadData>:
 8007700:	b508      	push	{r3, lr}
 8007702:	f8d0 30b4 	ldr.w	r3, [r0, #180]	; 0xb4
 8007706:	4798      	blx	r3
 8007708:	bd08      	pop	{r3, pc}

0800770a <_WriteData>:
 800770a:	b508      	push	{r3, lr}
 800770c:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 8007710:	b288      	uxth	r0, r1
 8007712:	4798      	blx	r3
 8007714:	bd08      	pop	{r3, pc}
	...

08007718 <_FillRect>:
 8007718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800771c:	4f3d      	ldr	r7, [pc, #244]	; (8007814 <_FillRect+0xfc>)
 800771e:	6884      	ldr	r4, [r0, #8]
 8007720:	4682      	mov	sl, r0
 8007722:	6838      	ldr	r0, [r7, #0]
 8007724:	7c00      	ldrb	r0, [r0, #16]
 8007726:	f010 0f01 	tst.w	r0, #1
 800772a:	b085      	sub	sp, #20
 800772c:	460e      	mov	r6, r1
 800772e:	4615      	mov	r5, r2
 8007730:	4698      	mov	r8, r3
 8007732:	ebc1 0903 	rsb	r9, r1, r3
 8007736:	d045      	beq.n	80077c4 <_FillRect+0xac>
 8007738:	ea4f 0b49 	mov.w	fp, r9, lsl #1
 800773c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800773e:	4285      	cmp	r5, r0
 8007740:	dc65      	bgt.n	800780e <_FillRect+0xf6>
 8007742:	f8d4 c0c8 	ldr.w	ip, [r4, #200]	; 0xc8
 8007746:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007748:	f1bc 0f00 	cmp.w	ip, #0
 800774c:	d101      	bne.n	8007752 <_FillRect+0x3a>
 800774e:	46b4      	mov	ip, r6
 8007750:	e007      	b.n	8007762 <_FillRect+0x4a>
 8007752:	e88d 00a0 	stmia.w	sp, {r5, r7}
 8007756:	4650      	mov	r0, sl
 8007758:	4631      	mov	r1, r6
 800775a:	462a      	mov	r2, r5
 800775c:	4643      	mov	r3, r8
 800775e:	47e0      	blx	ip
 8007760:	e011      	b.n	8007786 <_FillRect+0x6e>
 8007762:	45c4      	cmp	ip, r8
 8007764:	dc0e      	bgt.n	8007784 <_FillRect+0x6c>
 8007766:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
 800776a:	f8cd c00c 	str.w	ip, [sp, #12]
 800776e:	4661      	mov	r1, ip
 8007770:	4650      	mov	r0, sl
 8007772:	462a      	mov	r2, r5
 8007774:	4798      	blx	r3
 8007776:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800777a:	f827 0b02 	strh.w	r0, [r7], #2
 800777e:	f10c 0c01 	add.w	ip, ip, #1
 8007782:	e7ee      	b.n	8007762 <_FillRect+0x4a>
 8007784:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007786:	1ebb      	subs	r3, r7, #2
 8007788:	f109 0c01 	add.w	ip, r9, #1
 800778c:	445f      	add	r7, fp
 800778e:	42bb      	cmp	r3, r7
 8007790:	d005      	beq.n	800779e <_FillRect+0x86>
 8007792:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007794:	8859      	ldrh	r1, [r3, #2]
 8007796:	404a      	eors	r2, r1
 8007798:	f823 2f02 	strh.w	r2, [r3, #2]!
 800779c:	e7f7      	b.n	800778e <_FillRect+0x76>
 800779e:	9500      	str	r5, [sp, #0]
 80077a0:	462a      	mov	r2, r5
 80077a2:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 80077a6:	f8cd c00c 	str.w	ip, [sp, #12]
 80077aa:	4620      	mov	r0, r4
 80077ac:	4631      	mov	r1, r6
 80077ae:	4643      	mov	r3, r8
 80077b0:	47b8      	blx	r7
 80077b2:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80077b6:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 80077ba:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 80077bc:	4661      	mov	r1, ip
 80077be:	4798      	blx	r3
 80077c0:	3501      	adds	r5, #1
 80077c2:	e7bb      	b.n	800773c <_FillRect+0x24>
 80077c4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80077c6:	9000      	str	r0, [sp, #0]
 80077c8:	1a85      	subs	r5, r0, r2
 80077ca:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 80077ce:	4620      	mov	r0, r4
 80077d0:	47b0      	blx	r6
 80077d2:	683b      	ldr	r3, [r7, #0]
 80077d4:	6ea7      	ldr	r7, [r4, #104]	; 0x68
 80077d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80077d8:	f109 0901 	add.w	r9, r9, #1
 80077dc:	f8d3 8000 	ldr.w	r8, [r3]
 80077e0:	fb05 9509 	mla	r5, r5, r9, r9
 80077e4:	2301      	movs	r3, #1
 80077e6:	b195      	cbz	r5, 800780e <_FillRect+0xf6>
 80077e8:	2dfa      	cmp	r5, #250	; 0xfa
 80077ea:	bf34      	ite	cc
 80077ec:	462e      	movcc	r6, r5
 80077ee:	26fa      	movcs	r6, #250	; 0xfa
 80077f0:	b12b      	cbz	r3, 80077fe <_FillRect+0xe6>
 80077f2:	4638      	mov	r0, r7
 80077f4:	fa1f f188 	uxth.w	r1, r8
 80077f8:	4632      	mov	r2, r6
 80077fa:	f001 fb32 	bl	8008e62 <GUI__memset16>
 80077fe:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8007802:	4638      	mov	r0, r7
 8007804:	4631      	mov	r1, r6
 8007806:	4798      	blx	r3
 8007808:	1bad      	subs	r5, r5, r6
 800780a:	2300      	movs	r3, #0
 800780c:	e7eb      	b.n	80077e6 <_FillRect+0xce>
 800780e:	b005      	add	sp, #20
 8007810:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007814:	200000b8 	.word	0x200000b8

08007818 <_DrawBitmap>:
 8007818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800781c:	b08d      	sub	sp, #52	; 0x34
 800781e:	6885      	ldr	r5, [r0, #8]
 8007820:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8007822:	9305      	str	r3, [sp, #20]
 8007824:	1e7b      	subs	r3, r7, #1
 8007826:	2b01      	cmp	r3, #1
 8007828:	9009      	str	r0, [sp, #36]	; 0x24
 800782a:	9108      	str	r1, [sp, #32]
 800782c:	920a      	str	r2, [sp, #40]	; 0x28
 800782e:	950b      	str	r5, [sp, #44]	; 0x2c
 8007830:	d903      	bls.n	800783a <_DrawBitmap+0x22>
 8007832:	2f04      	cmp	r7, #4
 8007834:	d001      	beq.n	800783a <_DrawBitmap+0x22>
 8007836:	2f08      	cmp	r7, #8
 8007838:	d106      	bne.n	8007848 <_DrawBitmap+0x30>
 800783a:	4b8f      	ldr	r3, [pc, #572]	; (8007a78 <_DrawBitmap+0x260>)
 800783c:	681b      	ldr	r3, [r3, #0]
 800783e:	7c1b      	ldrb	r3, [r3, #16]
 8007840:	f003 0303 	and.w	r3, r3, #3
 8007844:	2b02      	cmp	r3, #2
 8007846:	d010      	beq.n	800786a <_DrawBitmap+0x52>
 8007848:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800784a:	9f16      	ldr	r7, [sp, #88]	; 0x58
 800784c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800784e:	9908      	ldr	r1, [sp, #32]
 8007850:	9b05      	ldr	r3, [sp, #20]
 8007852:	443a      	add	r2, r7
 8007854:	4429      	add	r1, r5
 8007856:	3a01      	subs	r2, #1
 8007858:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800785a:	9200      	str	r2, [sp, #0]
 800785c:	440b      	add	r3, r1
 800785e:	f8d5 40a8 	ldr.w	r4, [r5, #168]	; 0xa8
 8007862:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007864:	4628      	mov	r0, r5
 8007866:	3b01      	subs	r3, #1
 8007868:	47a0      	blx	r4
 800786a:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800786e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8007870:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8007872:	ebc7 030b 	rsb	r3, r7, fp
 8007876:	42ab      	cmp	r3, r5
 8007878:	f280 8251 	bge.w	8007d1e <_DrawBitmap+0x506>
 800787c:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800787e:	1e7b      	subs	r3, r7, #1
 8007880:	2b0f      	cmp	r3, #15
 8007882:	f200 8245 	bhi.w	8007d10 <_DrawBitmap+0x4f8>
 8007886:	e8df f013 	tbh	[pc, r3, lsl #1]
 800788a:	0010      	.short	0x0010
 800788c:	024300b7 	.word	0x024300b7
 8007890:	02430140 	.word	0x02430140
 8007894:	02430243 	.word	0x02430243
 8007898:	024301d7 	.word	0x024301d7
 800789c:	02430243 	.word	0x02430243
 80078a0:	02430243 	.word	0x02430243
 80078a4:	02430243 	.word	0x02430243
 80078a8:	023d      	.short	0x023d
 80078aa:	4b73      	ldr	r3, [pc, #460]	; (8007a78 <_DrawBitmap+0x260>)
 80078ac:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80078ae:	681b      	ldr	r3, [r3, #0]
 80078b0:	68ac      	ldr	r4, [r5, #8]
 80078b2:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 80078b4:	7c1b      	ldrb	r3, [r3, #16]
 80078b6:	682f      	ldr	r7, [r5, #0]
 80078b8:	686d      	ldr	r5, [r5, #4]
 80078ba:	9507      	str	r5, [sp, #28]
 80078bc:	f8dd a020 	ldr.w	sl, [sp, #32]
 80078c0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80078c2:	f003 0303 	and.w	r3, r3, #3
 80078c6:	2b02      	cmp	r3, #2
 80078c8:	44aa      	add	sl, r5
 80078ca:	d01b      	beq.n	8007904 <_DrawBitmap+0xec>
 80078cc:	2b03      	cmp	r3, #3
 80078ce:	d06e      	beq.n	80079ae <_DrawBitmap+0x196>
 80078d0:	2b01      	cmp	r3, #1
 80078d2:	d06c      	beq.n	80079ae <_DrawBitmap+0x196>
 80078d4:	9e05      	ldr	r6, [sp, #20]
 80078d6:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
 80078da:	f898 1000 	ldrb.w	r1, [r8]
 80078de:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 80078e2:	2280      	movs	r2, #128	; 0x80
 80078e4:	412a      	asrs	r2, r5
 80078e6:	4211      	tst	r1, r2
 80078e8:	bf16      	itet	ne
 80078ea:	9907      	ldrne	r1, [sp, #28]
 80078ec:	b2b8      	uxtheq	r0, r7
 80078ee:	b288      	uxthne	r0, r1
 80078f0:	3501      	adds	r5, #1
 80078f2:	4798      	blx	r3
 80078f4:	2d08      	cmp	r5, #8
 80078f6:	bf04      	itt	eq
 80078f8:	f108 0801 	addeq.w	r8, r8, #1
 80078fc:	2500      	moveq	r5, #0
 80078fe:	3e01      	subs	r6, #1
 8007900:	d1eb      	bne.n	80078da <_DrawBitmap+0xc2>
 8007902:	e205      	b.n	8007d10 <_DrawBitmap+0x4f8>
 8007904:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007906:	9506      	str	r5, [sp, #24]
 8007908:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 800790c:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8007910:	f8cd a00c 	str.w	sl, [sp, #12]
 8007914:	2500      	movs	r5, #0
 8007916:	4656      	mov	r6, sl
 8007918:	462b      	mov	r3, r5
 800791a:	9f06      	ldr	r7, [sp, #24]
 800791c:	f04f 0c80 	mov.w	ip, #128	; 0x80
 8007920:	783a      	ldrb	r2, [r7, #0]
 8007922:	fa4c fc08 	asr.w	ip, ip, r8
 8007926:	ea12 0c0c 	ands.w	ip, r2, ip
 800792a:	d00b      	beq.n	8007944 <_DrawBitmap+0x12c>
 800792c:	b913      	cbnz	r3, 8007934 <_DrawBitmap+0x11c>
 800792e:	f8d4 906c 	ldr.w	r9, [r4, #108]	; 0x6c
 8007932:	9603      	str	r6, [sp, #12]
 8007934:	9f07      	ldr	r7, [sp, #28]
 8007936:	f8a9 7000 	strh.w	r7, [r9]
 800793a:	3501      	adds	r5, #1
 800793c:	f109 0902 	add.w	r9, r9, #2
 8007940:	2301      	movs	r3, #1
 8007942:	e017      	b.n	8007974 <_DrawBitmap+0x15c>
 8007944:	2b01      	cmp	r3, #1
 8007946:	d114      	bne.n	8007972 <_DrawBitmap+0x15a>
 8007948:	f8cd b000 	str.w	fp, [sp]
 800794c:	f8cd c010 	str.w	ip, [sp, #16]
 8007950:	4620      	mov	r0, r4
 8007952:	9903      	ldr	r1, [sp, #12]
 8007954:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8007958:	465a      	mov	r2, fp
 800795a:	1e73      	subs	r3, r6, #1
 800795c:	47b8      	blx	r7
 800795e:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8007962:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8007964:	4629      	mov	r1, r5
 8007966:	4798      	blx	r3
 8007968:	f8dd c010 	ldr.w	ip, [sp, #16]
 800796c:	4665      	mov	r5, ip
 800796e:	4663      	mov	r3, ip
 8007970:	e000      	b.n	8007974 <_DrawBitmap+0x15c>
 8007972:	4663      	mov	r3, ip
 8007974:	f108 0801 	add.w	r8, r8, #1
 8007978:	f1b8 0f08 	cmp.w	r8, #8
 800797c:	f106 0601 	add.w	r6, r6, #1
 8007980:	d104      	bne.n	800798c <_DrawBitmap+0x174>
 8007982:	9f06      	ldr	r7, [sp, #24]
 8007984:	3701      	adds	r7, #1
 8007986:	9706      	str	r7, [sp, #24]
 8007988:	f04f 0800 	mov.w	r8, #0
 800798c:	9a05      	ldr	r2, [sp, #20]
 800798e:	4452      	add	r2, sl
 8007990:	42b2      	cmp	r2, r6
 8007992:	d1c2      	bne.n	800791a <_DrawBitmap+0x102>
 8007994:	9f05      	ldr	r7, [sp, #20]
 8007996:	1e7b      	subs	r3, r7, #1
 8007998:	4453      	add	r3, sl
 800799a:	2d00      	cmp	r5, #0
 800799c:	f000 81b8 	beq.w	8007d10 <_DrawBitmap+0x4f8>
 80079a0:	f8cd b000 	str.w	fp, [sp]
 80079a4:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 80079a8:	9903      	ldr	r1, [sp, #12]
 80079aa:	4620      	mov	r0, r4
 80079ac:	e13d      	b.n	8007c2a <_DrawBitmap+0x412>
 80079ae:	f8dd 8014 	ldr.w	r8, [sp, #20]
 80079b2:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 80079b4:	9d19      	ldr	r5, [sp, #100]	; 0x64
 80079b6:	f8dd 9014 	ldr.w	r9, [sp, #20]
 80079ba:	782a      	ldrb	r2, [r5, #0]
 80079bc:	2380      	movs	r3, #128	; 0x80
 80079be:	4133      	asrs	r3, r6
 80079c0:	44d1      	add	r9, sl
 80079c2:	421a      	tst	r2, r3
 80079c4:	ebc8 0909 	rsb	r9, r8, r9
 80079c8:	d00d      	beq.n	80079e6 <_DrawBitmap+0x1ce>
 80079ca:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
 80079ce:	9809      	ldr	r0, [sp, #36]	; 0x24
 80079d0:	4649      	mov	r1, r9
 80079d2:	465a      	mov	r2, fp
 80079d4:	4798      	blx	r3
 80079d6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80079d8:	f8d4 70f8 	ldr.w	r7, [r4, #248]	; 0xf8
 80079dc:	4043      	eors	r3, r0
 80079de:	4649      	mov	r1, r9
 80079e0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80079e2:	465a      	mov	r2, fp
 80079e4:	47b8      	blx	r7
 80079e6:	3601      	adds	r6, #1
 80079e8:	2e08      	cmp	r6, #8
 80079ea:	bf04      	itt	eq
 80079ec:	3501      	addeq	r5, #1
 80079ee:	2600      	moveq	r6, #0
 80079f0:	f1b8 0801 	subs.w	r8, r8, #1
 80079f4:	d1df      	bne.n	80079b6 <_DrawBitmap+0x19e>
 80079f6:	e18b      	b.n	8007d10 <_DrawBitmap+0x4f8>
 80079f8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80079fa:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80079fc:	68ac      	ldr	r4, [r5, #8]
 80079fe:	2f00      	cmp	r7, #0
 8007a00:	f000 8186 	beq.w	8007d10 <_DrawBitmap+0x4f8>
 8007a04:	4b1c      	ldr	r3, [pc, #112]	; (8007a78 <_DrawBitmap+0x260>)
 8007a06:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007a08:	681b      	ldr	r3, [r3, #0]
 8007a0a:	f895 a000 	ldrb.w	sl, [r5]
 8007a0e:	7c1b      	ldrb	r3, [r3, #16]
 8007a10:	f013 0303 	ands.w	r3, r3, #3
 8007a14:	d011      	beq.n	8007a3a <_DrawBitmap+0x222>
 8007a16:	2b02      	cmp	r3, #2
 8007a18:	f040 817a 	bne.w	8007d10 <_DrawBitmap+0x4f8>
 8007a1c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007a1e:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007a22:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007a24:	9703      	str	r7, [sp, #12]
 8007a26:	44a9      	add	r9, r5
 8007a28:	46a8      	mov	r8, r5
 8007a2a:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007a2c:	9507      	str	r5, [sp, #28]
 8007a2e:	2500      	movs	r5, #0
 8007a30:	f8cd 9018 	str.w	r9, [sp, #24]
 8007a34:	464e      	mov	r6, r9
 8007a36:	462b      	mov	r3, r5
 8007a38:	e040      	b.n	8007abc <_DrawBitmap+0x2a4>
 8007a3a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007a3c:	9e05      	ldr	r6, [sp, #20]
 8007a3e:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8007a40:	f1c5 0303 	rsb	r3, r5, #3
 8007a44:	005b      	lsls	r3, r3, #1
 8007a46:	f1c3 0206 	rsb	r2, r3, #6
 8007a4a:	21c0      	movs	r1, #192	; 0xc0
 8007a4c:	fa41 f202 	asr.w	r2, r1, r2
 8007a50:	ea02 020a 	and.w	r2, r2, sl
 8007a54:	40da      	lsrs	r2, r3
 8007a56:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8007a58:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 8007a5c:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
 8007a60:	3501      	adds	r5, #1
 8007a62:	4798      	blx	r3
 8007a64:	2d04      	cmp	r5, #4
 8007a66:	d103      	bne.n	8007a70 <_DrawBitmap+0x258>
 8007a68:	f897 a001 	ldrb.w	sl, [r7, #1]
 8007a6c:	2500      	movs	r5, #0
 8007a6e:	3701      	adds	r7, #1
 8007a70:	3e01      	subs	r6, #1
 8007a72:	d1e5      	bne.n	8007a40 <_DrawBitmap+0x228>
 8007a74:	e14c      	b.n	8007d10 <_DrawBitmap+0x4f8>
 8007a76:	bf00      	nop
 8007a78:	200000b8 	.word	0x200000b8
 8007a7c:	b913      	cbnz	r3, 8007a84 <_DrawBitmap+0x26c>
 8007a7e:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007a80:	9703      	str	r7, [sp, #12]
 8007a82:	9606      	str	r6, [sp, #24]
 8007a84:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007a86:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 8007a8a:	9f03      	ldr	r7, [sp, #12]
 8007a8c:	803b      	strh	r3, [r7, #0]
 8007a8e:	3702      	adds	r7, #2
 8007a90:	3501      	adds	r5, #1
 8007a92:	9703      	str	r7, [sp, #12]
 8007a94:	2301      	movs	r3, #1
 8007a96:	f108 0801 	add.w	r8, r8, #1
 8007a9a:	f1b8 0f04 	cmp.w	r8, #4
 8007a9e:	f106 0601 	add.w	r6, r6, #1
 8007aa2:	d106      	bne.n	8007ab2 <_DrawBitmap+0x29a>
 8007aa4:	9f07      	ldr	r7, [sp, #28]
 8007aa6:	f897 a001 	ldrb.w	sl, [r7, #1]
 8007aaa:	3701      	adds	r7, #1
 8007aac:	9707      	str	r7, [sp, #28]
 8007aae:	f04f 0800 	mov.w	r8, #0
 8007ab2:	9a05      	ldr	r2, [sp, #20]
 8007ab4:	444a      	add	r2, r9
 8007ab6:	42b2      	cmp	r2, r6
 8007ab8:	f000 80ac 	beq.w	8007c14 <_DrawBitmap+0x3fc>
 8007abc:	f1c8 0203 	rsb	r2, r8, #3
 8007ac0:	0052      	lsls	r2, r2, #1
 8007ac2:	f1c2 0106 	rsb	r1, r2, #6
 8007ac6:	f04f 0cc0 	mov.w	ip, #192	; 0xc0
 8007aca:	fa4c fc01 	asr.w	ip, ip, r1
 8007ace:	ea0c 0c0a 	and.w	ip, ip, sl
 8007ad2:	fa3c fc02 	lsrs.w	ip, ip, r2
 8007ad6:	d1d1      	bne.n	8007a7c <_DrawBitmap+0x264>
 8007ad8:	2b01      	cmp	r3, #1
 8007ada:	d114      	bne.n	8007b06 <_DrawBitmap+0x2ee>
 8007adc:	f8cd b000 	str.w	fp, [sp]
 8007ae0:	f8cd c010 	str.w	ip, [sp, #16]
 8007ae4:	4620      	mov	r0, r4
 8007ae6:	9906      	ldr	r1, [sp, #24]
 8007ae8:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8007aec:	465a      	mov	r2, fp
 8007aee:	1e73      	subs	r3, r6, #1
 8007af0:	47b8      	blx	r7
 8007af2:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8007af6:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8007af8:	4629      	mov	r1, r5
 8007afa:	4798      	blx	r3
 8007afc:	f8dd c010 	ldr.w	ip, [sp, #16]
 8007b00:	4665      	mov	r5, ip
 8007b02:	4663      	mov	r3, ip
 8007b04:	e7c7      	b.n	8007a96 <_DrawBitmap+0x27e>
 8007b06:	4663      	mov	r3, ip
 8007b08:	e7c5      	b.n	8007a96 <_DrawBitmap+0x27e>
 8007b0a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8007b0c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007b0e:	68ac      	ldr	r4, [r5, #8]
 8007b10:	2f00      	cmp	r7, #0
 8007b12:	f000 80fd 	beq.w	8007d10 <_DrawBitmap+0x4f8>
 8007b16:	4b83      	ldr	r3, [pc, #524]	; (8007d24 <_DrawBitmap+0x50c>)
 8007b18:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007b1a:	681b      	ldr	r3, [r3, #0]
 8007b1c:	f895 a000 	ldrb.w	sl, [r5]
 8007b20:	7c1b      	ldrb	r3, [r3, #16]
 8007b22:	f013 0303 	ands.w	r3, r3, #3
 8007b26:	d011      	beq.n	8007b4c <_DrawBitmap+0x334>
 8007b28:	2b02      	cmp	r3, #2
 8007b2a:	f040 80f1 	bne.w	8007d10 <_DrawBitmap+0x4f8>
 8007b2e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007b30:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007b34:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007b36:	9703      	str	r7, [sp, #12]
 8007b38:	44a9      	add	r9, r5
 8007b3a:	46a8      	mov	r8, r5
 8007b3c:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007b3e:	9507      	str	r5, [sp, #28]
 8007b40:	2500      	movs	r5, #0
 8007b42:	f8cd 9018 	str.w	r9, [sp, #24]
 8007b46:	464e      	mov	r6, r9
 8007b48:	462b      	mov	r3, r5
 8007b4a:	e03c      	b.n	8007bc6 <_DrawBitmap+0x3ae>
 8007b4c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8007b4e:	9e05      	ldr	r6, [sp, #20]
 8007b50:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8007b52:	f1c5 0301 	rsb	r3, r5, #1
 8007b56:	009b      	lsls	r3, r3, #2
 8007b58:	f1c3 0204 	rsb	r2, r3, #4
 8007b5c:	21f0      	movs	r1, #240	; 0xf0
 8007b5e:	fa41 f202 	asr.w	r2, r1, r2
 8007b62:	ea02 020a 	and.w	r2, r2, sl
 8007b66:	40da      	lsrs	r2, r3
 8007b68:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8007b6a:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 8007b6e:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
 8007b72:	3501      	adds	r5, #1
 8007b74:	4798      	blx	r3
 8007b76:	2d02      	cmp	r5, #2
 8007b78:	d103      	bne.n	8007b82 <_DrawBitmap+0x36a>
 8007b7a:	f897 a001 	ldrb.w	sl, [r7, #1]
 8007b7e:	2500      	movs	r5, #0
 8007b80:	3701      	adds	r7, #1
 8007b82:	3e01      	subs	r6, #1
 8007b84:	d1e5      	bne.n	8007b52 <_DrawBitmap+0x33a>
 8007b86:	e0c3      	b.n	8007d10 <_DrawBitmap+0x4f8>
 8007b88:	b913      	cbnz	r3, 8007b90 <_DrawBitmap+0x378>
 8007b8a:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 8007b8c:	9703      	str	r7, [sp, #12]
 8007b8e:	9606      	str	r6, [sp, #24]
 8007b90:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007b92:	f857 302c 	ldr.w	r3, [r7, ip, lsl #2]
 8007b96:	9f03      	ldr	r7, [sp, #12]
 8007b98:	803b      	strh	r3, [r7, #0]
 8007b9a:	3702      	adds	r7, #2
 8007b9c:	3501      	adds	r5, #1
 8007b9e:	9703      	str	r7, [sp, #12]
 8007ba0:	2301      	movs	r3, #1
 8007ba2:	f108 0801 	add.w	r8, r8, #1
 8007ba6:	f1b8 0f02 	cmp.w	r8, #2
 8007baa:	f106 0601 	add.w	r6, r6, #1
 8007bae:	d106      	bne.n	8007bbe <_DrawBitmap+0x3a6>
 8007bb0:	9f07      	ldr	r7, [sp, #28]
 8007bb2:	f897 a001 	ldrb.w	sl, [r7, #1]
 8007bb6:	3701      	adds	r7, #1
 8007bb8:	9707      	str	r7, [sp, #28]
 8007bba:	f04f 0800 	mov.w	r8, #0
 8007bbe:	9a05      	ldr	r2, [sp, #20]
 8007bc0:	444a      	add	r2, r9
 8007bc2:	42b2      	cmp	r2, r6
 8007bc4:	d026      	beq.n	8007c14 <_DrawBitmap+0x3fc>
 8007bc6:	f1c8 0201 	rsb	r2, r8, #1
 8007bca:	0092      	lsls	r2, r2, #2
 8007bcc:	f1c2 0104 	rsb	r1, r2, #4
 8007bd0:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
 8007bd4:	fa4c fc01 	asr.w	ip, ip, r1
 8007bd8:	ea0c 0c0a 	and.w	ip, ip, sl
 8007bdc:	fa3c fc02 	lsrs.w	ip, ip, r2
 8007be0:	d1d2      	bne.n	8007b88 <_DrawBitmap+0x370>
 8007be2:	2b01      	cmp	r3, #1
 8007be4:	d114      	bne.n	8007c10 <_DrawBitmap+0x3f8>
 8007be6:	f8cd b000 	str.w	fp, [sp]
 8007bea:	f8cd c010 	str.w	ip, [sp, #16]
 8007bee:	4620      	mov	r0, r4
 8007bf0:	9906      	ldr	r1, [sp, #24]
 8007bf2:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8007bf6:	465a      	mov	r2, fp
 8007bf8:	1e73      	subs	r3, r6, #1
 8007bfa:	47b8      	blx	r7
 8007bfc:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8007c00:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8007c02:	4629      	mov	r1, r5
 8007c04:	4798      	blx	r3
 8007c06:	f8dd c010 	ldr.w	ip, [sp, #16]
 8007c0a:	4665      	mov	r5, ip
 8007c0c:	4663      	mov	r3, ip
 8007c0e:	e7c8      	b.n	8007ba2 <_DrawBitmap+0x38a>
 8007c10:	4663      	mov	r3, ip
 8007c12:	e7c6      	b.n	8007ba2 <_DrawBitmap+0x38a>
 8007c14:	9f05      	ldr	r7, [sp, #20]
 8007c16:	1e7b      	subs	r3, r7, #1
 8007c18:	444b      	add	r3, r9
 8007c1a:	2d00      	cmp	r5, #0
 8007c1c:	d078      	beq.n	8007d10 <_DrawBitmap+0x4f8>
 8007c1e:	f8cd b000 	str.w	fp, [sp]
 8007c22:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8007c26:	9906      	ldr	r1, [sp, #24]
 8007c28:	4620      	mov	r0, r4
 8007c2a:	465a      	mov	r2, fp
 8007c2c:	47b0      	blx	r6
 8007c2e:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8007c32:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8007c34:	4629      	mov	r1, r5
 8007c36:	e06a      	b.n	8007d0e <_DrawBitmap+0x4f6>
 8007c38:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8007c3a:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007c3c:	68ac      	ldr	r4, [r5, #8]
 8007c3e:	2f00      	cmp	r7, #0
 8007c40:	d066      	beq.n	8007d10 <_DrawBitmap+0x4f8>
 8007c42:	4b38      	ldr	r3, [pc, #224]	; (8007d24 <_DrawBitmap+0x50c>)
 8007c44:	681b      	ldr	r3, [r3, #0]
 8007c46:	7c1b      	ldrb	r3, [r3, #16]
 8007c48:	f013 0303 	ands.w	r3, r3, #3
 8007c4c:	d009      	beq.n	8007c62 <_DrawBitmap+0x44a>
 8007c4e:	2b02      	cmp	r3, #2
 8007c50:	d15e      	bne.n	8007d10 <_DrawBitmap+0x4f8>
 8007c52:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8007c56:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 8007c5a:	2600      	movs	r6, #0
 8007c5c:	464f      	mov	r7, r9
 8007c5e:	4633      	mov	r3, r6
 8007c60:	e022      	b.n	8007ca8 <_DrawBitmap+0x490>
 8007c62:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007c64:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8007c66:	9f05      	ldr	r7, [sp, #20]
 8007c68:	443b      	add	r3, r7
 8007c6a:	1b5b      	subs	r3, r3, r5
 8007c6c:	2b00      	cmp	r3, #0
 8007c6e:	dd4f      	ble.n	8007d10 <_DrawBitmap+0x4f8>
 8007c70:	f815 2b01 	ldrb.w	r2, [r5], #1
 8007c74:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8007c76:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 8007c7a:	f837 0022 	ldrh.w	r0, [r7, r2, lsl #2]
 8007c7e:	4798      	blx	r3
 8007c80:	e7f0      	b.n	8007c64 <_DrawBitmap+0x44c>
 8007c82:	b913      	cbnz	r3, 8007c8a <_DrawBitmap+0x472>
 8007c84:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
 8007c88:	46b9      	mov	r9, r7
 8007c8a:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8007c8c:	f855 302a 	ldr.w	r3, [r5, sl, lsl #2]
 8007c90:	f8a8 3000 	strh.w	r3, [r8]
 8007c94:	3601      	adds	r6, #1
 8007c96:	f108 0802 	add.w	r8, r8, #2
 8007c9a:	2301      	movs	r3, #1
 8007c9c:	9a08      	ldr	r2, [sp, #32]
 8007c9e:	9d05      	ldr	r5, [sp, #20]
 8007ca0:	3701      	adds	r7, #1
 8007ca2:	442a      	add	r2, r5
 8007ca4:	42ba      	cmp	r2, r7
 8007ca6:	d01c      	beq.n	8007ce2 <_DrawBitmap+0x4ca>
 8007ca8:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8007caa:	9808      	ldr	r0, [sp, #32]
 8007cac:	1a2a      	subs	r2, r5, r0
 8007cae:	f812 a007 	ldrb.w	sl, [r2, r7]
 8007cb2:	f1ba 0f00 	cmp.w	sl, #0
 8007cb6:	d1e4      	bne.n	8007c82 <_DrawBitmap+0x46a>
 8007cb8:	2b01      	cmp	r3, #1
 8007cba:	d110      	bne.n	8007cde <_DrawBitmap+0x4c6>
 8007cbc:	f8cd b000 	str.w	fp, [sp]
 8007cc0:	4620      	mov	r0, r4
 8007cc2:	4649      	mov	r1, r9
 8007cc4:	465a      	mov	r2, fp
 8007cc6:	1e7b      	subs	r3, r7, #1
 8007cc8:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 8007ccc:	47a8      	blx	r5
 8007cce:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8007cd2:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8007cd4:	4631      	mov	r1, r6
 8007cd6:	4798      	blx	r3
 8007cd8:	4656      	mov	r6, sl
 8007cda:	4653      	mov	r3, sl
 8007cdc:	e7de      	b.n	8007c9c <_DrawBitmap+0x484>
 8007cde:	4653      	mov	r3, sl
 8007ce0:	e7dc      	b.n	8007c9c <_DrawBitmap+0x484>
 8007ce2:	9f08      	ldr	r7, [sp, #32]
 8007ce4:	1e6b      	subs	r3, r5, #1
 8007ce6:	443b      	add	r3, r7
 8007ce8:	b196      	cbz	r6, 8007d10 <_DrawBitmap+0x4f8>
 8007cea:	f8cd b000 	str.w	fp, [sp]
 8007cee:	4620      	mov	r0, r4
 8007cf0:	4649      	mov	r1, r9
 8007cf2:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 8007cf6:	465a      	mov	r2, fp
 8007cf8:	47a8      	blx	r5
 8007cfa:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8007cfe:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 8007d00:	4631      	mov	r1, r6
 8007d02:	e004      	b.n	8007d0e <_DrawBitmap+0x4f6>
 8007d04:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8007d06:	9819      	ldr	r0, [sp, #100]	; 0x64
 8007d08:	f8d5 3140 	ldr.w	r3, [r5, #320]	; 0x140
 8007d0c:	9905      	ldr	r1, [sp, #20]
 8007d0e:	4798      	blx	r3
 8007d10:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8007d12:	9d18      	ldr	r5, [sp, #96]	; 0x60
 8007d14:	442f      	add	r7, r5
 8007d16:	9719      	str	r7, [sp, #100]	; 0x64
 8007d18:	f10b 0b01 	add.w	fp, fp, #1
 8007d1c:	e5a7      	b.n	800786e <_DrawBitmap+0x56>
 8007d1e:	b00d      	add	sp, #52	; 0x34
 8007d20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007d24:	200000b8 	.word	0x200000b8

08007d28 <GUIDRV_FlexColor_SetMode16bppC0B16>:
 8007d28:	b510      	push	{r4, lr}
 8007d2a:	4604      	mov	r4, r0
 8007d2c:	f000 fa60 	bl	80081f0 <GUIDRV_FlexColor__InitOnce>
 8007d30:	68a4      	ldr	r4, [r4, #8]
 8007d32:	4b10      	ldr	r3, [pc, #64]	; (8007d74 <GUIDRV_FlexColor_SetMode16bppC0B16+0x4c>)
 8007d34:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8007d38:	4b0f      	ldr	r3, [pc, #60]	; (8007d78 <GUIDRV_FlexColor_SetMode16bppC0B16+0x50>)
 8007d3a:	f8c4 30f0 	str.w	r3, [r4, #240]	; 0xf0
 8007d3e:	4b0f      	ldr	r3, [pc, #60]	; (8007d7c <GUIDRV_FlexColor_SetMode16bppC0B16+0x54>)
 8007d40:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
 8007d44:	4b0e      	ldr	r3, [pc, #56]	; (8007d80 <GUIDRV_FlexColor_SetMode16bppC0B16+0x58>)
 8007d46:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
 8007d4a:	4b0e      	ldr	r3, [pc, #56]	; (8007d84 <GUIDRV_FlexColor_SetMode16bppC0B16+0x5c>)
 8007d4c:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 8007d50:	4b0d      	ldr	r3, [pc, #52]	; (8007d88 <GUIDRV_FlexColor_SetMode16bppC0B16+0x60>)
 8007d52:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
 8007d56:	f8d4 30c8 	ldr.w	r3, [r4, #200]	; 0xc8
 8007d5a:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8007d5e:	4620      	mov	r0, r4
 8007d60:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 8007d64:	2110      	movs	r1, #16
 8007d66:	4798      	blx	r3
 8007d68:	2310      	movs	r3, #16
 8007d6a:	63a3      	str	r3, [r4, #56]	; 0x38
 8007d6c:	4b07      	ldr	r3, [pc, #28]	; (8007d8c <GUIDRV_FlexColor_SetMode16bppC0B16+0x64>)
 8007d6e:	6463      	str	r3, [r4, #68]	; 0x44
 8007d70:	bd10      	pop	{r4, pc}
 8007d72:	bf00      	nop
 8007d74:	08007819 	.word	0x08007819
 8007d78:	08007719 	.word	0x08007719
 8007d7c:	0800813f 	.word	0x0800813f
 8007d80:	080080af 	.word	0x080080af
 8007d84:	08007701 	.word	0x08007701
 8007d88:	0800770b 	.word	0x0800770b
 8007d8c:	080120e8 	.word	0x080120e8

08007d90 <_Log2PhysX_X0Y0S0>:
 8007d90:	4608      	mov	r0, r1
 8007d92:	4770      	bx	lr

08007d94 <_Log2PhysX_X1Y0S0>:
 8007d94:	6800      	ldr	r0, [r0, #0]
 8007d96:	1a40      	subs	r0, r0, r1
 8007d98:	3801      	subs	r0, #1
 8007d9a:	4770      	bx	lr

08007d9c <_Log2PhysX_X0Y1S0>:
 8007d9c:	4608      	mov	r0, r1
 8007d9e:	4770      	bx	lr

08007da0 <_Log2PhysX_X1Y1S0>:
 8007da0:	6800      	ldr	r0, [r0, #0]
 8007da2:	1a40      	subs	r0, r0, r1
 8007da4:	3801      	subs	r0, #1
 8007da6:	4770      	bx	lr

08007da8 <_Log2PhysX_X0Y0S1>:
 8007da8:	4610      	mov	r0, r2
 8007daa:	4770      	bx	lr

08007dac <_Log2PhysX_X1Y0S1>:
 8007dac:	6840      	ldr	r0, [r0, #4]
 8007dae:	1a80      	subs	r0, r0, r2
 8007db0:	3801      	subs	r0, #1
 8007db2:	4770      	bx	lr

08007db4 <_Log2PhysX_X0Y1S1>:
 8007db4:	4610      	mov	r0, r2
 8007db6:	4770      	bx	lr

08007db8 <_Log2PhysX_X1Y1S1>:
 8007db8:	6840      	ldr	r0, [r0, #4]
 8007dba:	1a80      	subs	r0, r0, r2
 8007dbc:	3801      	subs	r0, #1
 8007dbe:	4770      	bx	lr

08007dc0 <_Log2PhysY_X0Y0S0>:
 8007dc0:	4610      	mov	r0, r2
 8007dc2:	4770      	bx	lr

08007dc4 <_Log2PhysY_X1Y0S0>:
 8007dc4:	4610      	mov	r0, r2
 8007dc6:	4770      	bx	lr

08007dc8 <_Log2PhysY_X0Y1S0>:
 8007dc8:	6840      	ldr	r0, [r0, #4]
 8007dca:	1a80      	subs	r0, r0, r2
 8007dcc:	3801      	subs	r0, #1
 8007dce:	4770      	bx	lr

08007dd0 <_Log2PhysY_X1Y1S0>:
 8007dd0:	6840      	ldr	r0, [r0, #4]
 8007dd2:	1a80      	subs	r0, r0, r2
 8007dd4:	3801      	subs	r0, #1
 8007dd6:	4770      	bx	lr

08007dd8 <_Log2PhysY_X0Y0S1>:
 8007dd8:	4608      	mov	r0, r1
 8007dda:	4770      	bx	lr

08007ddc <_Log2PhysY_X1Y0S1>:
 8007ddc:	4608      	mov	r0, r1
 8007dde:	4770      	bx	lr

08007de0 <_Log2PhysY_X0Y1S1>:
 8007de0:	6800      	ldr	r0, [r0, #0]
 8007de2:	1a40      	subs	r0, r0, r1
 8007de4:	3801      	subs	r0, #1
 8007de6:	4770      	bx	lr

08007de8 <_Log2PhysY_X1Y1S1>:
 8007de8:	6800      	ldr	r0, [r0, #0]
 8007dea:	1a40      	subs	r0, r0, r1
 8007dec:	3801      	subs	r0, #1
 8007dee:	4770      	bx	lr

08007df0 <_SetPixelIndex>:
 8007df0:	b510      	push	{r4, lr}
 8007df2:	6884      	ldr	r4, [r0, #8]
 8007df4:	f8d4 40f8 	ldr.w	r4, [r4, #248]	; 0xf8
 8007df8:	47a0      	blx	r4
 8007dfa:	bd10      	pop	{r4, pc}

08007dfc <_GetPixelIndex>:
 8007dfc:	b508      	push	{r3, lr}
 8007dfe:	6883      	ldr	r3, [r0, #8]
 8007e00:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8007e04:	4798      	blx	r3
 8007e06:	bd08      	pop	{r3, pc}

08007e08 <_XorPixel>:
 8007e08:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007e0a:	4604      	mov	r4, r0
 8007e0c:	460f      	mov	r7, r1
 8007e0e:	4616      	mov	r6, r2
 8007e10:	6885      	ldr	r5, [r0, #8]
 8007e12:	f7ff fff3 	bl	8007dfc <_GetPixelIndex>
 8007e16:	9001      	str	r0, [sp, #4]
 8007e18:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007e1c:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8007e1e:	4620      	mov	r0, r4
 8007e20:	4639      	mov	r1, r7
 8007e22:	4632      	mov	r2, r6
 8007e24:	ea8e 0303 	eor.w	r3, lr, r3
 8007e28:	f7ff ffe2 	bl	8007df0 <_SetPixelIndex>
 8007e2c:	b003      	add	sp, #12
 8007e2e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007e30 <_DrawHLine>:
 8007e30:	b513      	push	{r0, r1, r4, lr}
 8007e32:	6884      	ldr	r4, [r0, #8]
 8007e34:	9200      	str	r2, [sp, #0]
 8007e36:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
 8007e3a:	47a0      	blx	r4
 8007e3c:	b002      	add	sp, #8
 8007e3e:	bd10      	pop	{r4, pc}

08007e40 <_DrawVLine>:
 8007e40:	b513      	push	{r0, r1, r4, lr}
 8007e42:	6884      	ldr	r4, [r0, #8]
 8007e44:	9300      	str	r3, [sp, #0]
 8007e46:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
 8007e4a:	460b      	mov	r3, r1
 8007e4c:	47a0      	blx	r4
 8007e4e:	b002      	add	sp, #8
 8007e50:	bd10      	pop	{r4, pc}

08007e52 <_FillRect>:
 8007e52:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007e54:	9c06      	ldr	r4, [sp, #24]
 8007e56:	6885      	ldr	r5, [r0, #8]
 8007e58:	9400      	str	r4, [sp, #0]
 8007e5a:	f8d5 40f0 	ldr.w	r4, [r5, #240]	; 0xf0
 8007e5e:	47a0      	blx	r4
 8007e60:	b003      	add	sp, #12
 8007e62:	bd30      	pop	{r4, r5, pc}

08007e64 <_DrawBitmap>:
 8007e64:	b530      	push	{r4, r5, lr}
 8007e66:	b087      	sub	sp, #28
 8007e68:	6885      	ldr	r5, [r0, #8]
 8007e6a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8007e6c:	9400      	str	r4, [sp, #0]
 8007e6e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8007e70:	9401      	str	r4, [sp, #4]
 8007e72:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8007e74:	9402      	str	r4, [sp, #8]
 8007e76:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8007e78:	9403      	str	r4, [sp, #12]
 8007e7a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8007e7c:	9404      	str	r4, [sp, #16]
 8007e7e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8007e80:	9405      	str	r4, [sp, #20]
 8007e82:	f8d5 40ec 	ldr.w	r4, [r5, #236]	; 0xec
 8007e86:	47a0      	blx	r4
 8007e88:	b007      	add	sp, #28
 8007e8a:	bd30      	pop	{r4, r5, pc}

08007e8c <_GetDevFunc_SetRect>:
 8007e8c:	4770      	bx	lr
	...

08007e90 <_GetDevFunc_SetRectOutside>:
 8007e90:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007e92:	9e07      	ldr	r6, [sp, #28]
 8007e94:	6884      	ldr	r4, [r0, #8]
 8007e96:	4d0c      	ldr	r5, [pc, #48]	; (8007ec8 <_GetDevFunc_SetRectOutside+0x38>)
 8007e98:	b176      	cbz	r6, 8007eb8 <_GetDevFunc_SetRectOutside+0x28>
 8007e9a:	6828      	ldr	r0, [r5, #0]
 8007e9c:	b988      	cbnz	r0, 8007ec2 <_GetDevFunc_SetRectOutside+0x32>
 8007e9e:	9806      	ldr	r0, [sp, #24]
 8007ea0:	9000      	str	r0, [sp, #0]
 8007ea2:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8007ea6:	4620      	mov	r0, r4
 8007ea8:	47b0      	blx	r6
 8007eaa:	f8d4 30a8 	ldr.w	r3, [r4, #168]	; 0xa8
 8007eae:	602b      	str	r3, [r5, #0]
 8007eb0:	4b06      	ldr	r3, [pc, #24]	; (8007ecc <_GetDevFunc_SetRectOutside+0x3c>)
 8007eb2:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8007eb6:	e004      	b.n	8007ec2 <_GetDevFunc_SetRectOutside+0x32>
 8007eb8:	682b      	ldr	r3, [r5, #0]
 8007eba:	b113      	cbz	r3, 8007ec2 <_GetDevFunc_SetRectOutside+0x32>
 8007ebc:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8007ec0:	602e      	str	r6, [r5, #0]
 8007ec2:	b002      	add	sp, #8
 8007ec4:	bd70      	pop	{r4, r5, r6, pc}
 8007ec6:	bf00      	nop
 8007ec8:	20002a50 	.word	0x20002a50
 8007ecc:	08007e8d 	.word	0x08007e8d

08007ed0 <_ReadPixelCust_16bpp>:
 8007ed0:	b508      	push	{r3, lr}
 8007ed2:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8007ed4:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
 8007ed8:	6990      	ldr	r0, [r2, #24]
 8007eda:	4798      	blx	r3
 8007edc:	bd08      	pop	{r3, pc}

08007ede <_ReadPixelCust_18bpp>:
 8007ede:	b508      	push	{r3, lr}
 8007ee0:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8007ee2:	f8d0 30e0 	ldr.w	r3, [r0, #224]	; 0xe0
 8007ee6:	6990      	ldr	r0, [r2, #24]
 8007ee8:	4798      	blx	r3
 8007eea:	bd08      	pop	{r3, pc}

08007eec <_ReadRectCust_16bpp>:
 8007eec:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007ef0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8007ef2:	6884      	ldr	r4, [r0, #8]
 8007ef4:	9500      	str	r5, [sp, #0]
 8007ef6:	4617      	mov	r7, r2
 8007ef8:	4620      	mov	r0, r4
 8007efa:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8007efe:	4699      	mov	r9, r3
 8007f00:	4688      	mov	r8, r1
 8007f02:	1bed      	subs	r5, r5, r7
 8007f04:	47b0      	blx	r6
 8007f06:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8007f08:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
 8007f0c:	6988      	ldr	r0, [r1, #24]
 8007f0e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8007f10:	ebc8 0809 	rsb	r8, r8, r9
 8007f14:	1c6a      	adds	r2, r5, #1
 8007f16:	fb08 2202 	mla	r2, r8, r2, r2
 8007f1a:	4798      	blx	r3
 8007f1c:	b003      	add	sp, #12
 8007f1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08007f22 <_ReadRectCust_18bpp>:
 8007f22:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007f26:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8007f28:	6884      	ldr	r4, [r0, #8]
 8007f2a:	9500      	str	r5, [sp, #0]
 8007f2c:	4617      	mov	r7, r2
 8007f2e:	4620      	mov	r0, r4
 8007f30:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 8007f34:	4699      	mov	r9, r3
 8007f36:	4688      	mov	r8, r1
 8007f38:	1bed      	subs	r5, r5, r7
 8007f3a:	47b0      	blx	r6
 8007f3c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8007f3e:	f8d4 30e8 	ldr.w	r3, [r4, #232]	; 0xe8
 8007f42:	6988      	ldr	r0, [r1, #24]
 8007f44:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8007f46:	ebc8 0809 	rsb	r8, r8, r9
 8007f4a:	1c6a      	adds	r2, r5, #1
 8007f4c:	fb08 2202 	mla	r2, r8, r2, r2
 8007f50:	4798      	blx	r3
 8007f52:	b003      	add	sp, #12
 8007f54:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08007f58 <_GetDevFunc>:
 8007f58:	3901      	subs	r1, #1
 8007f5a:	2917      	cmp	r1, #23
 8007f5c:	d828      	bhi.n	8007fb0 <_GetDevFunc+0x58>
 8007f5e:	e8df f001 	tbb	[pc, r1]
 8007f62:	2714      	.short	0x2714
 8007f64:	27272727 	.word	0x27272727
 8007f68:	0e272727 	.word	0x0e272727
 8007f6c:	0c191210 	.word	0x0c191210
 8007f70:	27272729 	.word	0x27272729
 8007f74:	23272727 	.word	0x23272727
 8007f78:	251e      	.short	0x251e
 8007f7a:	480f      	ldr	r0, [pc, #60]	; (8007fb8 <_GetDevFunc+0x60>)
 8007f7c:	4770      	bx	lr
 8007f7e:	480f      	ldr	r0, [pc, #60]	; (8007fbc <_GetDevFunc+0x64>)
 8007f80:	4770      	bx	lr
 8007f82:	480f      	ldr	r0, [pc, #60]	; (8007fc0 <_GetDevFunc+0x68>)
 8007f84:	4770      	bx	lr
 8007f86:	480f      	ldr	r0, [pc, #60]	; (8007fc4 <_GetDevFunc+0x6c>)
 8007f88:	4770      	bx	lr
 8007f8a:	6803      	ldr	r3, [r0, #0]
 8007f8c:	689b      	ldr	r3, [r3, #8]
 8007f8e:	f8d3 0104 	ldr.w	r0, [r3, #260]	; 0x104
 8007f92:	4770      	bx	lr
 8007f94:	6803      	ldr	r3, [r0, #0]
 8007f96:	689b      	ldr	r3, [r3, #8]
 8007f98:	f8d3 00fc 	ldr.w	r0, [r3, #252]	; 0xfc
 8007f9c:	4770      	bx	lr
 8007f9e:	6803      	ldr	r3, [r0, #0]
 8007fa0:	689b      	ldr	r3, [r3, #8]
 8007fa2:	f8d3 0100 	ldr.w	r0, [r3, #256]	; 0x100
 8007fa6:	4770      	bx	lr
 8007fa8:	4807      	ldr	r0, [pc, #28]	; (8007fc8 <_GetDevFunc+0x70>)
 8007faa:	4770      	bx	lr
 8007fac:	4807      	ldr	r0, [pc, #28]	; (8007fcc <_GetDevFunc+0x74>)
 8007fae:	4770      	bx	lr
 8007fb0:	2000      	movs	r0, #0
 8007fb2:	4770      	bx	lr
 8007fb4:	4806      	ldr	r0, [pc, #24]	; (8007fd0 <_GetDevFunc+0x78>)
 8007fb6:	4770      	bx	lr
 8007fb8:	08008351 	.word	0x08008351
 8007fbc:	08008327 	.word	0x08008327
 8007fc0:	08008313 	.word	0x08008313
 8007fc4:	080082c9 	.word	0x080082c9
 8007fc8:	0800822d 	.word	0x0800822d
 8007fcc:	08007e91 	.word	0x08007e91
 8007fd0:	0800833b 	.word	0x0800833b

08007fd4 <_GetDevProp>:
 8007fd4:	3901      	subs	r1, #1
 8007fd6:	6880      	ldr	r0, [r0, #8]
 8007fd8:	290d      	cmp	r1, #13
 8007fda:	d823      	bhi.n	8008024 <_GetDevProp+0x50>
 8007fdc:	e8df f001 	tbb	[pc, r1]
 8007fe0:	0f0d0b09 	.word	0x0f0d0b09
 8007fe4:	11222222 	.word	0x11222222
 8007fe8:	13252507 	.word	0x13252507
 8007fec:	1d18      	.short	0x1d18
 8007fee:	2000      	movs	r0, #0
 8007ff0:	4770      	bx	lr
 8007ff2:	6800      	ldr	r0, [r0, #0]
 8007ff4:	4770      	bx	lr
 8007ff6:	6840      	ldr	r0, [r0, #4]
 8007ff8:	4770      	bx	lr
 8007ffa:	6880      	ldr	r0, [r0, #8]
 8007ffc:	4770      	bx	lr
 8007ffe:	68c0      	ldr	r0, [r0, #12]
 8008000:	4770      	bx	lr
 8008002:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8008004:	4770      	bx	lr
 8008006:	b188      	cbz	r0, 800802c <_GetDevProp+0x58>
 8008008:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800800a:	f000 0001 	and.w	r0, r0, #1
 800800e:	4770      	bx	lr
 8008010:	b160      	cbz	r0, 800802c <_GetDevProp+0x58>
 8008012:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8008014:	f3c0 0040 	ubfx	r0, r0, #1, #1
 8008018:	4770      	bx	lr
 800801a:	b138      	cbz	r0, 800802c <_GetDevProp+0x58>
 800801c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800801e:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8008022:	4770      	bx	lr
 8008024:	f04f 30ff 	mov.w	r0, #4294967295
 8008028:	4770      	bx	lr
 800802a:	2001      	movs	r0, #1
 800802c:	4770      	bx	lr

0800802e <_GetDevData>:
 800802e:	6883      	ldr	r3, [r0, #8]
 8008030:	2901      	cmp	r1, #1
 8008032:	bf0c      	ite	eq
 8008034:	6c58      	ldreq	r0, [r3, #68]	; 0x44
 8008036:	2000      	movne	r0, #0
 8008038:	4770      	bx	lr

0800803a <_GetRect>:
 800803a:	6883      	ldr	r3, [r0, #8]
 800803c:	2200      	movs	r2, #0
 800803e:	800a      	strh	r2, [r1, #0]
 8008040:	804a      	strh	r2, [r1, #2]
 8008042:	681a      	ldr	r2, [r3, #0]
 8008044:	685b      	ldr	r3, [r3, #4]
 8008046:	3a01      	subs	r2, #1
 8008048:	3b01      	subs	r3, #1
 800804a:	808a      	strh	r2, [r1, #4]
 800804c:	80cb      	strh	r3, [r1, #6]
 800804e:	4770      	bx	lr

08008050 <GUIDRV_FlexColor__SetLog2Phys>:
 8008050:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008052:	4d10      	ldr	r5, [pc, #64]	; (8008094 <GUIDRV_FlexColor__SetLog2Phys+0x44>)
 8008054:	462e      	mov	r6, r5
 8008056:	4607      	mov	r7, r0
 8008058:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800805a:	b091      	sub	sp, #68	; 0x44
 800805c:	466c      	mov	r4, sp
 800805e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008060:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8008064:	3520      	adds	r5, #32
 8008066:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800806a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800806c:	ac08      	add	r4, sp, #32
 800806e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008070:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8008074:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8008078:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800807a:	aa10      	add	r2, sp, #64	; 0x40
 800807c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8008080:	f853 2c40 	ldr.w	r2, [r3, #-64]
 8008084:	f8c7 2108 	str.w	r2, [r7, #264]	; 0x108
 8008088:	f853 3c20 	ldr.w	r3, [r3, #-32]
 800808c:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8008090:	b011      	add	sp, #68	; 0x44
 8008092:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008094:	0800fdcc 	.word	0x0800fdcc

08008098 <_SetOrg>:
 8008098:	b507      	push	{r0, r1, r2, lr}
 800809a:	6980      	ldr	r0, [r0, #24]
 800809c:	e88d 0006 	stmia.w	sp, {r1, r2}
 80080a0:	2103      	movs	r1, #3
 80080a2:	466a      	mov	r2, sp
 80080a4:	f7f8 fbe2 	bl	800086c <LCD_X_DisplayDriver>
 80080a8:	b003      	add	sp, #12
 80080aa:	f85d fb04 	ldr.w	pc, [sp], #4

080080ae <GUIDRV_FlexColor__SetPixelIndexNoCache>:
 80080ae:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80080b2:	6884      	ldr	r4, [r0, #8]
 80080b4:	4698      	mov	r8, r3
 80080b6:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80080b8:	079b      	lsls	r3, r3, #30
 80080ba:	4689      	mov	r9, r1
 80080bc:	4617      	mov	r7, r2
 80080be:	d532      	bpl.n	8008126 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x78>
 80080c0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80080c4:	4620      	mov	r0, r4
 80080c6:	4798      	blx	r3
 80080c8:	f8d4 510c 	ldr.w	r5, [r4, #268]	; 0x10c
 80080cc:	4606      	mov	r6, r0
 80080ce:	463a      	mov	r2, r7
 80080d0:	4620      	mov	r0, r4
 80080d2:	4649      	mov	r1, r9
 80080d4:	47a8      	blx	r5
 80080d6:	6923      	ldr	r3, [r4, #16]
 80080d8:	69a2      	ldr	r2, [r4, #24]
 80080da:	429e      	cmp	r6, r3
 80080dc:	bfac      	ite	ge
 80080de:	2300      	movge	r3, #0
 80080e0:	2301      	movlt	r3, #1
 80080e2:	4296      	cmp	r6, r2
 80080e4:	bfd4      	ite	le
 80080e6:	461a      	movle	r2, r3
 80080e8:	f043 0201 	orrgt.w	r2, r3, #1
 80080ec:	6963      	ldr	r3, [r4, #20]
 80080ee:	4298      	cmp	r0, r3
 80080f0:	bfac      	ite	ge
 80080f2:	4613      	movge	r3, r2
 80080f4:	f042 0301 	orrlt.w	r3, r2, #1
 80080f8:	4605      	mov	r5, r0
 80080fa:	b913      	cbnz	r3, 8008102 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x54>
 80080fc:	69e3      	ldr	r3, [r4, #28]
 80080fe:	4298      	cmp	r0, r3
 8008100:	dd0a      	ble.n	8008118 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x6a>
 8008102:	6862      	ldr	r2, [r4, #4]
 8008104:	6823      	ldr	r3, [r4, #0]
 8008106:	3a01      	subs	r2, #1
 8008108:	9200      	str	r2, [sp, #0]
 800810a:	2100      	movs	r1, #0
 800810c:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 8008110:	4620      	mov	r0, r4
 8008112:	460a      	mov	r2, r1
 8008114:	3b01      	subs	r3, #1
 8008116:	47b8      	blx	r7
 8008118:	f8d4 70ac 	ldr.w	r7, [r4, #172]	; 0xac
 800811c:	4620      	mov	r0, r4
 800811e:	4631      	mov	r1, r6
 8008120:	462a      	mov	r2, r5
 8008122:	47b8      	blx	r7
 8008124:	e003      	b.n	800812e <GUIDRV_FlexColor__SetPixelIndexNoCache+0x80>
 8008126:	f8d4 50ac 	ldr.w	r5, [r4, #172]	; 0xac
 800812a:	4620      	mov	r0, r4
 800812c:	47a8      	blx	r5
 800812e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8008132:	4620      	mov	r0, r4
 8008134:	4641      	mov	r1, r8
 8008136:	4798      	blx	r3
 8008138:	b003      	add	sp, #12
 800813a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800813e <GUIDRV_FlexColor__GetPixelIndexNoCache>:
 800813e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008140:	6884      	ldr	r4, [r0, #8]
 8008142:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8008144:	079b      	lsls	r3, r3, #30
 8008146:	460f      	mov	r7, r1
 8008148:	4616      	mov	r6, r2
 800814a:	d545      	bpl.n	80081d8 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x9a>
 800814c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8008150:	4620      	mov	r0, r4
 8008152:	4798      	blx	r3
 8008154:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8008158:	4632      	mov	r2, r6
 800815a:	4605      	mov	r5, r0
 800815c:	4639      	mov	r1, r7
 800815e:	4620      	mov	r0, r4
 8008160:	4798      	blx	r3
 8008162:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8008166:	4606      	mov	r6, r0
 8008168:	b11b      	cbz	r3, 8008172 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x34>
 800816a:	4620      	mov	r0, r4
 800816c:	2101      	movs	r1, #1
 800816e:	2200      	movs	r2, #0
 8008170:	4798      	blx	r3
 8008172:	6923      	ldr	r3, [r4, #16]
 8008174:	69a2      	ldr	r2, [r4, #24]
 8008176:	429d      	cmp	r5, r3
 8008178:	bfac      	ite	ge
 800817a:	2300      	movge	r3, #0
 800817c:	2301      	movlt	r3, #1
 800817e:	4295      	cmp	r5, r2
 8008180:	bfd4      	ite	le
 8008182:	461a      	movle	r2, r3
 8008184:	f043 0201 	orrgt.w	r2, r3, #1
 8008188:	6963      	ldr	r3, [r4, #20]
 800818a:	429e      	cmp	r6, r3
 800818c:	bfac      	ite	ge
 800818e:	4613      	movge	r3, r2
 8008190:	f042 0301 	orrlt.w	r3, r2, #1
 8008194:	b913      	cbnz	r3, 800819c <GUIDRV_FlexColor__GetPixelIndexNoCache+0x5e>
 8008196:	69e3      	ldr	r3, [r4, #28]
 8008198:	429e      	cmp	r6, r3
 800819a:	dd0a      	ble.n	80081b2 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x74>
 800819c:	6862      	ldr	r2, [r4, #4]
 800819e:	6823      	ldr	r3, [r4, #0]
 80081a0:	3a01      	subs	r2, #1
 80081a2:	9200      	str	r2, [sp, #0]
 80081a4:	2100      	movs	r1, #0
 80081a6:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 80081aa:	4620      	mov	r0, r4
 80081ac:	460a      	mov	r2, r1
 80081ae:	3b01      	subs	r3, #1
 80081b0:	47b8      	blx	r7
 80081b2:	4629      	mov	r1, r5
 80081b4:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 80081b8:	4620      	mov	r0, r4
 80081ba:	4632      	mov	r2, r6
 80081bc:	4798      	blx	r3
 80081be:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 80081c2:	4620      	mov	r0, r4
 80081c4:	4798      	blx	r3
 80081c6:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 80081ca:	4605      	mov	r5, r0
 80081cc:	b16b      	cbz	r3, 80081ea <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 80081ce:	4620      	mov	r0, r4
 80081d0:	2100      	movs	r1, #0
 80081d2:	2201      	movs	r2, #1
 80081d4:	4798      	blx	r3
 80081d6:	e008      	b.n	80081ea <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
 80081d8:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 80081dc:	4620      	mov	r0, r4
 80081de:	4798      	blx	r3
 80081e0:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
 80081e4:	4620      	mov	r0, r4
 80081e6:	4798      	blx	r3
 80081e8:	4605      	mov	r5, r0
 80081ea:	4628      	mov	r0, r5
 80081ec:	b003      	add	sp, #12
 80081ee:	bdf0      	pop	{r4, r5, r6, r7, pc}

080081f0 <GUIDRV_FlexColor__InitOnce>:
 80081f0:	b538      	push	{r3, r4, r5, lr}
 80081f2:	6885      	ldr	r5, [r0, #8]
 80081f4:	4604      	mov	r4, r0
 80081f6:	b99d      	cbnz	r5, 8008220 <GUIDRV_FlexColor__InitOnce+0x30>
 80081f8:	f44f 70be 	mov.w	r0, #380	; 0x17c
 80081fc:	f003 fa04 	bl	800b608 <GUI_ALLOC_GetFixedBlock>
 8008200:	4b08      	ldr	r3, [pc, #32]	; (8008224 <GUIDRV_FlexColor__InitOnce+0x34>)
 8008202:	60a0      	str	r0, [r4, #8]
 8008204:	681b      	ldr	r3, [r3, #0]
 8008206:	f44f 72be 	mov.w	r2, #380	; 0x17c
 800820a:	4629      	mov	r1, r5
 800820c:	4798      	blx	r3
 800820e:	68a3      	ldr	r3, [r4, #8]
 8008210:	2202      	movs	r2, #2
 8008212:	84da      	strh	r2, [r3, #38]	; 0x26
 8008214:	2201      	movs	r2, #1
 8008216:	621a      	str	r2, [r3, #32]
 8008218:	4a03      	ldr	r2, [pc, #12]	; (8008228 <GUIDRV_FlexColor__InitOnce+0x38>)
 800821a:	641c      	str	r4, [r3, #64]	; 0x40
 800821c:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
 8008220:	bd38      	pop	{r3, r4, r5, pc}
 8008222:	bf00      	nop
 8008224:	200000a4 	.word	0x200000a4
 8008228:	08008051 	.word	0x08008051

0800822c <_SetDevFunc>:
 800822c:	b570      	push	{r4, r5, r6, lr}
 800822e:	4606      	mov	r6, r0
 8008230:	460d      	mov	r5, r1
 8008232:	4614      	mov	r4, r2
 8008234:	f7ff ffdc 	bl	80081f0 <GUIDRV_FlexColor__InitOnce>
 8008238:	68b3      	ldr	r3, [r6, #8]
 800823a:	2b00      	cmp	r3, #0
 800823c:	d03b      	beq.n	80082b6 <_SetDevFunc+0x8a>
 800823e:	2d26      	cmp	r5, #38	; 0x26
 8008240:	d002      	beq.n	8008248 <_SetDevFunc+0x1c>
 8008242:	2d27      	cmp	r5, #39	; 0x27
 8008244:	d016      	beq.n	8008274 <_SetDevFunc+0x48>
 8008246:	bd70      	pop	{r4, r5, r6, pc}
 8008248:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800824a:	2a10      	cmp	r2, #16
 800824c:	d002      	beq.n	8008254 <_SetDevFunc+0x28>
 800824e:	2a12      	cmp	r2, #18
 8008250:	d008      	beq.n	8008264 <_SetDevFunc+0x38>
 8008252:	bd70      	pop	{r4, r5, r6, pc}
 8008254:	4a18      	ldr	r2, [pc, #96]	; (80082b8 <_SetDevFunc+0x8c>)
 8008256:	f8c3 40dc 	str.w	r4, [r3, #220]	; 0xdc
 800825a:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 800825e:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 8008262:	bd70      	pop	{r4, r5, r6, pc}
 8008264:	4a15      	ldr	r2, [pc, #84]	; (80082bc <_SetDevFunc+0x90>)
 8008266:	f8c3 40e0 	str.w	r4, [r3, #224]	; 0xe0
 800826a:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800826e:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 8008272:	bd70      	pop	{r4, r5, r6, pc}
 8008274:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8008276:	2a10      	cmp	r2, #16
 8008278:	d002      	beq.n	8008280 <_SetDevFunc+0x54>
 800827a:	2a12      	cmp	r2, #18
 800827c:	d00e      	beq.n	800829c <_SetDevFunc+0x70>
 800827e:	bd70      	pop	{r4, r5, r6, pc}
 8008280:	b13c      	cbz	r4, 8008292 <_SetDevFunc+0x66>
 8008282:	4a0f      	ldr	r2, [pc, #60]	; (80082c0 <_SetDevFunc+0x94>)
 8008284:	f8c3 40e4 	str.w	r4, [r3, #228]	; 0xe4
 8008288:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
 800828c:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
 8008290:	bd70      	pop	{r4, r5, r6, pc}
 8008292:	f8c3 40cc 	str.w	r4, [r3, #204]	; 0xcc
 8008296:	f8c3 40c8 	str.w	r4, [r3, #200]	; 0xc8
 800829a:	bd70      	pop	{r4, r5, r6, pc}
 800829c:	b13c      	cbz	r4, 80082ae <_SetDevFunc+0x82>
 800829e:	4a09      	ldr	r2, [pc, #36]	; (80082c4 <_SetDevFunc+0x98>)
 80082a0:	f8c3 40e8 	str.w	r4, [r3, #232]	; 0xe8
 80082a4:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
 80082a8:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 80082ac:	bd70      	pop	{r4, r5, r6, pc}
 80082ae:	f8c3 40d0 	str.w	r4, [r3, #208]	; 0xd0
 80082b2:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
 80082b6:	bd70      	pop	{r4, r5, r6, pc}
 80082b8:	08007ed1 	.word	0x08007ed1
 80082bc:	08007edf 	.word	0x08007edf
 80082c0:	08007eed 	.word	0x08007eed
 80082c4:	08007f23 	.word	0x08007f23

080082c8 <_GetDevFunc_Init>:
 80082c8:	b538      	push	{r3, r4, r5, lr}
 80082ca:	4605      	mov	r5, r0
 80082cc:	f7ff ff90 	bl	80081f0 <GUIDRV_FlexColor__InitOnce>
 80082d0:	68ac      	ldr	r4, [r5, #8]
 80082d2:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80082d6:	f003 f997 	bl	800b608 <GUI_ALLOC_GetFixedBlock>
 80082da:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80082dc:	66a0      	str	r0, [r4, #104]	; 0x68
 80082de:	3307      	adds	r3, #7
 80082e0:	10d8      	asrs	r0, r3, #3
 80082e2:	6823      	ldr	r3, [r4, #0]
 80082e4:	4358      	muls	r0, r3
 80082e6:	f003 f98f 	bl	800b608 <GUI_ALLOC_GetFixedBlock>
 80082ea:	2101      	movs	r1, #1
 80082ec:	2200      	movs	r2, #0
 80082ee:	66e0      	str	r0, [r4, #108]	; 0x6c
 80082f0:	69a8      	ldr	r0, [r5, #24]
 80082f2:	f7f8 fabb 	bl	800086c <LCD_X_DisplayDriver>
 80082f6:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 80082fa:	4605      	mov	r5, r0
 80082fc:	4620      	mov	r0, r4
 80082fe:	4798      	blx	r3
 8008300:	4620      	mov	r0, r4
 8008302:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 8008306:	4798      	blx	r3
 8008308:	2d00      	cmp	r5, #0
 800830a:	bfd4      	ite	le
 800830c:	2000      	movle	r0, #0
 800830e:	2001      	movgt	r0, #1
 8008310:	bd38      	pop	{r3, r4, r5, pc}

08008312 <_GetDevFunc_SetSize>:
 8008312:	b570      	push	{r4, r5, r6, lr}
 8008314:	4604      	mov	r4, r0
 8008316:	460d      	mov	r5, r1
 8008318:	4616      	mov	r6, r2
 800831a:	f7ff ff69 	bl	80081f0 <GUIDRV_FlexColor__InitOnce>
 800831e:	68a3      	ldr	r3, [r4, #8]
 8008320:	e883 0060 	stmia.w	r3, {r5, r6}
 8008324:	bd70      	pop	{r4, r5, r6, pc}

08008326 <_GetDevFunc_SetVSize>:
 8008326:	b570      	push	{r4, r5, r6, lr}
 8008328:	4604      	mov	r4, r0
 800832a:	460d      	mov	r5, r1
 800832c:	4616      	mov	r6, r2
 800832e:	f7ff ff5f 	bl	80081f0 <GUIDRV_FlexColor__InitOnce>
 8008332:	68a3      	ldr	r3, [r4, #8]
 8008334:	609d      	str	r5, [r3, #8]
 8008336:	60de      	str	r6, [r3, #12]
 8008338:	bd70      	pop	{r4, r5, r6, pc}

0800833a <_GetDevFunc_Off>:
 800833a:	b510      	push	{r4, lr}
 800833c:	4604      	mov	r4, r0
 800833e:	f7ff ff57 	bl	80081f0 <GUIDRV_FlexColor__InitOnce>
 8008342:	69a0      	ldr	r0, [r4, #24]
 8008344:	2106      	movs	r1, #6
 8008346:	2200      	movs	r2, #0
 8008348:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800834c:	f7f8 ba8e 	b.w	800086c <LCD_X_DisplayDriver>

08008350 <_GetDevFunc_On>:
 8008350:	b510      	push	{r4, lr}
 8008352:	4604      	mov	r4, r0
 8008354:	f7ff ff4c 	bl	80081f0 <GUIDRV_FlexColor__InitOnce>
 8008358:	69a0      	ldr	r0, [r4, #24]
 800835a:	2105      	movs	r1, #5
 800835c:	2200      	movs	r2, #0
 800835e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008362:	f7f8 ba83 	b.w	800086c <LCD_X_DisplayDriver>

08008366 <GUIDRV_FlexColor_Config>:
 8008366:	b538      	push	{r3, r4, r5, lr}
 8008368:	4605      	mov	r5, r0
 800836a:	460c      	mov	r4, r1
 800836c:	f7ff ff40 	bl	80081f0 <GUIDRV_FlexColor__InitOnce>
 8008370:	68ab      	ldr	r3, [r5, #8]
 8008372:	6822      	ldr	r2, [r4, #0]
 8008374:	62da      	str	r2, [r3, #44]	; 0x2c
 8008376:	6862      	ldr	r2, [r4, #4]
 8008378:	631a      	str	r2, [r3, #48]	; 0x30
 800837a:	68a2      	ldr	r2, [r4, #8]
 800837c:	635a      	str	r2, [r3, #52]	; 0x34
 800837e:	0752      	lsls	r2, r2, #29
 8008380:	d507      	bpl.n	8008392 <GUIDRV_FlexColor_Config+0x2c>
 8008382:	e893 0006 	ldmia.w	r3, {r1, r2}
 8008386:	601a      	str	r2, [r3, #0]
 8008388:	6059      	str	r1, [r3, #4]
 800838a:	68da      	ldr	r2, [r3, #12]
 800838c:	6899      	ldr	r1, [r3, #8]
 800838e:	60d9      	str	r1, [r3, #12]
 8008390:	609a      	str	r2, [r3, #8]
 8008392:	89a2      	ldrh	r2, [r4, #12]
 8008394:	849a      	strh	r2, [r3, #36]	; 0x24
 8008396:	6922      	ldr	r2, [r4, #16]
 8008398:	b112      	cbz	r2, 80083a0 <GUIDRV_FlexColor_Config+0x3a>
 800839a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800839e:	621a      	str	r2, [r3, #32]
 80083a0:	bd38      	pop	{r3, r4, r5, pc}

080083a2 <GUIDRV_FlexColor_SetFunc>:
 80083a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80083a6:	4604      	mov	r4, r0
 80083a8:	461f      	mov	r7, r3
 80083aa:	4616      	mov	r6, r2
 80083ac:	4688      	mov	r8, r1
 80083ae:	f7ff ff1f 	bl	80081f0 <GUIDRV_FlexColor__InitOnce>
 80083b2:	68a5      	ldr	r5, [r4, #8]
 80083b4:	4641      	mov	r1, r8
 80083b6:	2268      	movs	r2, #104	; 0x68
 80083b8:	f505 708a 	add.w	r0, r5, #276	; 0x114
 80083bc:	f007 fc6a 	bl	800fc94 <memcpy>
 80083c0:	4620      	mov	r0, r4
 80083c2:	47b0      	blx	r6
 80083c4:	4620      	mov	r0, r4
 80083c6:	47b8      	blx	r7
 80083c8:	6923      	ldr	r3, [r4, #16]
 80083ca:	689b      	ldr	r3, [r3, #8]
 80083cc:	4798      	blx	r3
 80083ce:	62a8      	str	r0, [r5, #40]	; 0x28
 80083d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080083d4 <LCD_UpdateColorIndices>:
 80083d4:	b510      	push	{r4, lr}
 80083d6:	4c07      	ldr	r4, [pc, #28]	; (80083f4 <LCD_UpdateColorIndices+0x20>)
 80083d8:	6823      	ldr	r3, [r4, #0]
 80083da:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80083dc:	f000 fc68 	bl	8008cb0 <LCD_Color2Index>
 80083e0:	f000 fc86 	bl	8008cf0 <LCD_SetColorIndex>
 80083e4:	6823      	ldr	r3, [r4, #0]
 80083e6:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80083e8:	f000 fc62 	bl	8008cb0 <LCD_Color2Index>
 80083ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80083f0:	f000 bc9a 	b.w	8008d28 <LCD_SetBkColorIndex>
 80083f4:	200000b8 	.word	0x200000b8

080083f8 <LCD_SetClipRectEx>:
 80083f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80083fa:	4c09      	ldr	r4, [pc, #36]	; (8008420 <LCD_SetClipRectEx+0x28>)
 80083fc:	6823      	ldr	r3, [r4, #0]
 80083fe:	7c5a      	ldrb	r2, [r3, #17]
 8008400:	4b08      	ldr	r3, [pc, #32]	; (8008424 <LCD_SetClipRectEx+0x2c>)
 8008402:	4605      	mov	r5, r0
 8008404:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8008408:	68c2      	ldr	r2, [r0, #12]
 800840a:	4669      	mov	r1, sp
 800840c:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800840e:	4790      	blx	r2
 8008410:	6820      	ldr	r0, [r4, #0]
 8008412:	4629      	mov	r1, r5
 8008414:	466a      	mov	r2, sp
 8008416:	3008      	adds	r0, #8
 8008418:	f000 fcf1 	bl	8008dfe <GUI__IntersectRects>
 800841c:	b003      	add	sp, #12
 800841e:	bd30      	pop	{r4, r5, pc}
 8008420:	200000b8 	.word	0x200000b8
 8008424:	20002d28 	.word	0x20002d28

08008428 <LCD_SetVSizeEx>:
 8008428:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800842a:	460d      	mov	r5, r1
 800842c:	4614      	mov	r4, r2
 800842e:	f002 f85d 	bl	800a4ec <GUI_DEVICE__GetpDriver>
 8008432:	9001      	str	r0, [sp, #4]
 8008434:	b908      	cbnz	r0, 800843a <LCD_SetVSizeEx+0x12>
 8008436:	2001      	movs	r0, #1
 8008438:	e00c      	b.n	8008454 <LCD_SetVSizeEx+0x2c>
 800843a:	68c3      	ldr	r3, [r0, #12]
 800843c:	210a      	movs	r1, #10
 800843e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008440:	a801      	add	r0, sp, #4
 8008442:	4798      	blx	r3
 8008444:	4603      	mov	r3, r0
 8008446:	2800      	cmp	r0, #0
 8008448:	d0f5      	beq.n	8008436 <LCD_SetVSizeEx+0xe>
 800844a:	9801      	ldr	r0, [sp, #4]
 800844c:	4629      	mov	r1, r5
 800844e:	4622      	mov	r2, r4
 8008450:	4798      	blx	r3
 8008452:	2000      	movs	r0, #0
 8008454:	b003      	add	sp, #12
 8008456:	bd30      	pop	{r4, r5, pc}

08008458 <LCD_SetSizeEx>:
 8008458:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800845a:	460d      	mov	r5, r1
 800845c:	4614      	mov	r4, r2
 800845e:	f002 f845 	bl	800a4ec <GUI_DEVICE__GetpDriver>
 8008462:	9001      	str	r0, [sp, #4]
 8008464:	b908      	cbnz	r0, 800846a <LCD_SetSizeEx+0x12>
 8008466:	2001      	movs	r0, #1
 8008468:	e00c      	b.n	8008484 <LCD_SetSizeEx+0x2c>
 800846a:	68c3      	ldr	r3, [r0, #12]
 800846c:	210b      	movs	r1, #11
 800846e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008470:	a801      	add	r0, sp, #4
 8008472:	4798      	blx	r3
 8008474:	4603      	mov	r3, r0
 8008476:	2800      	cmp	r0, #0
 8008478:	d0f5      	beq.n	8008466 <LCD_SetSizeEx+0xe>
 800847a:	9801      	ldr	r0, [sp, #4]
 800847c:	4629      	mov	r1, r5
 800847e:	4622      	mov	r2, r4
 8008480:	4798      	blx	r3
 8008482:	2000      	movs	r0, #0
 8008484:	b003      	add	sp, #12
 8008486:	bd30      	pop	{r4, r5, pc}

08008488 <LCD_SetLUTEntryEx>:
 8008488:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800848a:	460d      	mov	r5, r1
 800848c:	4614      	mov	r4, r2
 800848e:	f002 f82d 	bl	800a4ec <GUI_DEVICE__GetpDriver>
 8008492:	9001      	str	r0, [sp, #4]
 8008494:	b908      	cbnz	r0, 800849a <LCD_SetLUTEntryEx+0x12>
 8008496:	2001      	movs	r0, #1
 8008498:	e00c      	b.n	80084b4 <LCD_SetLUTEntryEx+0x2c>
 800849a:	68c3      	ldr	r3, [r0, #12]
 800849c:	2110      	movs	r1, #16
 800849e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80084a0:	a801      	add	r0, sp, #4
 80084a2:	4798      	blx	r3
 80084a4:	4603      	mov	r3, r0
 80084a6:	2800      	cmp	r0, #0
 80084a8:	d0f5      	beq.n	8008496 <LCD_SetLUTEntryEx+0xe>
 80084aa:	9801      	ldr	r0, [sp, #4]
 80084ac:	4629      	mov	r1, r5
 80084ae:	4622      	mov	r2, r4
 80084b0:	4798      	blx	r3
 80084b2:	2000      	movs	r0, #0
 80084b4:	b003      	add	sp, #12
 80084b6:	bd30      	pop	{r4, r5, pc}

080084b8 <_GetDevProp>:
 80084b8:	2801      	cmp	r0, #1
 80084ba:	b510      	push	{r4, lr}
 80084bc:	460c      	mov	r4, r1
 80084be:	dc08      	bgt.n	80084d2 <_GetDevProp+0x1a>
 80084c0:	f002 f814 	bl	800a4ec <GUI_DEVICE__GetpDriver>
 80084c4:	b120      	cbz	r0, 80084d0 <_GetDevProp+0x18>
 80084c6:	68c3      	ldr	r3, [r0, #12]
 80084c8:	4621      	mov	r1, r4
 80084ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80084cc:	4798      	blx	r3
 80084ce:	bd10      	pop	{r4, pc}
 80084d0:	bd10      	pop	{r4, pc}
 80084d2:	2000      	movs	r0, #0
 80084d4:	bd10      	pop	{r4, pc}

080084d6 <_GetMaxValue>:
 80084d6:	b538      	push	{r3, r4, r5, lr}
 80084d8:	4604      	mov	r4, r0
 80084da:	4621      	mov	r1, r4
 80084dc:	2001      	movs	r0, #1
 80084de:	f7ff ffeb 	bl	80084b8 <_GetDevProp>
 80084e2:	4621      	mov	r1, r4
 80084e4:	4605      	mov	r5, r0
 80084e6:	2000      	movs	r0, #0
 80084e8:	f7ff ffe6 	bl	80084b8 <_GetDevProp>
 80084ec:	42a8      	cmp	r0, r5
 80084ee:	bfb8      	it	lt
 80084f0:	4628      	movlt	r0, r5
 80084f2:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 80084f6:	bd38      	pop	{r3, r4, r5, pc}

080084f8 <LCD_GetXSizeEx>:
 80084f8:	2101      	movs	r1, #1
 80084fa:	f7ff bfdd 	b.w	80084b8 <_GetDevProp>

080084fe <LCD_GetYSizeEx>:
 80084fe:	2102      	movs	r1, #2
 8008500:	f7ff bfda 	b.w	80084b8 <_GetDevProp>

08008504 <LCD_GetVXSizeEx>:
 8008504:	2103      	movs	r1, #3
 8008506:	f7ff bfd7 	b.w	80084b8 <_GetDevProp>

0800850a <LCD_GetVYSizeEx>:
 800850a:	2104      	movs	r1, #4
 800850c:	f7ff bfd4 	b.w	80084b8 <_GetDevProp>

08008510 <LCD_GetBitsPerPixelEx>:
 8008510:	2108      	movs	r1, #8
 8008512:	f7ff bfd1 	b.w	80084b8 <_GetDevProp>

08008516 <LCD_GetNumColorsEx>:
 8008516:	2109      	movs	r1, #9
 8008518:	f7ff bfce 	b.w	80084b8 <_GetDevProp>

0800851c <LCD_GetXSize>:
 800851c:	4b02      	ldr	r3, [pc, #8]	; (8008528 <LCD_GetXSize+0xc>)
 800851e:	681b      	ldr	r3, [r3, #0]
 8008520:	7c58      	ldrb	r0, [r3, #17]
 8008522:	f7ff bfe9 	b.w	80084f8 <LCD_GetXSizeEx>
 8008526:	bf00      	nop
 8008528:	200000b8 	.word	0x200000b8

0800852c <LCD_GetYSize>:
 800852c:	4b02      	ldr	r3, [pc, #8]	; (8008538 <LCD_GetYSize+0xc>)
 800852e:	681b      	ldr	r3, [r3, #0]
 8008530:	7c58      	ldrb	r0, [r3, #17]
 8008532:	f7ff bfe4 	b.w	80084fe <LCD_GetYSizeEx>
 8008536:	bf00      	nop
 8008538:	200000b8 	.word	0x200000b8

0800853c <LCD_GetNumColors>:
 800853c:	4b02      	ldr	r3, [pc, #8]	; (8008548 <LCD_GetNumColors+0xc>)
 800853e:	681b      	ldr	r3, [r3, #0]
 8008540:	7c58      	ldrb	r0, [r3, #17]
 8008542:	f7ff bfe8 	b.w	8008516 <LCD_GetNumColorsEx>
 8008546:	bf00      	nop
 8008548:	200000b8 	.word	0x200000b8

0800854c <GUI_GetBitsPerPixelEx>:
 800854c:	b508      	push	{r3, lr}
 800854e:	4b04      	ldr	r3, [pc, #16]	; (8008560 <GUI_GetBitsPerPixelEx+0x14>)
 8008550:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8008554:	68c3      	ldr	r3, [r0, #12]
 8008556:	2108      	movs	r1, #8
 8008558:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800855a:	4798      	blx	r3
 800855c:	bd08      	pop	{r3, pc}
 800855e:	bf00      	nop
 8008560:	20002d28 	.word	0x20002d28

08008564 <LCD_GetPaletteEx>:
 8008564:	b508      	push	{r3, lr}
 8008566:	f001 ffc1 	bl	800a4ec <GUI_DEVICE__GetpDriver>
 800856a:	b120      	cbz	r0, 8008576 <LCD_GetPaletteEx+0x12>
 800856c:	68c3      	ldr	r3, [r0, #12]
 800856e:	2102      	movs	r1, #2
 8008570:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008572:	4798      	blx	r3
 8008574:	bd08      	pop	{r3, pc}
 8008576:	bd08      	pop	{r3, pc}

08008578 <LCD_GetPalette>:
 8008578:	4b02      	ldr	r3, [pc, #8]	; (8008584 <LCD_GetPalette+0xc>)
 800857a:	681b      	ldr	r3, [r3, #0]
 800857c:	7c58      	ldrb	r0, [r3, #17]
 800857e:	f7ff bff1 	b.w	8008564 <LCD_GetPaletteEx>
 8008582:	bf00      	nop
 8008584:	200000b8 	.word	0x200000b8

08008588 <GUI_GetpfIndex2ColorEx>:
 8008588:	4b02      	ldr	r3, [pc, #8]	; (8008594 <GUI_GetpfIndex2ColorEx+0xc>)
 800858a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800858e:	691b      	ldr	r3, [r3, #16]
 8008590:	6858      	ldr	r0, [r3, #4]
 8008592:	4770      	bx	lr
 8008594:	20002d28 	.word	0x20002d28

08008598 <GUI_GetpfColor2IndexEx>:
 8008598:	4b02      	ldr	r3, [pc, #8]	; (80085a4 <GUI_GetpfColor2IndexEx+0xc>)
 800859a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800859e:	691b      	ldr	r3, [r3, #16]
 80085a0:	6818      	ldr	r0, [r3, #0]
 80085a2:	4770      	bx	lr
 80085a4:	20002d28 	.word	0x20002d28

080085a8 <LCD_GetXSizeMax>:
 80085a8:	2001      	movs	r0, #1
 80085aa:	f7ff bf94 	b.w	80084d6 <_GetMaxValue>

080085ae <LCD_GetYSizeMax>:
 80085ae:	2002      	movs	r0, #2
 80085b0:	f7ff bf91 	b.w	80084d6 <_GetMaxValue>

080085b4 <LCD_GetVXSizeMax>:
 80085b4:	2003      	movs	r0, #3
 80085b6:	f7ff bf8e 	b.w	80084d6 <_GetMaxValue>
	...

080085bc <LCD_SetDisplaySize>:
 80085bc:	4b02      	ldr	r3, [pc, #8]	; (80085c8 <LCD_SetDisplaySize+0xc>)
 80085be:	6018      	str	r0, [r3, #0]
 80085c0:	4b02      	ldr	r3, [pc, #8]	; (80085cc <LCD_SetDisplaySize+0x10>)
 80085c2:	6019      	str	r1, [r3, #0]
 80085c4:	4770      	bx	lr
 80085c6:	bf00      	nop
 80085c8:	20002a58 	.word	0x20002a58
 80085cc:	20002a54 	.word	0x20002a54

080085d0 <LCD_GetXSizeDisplay>:
 80085d0:	4b01      	ldr	r3, [pc, #4]	; (80085d8 <LCD_GetXSizeDisplay+0x8>)
 80085d2:	6818      	ldr	r0, [r3, #0]
 80085d4:	4770      	bx	lr
 80085d6:	bf00      	nop
 80085d8:	20002a58 	.word	0x20002a58

080085dc <LCD_GetYSizeDisplay>:
 80085dc:	4b01      	ldr	r3, [pc, #4]	; (80085e4 <LCD_GetYSizeDisplay+0x8>)
 80085de:	6818      	ldr	r0, [r3, #0]
 80085e0:	4770      	bx	lr
 80085e2:	bf00      	nop
 80085e4:	20002a54 	.word	0x20002a54

080085e8 <LCD__GetBPP>:
 80085e8:	2800      	cmp	r0, #0
 80085ea:	d03b      	beq.n	8008664 <LCD__GetBPP+0x7c>
 80085ec:	f030 0301 	bics.w	r3, r0, #1
 80085f0:	d029      	beq.n	8008646 <LCD__GetBPP+0x5e>
 80085f2:	f030 0303 	bics.w	r3, r0, #3
 80085f6:	d028      	beq.n	800864a <LCD__GetBPP+0x62>
 80085f8:	f030 0307 	bics.w	r3, r0, #7
 80085fc:	d027      	beq.n	800864e <LCD__GetBPP+0x66>
 80085fe:	f030 030f 	bics.w	r3, r0, #15
 8008602:	d026      	beq.n	8008652 <LCD__GetBPP+0x6a>
 8008604:	f030 031f 	bics.w	r3, r0, #31
 8008608:	d025      	beq.n	8008656 <LCD__GetBPP+0x6e>
 800860a:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 800860e:	d024      	beq.n	800865a <LCD__GetBPP+0x72>
 8008610:	f420 73ff 	bic.w	r3, r0, #510	; 0x1fe
 8008614:	f023 0301 	bic.w	r3, r3, #1
 8008618:	b30b      	cbz	r3, 800865e <LCD__GetBPP+0x76>
 800861a:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
 800861e:	f023 030f 	bic.w	r3, r3, #15
 8008622:	b1e3      	cbz	r3, 800865e <LCD__GetBPP+0x76>
 8008624:	f420 43ff 	bic.w	r3, r0, #32640	; 0x7f80
 8008628:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800862c:	b1bb      	cbz	r3, 800865e <LCD__GetBPP+0x76>
 800862e:	0c03      	lsrs	r3, r0, #16
 8008630:	041b      	lsls	r3, r3, #16
 8008632:	b1a3      	cbz	r3, 800865e <LCD__GetBPP+0x76>
 8008634:	0c83      	lsrs	r3, r0, #18
 8008636:	049b      	lsls	r3, r3, #18
 8008638:	b19b      	cbz	r3, 8008662 <LCD__GetBPP+0x7a>
 800863a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800863e:	bf0c      	ite	eq
 8008640:	2018      	moveq	r0, #24
 8008642:	2020      	movne	r0, #32
 8008644:	4770      	bx	lr
 8008646:	2001      	movs	r0, #1
 8008648:	4770      	bx	lr
 800864a:	2002      	movs	r0, #2
 800864c:	4770      	bx	lr
 800864e:	2003      	movs	r0, #3
 8008650:	4770      	bx	lr
 8008652:	2004      	movs	r0, #4
 8008654:	4770      	bx	lr
 8008656:	2005      	movs	r0, #5
 8008658:	4770      	bx	lr
 800865a:	2008      	movs	r0, #8
 800865c:	4770      	bx	lr
 800865e:	2010      	movs	r0, #16
 8008660:	4770      	bx	lr
 8008662:	2012      	movs	r0, #18
 8008664:	4770      	bx	lr

08008666 <LCD__GetBPPDevice>:
 8008666:	b508      	push	{r3, lr}
 8008668:	f7ff ffbe 	bl	80085e8 <LCD__GetBPP>
 800866c:	2801      	cmp	r0, #1
 800866e:	d00f      	beq.n	8008690 <LCD__GetBPPDevice+0x2a>
 8008670:	1e83      	subs	r3, r0, #2
 8008672:	2b06      	cmp	r3, #6
 8008674:	d909      	bls.n	800868a <LCD__GetBPPDevice+0x24>
 8008676:	f1a0 0309 	sub.w	r3, r0, #9
 800867a:	2b07      	cmp	r3, #7
 800867c:	d907      	bls.n	800868e <LCD__GetBPPDevice+0x28>
 800867e:	3811      	subs	r0, #17
 8008680:	2810      	cmp	r0, #16
 8008682:	bf34      	ite	cc
 8008684:	2020      	movcc	r0, #32
 8008686:	2000      	movcs	r0, #0
 8008688:	bd08      	pop	{r3, pc}
 800868a:	2008      	movs	r0, #8
 800868c:	bd08      	pop	{r3, pc}
 800868e:	2010      	movs	r0, #16
 8008690:	bd08      	pop	{r3, pc}
	...

08008694 <_SetDrawMode>:
 8008694:	b570      	push	{r4, r5, r6, lr}
 8008696:	4b08      	ldr	r3, [pc, #32]	; (80086b8 <_SetDrawMode+0x24>)
 8008698:	681b      	ldr	r3, [r3, #0]
 800869a:	7c1a      	ldrb	r2, [r3, #16]
 800869c:	ea80 0102 	eor.w	r1, r0, r2
 80086a0:	0749      	lsls	r1, r1, #29
 80086a2:	d505      	bpl.n	80086b0 <_SetDrawMode+0x1c>
 80086a4:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 80086a6:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 80086a8:	6826      	ldr	r6, [r4, #0]
 80086aa:	680d      	ldr	r5, [r1, #0]
 80086ac:	6025      	str	r5, [r4, #0]
 80086ae:	600e      	str	r6, [r1, #0]
 80086b0:	7418      	strb	r0, [r3, #16]
 80086b2:	4610      	mov	r0, r2
 80086b4:	bd70      	pop	{r4, r5, r6, pc}
 80086b6:	bf00      	nop
 80086b8:	200000b8 	.word	0x200000b8

080086bc <LCD_SetDrawMode>:
 80086bc:	b508      	push	{r3, lr}
 80086be:	4b02      	ldr	r3, [pc, #8]	; (80086c8 <LCD_SetDrawMode+0xc>)
 80086c0:	681b      	ldr	r3, [r3, #0]
 80086c2:	689b      	ldr	r3, [r3, #8]
 80086c4:	4798      	blx	r3
 80086c6:	bd08      	pop	{r3, pc}
 80086c8:	200000a0 	.word	0x200000a0

080086cc <LCD_DrawPixel>:
 80086cc:	b538      	push	{r3, r4, r5, lr}
 80086ce:	4b14      	ldr	r3, [pc, #80]	; (8008720 <LCD_DrawPixel+0x54>)
 80086d0:	681b      	ldr	r3, [r3, #0]
 80086d2:	460a      	mov	r2, r1
 80086d4:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
 80086d8:	428a      	cmp	r2, r1
 80086da:	4604      	mov	r4, r0
 80086dc:	db1e      	blt.n	800871c <LCD_DrawPixel+0x50>
 80086de:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80086e2:	428a      	cmp	r2, r1
 80086e4:	dc1a      	bgt.n	800871c <LCD_DrawPixel+0x50>
 80086e6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80086ea:	4288      	cmp	r0, r1
 80086ec:	db16      	blt.n	800871c <LCD_DrawPixel+0x50>
 80086ee:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
 80086f2:	4288      	cmp	r0, r1
 80086f4:	dc12      	bgt.n	800871c <LCD_DrawPixel+0x50>
 80086f6:	7c19      	ldrb	r1, [r3, #16]
 80086f8:	7c58      	ldrb	r0, [r3, #17]
 80086fa:	f011 0f01 	tst.w	r1, #1
 80086fe:	4909      	ldr	r1, [pc, #36]	; (8008724 <LCD_DrawPixel+0x58>)
 8008700:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 8008704:	d004      	beq.n	8008710 <LCD_DrawPixel+0x44>
 8008706:	68c3      	ldr	r3, [r0, #12]
 8008708:	4621      	mov	r1, r4
 800870a:	69db      	ldr	r3, [r3, #28]
 800870c:	4798      	blx	r3
 800870e:	bd38      	pop	{r3, r4, r5, pc}
 8008710:	68c1      	ldr	r1, [r0, #12]
 8008712:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008714:	698d      	ldr	r5, [r1, #24]
 8008716:	681b      	ldr	r3, [r3, #0]
 8008718:	4621      	mov	r1, r4
 800871a:	47a8      	blx	r5
 800871c:	bd38      	pop	{r3, r4, r5, pc}
 800871e:	bf00      	nop
 8008720:	200000b8 	.word	0x200000b8
 8008724:	20002d28 	.word	0x20002d28

08008728 <LCD_DrawHLine>:
 8008728:	b538      	push	{r3, r4, r5, lr}
 800872a:	4b10      	ldr	r3, [pc, #64]	; (800876c <LCD_DrawHLine+0x44>)
 800872c:	681c      	ldr	r4, [r3, #0]
 800872e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8008732:	4299      	cmp	r1, r3
 8008734:	460d      	mov	r5, r1
 8008736:	db17      	blt.n	8008768 <LCD_DrawHLine+0x40>
 8008738:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 800873c:	4299      	cmp	r1, r3
 800873e:	dc13      	bgt.n	8008768 <LCD_DrawHLine+0x40>
 8008740:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8008744:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008748:	4288      	cmp	r0, r1
 800874a:	bfa8      	it	ge
 800874c:	4601      	movge	r1, r0
 800874e:	429a      	cmp	r2, r3
 8008750:	bfb8      	it	lt
 8008752:	4613      	movlt	r3, r2
 8008754:	428b      	cmp	r3, r1
 8008756:	db07      	blt.n	8008768 <LCD_DrawHLine+0x40>
 8008758:	7c60      	ldrb	r0, [r4, #17]
 800875a:	4a05      	ldr	r2, [pc, #20]	; (8008770 <LCD_DrawHLine+0x48>)
 800875c:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8008760:	68c2      	ldr	r2, [r0, #12]
 8008762:	6894      	ldr	r4, [r2, #8]
 8008764:	462a      	mov	r2, r5
 8008766:	47a0      	blx	r4
 8008768:	bd38      	pop	{r3, r4, r5, pc}
 800876a:	bf00      	nop
 800876c:	200000b8 	.word	0x200000b8
 8008770:	20002d28 	.word	0x20002d28

08008774 <LCD_DrawVLine>:
 8008774:	b538      	push	{r3, r4, r5, lr}
 8008776:	4b10      	ldr	r3, [pc, #64]	; (80087b8 <LCD_DrawVLine+0x44>)
 8008778:	681c      	ldr	r4, [r3, #0]
 800877a:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800877e:	4605      	mov	r5, r0
 8008780:	429d      	cmp	r5, r3
 8008782:	4610      	mov	r0, r2
 8008784:	db17      	blt.n	80087b6 <LCD_DrawVLine+0x42>
 8008786:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800878a:	429d      	cmp	r5, r3
 800878c:	dc13      	bgt.n	80087b6 <LCD_DrawVLine+0x42>
 800878e:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8008792:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8008796:	4291      	cmp	r1, r2
 8008798:	bfa8      	it	ge
 800879a:	460a      	movge	r2, r1
 800879c:	4298      	cmp	r0, r3
 800879e:	bfb8      	it	lt
 80087a0:	4603      	movlt	r3, r0
 80087a2:	4293      	cmp	r3, r2
 80087a4:	db07      	blt.n	80087b6 <LCD_DrawVLine+0x42>
 80087a6:	7c60      	ldrb	r0, [r4, #17]
 80087a8:	4904      	ldr	r1, [pc, #16]	; (80087bc <LCD_DrawVLine+0x48>)
 80087aa:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 80087ae:	68c1      	ldr	r1, [r0, #12]
 80087b0:	68cc      	ldr	r4, [r1, #12]
 80087b2:	4629      	mov	r1, r5
 80087b4:	47a0      	blx	r4
 80087b6:	bd38      	pop	{r3, r4, r5, pc}
 80087b8:	200000b8 	.word	0x200000b8
 80087bc:	20002d28 	.word	0x20002d28

080087c0 <LCD_FillRect>:
 80087c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80087c2:	460e      	mov	r6, r1
 80087c4:	4912      	ldr	r1, [pc, #72]	; (8008810 <LCD_FillRect+0x50>)
 80087c6:	680c      	ldr	r4, [r1, #0]
 80087c8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80087cc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80087d0:	4288      	cmp	r0, r1
 80087d2:	bfa8      	it	ge
 80087d4:	4601      	movge	r1, r0
 80087d6:	42aa      	cmp	r2, r5
 80087d8:	bfb8      	it	lt
 80087da:	4615      	movlt	r5, r2
 80087dc:	428d      	cmp	r5, r1
 80087de:	db14      	blt.n	800880a <LCD_FillRect+0x4a>
 80087e0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80087e4:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 80087e8:	4296      	cmp	r6, r2
 80087ea:	bfa8      	it	ge
 80087ec:	4632      	movge	r2, r6
 80087ee:	4283      	cmp	r3, r0
 80087f0:	bfa8      	it	ge
 80087f2:	4603      	movge	r3, r0
 80087f4:	4293      	cmp	r3, r2
 80087f6:	db08      	blt.n	800880a <LCD_FillRect+0x4a>
 80087f8:	7c64      	ldrb	r4, [r4, #17]
 80087fa:	4806      	ldr	r0, [pc, #24]	; (8008814 <LCD_FillRect+0x54>)
 80087fc:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 8008800:	68c4      	ldr	r4, [r0, #12]
 8008802:	9300      	str	r3, [sp, #0]
 8008804:	6924      	ldr	r4, [r4, #16]
 8008806:	462b      	mov	r3, r5
 8008808:	47a0      	blx	r4
 800880a:	b002      	add	sp, #8
 800880c:	bd70      	pop	{r4, r5, r6, pc}
 800880e:	bf00      	nop
 8008810:	200000b8 	.word	0x200000b8
 8008814:	20002d28 	.word	0x20002d28

08008818 <LCD__DrawBitmap_1bpp>:
 8008818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800881c:	f8df c1ac 	ldr.w	ip, [pc, #428]	; 80089cc <LCD__DrawBitmap_1bpp+0x1b4>
 8008820:	b08f      	sub	sp, #60	; 0x3c
 8008822:	f8dc c000 	ldr.w	ip, [ip]
 8008826:	9009      	str	r0, [sp, #36]	; 0x24
 8008828:	460e      	mov	r6, r1
 800882a:	4615      	mov	r5, r2
 800882c:	469b      	mov	fp, r3
 800882e:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8008830:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
 8008834:	f1bc 0f00 	cmp.w	ip, #0
 8008838:	d00d      	beq.n	8008856 <LCD__DrawBitmap_1bpp+0x3e>
 800883a:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800883c:	9e19      	ldr	r6, [sp, #100]	; 0x64
 800883e:	9500      	str	r5, [sp, #0]
 8008840:	9601      	str	r6, [sp, #4]
 8008842:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8008844:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8008846:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8008848:	9702      	str	r7, [sp, #8]
 800884a:	9503      	str	r5, [sp, #12]
 800884c:	9404      	str	r4, [sp, #16]
 800884e:	9605      	str	r6, [sp, #20]
 8008850:	f8dc 4000 	ldr.w	r4, [ip]
 8008854:	e053      	b.n	80088fe <LCD__DrawBitmap_1bpp+0xe6>
 8008856:	9f18      	ldr	r7, [sp, #96]	; 0x60
 8008858:	9819      	ldr	r0, [sp, #100]	; 0x64
 800885a:	ea47 0300 	orr.w	r3, r7, r0
 800885e:	2b01      	cmp	r3, #1
 8008860:	d14f      	bne.n	8008902 <LCD__DrawBitmap_1bpp+0xea>
 8008862:	4b58      	ldr	r3, [pc, #352]	; (80089c4 <LCD__DrawBitmap_1bpp+0x1ac>)
 8008864:	6818      	ldr	r0, [r3, #0]
 8008866:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800886a:	1a51      	subs	r1, r2, r1
 800886c:	2900      	cmp	r1, #0
 800886e:	dd08      	ble.n	8008882 <LCD__DrawBitmap_1bpp+0x6a>
 8008870:	ebc1 030b 	rsb	r3, r1, fp
 8008874:	2b00      	cmp	r3, #0
 8008876:	f340 80a2 	ble.w	80089be <LCD__DrawBitmap_1bpp+0x1a6>
 800887a:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800887c:	fb07 4401 	mla	r4, r7, r1, r4
 8008880:	e001      	b.n	8008886 <LCD__DrawBitmap_1bpp+0x6e>
 8008882:	465b      	mov	r3, fp
 8008884:	4632      	mov	r2, r6
 8008886:	445e      	add	r6, fp
 8008888:	f9b0 100e 	ldrsh.w	r1, [r0, #14]
 800888c:	3e01      	subs	r6, #1
 800888e:	1a76      	subs	r6, r6, r1
 8008890:	2e00      	cmp	r6, #0
 8008892:	dd03      	ble.n	800889c <LCD__DrawBitmap_1bpp+0x84>
 8008894:	1b9b      	subs	r3, r3, r6
 8008896:	2b00      	cmp	r3, #0
 8008898:	f340 8091 	ble.w	80089be <LCD__DrawBitmap_1bpp+0x1a6>
 800889c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800889e:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 80088a2:	4429      	add	r1, r5
 80088a4:	3901      	subs	r1, #1
 80088a6:	1b89      	subs	r1, r1, r6
 80088a8:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80088aa:	2900      	cmp	r1, #0
 80088ac:	bfc8      	it	gt
 80088ae:	ebc1 0505 	rsbgt	r5, r1, r5
 80088b2:	ebc8 0106 	rsb	r1, r8, r6
 80088b6:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 80088ba:	42b1      	cmp	r1, r6
 80088bc:	da0c      	bge.n	80088d8 <LCD__DrawBitmap_1bpp+0xc0>
 80088be:	ebc1 0c06 	rsb	ip, r1, r6
 80088c2:	eb08 070c 	add.w	r7, r8, ip
 80088c6:	1b8e      	subs	r6, r1, r6
 80088c8:	f02c 0c07 	bic.w	ip, ip, #7
 80088cc:	4435      	add	r5, r6
 80088ce:	eb04 04e7 	add.w	r4, r4, r7, asr #3
 80088d2:	4461      	add	r1, ip
 80088d4:	f007 0807 	and.w	r8, r7, #7
 80088d8:	2d00      	cmp	r5, #0
 80088da:	dd70      	ble.n	80089be <LCD__DrawBitmap_1bpp+0x1a6>
 80088dc:	7c46      	ldrb	r6, [r0, #17]
 80088de:	483a      	ldr	r0, [pc, #232]	; (80089c8 <LCD__DrawBitmap_1bpp+0x1b0>)
 80088e0:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80088e2:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
 80088e6:	68c6      	ldr	r6, [r0, #12]
 80088e8:	9701      	str	r7, [sp, #4]
 80088ea:	9403      	str	r4, [sp, #12]
 80088ec:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80088ee:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 80088f0:	9300      	str	r3, [sp, #0]
 80088f2:	9702      	str	r7, [sp, #8]
 80088f4:	f8cd 8010 	str.w	r8, [sp, #16]
 80088f8:	9405      	str	r4, [sp, #20]
 80088fa:	6874      	ldr	r4, [r6, #4]
 80088fc:	462b      	mov	r3, r5
 80088fe:	47a0      	blx	r4
 8008900:	e05d      	b.n	80089be <LCD__DrawBitmap_1bpp+0x1a6>
 8008902:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8008904:	f1c7 0708 	rsb	r7, r7, #8
 8008908:	970c      	str	r7, [sp, #48]	; 0x30
 800890a:	4667      	mov	r7, ip
 800890c:	45dc      	cmp	ip, fp
 800890e:	da56      	bge.n	80089be <LCD__DrawBitmap_1bpp+0x1a6>
 8008910:	4b2c      	ldr	r3, [pc, #176]	; (80089c4 <LCD__DrawBitmap_1bpp+0x1ac>)
 8008912:	9819      	ldr	r0, [sp, #100]	; 0x64
 8008914:	681b      	ldr	r3, [r3, #0]
 8008916:	4430      	add	r0, r6
 8008918:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 800891c:	900a      	str	r0, [sp, #40]	; 0x28
 800891e:	1e41      	subs	r1, r0, #1
 8008920:	4291      	cmp	r1, r2
 8008922:	910b      	str	r1, [sp, #44]	; 0x2c
 8008924:	db45      	blt.n	80089b2 <LCD__DrawBitmap_1bpp+0x19a>
 8008926:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 800892a:	429e      	cmp	r6, r3
 800892c:	dc41      	bgt.n	80089b2 <LCD__DrawBitmap_1bpp+0x19a>
 800892e:	f04f 0800 	mov.w	r8, #0
 8008932:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8008936:	9408      	str	r4, [sp, #32]
 8008938:	46c2      	mov	sl, r8
 800893a:	45aa      	cmp	sl, r5
 800893c:	da39      	bge.n	80089b2 <LCD__DrawBitmap_1bpp+0x19a>
 800893e:	f1b8 0f00 	cmp.w	r8, #0
 8008942:	d105      	bne.n	8008950 <LCD__DrawBitmap_1bpp+0x138>
 8008944:	9a08      	ldr	r2, [sp, #32]
 8008946:	7817      	ldrb	r7, [r2, #0]
 8008948:	3201      	adds	r2, #1
 800894a:	9208      	str	r2, [sp, #32]
 800894c:	f04f 0808 	mov.w	r8, #8
 8008950:	980c      	ldr	r0, [sp, #48]	; 0x30
 8008952:	991a      	ldr	r1, [sp, #104]	; 0x68
 8008954:	4a1b      	ldr	r2, [pc, #108]	; (80089c4 <LCD__DrawBitmap_1bpp+0x1ac>)
 8008956:	fa47 f300 	asr.w	r3, r7, r0
 800895a:	ebc1 0808 	rsb	r8, r1, r8
 800895e:	408f      	lsls	r7, r1
 8008960:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 8008964:	b2ff      	uxtb	r7, r7
 8008966:	d103      	bne.n	8008970 <LCD__DrawBitmap_1bpp+0x158>
 8008968:	6810      	ldr	r0, [r2, #0]
 800896a:	7c00      	ldrb	r0, [r0, #16]
 800896c:	0780      	lsls	r0, r0, #30
 800896e:	d41b      	bmi.n	80089a8 <LCD__DrawBitmap_1bpp+0x190>
 8008970:	6812      	ldr	r2, [r2, #0]
 8008972:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8008974:	6810      	ldr	r0, [r2, #0]
 8008976:	900d      	str	r0, [sp, #52]	; 0x34
 8008978:	981d      	ldr	r0, [sp, #116]	; 0x74
 800897a:	b110      	cbz	r0, 8008982 <LCD__DrawBitmap_1bpp+0x16a>
 800897c:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 8008980:	e000      	b.n	8008984 <LCD__DrawBitmap_1bpp+0x16c>
 8008982:	b2db      	uxtb	r3, r3
 8008984:	9918      	ldr	r1, [sp, #96]	; 0x60
 8008986:	6013      	str	r3, [r2, #0]
 8008988:	1e4a      	subs	r2, r1, #1
 800898a:	444a      	add	r2, r9
 800898c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800898e:	f8cd c01c 	str.w	ip, [sp, #28]
 8008992:	4648      	mov	r0, r9
 8008994:	4631      	mov	r1, r6
 8008996:	f7ff ff13 	bl	80087c0 <LCD_FillRect>
 800899a:	4b0a      	ldr	r3, [pc, #40]	; (80089c4 <LCD__DrawBitmap_1bpp+0x1ac>)
 800899c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800899e:	681b      	ldr	r3, [r3, #0]
 80089a0:	f8dd c01c 	ldr.w	ip, [sp, #28]
 80089a4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80089a6:	601a      	str	r2, [r3, #0]
 80089a8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80089aa:	f10a 0a01 	add.w	sl, sl, #1
 80089ae:	4499      	add	r9, r3
 80089b0:	e7c3      	b.n	800893a <LCD__DrawBitmap_1bpp+0x122>
 80089b2:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 80089b4:	f10c 0c01 	add.w	ip, ip, #1
 80089b8:	4434      	add	r4, r6
 80089ba:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80089bc:	e7a6      	b.n	800890c <LCD__DrawBitmap_1bpp+0xf4>
 80089be:	b00f      	add	sp, #60	; 0x3c
 80089c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80089c4:	200000b8 	.word	0x200000b8
 80089c8:	20002d28 	.word	0x20002d28
 80089cc:	20002ce0 	.word	0x20002ce0

080089d0 <LCD_DrawBitmap>:
 80089d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80089d4:	f8df c20c 	ldr.w	ip, [pc, #524]	; 8008be4 <LCD_DrawBitmap+0x214>
 80089d8:	b091      	sub	sp, #68	; 0x44
 80089da:	f8dc 9000 	ldr.w	r9, [ip]
 80089de:	9207      	str	r2, [sp, #28]
 80089e0:	4605      	mov	r5, r0
 80089e2:	4688      	mov	r8, r1
 80089e4:	469b      	mov	fp, r3
 80089e6:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 80089e8:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80089ea:	f1b9 0f00 	cmp.w	r9, #0
 80089ee:	d00c      	beq.n	8008a0a <LCD_DrawBitmap+0x3a>
 80089f0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80089f2:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80089f4:	9500      	str	r5, [sp, #0]
 80089f6:	9701      	str	r7, [sp, #4]
 80089f8:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80089fa:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 80089fc:	9602      	str	r6, [sp, #8]
 80089fe:	9503      	str	r5, [sp, #12]
 8008a00:	9404      	str	r4, [sp, #16]
 8008a02:	9705      	str	r7, [sp, #20]
 8008a04:	f8d9 4000 	ldr.w	r4, [r9]
 8008a08:	e081      	b.n	8008b0e <LCD_DrawBitmap+0x13e>
 8008a0a:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 8008a0c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8008a0e:	ea47 0300 	orr.w	r3, r7, r0
 8008a12:	2b01      	cmp	r3, #1
 8008a14:	d17d      	bne.n	8008b12 <LCD_DrawBitmap+0x142>
 8008a16:	4b71      	ldr	r3, [pc, #452]	; (8008bdc <LCD_DrawBitmap+0x20c>)
 8008a18:	6818      	ldr	r0, [r3, #0]
 8008a1a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8008a1e:	1a53      	subs	r3, r2, r1
 8008a20:	2b00      	cmp	r3, #0
 8008a22:	dd08      	ble.n	8008a36 <LCD_DrawBitmap+0x66>
 8008a24:	ebc3 010b 	rsb	r1, r3, fp
 8008a28:	2900      	cmp	r1, #0
 8008a2a:	f340 80d4 	ble.w	8008bd6 <LCD_DrawBitmap+0x206>
 8008a2e:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8008a30:	fb07 4403 	mla	r4, r7, r3, r4
 8008a34:	e001      	b.n	8008a3a <LCD_DrawBitmap+0x6a>
 8008a36:	4659      	mov	r1, fp
 8008a38:	4642      	mov	r2, r8
 8008a3a:	44d8      	add	r8, fp
 8008a3c:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 8008a40:	f108 38ff 	add.w	r8, r8, #4294967295
 8008a44:	ebc3 0808 	rsb	r8, r3, r8
 8008a48:	f1b8 0f00 	cmp.w	r8, #0
 8008a4c:	dd04      	ble.n	8008a58 <LCD_DrawBitmap+0x88>
 8008a4e:	ebc8 0101 	rsb	r1, r8, r1
 8008a52:	2900      	cmp	r1, #0
 8008a54:	f340 80bf 	ble.w	8008bd6 <LCD_DrawBitmap+0x206>
 8008a58:	9b07      	ldr	r3, [sp, #28]
 8008a5a:	f9b0 c00c 	ldrsh.w	ip, [r0, #12]
 8008a5e:	442b      	add	r3, r5
 8008a60:	3b01      	subs	r3, #1
 8008a62:	ebcc 0303 	rsb	r3, ip, r3
 8008a66:	2b00      	cmp	r3, #0
 8008a68:	dd02      	ble.n	8008a70 <LCD_DrawBitmap+0xa0>
 8008a6a:	9f07      	ldr	r7, [sp, #28]
 8008a6c:	1aff      	subs	r7, r7, r3
 8008a6e:	9707      	str	r7, [sp, #28]
 8008a70:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8008a74:	4565      	cmp	r5, ip
 8008a76:	da33      	bge.n	8008ae0 <LCD_DrawBitmap+0x110>
 8008a78:	9f07      	ldr	r7, [sp, #28]
 8008a7a:	ebc5 030c 	rsb	r3, r5, ip
 8008a7e:	1aff      	subs	r7, r7, r3
 8008a80:	2e08      	cmp	r6, #8
 8008a82:	9707      	str	r7, [sp, #28]
 8008a84:	d027      	beq.n	8008ad6 <LCD_DrawBitmap+0x106>
 8008a86:	dc0d      	bgt.n	8008aa4 <LCD_DrawBitmap+0xd4>
 8008a88:	2e02      	cmp	r6, #2
 8008a8a:	d014      	beq.n	8008ab6 <LCD_DrawBitmap+0xe6>
 8008a8c:	2e04      	cmp	r6, #4
 8008a8e:	d01a      	beq.n	8008ac6 <LCD_DrawBitmap+0xf6>
 8008a90:	2e01      	cmp	r6, #1
 8008a92:	d126      	bne.n	8008ae2 <LCD_DrawBitmap+0x112>
 8008a94:	f023 0c07 	bic.w	ip, r3, #7
 8008a98:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 8008a9c:	4465      	add	r5, ip
 8008a9e:	f003 0307 	and.w	r3, r3, #7
 8008aa2:	e01e      	b.n	8008ae2 <LCD_DrawBitmap+0x112>
 8008aa4:	2e18      	cmp	r6, #24
 8008aa6:	d018      	beq.n	8008ada <LCD_DrawBitmap+0x10a>
 8008aa8:	2e20      	cmp	r6, #32
 8008aaa:	d016      	beq.n	8008ada <LCD_DrawBitmap+0x10a>
 8008aac:	2e10      	cmp	r6, #16
 8008aae:	d118      	bne.n	8008ae2 <LCD_DrawBitmap+0x112>
 8008ab0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8008ab4:	e013      	b.n	8008ade <LCD_DrawBitmap+0x10e>
 8008ab6:	f023 0c03 	bic.w	ip, r3, #3
 8008aba:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 8008abe:	4465      	add	r5, ip
 8008ac0:	f003 0303 	and.w	r3, r3, #3
 8008ac4:	e00d      	b.n	8008ae2 <LCD_DrawBitmap+0x112>
 8008ac6:	f023 0c01 	bic.w	ip, r3, #1
 8008aca:	eb04 0463 	add.w	r4, r4, r3, asr #1
 8008ace:	4465      	add	r5, ip
 8008ad0:	f003 0301 	and.w	r3, r3, #1
 8008ad4:	e005      	b.n	8008ae2 <LCD_DrawBitmap+0x112>
 8008ad6:	441c      	add	r4, r3
 8008ad8:	e001      	b.n	8008ade <LCD_DrawBitmap+0x10e>
 8008ada:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 8008ade:	4665      	mov	r5, ip
 8008ae0:	2300      	movs	r3, #0
 8008ae2:	9f07      	ldr	r7, [sp, #28]
 8008ae4:	2f00      	cmp	r7, #0
 8008ae6:	dd76      	ble.n	8008bd6 <LCD_DrawBitmap+0x206>
 8008ae8:	f890 e011 	ldrb.w	lr, [r0, #17]
 8008aec:	483c      	ldr	r0, [pc, #240]	; (8008be0 <LCD_DrawBitmap+0x210>)
 8008aee:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8008af0:	f850 002e 	ldr.w	r0, [r0, lr, lsl #2]
 8008af4:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 8008af8:	9403      	str	r4, [sp, #12]
 8008afa:	e88d 0042 	stmia.w	sp, {r1, r6}
 8008afe:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 8008b00:	9304      	str	r3, [sp, #16]
 8008b02:	9702      	str	r7, [sp, #8]
 8008b04:	9405      	str	r4, [sp, #20]
 8008b06:	f8de 4004 	ldr.w	r4, [lr, #4]
 8008b0a:	9b07      	ldr	r3, [sp, #28]
 8008b0c:	4629      	mov	r1, r5
 8008b0e:	47a0      	blx	r4
 8008b10:	e061      	b.n	8008bd6 <LCD_DrawBitmap+0x206>
 8008b12:	f1c6 0708 	rsb	r7, r6, #8
 8008b16:	970e      	str	r7, [sp, #56]	; 0x38
 8008b18:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008b1c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8008b1e:	455f      	cmp	r7, fp
 8008b20:	da59      	bge.n	8008bd6 <LCD_DrawBitmap+0x206>
 8008b22:	4b2e      	ldr	r3, [pc, #184]	; (8008bdc <LCD_DrawBitmap+0x20c>)
 8008b24:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8008b26:	681b      	ldr	r3, [r3, #0]
 8008b28:	4447      	add	r7, r8
 8008b2a:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 8008b2e:	970c      	str	r7, [sp, #48]	; 0x30
 8008b30:	3f01      	subs	r7, #1
 8008b32:	4297      	cmp	r7, r2
 8008b34:	970d      	str	r7, [sp, #52]	; 0x34
 8008b36:	db46      	blt.n	8008bc6 <LCD_DrawBitmap+0x1f6>
 8008b38:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 8008b3c:	4598      	cmp	r8, r3
 8008b3e:	dc42      	bgt.n	8008bc6 <LCD_DrawBitmap+0x1f6>
 8008b40:	f04f 0a00 	mov.w	sl, #0
 8008b44:	940b      	str	r4, [sp, #44]	; 0x2c
 8008b46:	46ac      	mov	ip, r5
 8008b48:	4657      	mov	r7, sl
 8008b4a:	9807      	ldr	r0, [sp, #28]
 8008b4c:	4287      	cmp	r7, r0
 8008b4e:	da3a      	bge.n	8008bc6 <LCD_DrawBitmap+0x1f6>
 8008b50:	f1ba 0f00 	cmp.w	sl, #0
 8008b54:	d106      	bne.n	8008b64 <LCD_DrawBitmap+0x194>
 8008b56:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8008b58:	f890 9000 	ldrb.w	r9, [r0]
 8008b5c:	3001      	adds	r0, #1
 8008b5e:	900b      	str	r0, [sp, #44]	; 0x2c
 8008b60:	f04f 0a08 	mov.w	sl, #8
 8008b64:	990e      	ldr	r1, [sp, #56]	; 0x38
 8008b66:	4a1d      	ldr	r2, [pc, #116]	; (8008bdc <LCD_DrawBitmap+0x20c>)
 8008b68:	fa49 f301 	asr.w	r3, r9, r1
 8008b6c:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 8008b70:	fa09 f906 	lsl.w	r9, r9, r6
 8008b74:	fa5f f989 	uxtb.w	r9, r9
 8008b78:	ebc6 0a0a 	rsb	sl, r6, sl
 8008b7c:	d103      	bne.n	8008b86 <LCD_DrawBitmap+0x1b6>
 8008b7e:	6810      	ldr	r0, [r2, #0]
 8008b80:	7c00      	ldrb	r0, [r0, #16]
 8008b82:	0780      	lsls	r0, r0, #30
 8008b84:	d41b      	bmi.n	8008bbe <LCD_DrawBitmap+0x1ee>
 8008b86:	6812      	ldr	r2, [r2, #0]
 8008b88:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8008b8a:	6810      	ldr	r0, [r2, #0]
 8008b8c:	900f      	str	r0, [sp, #60]	; 0x3c
 8008b8e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8008b90:	b110      	cbz	r0, 8008b98 <LCD_DrawBitmap+0x1c8>
 8008b92:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 8008b96:	e000      	b.n	8008b9a <LCD_DrawBitmap+0x1ca>
 8008b98:	b2db      	uxtb	r3, r3
 8008b9a:	991a      	ldr	r1, [sp, #104]	; 0x68
 8008b9c:	6013      	str	r3, [r2, #0]
 8008b9e:	1e4a      	subs	r2, r1, #1
 8008ba0:	4462      	add	r2, ip
 8008ba2:	4660      	mov	r0, ip
 8008ba4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008ba6:	f8cd c020 	str.w	ip, [sp, #32]
 8008baa:	4641      	mov	r1, r8
 8008bac:	f7ff fe08 	bl	80087c0 <LCD_FillRect>
 8008bb0:	4b0a      	ldr	r3, [pc, #40]	; (8008bdc <LCD_DrawBitmap+0x20c>)
 8008bb2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8008bb4:	681b      	ldr	r3, [r3, #0]
 8008bb6:	f8dd c020 	ldr.w	ip, [sp, #32]
 8008bba:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008bbc:	601a      	str	r2, [r3, #0]
 8008bbe:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8008bc0:	3701      	adds	r7, #1
 8008bc2:	449c      	add	ip, r3
 8008bc4:	e7c1      	b.n	8008b4a <LCD_DrawBitmap+0x17a>
 8008bc6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8008bc8:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8008bcc:	3701      	adds	r7, #1
 8008bce:	970a      	str	r7, [sp, #40]	; 0x28
 8008bd0:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 8008bd2:	443c      	add	r4, r7
 8008bd4:	e7a2      	b.n	8008b1c <LCD_DrawBitmap+0x14c>
 8008bd6:	b011      	add	sp, #68	; 0x44
 8008bd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008bdc:	200000b8 	.word	0x200000b8
 8008be0:	20002d28 	.word	0x20002d28
 8008be4:	20002ce0 	.word	0x20002ce0

08008be8 <LCD_SetClipRectMax>:
 8008be8:	b508      	push	{r3, lr}
 8008bea:	4b05      	ldr	r3, [pc, #20]	; (8008c00 <LCD_SetClipRectMax+0x18>)
 8008bec:	6819      	ldr	r1, [r3, #0]
 8008bee:	4b05      	ldr	r3, [pc, #20]	; (8008c04 <LCD_SetClipRectMax+0x1c>)
 8008bf0:	7c4a      	ldrb	r2, [r1, #17]
 8008bf2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8008bf6:	68c3      	ldr	r3, [r0, #12]
 8008bf8:	3108      	adds	r1, #8
 8008bfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008bfc:	4798      	blx	r3
 8008bfe:	bd08      	pop	{r3, pc}
 8008c00:	200000b8 	.word	0x200000b8
 8008c04:	20002d28 	.word	0x20002d28

08008c08 <emWin_LCD_Init>:
 8008c08:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008c0a:	f7ff ffed 	bl	8008be8 <LCD_SetClipRectMax>
 8008c0e:	f005 fd79 	bl	800e704 <LCD_InitColors>
 8008c12:	4604      	mov	r4, r0
 8008c14:	2800      	cmp	r0, #0
 8008c16:	d145      	bne.n	8008ca4 <emWin_LCD_Init+0x9c>
 8008c18:	4605      	mov	r5, r0
 8008c1a:	4628      	mov	r0, r5
 8008c1c:	f001 fc66 	bl	800a4ec <GUI_DEVICE__GetpDriver>
 8008c20:	9001      	str	r0, [sp, #4]
 8008c22:	b150      	cbz	r0, 8008c3a <emWin_LCD_Init+0x32>
 8008c24:	68c3      	ldr	r3, [r0, #12]
 8008c26:	210c      	movs	r1, #12
 8008c28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008c2a:	a801      	add	r0, sp, #4
 8008c2c:	4798      	blx	r3
 8008c2e:	4603      	mov	r3, r0
 8008c30:	2800      	cmp	r0, #0
 8008c32:	d035      	beq.n	8008ca0 <emWin_LCD_Init+0x98>
 8008c34:	9801      	ldr	r0, [sp, #4]
 8008c36:	4798      	blx	r3
 8008c38:	4304      	orrs	r4, r0
 8008c3a:	3501      	adds	r5, #1
 8008c3c:	2d02      	cmp	r5, #2
 8008c3e:	d1ec      	bne.n	8008c1a <emWin_LCD_Init+0x12>
 8008c40:	bb84      	cbnz	r4, 8008ca4 <emWin_LCD_Init+0x9c>
 8008c42:	f005 fd7b 	bl	800e73c <LCD_InitLUT>
 8008c46:	4b19      	ldr	r3, [pc, #100]	; (8008cac <emWin_LCD_Init+0xa4>)
 8008c48:	681a      	ldr	r2, [r3, #0]
 8008c4a:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8008c4e:	429a      	cmp	r2, r3
 8008c50:	d101      	bne.n	8008c56 <emWin_LCD_Init+0x4e>
 8008c52:	2000      	movs	r0, #0
 8008c54:	e027      	b.n	8008ca6 <emWin_LCD_Init+0x9e>
 8008c56:	2401      	movs	r4, #1
 8008c58:	4620      	mov	r0, r4
 8008c5a:	f001 fc47 	bl	800a4ec <GUI_DEVICE__GetpDriver>
 8008c5e:	9001      	str	r0, [sp, #4]
 8008c60:	b1d0      	cbz	r0, 8008c98 <emWin_LCD_Init+0x90>
 8008c62:	4620      	mov	r0, r4
 8008c64:	f000 fdee 	bl	8009844 <GUI_SelectLayer>
 8008c68:	2004      	movs	r0, #4
 8008c6a:	f7ff fd27 	bl	80086bc <LCD_SetDrawMode>
 8008c6e:	f643 72ff 	movw	r2, #16383	; 0x3fff
 8008c72:	2000      	movs	r0, #0
 8008c74:	4601      	mov	r1, r0
 8008c76:	4613      	mov	r3, r2
 8008c78:	f7ff fda2 	bl	80087c0 <LCD_FillRect>
 8008c7c:	2000      	movs	r0, #0
 8008c7e:	f7ff fd1d 	bl	80086bc <LCD_SetDrawMode>
 8008c82:	a802      	add	r0, sp, #8
 8008c84:	210e      	movs	r1, #14
 8008c86:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8008c8a:	68db      	ldr	r3, [r3, #12]
 8008c8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008c8e:	4798      	blx	r3
 8008c90:	4603      	mov	r3, r0
 8008c92:	b108      	cbz	r0, 8008c98 <emWin_LCD_Init+0x90>
 8008c94:	9801      	ldr	r0, [sp, #4]
 8008c96:	4798      	blx	r3
 8008c98:	f114 34ff 	adds.w	r4, r4, #4294967295
 8008c9c:	d2dc      	bcs.n	8008c58 <emWin_LCD_Init+0x50>
 8008c9e:	e7d8      	b.n	8008c52 <emWin_LCD_Init+0x4a>
 8008ca0:	2001      	movs	r0, #1
 8008ca2:	e000      	b.n	8008ca6 <emWin_LCD_Init+0x9e>
 8008ca4:	4620      	mov	r0, r4
 8008ca6:	b003      	add	sp, #12
 8008ca8:	bd30      	pop	{r4, r5, pc}
 8008caa:	bf00      	nop
 8008cac:	20002b0c 	.word	0x20002b0c

08008cb0 <LCD_Color2Index>:
 8008cb0:	b508      	push	{r3, lr}
 8008cb2:	4b05      	ldr	r3, [pc, #20]	; (8008cc8 <LCD_Color2Index+0x18>)
 8008cb4:	681b      	ldr	r3, [r3, #0]
 8008cb6:	7c5a      	ldrb	r2, [r3, #17]
 8008cb8:	4b04      	ldr	r3, [pc, #16]	; (8008ccc <LCD_Color2Index+0x1c>)
 8008cba:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008cbe:	691b      	ldr	r3, [r3, #16]
 8008cc0:	681b      	ldr	r3, [r3, #0]
 8008cc2:	4798      	blx	r3
 8008cc4:	bd08      	pop	{r3, pc}
 8008cc6:	bf00      	nop
 8008cc8:	200000b8 	.word	0x200000b8
 8008ccc:	20002d28 	.word	0x20002d28

08008cd0 <LCD_Index2Color>:
 8008cd0:	b508      	push	{r3, lr}
 8008cd2:	4b05      	ldr	r3, [pc, #20]	; (8008ce8 <LCD_Index2Color+0x18>)
 8008cd4:	681b      	ldr	r3, [r3, #0]
 8008cd6:	7c5a      	ldrb	r2, [r3, #17]
 8008cd8:	4b04      	ldr	r3, [pc, #16]	; (8008cec <LCD_Index2Color+0x1c>)
 8008cda:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008cde:	691b      	ldr	r3, [r3, #16]
 8008ce0:	685b      	ldr	r3, [r3, #4]
 8008ce2:	4798      	blx	r3
 8008ce4:	bd08      	pop	{r3, pc}
 8008ce6:	bf00      	nop
 8008ce8:	200000b8 	.word	0x200000b8
 8008cec:	20002d28 	.word	0x20002d28

08008cf0 <LCD_SetColorIndex>:
 8008cf0:	4b04      	ldr	r3, [pc, #16]	; (8008d04 <LCD_SetColorIndex+0x14>)
 8008cf2:	681b      	ldr	r3, [r3, #0]
 8008cf4:	7c1a      	ldrb	r2, [r3, #16]
 8008cf6:	0752      	lsls	r2, r2, #29
 8008cf8:	bf4c      	ite	mi
 8008cfa:	6b9b      	ldrmi	r3, [r3, #56]	; 0x38
 8008cfc:	6bdb      	ldrpl	r3, [r3, #60]	; 0x3c
 8008cfe:	6018      	str	r0, [r3, #0]
 8008d00:	4770      	bx	lr
 8008d02:	bf00      	nop
 8008d04:	200000b8 	.word	0x200000b8

08008d08 <_SetColor>:
 8008d08:	b508      	push	{r3, lr}
 8008d0a:	4b06      	ldr	r3, [pc, #24]	; (8008d24 <_SetColor+0x1c>)
 8008d0c:	681b      	ldr	r3, [r3, #0]
 8008d0e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8008d10:	4281      	cmp	r1, r0
 8008d12:	d006      	beq.n	8008d22 <_SetColor+0x1a>
 8008d14:	6318      	str	r0, [r3, #48]	; 0x30
 8008d16:	f7ff ffcb 	bl	8008cb0 <LCD_Color2Index>
 8008d1a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008d1e:	f7ff bfe7 	b.w	8008cf0 <LCD_SetColorIndex>
 8008d22:	bd08      	pop	{r3, pc}
 8008d24:	200000b8 	.word	0x200000b8

08008d28 <LCD_SetBkColorIndex>:
 8008d28:	4b04      	ldr	r3, [pc, #16]	; (8008d3c <LCD_SetBkColorIndex+0x14>)
 8008d2a:	681b      	ldr	r3, [r3, #0]
 8008d2c:	7c1a      	ldrb	r2, [r3, #16]
 8008d2e:	0752      	lsls	r2, r2, #29
 8008d30:	bf4c      	ite	mi
 8008d32:	6bdb      	ldrmi	r3, [r3, #60]	; 0x3c
 8008d34:	6b9b      	ldrpl	r3, [r3, #56]	; 0x38
 8008d36:	6018      	str	r0, [r3, #0]
 8008d38:	4770      	bx	lr
 8008d3a:	bf00      	nop
 8008d3c:	200000b8 	.word	0x200000b8

08008d40 <_SetBkColor>:
 8008d40:	b508      	push	{r3, lr}
 8008d42:	4b06      	ldr	r3, [pc, #24]	; (8008d5c <_SetBkColor+0x1c>)
 8008d44:	681b      	ldr	r3, [r3, #0]
 8008d46:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8008d48:	4281      	cmp	r1, r0
 8008d4a:	d006      	beq.n	8008d5a <_SetBkColor+0x1a>
 8008d4c:	6358      	str	r0, [r3, #52]	; 0x34
 8008d4e:	f7ff ffaf 	bl	8008cb0 <LCD_Color2Index>
 8008d52:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008d56:	f7ff bfe7 	b.w	8008d28 <LCD_SetBkColorIndex>
 8008d5a:	bd08      	pop	{r3, pc}
 8008d5c:	200000b8 	.word	0x200000b8

08008d60 <LCD_SetBkColor>:
 8008d60:	b508      	push	{r3, lr}
 8008d62:	4b02      	ldr	r3, [pc, #8]	; (8008d6c <LCD_SetBkColor+0xc>)
 8008d64:	681b      	ldr	r3, [r3, #0]
 8008d66:	685b      	ldr	r3, [r3, #4]
 8008d68:	4798      	blx	r3
 8008d6a:	bd08      	pop	{r3, pc}
 8008d6c:	200000a0 	.word	0x200000a0

08008d70 <LCD_SetColor>:
 8008d70:	b508      	push	{r3, lr}
 8008d72:	4b02      	ldr	r3, [pc, #8]	; (8008d7c <LCD_SetColor+0xc>)
 8008d74:	681b      	ldr	r3, [r3, #0]
 8008d76:	681b      	ldr	r3, [r3, #0]
 8008d78:	4798      	blx	r3
 8008d7a:	bd08      	pop	{r3, pc}
 8008d7c:	200000a0 	.word	0x200000a0

08008d80 <GUI__DivideRound32>:
 8008d80:	b149      	cbz	r1, 8008d96 <GUI__DivideRound32+0x16>
 8008d82:	2800      	cmp	r0, #0
 8008d84:	ea4f 0361 	mov.w	r3, r1, asr #1
 8008d88:	bfb4      	ite	lt
 8008d8a:	ebc3 0000 	rsblt	r0, r3, r0
 8008d8e:	18c0      	addge	r0, r0, r3
 8008d90:	fb90 f0f1 	sdiv	r0, r0, r1
 8008d94:	4770      	bx	lr
 8008d96:	4608      	mov	r0, r1
 8008d98:	4770      	bx	lr

08008d9a <GUI__HandleEOLine>:
 8008d9a:	b513      	push	{r0, r1, r4, lr}
 8008d9c:	6802      	ldr	r2, [r0, #0]
 8008d9e:	4604      	mov	r4, r0
 8008da0:	a802      	add	r0, sp, #8
 8008da2:	f840 2d04 	str.w	r2, [r0, #-4]!
 8008da6:	f000 fb59 	bl	800945c <GUI_UC__GetCharCodeInc>
 8008daa:	b2c0      	uxtb	r0, r0
 8008dac:	b120      	cbz	r0, 8008db8 <GUI__HandleEOLine+0x1e>
 8008dae:	280a      	cmp	r0, #10
 8008db0:	d104      	bne.n	8008dbc <GUI__HandleEOLine+0x22>
 8008db2:	9b01      	ldr	r3, [sp, #4]
 8008db4:	6023      	str	r3, [r4, #0]
 8008db6:	e001      	b.n	8008dbc <GUI__HandleEOLine+0x22>
 8008db8:	2001      	movs	r0, #1
 8008dba:	e000      	b.n	8008dbe <GUI__HandleEOLine+0x24>
 8008dbc:	2000      	movs	r0, #0
 8008dbe:	b002      	add	sp, #8
 8008dc0:	bd10      	pop	{r4, pc}

08008dc2 <GUI__IntersectRect>:
 8008dc2:	880b      	ldrh	r3, [r1, #0]
 8008dc4:	b510      	push	{r4, lr}
 8008dc6:	f9b0 4000 	ldrsh.w	r4, [r0]
 8008dca:	b21a      	sxth	r2, r3
 8008dcc:	4294      	cmp	r4, r2
 8008dce:	bfb8      	it	lt
 8008dd0:	8003      	strhlt	r3, [r0, #0]
 8008dd2:	884b      	ldrh	r3, [r1, #2]
 8008dd4:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8008dd8:	b21a      	sxth	r2, r3
 8008dda:	4294      	cmp	r4, r2
 8008ddc:	bfb8      	it	lt
 8008dde:	8043      	strhlt	r3, [r0, #2]
 8008de0:	888b      	ldrh	r3, [r1, #4]
 8008de2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8008de6:	b21a      	sxth	r2, r3
 8008de8:	4294      	cmp	r4, r2
 8008dea:	bfc8      	it	gt
 8008dec:	8083      	strhgt	r3, [r0, #4]
 8008dee:	88cb      	ldrh	r3, [r1, #6]
 8008df0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8008df4:	b21a      	sxth	r2, r3
 8008df6:	4291      	cmp	r1, r2
 8008df8:	bfc8      	it	gt
 8008dfa:	80c3      	strhgt	r3, [r0, #6]
 8008dfc:	bd10      	pop	{r4, pc}

08008dfe <GUI__IntersectRects>:
 8008dfe:	b570      	push	{r4, r5, r6, lr}
 8008e00:	f9b2 3000 	ldrsh.w	r3, [r2]
 8008e04:	f9b1 4000 	ldrsh.w	r4, [r1]
 8008e08:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8008e0c:	f9b1 6004 	ldrsh.w	r6, [r1, #4]
 8008e10:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 8008e14:	429c      	cmp	r4, r3
 8008e16:	bfb8      	it	lt
 8008e18:	461c      	movlt	r4, r3
 8008e1a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8008e1e:	429d      	cmp	r5, r3
 8008e20:	bfa8      	it	ge
 8008e22:	462b      	movge	r3, r5
 8008e24:	f9b2 5004 	ldrsh.w	r5, [r2, #4]
 8008e28:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8008e2c:	42ae      	cmp	r6, r5
 8008e2e:	bfb8      	it	lt
 8008e30:	4635      	movlt	r5, r6
 8008e32:	b2a4      	uxth	r4, r4
 8008e34:	b2ad      	uxth	r5, r5
 8008e36:	4291      	cmp	r1, r2
 8008e38:	bfb8      	it	lt
 8008e3a:	460a      	movlt	r2, r1
 8008e3c:	8004      	strh	r4, [r0, #0]
 8008e3e:	8085      	strh	r5, [r0, #4]
 8008e40:	b224      	sxth	r4, r4
 8008e42:	b22d      	sxth	r5, r5
 8008e44:	b29b      	uxth	r3, r3
 8008e46:	b292      	uxth	r2, r2
 8008e48:	42a5      	cmp	r5, r4
 8008e4a:	8043      	strh	r3, [r0, #2]
 8008e4c:	80c2      	strh	r2, [r0, #6]
 8008e4e:	db06      	blt.n	8008e5e <GUI__IntersectRects+0x60>
 8008e50:	b210      	sxth	r0, r2
 8008e52:	b21b      	sxth	r3, r3
 8008e54:	4298      	cmp	r0, r3
 8008e56:	bfb4      	ite	lt
 8008e58:	2000      	movlt	r0, #0
 8008e5a:	2001      	movge	r0, #1
 8008e5c:	bd70      	pop	{r4, r5, r6, pc}
 8008e5e:	2000      	movs	r0, #0
 8008e60:	bd70      	pop	{r4, r5, r6, pc}

08008e62 <GUI__memset16>:
 8008e62:	b570      	push	{r4, r5, r6, lr}
 8008e64:	0784      	lsls	r4, r0, #30
 8008e66:	d502      	bpl.n	8008e6e <GUI__memset16+0xc>
 8008e68:	8001      	strh	r1, [r0, #0]
 8008e6a:	3a01      	subs	r2, #1
 8008e6c:	3002      	adds	r0, #2
 8008e6e:	0855      	lsrs	r5, r2, #1
 8008e70:	462b      	mov	r3, r5
 8008e72:	b305      	cbz	r5, 8008eb6 <GUI__memset16+0x54>
 8008e74:	2d03      	cmp	r5, #3
 8008e76:	eb01 4401 	add.w	r4, r1, r1, lsl #16
 8008e7a:	dc02      	bgt.n	8008e82 <GUI__memset16+0x20>
 8008e7c:	4606      	mov	r6, r0
 8008e7e:	461d      	mov	r5, r3
 8008e80:	e012      	b.n	8008ea8 <GUI__memset16+0x46>
 8008e82:	4603      	mov	r3, r0
 8008e84:	462e      	mov	r6, r5
 8008e86:	3e04      	subs	r6, #4
 8008e88:	2e03      	cmp	r6, #3
 8008e8a:	601c      	str	r4, [r3, #0]
 8008e8c:	605c      	str	r4, [r3, #4]
 8008e8e:	609c      	str	r4, [r3, #8]
 8008e90:	60dc      	str	r4, [r3, #12]
 8008e92:	f103 0310 	add.w	r3, r3, #16
 8008e96:	dcf6      	bgt.n	8008e86 <GUI__memset16+0x24>
 8008e98:	3d04      	subs	r5, #4
 8008e9a:	08ab      	lsrs	r3, r5, #2
 8008e9c:	1c5e      	adds	r6, r3, #1
 8008e9e:	eb00 1006 	add.w	r0, r0, r6, lsl #4
 8008ea2:	eba5 0383 	sub.w	r3, r5, r3, lsl #2
 8008ea6:	e7e9      	b.n	8008e7c <GUI__memset16+0x1a>
 8008ea8:	b11d      	cbz	r5, 8008eb2 <GUI__memset16+0x50>
 8008eaa:	f846 4b04 	str.w	r4, [r6], #4
 8008eae:	3d01      	subs	r5, #1
 8008eb0:	e7fa      	b.n	8008ea8 <GUI__memset16+0x46>
 8008eb2:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8008eb6:	07d3      	lsls	r3, r2, #31
 8008eb8:	bf48      	it	mi
 8008eba:	8001      	strhmi	r1, [r0, #0]
 8008ebc:	bd70      	pop	{r4, r5, r6, pc}

08008ebe <GUI__ReduceRect>:
 8008ebe:	880b      	ldrh	r3, [r1, #0]
 8008ec0:	b292      	uxth	r2, r2
 8008ec2:	4413      	add	r3, r2
 8008ec4:	8003      	strh	r3, [r0, #0]
 8008ec6:	888b      	ldrh	r3, [r1, #4]
 8008ec8:	1a9b      	subs	r3, r3, r2
 8008eca:	8083      	strh	r3, [r0, #4]
 8008ecc:	884b      	ldrh	r3, [r1, #2]
 8008ece:	4413      	add	r3, r2
 8008ed0:	8043      	strh	r3, [r0, #2]
 8008ed2:	88cb      	ldrh	r3, [r1, #6]
 8008ed4:	1a9a      	subs	r2, r3, r2
 8008ed6:	80c2      	strh	r2, [r0, #6]
 8008ed8:	4770      	bx	lr

08008eda <GUI__sqrt32>:
 8008eda:	b510      	push	{r4, lr}
 8008edc:	2110      	movs	r1, #16
 8008ede:	2300      	movs	r3, #0
 8008ee0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8008ee4:	189c      	adds	r4, r3, r2
 8008ee6:	4284      	cmp	r4, r0
 8008ee8:	bf9c      	itt	ls
 8008eea:	18a3      	addls	r3, r4, r2
 8008eec:	ebc4 0000 	rsbls	r0, r4, r0
 8008ef0:	3901      	subs	r1, #1
 8008ef2:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8008ef6:	ea4f 0292 	mov.w	r2, r2, lsr #2
 8008efa:	d1f3      	bne.n	8008ee4 <GUI__sqrt32+0xa>
 8008efc:	4618      	mov	r0, r3
 8008efe:	bd10      	pop	{r4, pc}

08008f00 <GUI__strcmp>:
 8008f00:	b510      	push	{r4, lr}
 8008f02:	4b09      	ldr	r3, [pc, #36]	; (8008f28 <GUI__strcmp+0x28>)
 8008f04:	2800      	cmp	r0, #0
 8008f06:	bf08      	it	eq
 8008f08:	4618      	moveq	r0, r3
 8008f0a:	2900      	cmp	r1, #0
 8008f0c:	bf08      	it	eq
 8008f0e:	4619      	moveq	r1, r3
 8008f10:	2300      	movs	r3, #0
 8008f12:	5cc4      	ldrb	r4, [r0, r3]
 8008f14:	5cca      	ldrb	r2, [r1, r3]
 8008f16:	42a2      	cmp	r2, r4
 8008f18:	d104      	bne.n	8008f24 <GUI__strcmp+0x24>
 8008f1a:	3301      	adds	r3, #1
 8008f1c:	2a00      	cmp	r2, #0
 8008f1e:	d1f8      	bne.n	8008f12 <GUI__strcmp+0x12>
 8008f20:	4610      	mov	r0, r2
 8008f22:	bd10      	pop	{r4, pc}
 8008f24:	2001      	movs	r0, #1
 8008f26:	bd10      	pop	{r4, pc}
 8008f28:	08012be8 	.word	0x08012be8

08008f2c <GUI__strcmp_hp>:
 8008f2c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008f2e:	460d      	mov	r5, r1
 8008f30:	b160      	cbz	r0, 8008f4c <GUI__strcmp_hp+0x20>
 8008f32:	f002 fa99 	bl	800b468 <GUI_ALLOC_LockH>
 8008f36:	ac02      	add	r4, sp, #8
 8008f38:	4629      	mov	r1, r5
 8008f3a:	f844 0d04 	str.w	r0, [r4, #-4]!
 8008f3e:	f7ff ffdf 	bl	8008f00 <GUI__strcmp>
 8008f42:	4605      	mov	r5, r0
 8008f44:	4620      	mov	r0, r4
 8008f46:	f002 fa9d 	bl	800b484 <GUI_ALLOC_UnlockH>
 8008f4a:	e000      	b.n	8008f4e <GUI__strcmp_hp+0x22>
 8008f4c:	2501      	movs	r5, #1
 8008f4e:	4628      	mov	r0, r5
 8008f50:	b003      	add	sp, #12
 8008f52:	bd30      	pop	{r4, r5, pc}

08008f54 <GUI__strlen>:
 8008f54:	f04f 33ff 	mov.w	r3, #4294967295
 8008f58:	b118      	cbz	r0, 8008f62 <GUI__strlen+0xe>
 8008f5a:	3301      	adds	r3, #1
 8008f5c:	5cc2      	ldrb	r2, [r0, r3]
 8008f5e:	2a00      	cmp	r2, #0
 8008f60:	d1fb      	bne.n	8008f5a <GUI__strlen+0x6>
 8008f62:	4618      	mov	r0, r3
 8008f64:	4770      	bx	lr
	...

08008f68 <GUI__SetText>:
 8008f68:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008f6a:	6807      	ldr	r7, [r0, #0]
 8008f6c:	4605      	mov	r5, r0
 8008f6e:	4638      	mov	r0, r7
 8008f70:	460e      	mov	r6, r1
 8008f72:	f7ff ffdb 	bl	8008f2c <GUI__strcmp_hp>
 8008f76:	b908      	cbnz	r0, 8008f7c <GUI__SetText+0x14>
 8008f78:	2000      	movs	r0, #0
 8008f7a:	e02f      	b.n	8008fdc <GUI__SetText+0x74>
 8008f7c:	4630      	mov	r0, r6
 8008f7e:	f7ff ffe9 	bl	8008f54 <GUI__strlen>
 8008f82:	1c44      	adds	r4, r0, #1
 8008f84:	4638      	mov	r0, r7
 8008f86:	f002 fa9d 	bl	800b4c4 <GUI_ALLOC_GetSize>
 8008f8a:	4284      	cmp	r4, r0
 8008f8c:	d110      	bne.n	8008fb0 <GUI__SetText+0x48>
 8008f8e:	2c00      	cmp	r4, #0
 8008f90:	d0f2      	beq.n	8008f78 <GUI__SetText+0x10>
 8008f92:	4638      	mov	r0, r7
 8008f94:	f002 fa68 	bl	800b468 <GUI_ALLOC_LockH>
 8008f98:	ad02      	add	r5, sp, #8
 8008f9a:	4b11      	ldr	r3, [pc, #68]	; (8008fe0 <GUI__SetText+0x78>)
 8008f9c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8008fa0:	681b      	ldr	r3, [r3, #0]
 8008fa2:	4631      	mov	r1, r6
 8008fa4:	4622      	mov	r2, r4
 8008fa6:	4798      	blx	r3
 8008fa8:	4628      	mov	r0, r5
 8008faa:	f002 fa6b 	bl	800b484 <GUI_ALLOC_UnlockH>
 8008fae:	e014      	b.n	8008fda <GUI__SetText+0x72>
 8008fb0:	4620      	mov	r0, r4
 8008fb2:	f002 fc25 	bl	800b800 <GUI_ALLOC_AllocNoInit>
 8008fb6:	4607      	mov	r7, r0
 8008fb8:	2800      	cmp	r0, #0
 8008fba:	d0dd      	beq.n	8008f78 <GUI__SetText+0x10>
 8008fbc:	f002 fa54 	bl	800b468 <GUI_ALLOC_LockH>
 8008fc0:	ac02      	add	r4, sp, #8
 8008fc2:	4631      	mov	r1, r6
 8008fc4:	f844 0d04 	str.w	r0, [r4, #-4]!
 8008fc8:	f006 fe90 	bl	800fcec <strcpy>
 8008fcc:	4620      	mov	r0, r4
 8008fce:	f002 fa59 	bl	800b484 <GUI_ALLOC_UnlockH>
 8008fd2:	4628      	mov	r0, r5
 8008fd4:	f002 fc18 	bl	800b808 <GUI_ALLOC_FreePtr>
 8008fd8:	602f      	str	r7, [r5, #0]
 8008fda:	2001      	movs	r0, #1
 8008fdc:	b003      	add	sp, #12
 8008fde:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008fe0:	200000a8 	.word	0x200000a8

08008fe4 <GUI__ManageCacheEx>:
 8008fe4:	2801      	cmp	r0, #1
 8008fe6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008fe8:	4604      	mov	r4, r0
 8008fea:	460d      	mov	r5, r1
 8008fec:	dc65      	bgt.n	80090ba <GUI__ManageCacheEx+0xd6>
 8008fee:	4b34      	ldr	r3, [pc, #208]	; (80090c0 <GUI__ManageCacheEx+0xdc>)
 8008ff0:	681b      	ldr	r3, [r3, #0]
 8008ff2:	b103      	cbz	r3, 8008ff6 <GUI__ManageCacheEx+0x12>
 8008ff4:	4798      	blx	r3
 8008ff6:	2d01      	cmp	r5, #1
 8008ff8:	d004      	beq.n	8009004 <GUI__ManageCacheEx+0x20>
 8008ffa:	2d02      	cmp	r5, #2
 8008ffc:	d021      	beq.n	8009042 <GUI__ManageCacheEx+0x5e>
 8008ffe:	2d00      	cmp	r5, #0
 8009000:	d15b      	bne.n	80090ba <GUI__ManageCacheEx+0xd6>
 8009002:	e035      	b.n	8009070 <GUI__ManageCacheEx+0x8c>
 8009004:	4e2f      	ldr	r6, [pc, #188]	; (80090c4 <GUI__ManageCacheEx+0xe0>)
 8009006:	f856 7024 	ldr.w	r7, [r6, r4, lsl #2]
 800900a:	b9b7      	cbnz	r7, 800903a <GUI__ManageCacheEx+0x56>
 800900c:	4620      	mov	r0, r4
 800900e:	f001 fa6d 	bl	800a4ec <GUI_DEVICE__GetpDriver>
 8009012:	9001      	str	r0, [sp, #4]
 8009014:	2800      	cmp	r0, #0
 8009016:	d050      	beq.n	80090ba <GUI__ManageCacheEx+0xd6>
 8009018:	68c3      	ldr	r3, [r0, #12]
 800901a:	210d      	movs	r1, #13
 800901c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800901e:	a801      	add	r0, sp, #4
 8009020:	4798      	blx	r3
 8009022:	4603      	mov	r3, r0
 8009024:	2800      	cmp	r0, #0
 8009026:	d048      	beq.n	80090ba <GUI__ManageCacheEx+0xd6>
 8009028:	9801      	ldr	r0, [sp, #4]
 800902a:	4629      	mov	r1, r5
 800902c:	4798      	blx	r3
 800902e:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
 8009032:	3301      	adds	r3, #1
 8009034:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
 8009038:	e018      	b.n	800906c <GUI__ManageCacheEx+0x88>
 800903a:	3701      	adds	r7, #1
 800903c:	f846 7024 	str.w	r7, [r6, r4, lsl #2]
 8009040:	e03b      	b.n	80090ba <GUI__ManageCacheEx+0xd6>
 8009042:	4620      	mov	r0, r4
 8009044:	f001 fa52 	bl	800a4ec <GUI_DEVICE__GetpDriver>
 8009048:	9001      	str	r0, [sp, #4]
 800904a:	2800      	cmp	r0, #0
 800904c:	d035      	beq.n	80090ba <GUI__ManageCacheEx+0xd6>
 800904e:	68c3      	ldr	r3, [r0, #12]
 8009050:	210d      	movs	r1, #13
 8009052:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009054:	a801      	add	r0, sp, #4
 8009056:	4798      	blx	r3
 8009058:	4604      	mov	r4, r0
 800905a:	2800      	cmp	r0, #0
 800905c:	d02d      	beq.n	80090ba <GUI__ManageCacheEx+0xd6>
 800905e:	4b1a      	ldr	r3, [pc, #104]	; (80090c8 <GUI__ManageCacheEx+0xe4>)
 8009060:	681b      	ldr	r3, [r3, #0]
 8009062:	b103      	cbz	r3, 8009066 <GUI__ManageCacheEx+0x82>
 8009064:	4798      	blx	r3
 8009066:	9801      	ldr	r0, [sp, #4]
 8009068:	2102      	movs	r1, #2
 800906a:	47a0      	blx	r4
 800906c:	2000      	movs	r0, #0
 800906e:	e025      	b.n	80090bc <GUI__ManageCacheEx+0xd8>
 8009070:	4d14      	ldr	r5, [pc, #80]	; (80090c4 <GUI__ManageCacheEx+0xe0>)
 8009072:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8009076:	2b01      	cmp	r3, #1
 8009078:	d001      	beq.n	800907e <GUI__ManageCacheEx+0x9a>
 800907a:	2001      	movs	r0, #1
 800907c:	e015      	b.n	80090aa <GUI__ManageCacheEx+0xc6>
 800907e:	4620      	mov	r0, r4
 8009080:	f001 fa34 	bl	800a4ec <GUI_DEVICE__GetpDriver>
 8009084:	9001      	str	r0, [sp, #4]
 8009086:	2800      	cmp	r0, #0
 8009088:	d0f7      	beq.n	800907a <GUI__ManageCacheEx+0x96>
 800908a:	68c3      	ldr	r3, [r0, #12]
 800908c:	210d      	movs	r1, #13
 800908e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009090:	a801      	add	r0, sp, #4
 8009092:	4798      	blx	r3
 8009094:	4606      	mov	r6, r0
 8009096:	2800      	cmp	r0, #0
 8009098:	d0ef      	beq.n	800907a <GUI__ManageCacheEx+0x96>
 800909a:	4b0b      	ldr	r3, [pc, #44]	; (80090c8 <GUI__ManageCacheEx+0xe4>)
 800909c:	681b      	ldr	r3, [r3, #0]
 800909e:	b103      	cbz	r3, 80090a2 <GUI__ManageCacheEx+0xbe>
 80090a0:	4798      	blx	r3
 80090a2:	9801      	ldr	r0, [sp, #4]
 80090a4:	2100      	movs	r1, #0
 80090a6:	47b0      	blx	r6
 80090a8:	2000      	movs	r0, #0
 80090aa:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 80090ae:	2b00      	cmp	r3, #0
 80090b0:	bf18      	it	ne
 80090b2:	3b01      	subne	r3, #1
 80090b4:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 80090b8:	e000      	b.n	80090bc <GUI__ManageCacheEx+0xd8>
 80090ba:	2001      	movs	r0, #1
 80090bc:	b003      	add	sp, #12
 80090be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80090c0:	20002a68 	.word	0x20002a68
 80090c4:	20002a60 	.word	0x20002a60
 80090c8:	20002a5c 	.word	0x20002a5c

080090cc <GUI__ManageCache>:
 80090cc:	4b02      	ldr	r3, [pc, #8]	; (80090d8 <GUI__ManageCache+0xc>)
 80090ce:	681b      	ldr	r3, [r3, #0]
 80090d0:	4601      	mov	r1, r0
 80090d2:	7c58      	ldrb	r0, [r3, #17]
 80090d4:	f7ff bf86 	b.w	8008fe4 <GUI__ManageCacheEx>
 80090d8:	200000b8 	.word	0x200000b8

080090dc <GUI__MixColors>:
 80090dc:	f081 417f 	eor.w	r1, r1, #4278190080	; 0xff000000
 80090e0:	f080 407f 	eor.w	r0, r0, #4278190080	; 0xff000000
 80090e4:	0e0b      	lsrs	r3, r1, #24
 80090e6:	ea4f 6310 	mov.w	r3, r0, lsr #24
 80090ea:	b530      	push	{r4, r5, lr}
 80090ec:	fb02 f303 	mul.w	r3, r2, r3
 80090f0:	f04f 04ff 	mov.w	r4, #255	; 0xff
 80090f4:	fbb3 f3f4 	udiv	r3, r3, r4
 80090f8:	bf08      	it	eq
 80090fa:	f020 417f 	biceq.w	r1, r0, #4278190080	; 0xff000000
 80090fe:	1ae2      	subs	r2, r4, r3
 8009100:	f3c0 2407 	ubfx	r4, r0, #8, #8
 8009104:	f001 25ff 	and.w	r5, r1, #4278255360	; 0xff00ff00
 8009108:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 800910c:	f044 7480 	orr.w	r4, r4, #16777216	; 0x1000000
 8009110:	0a2d      	lsrs	r5, r5, #8
 8009112:	435c      	muls	r4, r3
 8009114:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8009118:	4343      	muls	r3, r0
 800911a:	fb02 4405 	mla	r4, r2, r5, r4
 800911e:	fb02 3201 	mla	r2, r2, r1, r3
 8009122:	0a12      	lsrs	r2, r2, #8
 8009124:	f004 24ff 	and.w	r4, r4, #4278255360	; 0xff00ff00
 8009128:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 800912c:	ea44 0002 	orr.w	r0, r4, r2
 8009130:	f080 407f 	eor.w	r0, r0, #4278190080	; 0xff000000
 8009134:	bd30      	pop	{r4, r5, pc}
	...

08009138 <_OnExit>:
 8009138:	b570      	push	{r4, r5, r6, lr}
 800913a:	4c0a      	ldr	r4, [pc, #40]	; (8009164 <_OnExit+0x2c>)
 800913c:	4d0a      	ldr	r5, [pc, #40]	; (8009168 <_OnExit+0x30>)
 800913e:	6820      	ldr	r0, [r4, #0]
 8009140:	4e0a      	ldr	r6, [pc, #40]	; (800916c <_OnExit+0x34>)
 8009142:	f002 f97d 	bl	800b440 <GUI_ALLOC_FreeFixedBlock>
 8009146:	6828      	ldr	r0, [r5, #0]
 8009148:	f002 f97a 	bl	800b440 <GUI_ALLOC_FreeFixedBlock>
 800914c:	6830      	ldr	r0, [r6, #0]
 800914e:	f002 f977 	bl	800b440 <GUI_ALLOC_FreeFixedBlock>
 8009152:	4a07      	ldr	r2, [pc, #28]	; (8009170 <_OnExit+0x38>)
 8009154:	2300      	movs	r3, #0
 8009156:	6013      	str	r3, [r2, #0]
 8009158:	4a06      	ldr	r2, [pc, #24]	; (8009174 <_OnExit+0x3c>)
 800915a:	6033      	str	r3, [r6, #0]
 800915c:	602b      	str	r3, [r5, #0]
 800915e:	6023      	str	r3, [r4, #0]
 8009160:	6013      	str	r3, [r2, #0]
 8009162:	bd70      	pop	{r4, r5, r6, pc}
 8009164:	20002a70 	.word	0x20002a70
 8009168:	20002a6c 	.word	0x20002a6c
 800916c:	20002a74 	.word	0x20002a74
 8009170:	20002a78 	.word	0x20002a78
 8009174:	20002a88 	.word	0x20002a88

08009178 <GUI__GetAlphaBuffer>:
 8009178:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800917c:	461c      	mov	r4, r3
 800917e:	4b28      	ldr	r3, [pc, #160]	; (8009220 <GUI__GetAlphaBuffer+0xa8>)
 8009180:	4617      	mov	r7, r2
 8009182:	681a      	ldr	r2, [r3, #0]
 8009184:	4606      	mov	r6, r0
 8009186:	4688      	mov	r8, r1
 8009188:	b932      	cbnz	r2, 8009198 <GUI__GetAlphaBuffer+0x20>
 800918a:	2201      	movs	r2, #1
 800918c:	4825      	ldr	r0, [pc, #148]	; (8009224 <GUI__GetAlphaBuffer+0xac>)
 800918e:	601a      	str	r2, [r3, #0]
 8009190:	4b25      	ldr	r3, [pc, #148]	; (8009228 <GUI__GetAlphaBuffer+0xb0>)
 8009192:	6003      	str	r3, [r0, #0]
 8009194:	f001 fb04 	bl	800a7a0 <GUI__RegisterExit>
 8009198:	4d24      	ldr	r5, [pc, #144]	; (800922c <GUI__GetAlphaBuffer+0xb4>)
 800919a:	682b      	ldr	r3, [r5, #0]
 800919c:	b933      	cbnz	r3, 80091ac <GUI__GetAlphaBuffer+0x34>
 800919e:	4b24      	ldr	r3, [pc, #144]	; (8009230 <GUI__GetAlphaBuffer+0xb8>)
 80091a0:	681b      	ldr	r3, [r3, #0]
 80091a2:	602b      	str	r3, [r5, #0]
 80091a4:	b913      	cbnz	r3, 80091ac <GUI__GetAlphaBuffer+0x34>
 80091a6:	f7ff fa05 	bl	80085b4 <LCD_GetVXSizeMax>
 80091aa:	6028      	str	r0, [r5, #0]
 80091ac:	b10c      	cbz	r4, 80091b2 <GUI__GetAlphaBuffer+0x3a>
 80091ae:	682b      	ldr	r3, [r5, #0]
 80091b0:	6023      	str	r3, [r4, #0]
 80091b2:	b196      	cbz	r6, 80091da <GUI__GetAlphaBuffer+0x62>
 80091b4:	4b1f      	ldr	r3, [pc, #124]	; (8009234 <GUI__GetAlphaBuffer+0xbc>)
 80091b6:	681a      	ldr	r2, [r3, #0]
 80091b8:	4699      	mov	r9, r3
 80091ba:	2400      	movs	r4, #0
 80091bc:	b94a      	cbnz	r2, 80091d2 <GUI__GetAlphaBuffer+0x5a>
 80091be:	6828      	ldr	r0, [r5, #0]
 80091c0:	0080      	lsls	r0, r0, #2
 80091c2:	f002 fa21 	bl	800b608 <GUI_ALLOC_GetFixedBlock>
 80091c6:	f1d0 0401 	rsbs	r4, r0, #1
 80091ca:	f8c9 0000 	str.w	r0, [r9]
 80091ce:	bf38      	it	cc
 80091d0:	2400      	movcc	r4, #0
 80091d2:	f8d9 3000 	ldr.w	r3, [r9]
 80091d6:	6033      	str	r3, [r6, #0]
 80091d8:	e000      	b.n	80091dc <GUI__GetAlphaBuffer+0x64>
 80091da:	4634      	mov	r4, r6
 80091dc:	f1b8 0f00 	cmp.w	r8, #0
 80091e0:	d00d      	beq.n	80091fe <GUI__GetAlphaBuffer+0x86>
 80091e2:	4e15      	ldr	r6, [pc, #84]	; (8009238 <GUI__GetAlphaBuffer+0xc0>)
 80091e4:	6833      	ldr	r3, [r6, #0]
 80091e6:	b93b      	cbnz	r3, 80091f8 <GUI__GetAlphaBuffer+0x80>
 80091e8:	6828      	ldr	r0, [r5, #0]
 80091ea:	0080      	lsls	r0, r0, #2
 80091ec:	f002 fa0c 	bl	800b608 <GUI_ALLOC_GetFixedBlock>
 80091f0:	2800      	cmp	r0, #0
 80091f2:	6030      	str	r0, [r6, #0]
 80091f4:	bf08      	it	eq
 80091f6:	2401      	moveq	r4, #1
 80091f8:	6833      	ldr	r3, [r6, #0]
 80091fa:	f8c8 3000 	str.w	r3, [r8]
 80091fe:	b167      	cbz	r7, 800921a <GUI__GetAlphaBuffer+0xa2>
 8009200:	4e0e      	ldr	r6, [pc, #56]	; (800923c <GUI__GetAlphaBuffer+0xc4>)
 8009202:	6833      	ldr	r3, [r6, #0]
 8009204:	b93b      	cbnz	r3, 8009216 <GUI__GetAlphaBuffer+0x9e>
 8009206:	6828      	ldr	r0, [r5, #0]
 8009208:	0080      	lsls	r0, r0, #2
 800920a:	f002 f9fd 	bl	800b608 <GUI_ALLOC_GetFixedBlock>
 800920e:	2800      	cmp	r0, #0
 8009210:	6030      	str	r0, [r6, #0]
 8009212:	bf08      	it	eq
 8009214:	2401      	moveq	r4, #1
 8009216:	6833      	ldr	r3, [r6, #0]
 8009218:	603b      	str	r3, [r7, #0]
 800921a:	4620      	mov	r0, r4
 800921c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009220:	20002a88 	.word	0x20002a88
 8009224:	20002a7c 	.word	0x20002a7c
 8009228:	08009139 	.word	0x08009139
 800922c:	20002a78 	.word	0x20002a78
 8009230:	20002d30 	.word	0x20002d30
 8009234:	20002a70 	.word	0x20002a70
 8009238:	20002a6c 	.word	0x20002a6c
 800923c:	20002a74 	.word	0x20002a74

08009240 <GUI__DoAlphaBlending>:
 8009240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009244:	b093      	sub	sp, #76	; 0x4c
 8009246:	2400      	movs	r4, #0
 8009248:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800924a:	900b      	str	r0, [sp, #44]	; 0x2c
 800924c:	910c      	str	r1, [sp, #48]	; 0x30
 800924e:	4690      	mov	r8, r2
 8009250:	461f      	mov	r7, r3
 8009252:	6034      	str	r4, [r6, #0]
 8009254:	a80f      	add	r0, sp, #60	; 0x3c
 8009256:	a910      	add	r1, sp, #64	; 0x40
 8009258:	4622      	mov	r2, r4
 800925a:	ab11      	add	r3, sp, #68	; 0x44
 800925c:	f7ff ff8c 	bl	8009178 <GUI__GetAlphaBuffer>
 8009260:	4605      	mov	r5, r0
 8009262:	2800      	cmp	r0, #0
 8009264:	f040 80c5 	bne.w	80093f2 <GUI__DoAlphaBlending+0x1b2>
 8009268:	4c64      	ldr	r4, [pc, #400]	; (80093fc <GUI__DoAlphaBlending+0x1bc>)
 800926a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800926c:	6823      	ldr	r3, [r4, #0]
 800926e:	7c58      	ldrb	r0, [r3, #17]
 8009270:	4b63      	ldr	r3, [pc, #396]	; (8009400 <GUI__DoAlphaBlending+0x1c0>)
 8009272:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8009276:	9307      	str	r3, [sp, #28]
 8009278:	4297      	cmp	r7, r2
 800927a:	bfa8      	it	ge
 800927c:	4617      	movge	r7, r2
 800927e:	691a      	ldr	r2, [r3, #16]
 8009280:	920d      	str	r2, [sp, #52]	; 0x34
 8009282:	970a      	str	r7, [sp, #40]	; 0x28
 8009284:	f7ff f962 	bl	800854c <GUI_GetBitsPerPixelEx>
 8009288:	6823      	ldr	r3, [r4, #0]
 800928a:	9008      	str	r0, [sp, #32]
 800928c:	7c58      	ldrb	r0, [r3, #17]
 800928e:	f7ff f97b 	bl	8008588 <GUI_GetpfIndex2ColorEx>
 8009292:	4b5c      	ldr	r3, [pc, #368]	; (8009404 <GUI__DoAlphaBlending+0x1c4>)
 8009294:	9004      	str	r0, [sp, #16]
 8009296:	4298      	cmp	r0, r3
 8009298:	d005      	beq.n	80092a6 <GUI__DoAlphaBlending+0x66>
 800929a:	4b5b      	ldr	r3, [pc, #364]	; (8009408 <GUI__DoAlphaBlending+0x1c8>)
 800929c:	1ac3      	subs	r3, r0, r3
 800929e:	bf18      	it	ne
 80092a0:	2301      	movne	r3, #1
 80092a2:	9306      	str	r3, [sp, #24]
 80092a4:	e000      	b.n	80092a8 <GUI__DoAlphaBlending+0x68>
 80092a6:	9506      	str	r5, [sp, #24]
 80092a8:	2500      	movs	r5, #0
 80092aa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80092ac:	46ab      	mov	fp, r5
 80092ae:	4643      	mov	r3, r8
 80092b0:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80092b2:	f853 0b04 	ldr.w	r0, [r3], #4
 80092b6:	9305      	str	r3, [sp, #20]
 80092b8:	4790      	blx	r2
 80092ba:	0e03      	lsrs	r3, r0, #24
 80092bc:	4681      	mov	r9, r0
 80092be:	9309      	str	r3, [sp, #36]	; 0x24
 80092c0:	f000 8087 	beq.w	80093d2 <GUI__DoAlphaBlending+0x192>
 80092c4:	f1bb 0f00 	cmp.w	fp, #0
 80092c8:	d13f      	bne.n	800934a <GUI__DoAlphaBlending+0x10a>
 80092ca:	4b4c      	ldr	r3, [pc, #304]	; (80093fc <GUI__DoAlphaBlending+0x1bc>)
 80092cc:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80092ce:	681b      	ldr	r3, [r3, #0]
 80092d0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80092d2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80092d6:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 80092da:	990c      	ldr	r1, [sp, #48]	; 0x30
 80092dc:	442f      	add	r7, r5
 80092de:	42bb      	cmp	r3, r7
 80092e0:	bfc8      	it	gt
 80092e2:	ebc7 0b03 	rsbgt	fp, r7, r3
 80092e6:	eb0b 0a05 	add.w	sl, fp, r5
 80092ea:	bfc8      	it	gt
 80092ec:	461f      	movgt	r7, r3
 80092ee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80092f0:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 80092f4:	4453      	add	r3, sl
 80092f6:	4494      	add	ip, r2
 80092f8:	9300      	str	r3, [sp, #0]
 80092fa:	9b07      	ldr	r3, [sp, #28]
 80092fc:	9301      	str	r3, [sp, #4]
 80092fe:	f10c 32ff 	add.w	r2, ip, #4294967295
 8009302:	4638      	mov	r0, r7
 8009304:	460b      	mov	r3, r1
 8009306:	f8cd c00c 	str.w	ip, [sp, #12]
 800930a:	f005 f9ad 	bl	800e668 <GUI_ReadRectEx>
 800930e:	9a08      	ldr	r2, [sp, #32]
 8009310:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8009312:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8009316:	2a17      	cmp	r2, #23
 8009318:	dc06      	bgt.n	8009328 <GUI__DoAlphaBlending+0xe8>
 800931a:	4450      	add	r0, sl
 800931c:	ebcb 0104 	rsb	r1, fp, r4
 8009320:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009322:	f005 fb05 	bl	800e930 <GUI__ExpandPixelIndicesEx>
 8009326:	e001      	b.n	800932c <GUI__DoAlphaBlending+0xec>
 8009328:	9b06      	ldr	r3, [sp, #24]
 800932a:	b913      	cbnz	r3, 8009332 <GUI__DoAlphaBlending+0xf2>
 800932c:	f04f 0b01 	mov.w	fp, #1
 8009330:	e00b      	b.n	800934a <GUI__DoAlphaBlending+0x10a>
 8009332:	ebc7 070c 	rsb	r7, r7, ip
 8009336:	4482      	add	sl, r0
 8009338:	f8da 0000 	ldr.w	r0, [sl]
 800933c:	9a04      	ldr	r2, [sp, #16]
 800933e:	4790      	blx	r2
 8009340:	3f01      	subs	r7, #1
 8009342:	f84a 0b04 	str.w	r0, [sl], #4
 8009346:	d1f7      	bne.n	8009338 <GUI__DoAlphaBlending+0xf8>
 8009348:	e7f0      	b.n	800932c <GUI__DoAlphaBlending+0xec>
 800934a:	4b30      	ldr	r3, [pc, #192]	; (800940c <GUI__DoAlphaBlending+0x1cc>)
 800934c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800934e:	f8d3 c000 	ldr.w	ip, [r3]
 8009352:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8009354:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 8009358:	f1bc 0f00 	cmp.w	ip, #0
 800935c:	d024      	beq.n	80093a8 <GUI__DoAlphaBlending+0x168>
 800935e:	eb07 020a 	add.w	r2, r7, sl
 8009362:	4451      	add	r1, sl
 8009364:	9210      	str	r2, [sp, #64]	; 0x40
 8009366:	4623      	mov	r3, r4
 8009368:	910f      	str	r1, [sp, #60]	; 0x3c
 800936a:	4640      	mov	r0, r8
 800936c:	47e0      	blx	ip
 800936e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8009370:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8009372:	2300      	movs	r3, #0
 8009374:	f858 1003 	ldr.w	r1, [r8, r3]
 8009378:	f001 407f 	and.w	r0, r1, #4278190080	; 0xff000000
 800937c:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 8009380:	58e8      	ldr	r0, [r5, r3]
 8009382:	d101      	bne.n	8009388 <GUI__DoAlphaBlending+0x148>
 8009384:	50d0      	str	r0, [r2, r3]
 8009386:	e005      	b.n	8009394 <GUI__DoAlphaBlending+0x154>
 8009388:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 800938c:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 8009390:	bf08      	it	eq
 8009392:	50d1      	streq	r1, [r2, r3]
 8009394:	3c01      	subs	r4, #1
 8009396:	f103 0304 	add.w	r3, r3, #4
 800939a:	d1eb      	bne.n	8009374 <GUI__DoAlphaBlending+0x134>
 800939c:	6833      	ldr	r3, [r6, #0]
 800939e:	9710      	str	r7, [sp, #64]	; 0x40
 80093a0:	f043 0301 	orr.w	r3, r3, #1
 80093a4:	6033      	str	r3, [r6, #0]
 80093a6:	e022      	b.n	80093ee <GUI__DoAlphaBlending+0x1ae>
 80093a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80093aa:	2bff      	cmp	r3, #255	; 0xff
 80093ac:	d104      	bne.n	80093b8 <GUI__DoAlphaBlending+0x178>
 80093ae:	f851 300a 	ldr.w	r3, [r1, sl]
 80093b2:	f847 300a 	str.w	r3, [r7, sl]
 80093b6:	e013      	b.n	80093e0 <GUI__DoAlphaBlending+0x1a0>
 80093b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80093ba:	f851 100a 	ldr.w	r1, [r1, sl]
 80093be:	43da      	mvns	r2, r3
 80093c0:	4b13      	ldr	r3, [pc, #76]	; (8009410 <GUI__DoAlphaBlending+0x1d0>)
 80093c2:	f029 407f 	bic.w	r0, r9, #4278190080	; 0xff000000
 80093c6:	681b      	ldr	r3, [r3, #0]
 80093c8:	b2d2      	uxtb	r2, r2
 80093ca:	4798      	blx	r3
 80093cc:	f847 000a 	str.w	r0, [r7, sl]
 80093d0:	e002      	b.n	80093d8 <GUI__DoAlphaBlending+0x198>
 80093d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80093d4:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
 80093d8:	6833      	ldr	r3, [r6, #0]
 80093da:	f043 0301 	orr.w	r3, r3, #1
 80093de:	6033      	str	r3, [r6, #0]
 80093e0:	3c01      	subs	r4, #1
 80093e2:	f105 0501 	add.w	r5, r5, #1
 80093e6:	d002      	beq.n	80093ee <GUI__DoAlphaBlending+0x1ae>
 80093e8:	f8dd 8014 	ldr.w	r8, [sp, #20]
 80093ec:	e75f      	b.n	80092ae <GUI__DoAlphaBlending+0x6e>
 80093ee:	9810      	ldr	r0, [sp, #64]	; 0x40
 80093f0:	e000      	b.n	80093f4 <GUI__DoAlphaBlending+0x1b4>
 80093f2:	4620      	mov	r0, r4
 80093f4:	b013      	add	sp, #76	; 0x4c
 80093f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80093fa:	bf00      	nop
 80093fc:	200000b8 	.word	0x200000b8
 8009400:	20002d28 	.word	0x20002d28
 8009404:	0800ba6f 	.word	0x0800ba6f
 8009408:	0800ba6d 	.word	0x0800ba6d
 800940c:	20002a84 	.word	0x20002a84
 8009410:	200000ac 	.word	0x200000ac

08009414 <GUI__AllocAlphaBuffer>:
 8009414:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009416:	b108      	cbz	r0, 800941c <GUI__AllocAlphaBuffer+0x8>
 8009418:	aa03      	add	r2, sp, #12
 800941a:	e000      	b.n	800941e <GUI__AllocAlphaBuffer+0xa>
 800941c:	4602      	mov	r2, r0
 800941e:	a801      	add	r0, sp, #4
 8009420:	a902      	add	r1, sp, #8
 8009422:	2300      	movs	r3, #0
 8009424:	f7ff fea8 	bl	8009178 <GUI__GetAlphaBuffer>
 8009428:	b005      	add	sp, #20
 800942a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08009430 <GUI_SignalEvent>:
 8009430:	b508      	push	{r3, lr}
 8009432:	4b02      	ldr	r3, [pc, #8]	; (800943c <GUI_SignalEvent+0xc>)
 8009434:	681b      	ldr	r3, [r3, #0]
 8009436:	b103      	cbz	r3, 800943a <GUI_SignalEvent+0xa>
 8009438:	4798      	blx	r3
 800943a:	bd08      	pop	{r3, pc}
 800943c:	20002a8c 	.word	0x20002a8c

08009440 <GUI_AddDecMin>:
 8009440:	b570      	push	{r4, r5, r6, lr}
 8009442:	460c      	mov	r4, r1
 8009444:	4605      	mov	r5, r0
 8009446:	f001 fa41 	bl	800a8cc <GUI_Long2Len>
 800944a:	4623      	mov	r3, r4
 800944c:	b2c1      	uxtb	r1, r0
 800944e:	2200      	movs	r2, #0
 8009450:	4628      	mov	r0, r5
 8009452:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009456:	f001 ba51 	b.w	800a8fc <GUI_AddDecShift>
	...

0800945c <GUI_UC__GetCharCodeInc>:
 800945c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800945e:	4e08      	ldr	r6, [pc, #32]	; (8009480 <GUI_UC__GetCharCodeInc+0x24>)
 8009460:	6804      	ldr	r4, [r0, #0]
 8009462:	6833      	ldr	r3, [r6, #0]
 8009464:	4605      	mov	r5, r0
 8009466:	681b      	ldr	r3, [r3, #0]
 8009468:	4620      	mov	r0, r4
 800946a:	4798      	blx	r3
 800946c:	6833      	ldr	r3, [r6, #0]
 800946e:	4607      	mov	r7, r0
 8009470:	685b      	ldr	r3, [r3, #4]
 8009472:	4620      	mov	r0, r4
 8009474:	4798      	blx	r3
 8009476:	4420      	add	r0, r4
 8009478:	6028      	str	r0, [r5, #0]
 800947a:	4638      	mov	r0, r7
 800947c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800947e:	bf00      	nop
 8009480:	20002d20 	.word	0x20002d20

08009484 <GUI_UC__NumChars2NumBytes>:
 8009484:	b570      	push	{r4, r5, r6, lr}
 8009486:	4604      	mov	r4, r0
 8009488:	460e      	mov	r6, r1
 800948a:	2500      	movs	r5, #0
 800948c:	b146      	cbz	r6, 80094a0 <GUI_UC__NumChars2NumBytes+0x1c>
 800948e:	4b05      	ldr	r3, [pc, #20]	; (80094a4 <GUI_UC__NumChars2NumBytes+0x20>)
 8009490:	681b      	ldr	r3, [r3, #0]
 8009492:	4620      	mov	r0, r4
 8009494:	685b      	ldr	r3, [r3, #4]
 8009496:	4798      	blx	r3
 8009498:	3e01      	subs	r6, #1
 800949a:	4404      	add	r4, r0
 800949c:	4405      	add	r5, r0
 800949e:	e7f5      	b.n	800948c <GUI_UC__NumChars2NumBytes+0x8>
 80094a0:	4628      	mov	r0, r5
 80094a2:	bd70      	pop	{r4, r5, r6, pc}
 80094a4:	20002d20 	.word	0x20002d20

080094a8 <GUI__GetNumChars>:
 80094a8:	b513      	push	{r0, r1, r4, lr}
 80094aa:	9001      	str	r0, [sp, #4]
 80094ac:	b130      	cbz	r0, 80094bc <GUI__GetNumChars+0x14>
 80094ae:	2400      	movs	r4, #0
 80094b0:	a801      	add	r0, sp, #4
 80094b2:	f7ff ffd3 	bl	800945c <GUI_UC__GetCharCodeInc>
 80094b6:	b110      	cbz	r0, 80094be <GUI__GetNumChars+0x16>
 80094b8:	3401      	adds	r4, #1
 80094ba:	e7f9      	b.n	80094b0 <GUI__GetNumChars+0x8>
 80094bc:	4604      	mov	r4, r0
 80094be:	4620      	mov	r0, r4
 80094c0:	b002      	add	sp, #8
 80094c2:	bd10      	pop	{r4, pc}

080094c4 <_OnExit>:
 80094c4:	4a03      	ldr	r2, [pc, #12]	; (80094d4 <_OnExit+0x10>)
 80094c6:	2300      	movs	r3, #0
 80094c8:	6013      	str	r3, [r2, #0]
 80094ca:	4a03      	ldr	r2, [pc, #12]	; (80094d8 <_OnExit+0x14>)
 80094cc:	6013      	str	r3, [r2, #0]
 80094ce:	4a03      	ldr	r2, [pc, #12]	; (80094dc <_OnExit+0x18>)
 80094d0:	6013      	str	r3, [r2, #0]
 80094d2:	4770      	bx	lr
 80094d4:	20002a90 	.word	0x20002a90
 80094d8:	20002a9c 	.word	0x20002a9c
 80094dc:	20002aa0 	.word	0x20002aa0

080094e0 <GUI_TIMER_Exec>:
 80094e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80094e4:	4b19      	ldr	r3, [pc, #100]	; (800954c <GUI_TIMER_Exec+0x6c>)
 80094e6:	681f      	ldr	r7, [r3, #0]
 80094e8:	b085      	sub	sp, #20
 80094ea:	2500      	movs	r5, #0
 80094ec:	4698      	mov	r8, r3
 80094ee:	f8d8 3000 	ldr.w	r3, [r8]
 80094f2:	4c16      	ldr	r4, [pc, #88]	; (800954c <GUI_TIMER_Exec+0x6c>)
 80094f4:	b333      	cbz	r3, 8009544 <GUI_TIMER_Exec+0x64>
 80094f6:	f000 f991 	bl	800981c <GUI_GetTime>
 80094fa:	4606      	mov	r6, r0
 80094fc:	6820      	ldr	r0, [r4, #0]
 80094fe:	f001 ffb3 	bl	800b468 <GUI_ALLOC_LockH>
 8009502:	4603      	mov	r3, r0
 8009504:	a804      	add	r0, sp, #16
 8009506:	6959      	ldr	r1, [r3, #20]
 8009508:	f840 3d10 	str.w	r3, [r0, #-16]!
 800950c:	1b89      	subs	r1, r1, r6
 800950e:	2900      	cmp	r1, #0
 8009510:	dc13      	bgt.n	800953a <GUI_TIMER_Exec+0x5a>
 8009512:	6821      	ldr	r1, [r4, #0]
 8009514:	9103      	str	r1, [sp, #12]
 8009516:	9601      	str	r6, [sp, #4]
 8009518:	6919      	ldr	r1, [r3, #16]
 800951a:	685e      	ldr	r6, [r3, #4]
 800951c:	9102      	str	r1, [sp, #8]
 800951e:	4668      	mov	r0, sp
 8009520:	6026      	str	r6, [r4, #0]
 8009522:	f8d3 9000 	ldr.w	r9, [r3]
 8009526:	f001 ffad 	bl	800b484 <GUI_ALLOC_UnlockH>
 800952a:	a801      	add	r0, sp, #4
 800952c:	47c8      	blx	r9
 800952e:	b14e      	cbz	r6, 8009544 <GUI_TIMER_Exec+0x64>
 8009530:	6823      	ldr	r3, [r4, #0]
 8009532:	42bb      	cmp	r3, r7
 8009534:	d005      	beq.n	8009542 <GUI_TIMER_Exec+0x62>
 8009536:	2501      	movs	r5, #1
 8009538:	e7d9      	b.n	80094ee <GUI_TIMER_Exec+0xe>
 800953a:	4668      	mov	r0, sp
 800953c:	f001 ffa2 	bl	800b484 <GUI_ALLOC_UnlockH>
 8009540:	e000      	b.n	8009544 <GUI_TIMER_Exec+0x64>
 8009542:	2500      	movs	r5, #0
 8009544:	4628      	mov	r0, r5
 8009546:	b005      	add	sp, #20
 8009548:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800954c:	20002a9c 	.word	0x20002a9c

08009550 <_Link>:
 8009550:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009552:	4c25      	ldr	r4, [pc, #148]	; (80095e8 <_Link+0x98>)
 8009554:	b085      	sub	sp, #20
 8009556:	4605      	mov	r5, r0
 8009558:	f001 ff86 	bl	800b468 <GUI_ALLOC_LockH>
 800955c:	6823      	ldr	r3, [r4, #0]
 800955e:	9001      	str	r0, [sp, #4]
 8009560:	b913      	cbnz	r3, 8009568 <_Link+0x18>
 8009562:	6025      	str	r5, [r4, #0]
 8009564:	6043      	str	r3, [r0, #4]
 8009566:	e039      	b.n	80095dc <_Link+0x8c>
 8009568:	4618      	mov	r0, r3
 800956a:	f001 ff7d 	bl	800b468 <GUI_ALLOC_LockH>
 800956e:	ab04      	add	r3, sp, #16
 8009570:	6946      	ldr	r6, [r0, #20]
 8009572:	f843 0d10 	str.w	r0, [r3, #-16]!
 8009576:	4668      	mov	r0, sp
 8009578:	f001 ff84 	bl	800b484 <GUI_ALLOC_UnlockH>
 800957c:	9b01      	ldr	r3, [sp, #4]
 800957e:	695a      	ldr	r2, [r3, #20]
 8009580:	1b92      	subs	r2, r2, r6
 8009582:	2a00      	cmp	r2, #0
 8009584:	dc03      	bgt.n	800958e <_Link+0x3e>
 8009586:	6822      	ldr	r2, [r4, #0]
 8009588:	605a      	str	r2, [r3, #4]
 800958a:	6025      	str	r5, [r4, #0]
 800958c:	e026      	b.n	80095dc <_Link+0x8c>
 800958e:	6826      	ldr	r6, [r4, #0]
 8009590:	4630      	mov	r0, r6
 8009592:	f001 ff69 	bl	800b468 <GUI_ALLOC_LockH>
 8009596:	ac04      	add	r4, sp, #16
 8009598:	6846      	ldr	r6, [r0, #4]
 800959a:	f844 0d08 	str.w	r0, [r4, #-8]!
 800959e:	b1be      	cbz	r6, 80095d0 <_Link+0x80>
 80095a0:	4630      	mov	r0, r6
 80095a2:	f001 ff61 	bl	800b468 <GUI_ALLOC_LockH>
 80095a6:	ab04      	add	r3, sp, #16
 80095a8:	6947      	ldr	r7, [r0, #20]
 80095aa:	f843 0d04 	str.w	r0, [r3, #-4]!
 80095ae:	4618      	mov	r0, r3
 80095b0:	f001 ff68 	bl	800b484 <GUI_ALLOC_UnlockH>
 80095b4:	9a01      	ldr	r2, [sp, #4]
 80095b6:	6953      	ldr	r3, [r2, #20]
 80095b8:	1bdb      	subs	r3, r3, r7
 80095ba:	2b00      	cmp	r3, #0
 80095bc:	9b02      	ldr	r3, [sp, #8]
 80095be:	dc02      	bgt.n	80095c6 <_Link+0x76>
 80095c0:	6056      	str	r6, [r2, #4]
 80095c2:	605d      	str	r5, [r3, #4]
 80095c4:	e007      	b.n	80095d6 <_Link+0x86>
 80095c6:	4620      	mov	r0, r4
 80095c8:	685e      	ldr	r6, [r3, #4]
 80095ca:	f001 ff5b 	bl	800b484 <GUI_ALLOC_UnlockH>
 80095ce:	e7df      	b.n	8009590 <_Link+0x40>
 80095d0:	9b01      	ldr	r3, [sp, #4]
 80095d2:	605e      	str	r6, [r3, #4]
 80095d4:	6045      	str	r5, [r0, #4]
 80095d6:	4620      	mov	r0, r4
 80095d8:	f001 ff54 	bl	800b484 <GUI_ALLOC_UnlockH>
 80095dc:	a801      	add	r0, sp, #4
 80095de:	f001 ff51 	bl	800b484 <GUI_ALLOC_UnlockH>
 80095e2:	b005      	add	sp, #20
 80095e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80095e6:	bf00      	nop
 80095e8:	20002a9c 	.word	0x20002a9c

080095ec <_Unlink>:
 80095ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80095ee:	4605      	mov	r5, r0
 80095f0:	b1f0      	cbz	r0, 8009630 <_Unlink+0x44>
 80095f2:	f001 ff39 	bl	800b468 <GUI_ALLOC_LockH>
 80095f6:	4b0f      	ldr	r3, [pc, #60]	; (8009634 <_Unlink+0x48>)
 80095f8:	9000      	str	r0, [sp, #0]
 80095fa:	681c      	ldr	r4, [r3, #0]
 80095fc:	42ac      	cmp	r4, r5
 80095fe:	d104      	bne.n	800960a <_Unlink+0x1e>
 8009600:	6842      	ldr	r2, [r0, #4]
 8009602:	601a      	str	r2, [r3, #0]
 8009604:	e011      	b.n	800962a <_Unlink+0x3e>
 8009606:	f001 ff3d 	bl	800b484 <GUI_ALLOC_UnlockH>
 800960a:	b174      	cbz	r4, 800962a <_Unlink+0x3e>
 800960c:	4620      	mov	r0, r4
 800960e:	f001 ff2b 	bl	800b468 <GUI_ALLOC_LockH>
 8009612:	4603      	mov	r3, r0
 8009614:	a802      	add	r0, sp, #8
 8009616:	685c      	ldr	r4, [r3, #4]
 8009618:	f840 3d04 	str.w	r3, [r0, #-4]!
 800961c:	42ac      	cmp	r4, r5
 800961e:	d1f2      	bne.n	8009606 <_Unlink+0x1a>
 8009620:	9a00      	ldr	r2, [sp, #0]
 8009622:	6852      	ldr	r2, [r2, #4]
 8009624:	605a      	str	r2, [r3, #4]
 8009626:	f001 ff2d 	bl	800b484 <GUI_ALLOC_UnlockH>
 800962a:	4668      	mov	r0, sp
 800962c:	f001 ff2a 	bl	800b484 <GUI_ALLOC_UnlockH>
 8009630:	b003      	add	sp, #12
 8009632:	bd30      	pop	{r4, r5, pc}
 8009634:	20002a9c 	.word	0x20002a9c

08009638 <GUI_TIMER__GetFirstTimer>:
 8009638:	2300      	movs	r3, #0
 800963a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800963c:	6003      	str	r3, [r0, #0]
 800963e:	4b09      	ldr	r3, [pc, #36]	; (8009664 <GUI_TIMER__GetFirstTimer+0x2c>)
 8009640:	681c      	ldr	r4, [r3, #0]
 8009642:	4605      	mov	r5, r0
 8009644:	b154      	cbz	r4, 800965c <GUI_TIMER__GetFirstTimer+0x24>
 8009646:	4620      	mov	r0, r4
 8009648:	f001 ff0e 	bl	800b468 <GUI_ALLOC_LockH>
 800964c:	ab02      	add	r3, sp, #8
 800964e:	6902      	ldr	r2, [r0, #16]
 8009650:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009654:	602a      	str	r2, [r5, #0]
 8009656:	4618      	mov	r0, r3
 8009658:	f001 ff14 	bl	800b484 <GUI_ALLOC_UnlockH>
 800965c:	4620      	mov	r0, r4
 800965e:	b003      	add	sp, #12
 8009660:	bd30      	pop	{r4, r5, pc}
 8009662:	bf00      	nop
 8009664:	20002a90 	.word	0x20002a90

08009668 <GUI_TIMER__GetNextTimerLin>:
 8009668:	2300      	movs	r3, #0
 800966a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800966c:	600b      	str	r3, [r1, #0]
 800966e:	460e      	mov	r6, r1
 8009670:	4604      	mov	r4, r0
 8009672:	b190      	cbz	r0, 800969a <GUI_TIMER__GetNextTimerLin+0x32>
 8009674:	f001 fef8 	bl	800b468 <GUI_ALLOC_LockH>
 8009678:	ad02      	add	r5, sp, #8
 800967a:	6884      	ldr	r4, [r0, #8]
 800967c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8009680:	b144      	cbz	r4, 8009694 <GUI_TIMER__GetNextTimerLin+0x2c>
 8009682:	4628      	mov	r0, r5
 8009684:	f001 fefe 	bl	800b484 <GUI_ALLOC_UnlockH>
 8009688:	4620      	mov	r0, r4
 800968a:	f001 feed 	bl	800b468 <GUI_ALLOC_LockH>
 800968e:	6903      	ldr	r3, [r0, #16]
 8009690:	9001      	str	r0, [sp, #4]
 8009692:	6033      	str	r3, [r6, #0]
 8009694:	4628      	mov	r0, r5
 8009696:	f001 fef5 	bl	800b484 <GUI_ALLOC_UnlockH>
 800969a:	4620      	mov	r0, r4
 800969c:	b002      	add	sp, #8
 800969e:	bd70      	pop	{r4, r5, r6, pc}

080096a0 <GUI_TIMER_Create>:
 80096a0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80096a4:	4681      	mov	r9, r0
 80096a6:	201c      	movs	r0, #28
 80096a8:	460e      	mov	r6, r1
 80096aa:	4690      	mov	r8, r2
 80096ac:	461f      	mov	r7, r3
 80096ae:	f002 f8d5 	bl	800b85c <GUI_ALLOC_AllocZero>
 80096b2:	4604      	mov	r4, r0
 80096b4:	2800      	cmp	r0, #0
 80096b6:	d031      	beq.n	800971c <GUI_TIMER_Create+0x7c>
 80096b8:	4b1a      	ldr	r3, [pc, #104]	; (8009724 <GUI_TIMER_Create+0x84>)
 80096ba:	4a1b      	ldr	r2, [pc, #108]	; (8009728 <GUI_TIMER_Create+0x88>)
 80096bc:	601a      	str	r2, [r3, #0]
 80096be:	f001 fed3 	bl	800b468 <GUI_ALLOC_LockH>
 80096c2:	9000      	str	r0, [sp, #0]
 80096c4:	b916      	cbnz	r6, 80096cc <GUI_TIMER_Create+0x2c>
 80096c6:	f000 f8a9 	bl	800981c <GUI_GetTime>
 80096ca:	4606      	mov	r6, r0
 80096cc:	a802      	add	r0, sp, #8
 80096ce:	f850 5d08 	ldr.w	r5, [r0, #-8]!
 80096d2:	4668      	mov	r0, sp
 80096d4:	616e      	str	r6, [r5, #20]
 80096d6:	f8c5 9000 	str.w	r9, [r5]
 80096da:	f8c5 8010 	str.w	r8, [r5, #16]
 80096de:	81af      	strh	r7, [r5, #12]
 80096e0:	f001 fed0 	bl	800b484 <GUI_ALLOC_UnlockH>
 80096e4:	4620      	mov	r0, r4
 80096e6:	f7ff ff33 	bl	8009550 <_Link>
 80096ea:	4b10      	ldr	r3, [pc, #64]	; (800972c <GUI_TIMER_Create+0x8c>)
 80096ec:	681a      	ldr	r2, [r3, #0]
 80096ee:	b932      	cbnz	r2, 80096fe <GUI_TIMER_Create+0x5e>
 80096f0:	2201      	movs	r2, #1
 80096f2:	480f      	ldr	r0, [pc, #60]	; (8009730 <GUI_TIMER_Create+0x90>)
 80096f4:	601a      	str	r2, [r3, #0]
 80096f6:	4b0f      	ldr	r3, [pc, #60]	; (8009734 <GUI_TIMER_Create+0x94>)
 80096f8:	6003      	str	r3, [r0, #0]
 80096fa:	f001 f851 	bl	800a7a0 <GUI__RegisterExit>
 80096fe:	4620      	mov	r0, r4
 8009700:	f001 feb2 	bl	800b468 <GUI_ALLOC_LockH>
 8009704:	4a0c      	ldr	r2, [pc, #48]	; (8009738 <GUI_TIMER_Create+0x98>)
 8009706:	9001      	str	r0, [sp, #4]
 8009708:	6813      	ldr	r3, [r2, #0]
 800970a:	b913      	cbnz	r3, 8009712 <GUI_TIMER_Create+0x72>
 800970c:	6014      	str	r4, [r2, #0]
 800970e:	6083      	str	r3, [r0, #8]
 8009710:	e001      	b.n	8009716 <GUI_TIMER_Create+0x76>
 8009712:	6083      	str	r3, [r0, #8]
 8009714:	6014      	str	r4, [r2, #0]
 8009716:	a801      	add	r0, sp, #4
 8009718:	f001 feb4 	bl	800b484 <GUI_ALLOC_UnlockH>
 800971c:	4620      	mov	r0, r4
 800971e:	b003      	add	sp, #12
 8009720:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009724:	20002cf8 	.word	0x20002cf8
 8009728:	080094e1 	.word	0x080094e1
 800972c:	20002aa0 	.word	0x20002aa0
 8009730:	20002a94 	.word	0x20002a94
 8009734:	080094c5 	.word	0x080094c5
 8009738:	20002a90 	.word	0x20002a90

0800973c <GUI_TIMER_Delete>:
 800973c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800973e:	4604      	mov	r4, r0
 8009740:	b360      	cbz	r0, 800979c <GUI_TIMER_Delete+0x60>
 8009742:	4e17      	ldr	r6, [pc, #92]	; (80097a0 <GUI_TIMER_Delete+0x64>)
 8009744:	6835      	ldr	r5, [r6, #0]
 8009746:	4285      	cmp	r5, r0
 8009748:	d10b      	bne.n	8009762 <GUI_TIMER_Delete+0x26>
 800974a:	f001 fe8d 	bl	800b468 <GUI_ALLOC_LockH>
 800974e:	ab02      	add	r3, sp, #8
 8009750:	6882      	ldr	r2, [r0, #8]
 8009752:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009756:	6032      	str	r2, [r6, #0]
 8009758:	4618      	mov	r0, r3
 800975a:	e017      	b.n	800978c <GUI_TIMER_Delete+0x50>
 800975c:	4668      	mov	r0, sp
 800975e:	f001 fe91 	bl	800b484 <GUI_ALLOC_UnlockH>
 8009762:	b1ad      	cbz	r5, 8009790 <GUI_TIMER_Delete+0x54>
 8009764:	4628      	mov	r0, r5
 8009766:	f001 fe7f 	bl	800b468 <GUI_ALLOC_LockH>
 800976a:	6885      	ldr	r5, [r0, #8]
 800976c:	ae02      	add	r6, sp, #8
 800976e:	42a5      	cmp	r5, r4
 8009770:	f846 0d08 	str.w	r0, [r6, #-8]!
 8009774:	d1f2      	bne.n	800975c <GUI_TIMER_Delete+0x20>
 8009776:	4620      	mov	r0, r4
 8009778:	f001 fe76 	bl	800b468 <GUI_ALLOC_LockH>
 800977c:	9b00      	ldr	r3, [sp, #0]
 800977e:	6882      	ldr	r2, [r0, #8]
 8009780:	9001      	str	r0, [sp, #4]
 8009782:	609a      	str	r2, [r3, #8]
 8009784:	a801      	add	r0, sp, #4
 8009786:	f001 fe7d 	bl	800b484 <GUI_ALLOC_UnlockH>
 800978a:	4668      	mov	r0, sp
 800978c:	f001 fe7a 	bl	800b484 <GUI_ALLOC_UnlockH>
 8009790:	4620      	mov	r0, r4
 8009792:	f7ff ff2b 	bl	80095ec <_Unlink>
 8009796:	4620      	mov	r0, r4
 8009798:	f001 fea0 	bl	800b4dc <GUI_ALLOC_Free>
 800979c:	b002      	add	sp, #8
 800979e:	bd70      	pop	{r4, r5, r6, pc}
 80097a0:	20002a90 	.word	0x20002a90

080097a4 <GUI_TIMER_SetPeriod>:
 80097a4:	b513      	push	{r0, r1, r4, lr}
 80097a6:	460c      	mov	r4, r1
 80097a8:	b140      	cbz	r0, 80097bc <GUI_TIMER_SetPeriod+0x18>
 80097aa:	f001 fe5d 	bl	800b468 <GUI_ALLOC_LockH>
 80097ae:	ab02      	add	r3, sp, #8
 80097b0:	6184      	str	r4, [r0, #24]
 80097b2:	f843 0d04 	str.w	r0, [r3, #-4]!
 80097b6:	4618      	mov	r0, r3
 80097b8:	f001 fe64 	bl	800b484 <GUI_ALLOC_UnlockH>
 80097bc:	b002      	add	sp, #8
 80097be:	bd10      	pop	{r4, pc}

080097c0 <GUI_TIMER_Restart>:
 80097c0:	b513      	push	{r0, r1, r4, lr}
 80097c2:	4604      	mov	r4, r0
 80097c4:	b198      	cbz	r0, 80097ee <GUI_TIMER_Restart+0x2e>
 80097c6:	f001 fe4f 	bl	800b468 <GUI_ALLOC_LockH>
 80097ca:	9001      	str	r0, [sp, #4]
 80097cc:	f000 f826 	bl	800981c <GUI_GetTime>
 80097d0:	ab02      	add	r3, sp, #8
 80097d2:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 80097d6:	6991      	ldr	r1, [r2, #24]
 80097d8:	4408      	add	r0, r1
 80097da:	6150      	str	r0, [r2, #20]
 80097dc:	4618      	mov	r0, r3
 80097de:	f001 fe51 	bl	800b484 <GUI_ALLOC_UnlockH>
 80097e2:	4620      	mov	r0, r4
 80097e4:	f7ff ff02 	bl	80095ec <_Unlink>
 80097e8:	4620      	mov	r0, r4
 80097ea:	f7ff feb1 	bl	8009550 <_Link>
 80097ee:	b002      	add	sp, #8
 80097f0:	bd10      	pop	{r4, pc}

080097f2 <GUI_TIMER_GetFlag>:
 80097f2:	b513      	push	{r0, r1, r4, lr}
 80097f4:	460c      	mov	r4, r1
 80097f6:	b168      	cbz	r0, 8009814 <GUI_TIMER_GetFlag+0x22>
 80097f8:	f001 fe36 	bl	800b468 <GUI_ALLOC_LockH>
 80097fc:	ab02      	add	r3, sp, #8
 80097fe:	8982      	ldrh	r2, [r0, #12]
 8009800:	f843 0d04 	str.w	r0, [r3, #-4]!
 8009804:	4214      	tst	r4, r2
 8009806:	4618      	mov	r0, r3
 8009808:	bf0c      	ite	eq
 800980a:	2400      	moveq	r4, #0
 800980c:	2401      	movne	r4, #1
 800980e:	f001 fe39 	bl	800b484 <GUI_ALLOC_UnlockH>
 8009812:	e000      	b.n	8009816 <GUI_TIMER_GetFlag+0x24>
 8009814:	2401      	movs	r4, #1
 8009816:	4620      	mov	r0, r4
 8009818:	b002      	add	sp, #8
 800981a:	bd10      	pop	{r4, pc}

0800981c <GUI_GetTime>:
 800981c:	f7f6 be6c 	b.w	80004f8 <GUI_X_GetTime>

08009820 <GUI__AlphaPreserveTrans>:
 8009820:	b510      	push	{r4, lr}
 8009822:	4b07      	ldr	r3, [pc, #28]	; (8009840 <GUI__AlphaPreserveTrans+0x20>)
 8009824:	781c      	ldrb	r4, [r3, #0]
 8009826:	b120      	cbz	r0, 8009832 <GUI__AlphaPreserveTrans+0x12>
 8009828:	2201      	movs	r2, #1
 800982a:	701a      	strb	r2, [r3, #0]
 800982c:	f04f 30ff 	mov.w	r0, #4294967295
 8009830:	e002      	b.n	8009838 <GUI__AlphaPreserveTrans+0x18>
 8009832:	7018      	strb	r0, [r3, #0]
 8009834:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8009838:	f004 ffbe 	bl	800e7b8 <LCD_AA_SetAndMask>
 800983c:	4620      	mov	r0, r4
 800983e:	bd10      	pop	{r4, pc}
 8009840:	20002d10 	.word	0x20002d10

08009844 <GUI_SelectLayer>:
 8009844:	b570      	push	{r4, r5, r6, lr}
 8009846:	4d08      	ldr	r5, [pc, #32]	; (8009868 <GUI_SelectLayer+0x24>)
 8009848:	682b      	ldr	r3, [r5, #0]
 800984a:	2801      	cmp	r0, #1
 800984c:	4604      	mov	r4, r0
 800984e:	7c5e      	ldrb	r6, [r3, #17]
 8009850:	d808      	bhi.n	8009864 <GUI_SelectLayer+0x20>
 8009852:	f000 fe4b 	bl	800a4ec <GUI_DEVICE__GetpDriver>
 8009856:	b128      	cbz	r0, 8009864 <GUI_SelectLayer+0x20>
 8009858:	682b      	ldr	r3, [r5, #0]
 800985a:	745c      	strb	r4, [r3, #17]
 800985c:	f001 f998 	bl	800ab90 <GUI_SelectLCD>
 8009860:	4b02      	ldr	r3, [pc, #8]	; (800986c <GUI_SelectLayer+0x28>)
 8009862:	601c      	str	r4, [r3, #0]
 8009864:	4630      	mov	r0, r6
 8009866:	bd70      	pop	{r4, r5, r6, pc}
 8009868:	200000b8 	.word	0x200000b8
 800986c:	20002ca0 	.word	0x20002ca0

08009870 <GUI_StoreKey>:
 8009870:	4b02      	ldr	r3, [pc, #8]	; (800987c <GUI_StoreKey+0xc>)
 8009872:	681a      	ldr	r2, [r3, #0]
 8009874:	b902      	cbnz	r2, 8009878 <GUI_StoreKey+0x8>
 8009876:	6018      	str	r0, [r3, #0]
 8009878:	f7ff bdda 	b.w	8009430 <GUI_SignalEvent>
 800987c:	20002aa4 	.word	0x20002aa4

08009880 <GUI_PollKeyMsg>:
 8009880:	4a0a      	ldr	r2, [pc, #40]	; (80098ac <GUI_PollKeyMsg+0x2c>)
 8009882:	490b      	ldr	r1, [pc, #44]	; (80098b0 <GUI_PollKeyMsg+0x30>)
 8009884:	6813      	ldr	r3, [r2, #0]
 8009886:	6809      	ldr	r1, [r1, #0]
 8009888:	428b      	cmp	r3, r1
 800988a:	b510      	push	{r4, lr}
 800988c:	d00b      	beq.n	80098a6 <GUI_PollKeyMsg+0x26>
 800988e:	4c09      	ldr	r4, [pc, #36]	; (80098b4 <GUI_PollKeyMsg+0x34>)
 8009890:	42a3      	cmp	r3, r4
 8009892:	e893 0003 	ldmia.w	r3, {r0, r1}
 8009896:	bf14      	ite	ne
 8009898:	3308      	addne	r3, #8
 800989a:	3b50      	subeq	r3, #80	; 0x50
 800989c:	6013      	str	r3, [r2, #0]
 800989e:	f7fb f90d 	bl	8004abc <WM_OnKey>
 80098a2:	2001      	movs	r0, #1
 80098a4:	bd10      	pop	{r4, pc}
 80098a6:	2000      	movs	r0, #0
 80098a8:	bd10      	pop	{r4, pc}
 80098aa:	bf00      	nop
 80098ac:	200000b4 	.word	0x200000b4
 80098b0:	200000b0 	.word	0x200000b0
 80098b4:	20002af8 	.word	0x20002af8

080098b8 <_SetLineColor>:
 80098b8:	4b1e      	ldr	r3, [pc, #120]	; (8009934 <_SetLineColor+0x7c>)
 80098ba:	681b      	ldr	r3, [r3, #0]
 80098bc:	7e9b      	ldrb	r3, [r3, #26]
 80098be:	3b01      	subs	r3, #1
 80098c0:	2b03      	cmp	r3, #3
 80098c2:	d832      	bhi.n	800992a <_SetLineColor+0x72>
 80098c4:	e8df f003 	tbb	[pc, r3]
 80098c8:	221a0d02 	.word	0x221a0d02
 80098cc:	4b1a      	ldr	r3, [pc, #104]	; (8009938 <_SetLineColor+0x80>)
 80098ce:	3006      	adds	r0, #6
 80098d0:	4003      	ands	r3, r0
 80098d2:	2b00      	cmp	r3, #0
 80098d4:	da03      	bge.n	80098de <_SetLineColor+0x26>
 80098d6:	3b01      	subs	r3, #1
 80098d8:	f063 030f 	orn	r3, r3, #15
 80098dc:	3301      	adds	r3, #1
 80098de:	2b0b      	cmp	r3, #11
 80098e0:	e008      	b.n	80098f4 <_SetLineColor+0x3c>
 80098e2:	4b16      	ldr	r3, [pc, #88]	; (800993c <_SetLineColor+0x84>)
 80098e4:	4003      	ands	r3, r0
 80098e6:	2b00      	cmp	r3, #0
 80098e8:	da03      	bge.n	80098f2 <_SetLineColor+0x3a>
 80098ea:	3b01      	subs	r3, #1
 80098ec:	f063 0303 	orn	r3, r3, #3
 80098f0:	3301      	adds	r3, #1
 80098f2:	2b01      	cmp	r3, #1
 80098f4:	bfcc      	ite	gt
 80098f6:	2000      	movgt	r0, #0
 80098f8:	2001      	movle	r0, #1
 80098fa:	4770      	bx	lr
 80098fc:	2314      	movs	r3, #20
 80098fe:	fb90 f2f3 	sdiv	r2, r0, r3
 8009902:	fb03 0012 	mls	r0, r3, r2, r0
 8009906:	280b      	cmp	r0, #11
 8009908:	dc09      	bgt.n	800991e <_SetLineColor+0x66>
 800990a:	e010      	b.n	800992e <_SetLineColor+0x76>
 800990c:	2318      	movs	r3, #24
 800990e:	fb90 f2f3 	sdiv	r2, r0, r3
 8009912:	fb03 0012 	mls	r0, r3, r2, r0
 8009916:	280b      	cmp	r0, #11
 8009918:	dd09      	ble.n	800992e <_SetLineColor+0x76>
 800991a:	f020 0004 	bic.w	r0, r0, #4
 800991e:	3810      	subs	r0, #16
 8009920:	2801      	cmp	r0, #1
 8009922:	bf8c      	ite	hi
 8009924:	2000      	movhi	r0, #0
 8009926:	2001      	movls	r0, #1
 8009928:	4770      	bx	lr
 800992a:	2000      	movs	r0, #0
 800992c:	4770      	bx	lr
 800992e:	2001      	movs	r0, #1
 8009930:	4770      	bx	lr
 8009932:	bf00      	nop
 8009934:	200000b8 	.word	0x200000b8
 8009938:	8000000f 	.word	0x8000000f
 800993c:	80000003 	.word	0x80000003

08009940 <GUI_sin>:
 8009940:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8009944:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8009948:	bfc6      	itte	gt
 800994a:	f5a0 6000 	subgt.w	r0, r0, #2048	; 0x800
 800994e:	2101      	movgt	r1, #1
 8009950:	2100      	movle	r1, #0
 8009952:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8009956:	bfc8      	it	gt
 8009958:	f5c0 6000 	rsbgt	r0, r0, #2048	; 0x800
 800995c:	f000 033f 	and.w	r3, r0, #63	; 0x3f
 8009960:	b510      	push	{r4, lr}
 8009962:	1182      	asrs	r2, r0, #6
 8009964:	4c0b      	ldr	r4, [pc, #44]	; (8009994 <GUI_sin+0x54>)
 8009966:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 800996a:	b29b      	uxth	r3, r3
 800996c:	f834 0012 	ldrh.w	r0, [r4, r2, lsl #1]
 8009970:	2b40      	cmp	r3, #64	; 0x40
 8009972:	fb00 f003 	mul.w	r0, r0, r3
 8009976:	d008      	beq.n	800998a <GUI_sin+0x4a>
 8009978:	2a10      	cmp	r2, #16
 800997a:	d006      	beq.n	800998a <GUI_sin+0x4a>
 800997c:	3201      	adds	r2, #1
 800997e:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8009982:	f834 2012 	ldrh.w	r2, [r4, r2, lsl #1]
 8009986:	fb03 0002 	mla	r0, r3, r2, r0
 800998a:	3020      	adds	r0, #32
 800998c:	0980      	lsrs	r0, r0, #6
 800998e:	b101      	cbz	r1, 8009992 <GUI_sin+0x52>
 8009990:	4240      	negs	r0, r0
 8009992:	bd10      	pop	{r4, pc}
 8009994:	08011fd0 	.word	0x08011fd0

08009998 <GUI_cos>:
 8009998:	f500 6080 	add.w	r0, r0, #1024	; 0x400
 800999c:	f7ff bfd0 	b.w	8009940 <GUI_sin>

080099a0 <GL_DrawLine1Ex>:
 80099a0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80099a4:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 80099a8:	1a17      	subs	r7, r2, r0
 80099aa:	1a5c      	subs	r4, r3, r1
 80099ac:	ea54 0c07 	orrs.w	ip, r4, r7
 80099b0:	4605      	mov	r5, r0
 80099b2:	460e      	mov	r6, r1
 80099b4:	f8d8 b000 	ldr.w	fp, [r8]
 80099b8:	d104      	bne.n	80099c4 <GL_DrawLine1Ex+0x24>
 80099ba:	b003      	add	sp, #12
 80099bc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80099c0:	f000 ba16 	b.w	8009df0 <GL_DrawPoint>
 80099c4:	ea87 70e7 	eor.w	r0, r7, r7, asr #31
 80099c8:	eba0 70e7 	sub.w	r0, r0, r7, asr #31
 80099cc:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 80099d0:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 80099d4:	4288      	cmp	r0, r1
 80099d6:	db04      	blt.n	80099e2 <GL_DrawLine1Ex+0x42>
 80099d8:	4621      	mov	r1, r4
 80099da:	463c      	mov	r4, r7
 80099dc:	460f      	mov	r7, r1
 80099de:	2100      	movs	r1, #0
 80099e0:	e006      	b.n	80099f0 <GL_DrawLine1Ex+0x50>
 80099e2:	4611      	mov	r1, r2
 80099e4:	461a      	mov	r2, r3
 80099e6:	460b      	mov	r3, r1
 80099e8:	4629      	mov	r1, r5
 80099ea:	4635      	mov	r5, r6
 80099ec:	460e      	mov	r6, r1
 80099ee:	2101      	movs	r1, #1
 80099f0:	9100      	str	r1, [sp, #0]
 80099f2:	ea84 71e4 	eor.w	r1, r4, r4, asr #31
 80099f6:	eba1 71e4 	sub.w	r1, r1, r4, asr #31
 80099fa:	428c      	cmp	r4, r1
 80099fc:	d008      	beq.n	8009a10 <GL_DrawLine1Ex+0x70>
 80099fe:	461e      	mov	r6, r3
 8009a00:	462b      	mov	r3, r5
 8009a02:	4264      	negs	r4, r4
 8009a04:	4615      	mov	r5, r2
 8009a06:	427f      	negs	r7, r7
 8009a08:	461a      	mov	r2, r3
 8009a0a:	f04f 3aff 	mov.w	sl, #4294967295
 8009a0e:	e001      	b.n	8009a14 <GL_DrawLine1Ex+0x74>
 8009a10:	f04f 0a01 	mov.w	sl, #1
 8009a14:	2f00      	cmp	r7, #0
 8009a16:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8009b60 <GL_DrawLine1Ex+0x1c0>
 8009a1a:	d13e      	bne.n	8009a9a <GL_DrawLine1Ex+0xfa>
 8009a1c:	9b00      	ldr	r3, [sp, #0]
 8009a1e:	b1d3      	cbz	r3, 8009a56 <GL_DrawLine1Ex+0xb6>
 8009a20:	f8d9 3000 	ldr.w	r3, [r9]
 8009a24:	7e9b      	ldrb	r3, [r3, #26]
 8009a26:	b98b      	cbnz	r3, 8009a4c <GL_DrawLine1Ex+0xac>
 8009a28:	4630      	mov	r0, r6
 8009a2a:	4629      	mov	r1, r5
 8009a2c:	b003      	add	sp, #12
 8009a2e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009a32:	f7fe be9f 	b.w	8008774 <LCD_DrawVLine>
 8009a36:	f7ff ff3f 	bl	80098b8 <_SetLineColor>
 8009a3a:	b930      	cbnz	r0, 8009a4a <GL_DrawLine1Ex+0xaa>
 8009a3c:	f8d9 3000 	ldr.w	r3, [r9]
 8009a40:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009a42:	4630      	mov	r0, r6
 8009a44:	685b      	ldr	r3, [r3, #4]
 8009a46:	1979      	adds	r1, r7, r5
 8009a48:	4798      	blx	r3
 8009a4a:	3701      	adds	r7, #1
 8009a4c:	42a7      	cmp	r7, r4
 8009a4e:	eb07 000b 	add.w	r0, r7, fp
 8009a52:	ddf0      	ble.n	8009a36 <GL_DrawLine1Ex+0x96>
 8009a54:	e01d      	b.n	8009a92 <GL_DrawLine1Ex+0xf2>
 8009a56:	f8d9 3000 	ldr.w	r3, [r9]
 8009a5a:	7e99      	ldrb	r1, [r3, #26]
 8009a5c:	b111      	cbz	r1, 8009a64 <GL_DrawLine1Ex+0xc4>
 8009a5e:	f8dd a000 	ldr.w	sl, [sp]
 8009a62:	e012      	b.n	8009a8a <GL_DrawLine1Ex+0xea>
 8009a64:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009a66:	4628      	mov	r0, r5
 8009a68:	681b      	ldr	r3, [r3, #0]
 8009a6a:	4631      	mov	r1, r6
 8009a6c:	4798      	blx	r3
 8009a6e:	e074      	b.n	8009b5a <GL_DrawLine1Ex+0x1ba>
 8009a70:	f7ff ff22 	bl	80098b8 <_SetLineColor>
 8009a74:	b938      	cbnz	r0, 8009a86 <GL_DrawLine1Ex+0xe6>
 8009a76:	f8d9 3000 	ldr.w	r3, [r9]
 8009a7a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009a7c:	eb0a 0005 	add.w	r0, sl, r5
 8009a80:	685b      	ldr	r3, [r3, #4]
 8009a82:	4631      	mov	r1, r6
 8009a84:	4798      	blx	r3
 8009a86:	f10a 0a01 	add.w	sl, sl, #1
 8009a8a:	45a2      	cmp	sl, r4
 8009a8c:	eb0a 000b 	add.w	r0, sl, fp
 8009a90:	ddee      	ble.n	8009a70 <GL_DrawLine1Ex+0xd0>
 8009a92:	3801      	subs	r0, #1
 8009a94:	f8c8 0000 	str.w	r0, [r8]
 8009a98:	e05f      	b.n	8009b5a <GL_DrawLine1Ex+0x1ba>
 8009a9a:	f8d9 1000 	ldr.w	r1, [r9]
 8009a9e:	f04f 0202 	mov.w	r2, #2
 8009aa2:	7e89      	ldrb	r1, [r1, #26]
 8009aa4:	fb94 f2f2 	sdiv	r2, r4, r2
 8009aa8:	bfb8      	it	lt
 8009aaa:	4252      	neglt	r2, r2
 8009aac:	b9d9      	cbnz	r1, 8009ae6 <GL_DrawLine1Ex+0x146>
 8009aae:	4693      	mov	fp, r2
 8009ab0:	46a8      	mov	r8, r5
 8009ab2:	ebc5 0308 	rsb	r3, r5, r8
 8009ab6:	42a3      	cmp	r3, r4
 8009ab8:	dc4f      	bgt.n	8009b5a <GL_DrawLine1Ex+0x1ba>
 8009aba:	9b00      	ldr	r3, [sp, #0]
 8009abc:	fb9b f1f4 	sdiv	r1, fp, r4
 8009ac0:	4431      	add	r1, r6
 8009ac2:	b92b      	cbnz	r3, 8009ad0 <GL_DrawLine1Ex+0x130>
 8009ac4:	f8d9 3000 	ldr.w	r3, [r9]
 8009ac8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009aca:	4640      	mov	r0, r8
 8009acc:	685b      	ldr	r3, [r3, #4]
 8009ace:	e005      	b.n	8009adc <GL_DrawLine1Ex+0x13c>
 8009ad0:	f8d9 3000 	ldr.w	r3, [r9]
 8009ad4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009ad6:	685b      	ldr	r3, [r3, #4]
 8009ad8:	4608      	mov	r0, r1
 8009ada:	4641      	mov	r1, r8
 8009adc:	4798      	blx	r3
 8009ade:	f108 0801 	add.w	r8, r8, #1
 8009ae2:	44bb      	add	fp, r7
 8009ae4:	e7e5      	b.n	8009ab2 <GL_DrawLine1Ex+0x112>
 8009ae6:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009aea:	bf04      	itt	eq
 8009aec:	eb04 010b 	addeq.w	r1, r4, fp
 8009af0:	f8c8 1000 	streq.w	r1, [r8]
 8009af4:	9201      	str	r2, [sp, #4]
 8009af6:	46ab      	mov	fp, r5
 8009af8:	ebc5 010b 	rsb	r1, r5, fp
 8009afc:	42a1      	cmp	r1, r4
 8009afe:	f8d8 0000 	ldr.w	r0, [r8]
 8009b02:	dc1e      	bgt.n	8009b42 <GL_DrawLine1Ex+0x1a2>
 8009b04:	4450      	add	r0, sl
 8009b06:	f8c8 0000 	str.w	r0, [r8]
 8009b0a:	f7ff fed5 	bl	80098b8 <_SetLineColor>
 8009b0e:	b980      	cbnz	r0, 8009b32 <GL_DrawLine1Ex+0x192>
 8009b10:	f8dd c004 	ldr.w	ip, [sp, #4]
 8009b14:	f8d9 0000 	ldr.w	r0, [r9]
 8009b18:	9b00      	ldr	r3, [sp, #0]
 8009b1a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8009b1c:	fb9c f1f4 	sdiv	r1, ip, r4
 8009b20:	4431      	add	r1, r6
 8009b22:	b913      	cbnz	r3, 8009b2a <GL_DrawLine1Ex+0x18a>
 8009b24:	6843      	ldr	r3, [r0, #4]
 8009b26:	4658      	mov	r0, fp
 8009b28:	e002      	b.n	8009b30 <GL_DrawLine1Ex+0x190>
 8009b2a:	6843      	ldr	r3, [r0, #4]
 8009b2c:	4608      	mov	r0, r1
 8009b2e:	4659      	mov	r1, fp
 8009b30:	4798      	blx	r3
 8009b32:	f8dd c004 	ldr.w	ip, [sp, #4]
 8009b36:	44bc      	add	ip, r7
 8009b38:	f10b 0b01 	add.w	fp, fp, #1
 8009b3c:	f8cd c004 	str.w	ip, [sp, #4]
 8009b40:	e7da      	b.n	8009af8 <GL_DrawLine1Ex+0x158>
 8009b42:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009b46:	bf04      	itt	eq
 8009b48:	1824      	addeq	r4, r4, r0
 8009b4a:	f8c8 4000 	streq.w	r4, [r8]
 8009b4e:	f8d8 2000 	ldr.w	r2, [r8]
 8009b52:	ebca 0302 	rsb	r3, sl, r2
 8009b56:	f8c8 3000 	str.w	r3, [r8]
 8009b5a:	b003      	add	sp, #12
 8009b5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009b60:	200000b8 	.word	0x200000b8

08009b64 <GL_DrawLineEx>:
 8009b64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009b68:	4d67      	ldr	r5, [pc, #412]	; (8009d08 <GL_DrawLineEx+0x1a4>)
 8009b6a:	682c      	ldr	r4, [r5, #0]
 8009b6c:	f894 b018 	ldrb.w	fp, [r4, #24]
 8009b70:	f1bb 0f01 	cmp.w	fp, #1
 8009b74:	b087      	sub	sp, #28
 8009b76:	4681      	mov	r9, r0
 8009b78:	4688      	mov	r8, r1
 8009b7a:	4617      	mov	r7, r2
 8009b7c:	461e      	mov	r6, r3
 8009b7e:	46aa      	mov	sl, r5
 8009b80:	d104      	bne.n	8009b8c <GL_DrawLineEx+0x28>
 8009b82:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8009b84:	9400      	str	r4, [sp, #0]
 8009b86:	f7ff ff0b 	bl	80099a0 <GL_DrawLine1Ex>
 8009b8a:	e0ba      	b.n	8009d02 <GL_DrawLineEx+0x19e>
 8009b8c:	1a84      	subs	r4, r0, r2
 8009b8e:	1acd      	subs	r5, r1, r3
 8009b90:	ea54 0305 	orrs.w	r3, r4, r5
 8009b94:	f000 80b5 	beq.w	8009d02 <GL_DrawLineEx+0x19e>
 8009b98:	2c00      	cmp	r4, #0
 8009b9a:	bfba      	itte	lt
 8009b9c:	4264      	neglt	r4, r4
 8009b9e:	2301      	movlt	r3, #1
 8009ba0:	2300      	movge	r3, #0
 8009ba2:	2d00      	cmp	r5, #0
 8009ba4:	bfbc      	itt	lt
 8009ba6:	426d      	neglt	r5, r5
 8009ba8:	f043 0302 	orrlt.w	r3, r3, #2
 8009bac:	42a5      	cmp	r5, r4
 8009bae:	f10b 3bff 	add.w	fp, fp, #4294967295
 8009bb2:	dd04      	ble.n	8009bbe <GL_DrawLineEx+0x5a>
 8009bb4:	4622      	mov	r2, r4
 8009bb6:	f043 0304 	orr.w	r3, r3, #4
 8009bba:	462c      	mov	r4, r5
 8009bbc:	4615      	mov	r5, r2
 8009bbe:	2202      	movs	r2, #2
 8009bc0:	fb94 f2f2 	sdiv	r2, r4, r2
 8009bc4:	eb02 2585 	add.w	r5, r2, r5, lsl #10
 8009bc8:	fb95 f4f4 	sdiv	r4, r5, r4
 8009bcc:	11a1      	asrs	r1, r4, #6
 8009bce:	4a4f      	ldr	r2, [pc, #316]	; (8009d0c <GL_DrawLineEx+0x1a8>)
 8009bd0:	f3c4 0483 	ubfx	r4, r4, #2, #4
 8009bd4:	f1c4 0510 	rsb	r5, r4, #16
 8009bd8:	f932 0011 	ldrsh.w	r0, [r2, r1, lsl #1]
 8009bdc:	2d10      	cmp	r5, #16
 8009bde:	fb05 f000 	mul.w	r0, r5, r0
 8009be2:	d004      	beq.n	8009bee <GL_DrawLineEx+0x8a>
 8009be4:	3101      	adds	r1, #1
 8009be6:	f932 2011 	ldrsh.w	r2, [r2, r1, lsl #1]
 8009bea:	fb04 0002 	mla	r0, r4, r2, r0
 8009bee:	2210      	movs	r2, #16
 8009bf0:	3008      	adds	r0, #8
 8009bf2:	fb90 f0f2 	sdiv	r0, r0, r2
 8009bf6:	0759      	lsls	r1, r3, #29
 8009bf8:	bf48      	it	mi
 8009bfa:	f5c0 6080 	rsbmi	r0, r0, #1024	; 0x400
 8009bfe:	07da      	lsls	r2, r3, #31
 8009c00:	bf48      	it	mi
 8009c02:	f5c0 6000 	rsbmi	r0, r0, #2048	; 0x800
 8009c06:	079b      	lsls	r3, r3, #30
 8009c08:	bf48      	it	mi
 8009c0a:	f5c0 5080 	rsbmi	r0, r0, #4096	; 0x1000
 8009c0e:	f500 6580 	add.w	r5, r0, #1024	; 0x400
 8009c12:	4628      	mov	r0, r5
 8009c14:	f7ff fec0 	bl	8009998 <GUI_cos>
 8009c18:	fb00 f40b 	mul.w	r4, r0, fp
 8009c1c:	4628      	mov	r0, r5
 8009c1e:	f7ff fe8f 	bl	8009940 <GUI_sin>
 8009c22:	2c00      	cmp	r4, #0
 8009c24:	fb00 f00b 	mul.w	r0, r0, fp
 8009c28:	da04      	bge.n	8009c34 <GL_DrawLineEx+0xd0>
 8009c2a:	f5c4 7300 	rsb	r3, r4, #512	; 0x200
 8009c2e:	129b      	asrs	r3, r3, #10
 8009c30:	425b      	negs	r3, r3
 8009c32:	e002      	b.n	8009c3a <GL_DrawLineEx+0xd6>
 8009c34:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8009c38:	129b      	asrs	r3, r3, #10
 8009c3a:	2800      	cmp	r0, #0
 8009c3c:	da06      	bge.n	8009c4c <GL_DrawLineEx+0xe8>
 8009c3e:	f5c0 7b00 	rsb	fp, r0, #512	; 0x200
 8009c42:	ea4f 2bab 	mov.w	fp, fp, asr #10
 8009c46:	f1cb 0b00 	rsb	fp, fp, #0
 8009c4a:	e003      	b.n	8009c54 <GL_DrawLineEx+0xf0>
 8009c4c:	f500 7b00 	add.w	fp, r0, #512	; 0x200
 8009c50:	ea4f 2bab 	mov.w	fp, fp, asr #10
 8009c54:	2b00      	cmp	r3, #0
 8009c56:	dd03      	ble.n	8009c60 <GL_DrawLineEx+0xfc>
 8009c58:	1c58      	adds	r0, r3, #1
 8009c5a:	1040      	asrs	r0, r0, #1
 8009c5c:	105b      	asrs	r3, r3, #1
 8009c5e:	e005      	b.n	8009c6c <GL_DrawLineEx+0x108>
 8009c60:	2202      	movs	r2, #2
 8009c62:	fb93 f0f2 	sdiv	r0, r3, r2
 8009c66:	3b01      	subs	r3, #1
 8009c68:	fb93 f3f2 	sdiv	r3, r3, r2
 8009c6c:	f1bb 0f00 	cmp.w	fp, #0
 8009c70:	dd05      	ble.n	8009c7e <GL_DrawLineEx+0x11a>
 8009c72:	f10b 0201 	add.w	r2, fp, #1
 8009c76:	1052      	asrs	r2, r2, #1
 8009c78:	ea4f 0b6b 	mov.w	fp, fp, asr #1
 8009c7c:	e006      	b.n	8009c8c <GL_DrawLineEx+0x128>
 8009c7e:	2102      	movs	r1, #2
 8009c80:	fb9b f2f1 	sdiv	r2, fp, r1
 8009c84:	f10b 3bff 	add.w	fp, fp, #4294967295
 8009c88:	fb9b fbf1 	sdiv	fp, fp, r1
 8009c8c:	b280      	uxth	r0, r0
 8009c8e:	fa1f f489 	uxth.w	r4, r9
 8009c92:	1901      	adds	r1, r0, r4
 8009c94:	b292      	uxth	r2, r2
 8009c96:	f8ad 1008 	strh.w	r1, [sp, #8]
 8009c9a:	fa1f fb8b 	uxth.w	fp, fp
 8009c9e:	fa1f f188 	uxth.w	r1, r8
 8009ca2:	1855      	adds	r5, r2, r1
 8009ca4:	ebcb 0101 	rsb	r1, fp, r1
 8009ca8:	b29b      	uxth	r3, r3
 8009caa:	f8ad 100e 	strh.w	r1, [sp, #14]
 8009cae:	b2b9      	uxth	r1, r7
 8009cb0:	1ae4      	subs	r4, r4, r3
 8009cb2:	1acb      	subs	r3, r1, r3
 8009cb4:	f8ad 3010 	strh.w	r3, [sp, #16]
 8009cb8:	b2b3      	uxth	r3, r6
 8009cba:	4401      	add	r1, r0
 8009cbc:	ebcb 0b03 	rsb	fp, fp, r3
 8009cc0:	4413      	add	r3, r2
 8009cc2:	2200      	movs	r2, #0
 8009cc4:	f8ad 1014 	strh.w	r1, [sp, #20]
 8009cc8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8009ccc:	a802      	add	r0, sp, #8
 8009cce:	4613      	mov	r3, r2
 8009cd0:	2104      	movs	r1, #4
 8009cd2:	f8ad 500a 	strh.w	r5, [sp, #10]
 8009cd6:	f8ad 400c 	strh.w	r4, [sp, #12]
 8009cda:	f8ad b012 	strh.w	fp, [sp, #18]
 8009cde:	f005 f97f 	bl	800efe0 <GL_FillPolygon>
 8009ce2:	f8da 3000 	ldr.w	r3, [sl]
 8009ce6:	7e5b      	ldrb	r3, [r3, #25]
 8009ce8:	b91b      	cbnz	r3, 8009cf2 <GL_DrawLineEx+0x18e>
 8009cea:	4648      	mov	r0, r9
 8009cec:	4641      	mov	r1, r8
 8009cee:	f000 f87f 	bl	8009df0 <GL_DrawPoint>
 8009cf2:	f8da 3000 	ldr.w	r3, [sl]
 8009cf6:	7e5b      	ldrb	r3, [r3, #25]
 8009cf8:	b91b      	cbnz	r3, 8009d02 <GL_DrawLineEx+0x19e>
 8009cfa:	4638      	mov	r0, r7
 8009cfc:	4631      	mov	r1, r6
 8009cfe:	f000 f877 	bl	8009df0 <GL_DrawPoint>
 8009d02:	b007      	add	sp, #28
 8009d04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d08:	200000b8 	.word	0x200000b8
 8009d0c:	08011ff2 	.word	0x08011ff2

08009d10 <GL_DrawLine>:
 8009d10:	b530      	push	{r4, r5, lr}
 8009d12:	b085      	sub	sp, #20
 8009d14:	ac04      	add	r4, sp, #16
 8009d16:	2500      	movs	r5, #0
 8009d18:	f844 5d04 	str.w	r5, [r4, #-4]!
 8009d1c:	9400      	str	r4, [sp, #0]
 8009d1e:	f7ff ff21 	bl	8009b64 <GL_DrawLineEx>
 8009d22:	b005      	add	sp, #20
 8009d24:	bd30      	pop	{r4, r5, pc}
	...

08009d28 <GUI_DrawLine>:
 8009d28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009d2c:	461e      	mov	r6, r3
 8009d2e:	4b0c      	ldr	r3, [pc, #48]	; (8009d60 <GUI_DrawLine+0x38>)
 8009d30:	681c      	ldr	r4, [r3, #0]
 8009d32:	4681      	mov	r9, r0
 8009d34:	2000      	movs	r0, #0
 8009d36:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8009d38:	6d24      	ldr	r4, [r4, #80]	; 0x50
 8009d3a:	4688      	mov	r8, r1
 8009d3c:	4617      	mov	r7, r2
 8009d3e:	f7fc f817 	bl	8005d70 <WM__InitIVRSearch>
 8009d42:	b150      	cbz	r0, 8009d5a <GUI_DrawLine+0x32>
 8009d44:	eb09 0005 	add.w	r0, r9, r5
 8009d48:	eb08 0104 	add.w	r1, r8, r4
 8009d4c:	197a      	adds	r2, r7, r5
 8009d4e:	1933      	adds	r3, r6, r4
 8009d50:	f7ff ffde 	bl	8009d10 <GL_DrawLine>
 8009d54:	f7fb ff4a 	bl	8005bec <WM__GetNextIVR>
 8009d58:	e7f3      	b.n	8009d42 <GUI_DrawLine+0x1a>
 8009d5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009d5e:	bf00      	nop
 8009d60:	200000b8 	.word	0x200000b8

08009d64 <GUI_DrawHLine>:
 8009d64:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009d66:	4f10      	ldr	r7, [pc, #64]	; (8009da8 <GUI_DrawHLine+0x44>)
 8009d68:	683b      	ldr	r3, [r7, #0]
 8009d6a:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 8009d6c:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8009d6e:	4405      	add	r5, r0
 8009d70:	190e      	adds	r6, r1, r4
 8009d72:	b2ab      	uxth	r3, r5
 8009d74:	4414      	add	r4, r2
 8009d76:	4668      	mov	r0, sp
 8009d78:	f8ad 6000 	strh.w	r6, [sp]
 8009d7c:	f8ad 4004 	strh.w	r4, [sp, #4]
 8009d80:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009d84:	f8ad 3006 	strh.w	r3, [sp, #6]
 8009d88:	f7fb fff2 	bl	8005d70 <WM__InitIVRSearch>
 8009d8c:	b148      	cbz	r0, 8009da2 <GUI_DrawHLine+0x3e>
 8009d8e:	683b      	ldr	r3, [r7, #0]
 8009d90:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009d92:	4630      	mov	r0, r6
 8009d94:	681b      	ldr	r3, [r3, #0]
 8009d96:	4629      	mov	r1, r5
 8009d98:	4622      	mov	r2, r4
 8009d9a:	4798      	blx	r3
 8009d9c:	f7fb ff26 	bl	8005bec <WM__GetNextIVR>
 8009da0:	e7f4      	b.n	8009d8c <GUI_DrawHLine+0x28>
 8009da2:	b003      	add	sp, #12
 8009da4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009da6:	bf00      	nop
 8009da8:	200000b8 	.word	0x200000b8

08009dac <GUI_DrawPixel>:
 8009dac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009dae:	4e0f      	ldr	r6, [pc, #60]	; (8009dec <GUI_DrawPixel+0x40>)
 8009db0:	6833      	ldr	r3, [r6, #0]
 8009db2:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8009db4:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 8009db6:	4405      	add	r5, r0
 8009db8:	b2ab      	uxth	r3, r5
 8009dba:	440c      	add	r4, r1
 8009dbc:	f8ad 3004 	strh.w	r3, [sp, #4]
 8009dc0:	f8ad 3000 	strh.w	r3, [sp]
 8009dc4:	4668      	mov	r0, sp
 8009dc6:	b2a3      	uxth	r3, r4
 8009dc8:	f8ad 3006 	strh.w	r3, [sp, #6]
 8009dcc:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009dd0:	f7fb ffce 	bl	8005d70 <WM__InitIVRSearch>
 8009dd4:	b140      	cbz	r0, 8009de8 <GUI_DrawPixel+0x3c>
 8009dd6:	6833      	ldr	r3, [r6, #0]
 8009dd8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009dda:	4628      	mov	r0, r5
 8009ddc:	685b      	ldr	r3, [r3, #4]
 8009dde:	4621      	mov	r1, r4
 8009de0:	4798      	blx	r3
 8009de2:	f7fb ff03 	bl	8005bec <WM__GetNextIVR>
 8009de6:	e7f5      	b.n	8009dd4 <GUI_DrawPixel+0x28>
 8009de8:	b002      	add	sp, #8
 8009dea:	bd70      	pop	{r4, r5, r6, pc}
 8009dec:	200000b8 	.word	0x200000b8

08009df0 <GL_DrawPoint>:
 8009df0:	b508      	push	{r3, lr}
 8009df2:	4b08      	ldr	r3, [pc, #32]	; (8009e14 <GL_DrawPoint+0x24>)
 8009df4:	681b      	ldr	r3, [r3, #0]
 8009df6:	7e1a      	ldrb	r2, [r3, #24]
 8009df8:	2a01      	cmp	r2, #1
 8009dfa:	d103      	bne.n	8009e04 <GL_DrawPoint+0x14>
 8009dfc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009dfe:	685b      	ldr	r3, [r3, #4]
 8009e00:	4798      	blx	r3
 8009e02:	bd08      	pop	{r3, pc}
 8009e04:	2302      	movs	r3, #2
 8009e06:	3a01      	subs	r2, #1
 8009e08:	fb92 f2f3 	sdiv	r2, r2, r3
 8009e0c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8009e10:	f000 bf32 	b.w	800ac78 <GL_FillCircle>
 8009e14:	200000b8 	.word	0x200000b8

08009e18 <GUI_DrawVLine>:
 8009e18:	4b0f      	ldr	r3, [pc, #60]	; (8009e58 <GUI_DrawVLine+0x40>)
 8009e1a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009e1c:	681b      	ldr	r3, [r3, #0]
 8009e1e:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8009e20:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 8009e22:	4406      	add	r6, r0
 8009e24:	190d      	adds	r5, r1, r4
 8009e26:	b2b3      	uxth	r3, r6
 8009e28:	4414      	add	r4, r2
 8009e2a:	4668      	mov	r0, sp
 8009e2c:	f8ad 3000 	strh.w	r3, [sp]
 8009e30:	f8ad 3004 	strh.w	r3, [sp, #4]
 8009e34:	f8ad 5002 	strh.w	r5, [sp, #2]
 8009e38:	f8ad 4006 	strh.w	r4, [sp, #6]
 8009e3c:	f7fb ff98 	bl	8005d70 <WM__InitIVRSearch>
 8009e40:	b138      	cbz	r0, 8009e52 <GUI_DrawVLine+0x3a>
 8009e42:	4630      	mov	r0, r6
 8009e44:	4629      	mov	r1, r5
 8009e46:	4622      	mov	r2, r4
 8009e48:	f7fe fc94 	bl	8008774 <LCD_DrawVLine>
 8009e4c:	f7fb fece 	bl	8005bec <WM__GetNextIVR>
 8009e50:	e7f6      	b.n	8009e40 <GUI_DrawVLine+0x28>
 8009e52:	b002      	add	sp, #8
 8009e54:	bd70      	pop	{r4, r5, r6, pc}
 8009e56:	bf00      	nop
 8009e58:	200000b8 	.word	0x200000b8

08009e5c <GUI_FillRect>:
 8009e5c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009e5e:	4c0f      	ldr	r4, [pc, #60]	; (8009e9c <GUI_FillRect+0x40>)
 8009e60:	6824      	ldr	r4, [r4, #0]
 8009e62:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8009e64:	6d24      	ldr	r4, [r4, #80]	; 0x50
 8009e66:	1947      	adds	r7, r0, r5
 8009e68:	190e      	adds	r6, r1, r4
 8009e6a:	4415      	add	r5, r2
 8009e6c:	441c      	add	r4, r3
 8009e6e:	4668      	mov	r0, sp
 8009e70:	f8ad 7000 	strh.w	r7, [sp]
 8009e74:	f8ad 5004 	strh.w	r5, [sp, #4]
 8009e78:	f8ad 6002 	strh.w	r6, [sp, #2]
 8009e7c:	f8ad 4006 	strh.w	r4, [sp, #6]
 8009e80:	f7fb ff76 	bl	8005d70 <WM__InitIVRSearch>
 8009e84:	b140      	cbz	r0, 8009e98 <GUI_FillRect+0x3c>
 8009e86:	4638      	mov	r0, r7
 8009e88:	4631      	mov	r1, r6
 8009e8a:	462a      	mov	r2, r5
 8009e8c:	4623      	mov	r3, r4
 8009e8e:	f7fe fc97 	bl	80087c0 <LCD_FillRect>
 8009e92:	f7fb feab 	bl	8005bec <WM__GetNextIVR>
 8009e96:	e7f5      	b.n	8009e84 <GUI_FillRect+0x28>
 8009e98:	b003      	add	sp, #12
 8009e9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009e9c:	200000b8 	.word	0x200000b8

08009ea0 <GUI_FillRectEx>:
 8009ea0:	4603      	mov	r3, r0
 8009ea2:	f9b0 0000 	ldrsh.w	r0, [r0]
 8009ea6:	f9b3 1002 	ldrsh.w	r1, [r3, #2]
 8009eaa:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8009eae:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8009eb2:	f7ff bfd3 	b.w	8009e5c <GUI_FillRect>
	...

08009eb8 <GUI_DrawGraphEx>:
 8009eb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009ebc:	4698      	mov	r8, r3
 8009ebe:	4b81      	ldr	r3, [pc, #516]	; (800a0c4 <GUI_DrawGraphEx+0x20c>)
 8009ec0:	b08b      	sub	sp, #44	; 0x2c
 8009ec2:	468a      	mov	sl, r1
 8009ec4:	6819      	ldr	r1, [r3, #0]
 8009ec6:	9006      	str	r0, [sp, #24]
 8009ec8:	2000      	movs	r0, #0
 8009eca:	4691      	mov	r9, r2
 8009ecc:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8009ece:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8009ed0:	6ccd      	ldr	r5, [r1, #76]	; 0x4c
 8009ed2:	6d0c      	ldr	r4, [r1, #80]	; 0x50
 8009ed4:	f7fb ff4c 	bl	8005d70 <WM__InitIVRSearch>
 8009ed8:	2800      	cmp	r0, #0
 8009eda:	f000 80ef 	beq.w	800a0bc <GUI_DrawGraphEx+0x204>
 8009ede:	f10a 4300 	add.w	r3, sl, #2147483648	; 0x80000000
 8009ee2:	9806      	ldr	r0, [sp, #24]
 8009ee4:	3b01      	subs	r3, #1
 8009ee6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8009eea:	9307      	str	r3, [sp, #28]
 8009eec:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8009eee:	2b00      	cmp	r3, #0
 8009ef0:	bf14      	ite	ne
 8009ef2:	f06f 0301 	mvnne.w	r3, #1
 8009ef6:	2302      	moveq	r3, #2
 8009ef8:	44a9      	add	r9, r5
 8009efa:	4444      	add	r4, r8
 8009efc:	9309      	str	r3, [sp, #36]	; 0x24
 8009efe:	b927      	cbnz	r7, 8009f0a <GUI_DrawGraphEx+0x52>
 8009f00:	f7fb fe74 	bl	8005bec <WM__GetNextIVR>
 8009f04:	2800      	cmp	r0, #0
 8009f06:	d1fa      	bne.n	8009efe <GUI_DrawGraphEx+0x46>
 8009f08:	e0d8      	b.n	800a0bc <GUI_DrawGraphEx+0x204>
 8009f0a:	2e00      	cmp	r6, #0
 8009f0c:	d0f8      	beq.n	8009f00 <GUI_DrawGraphEx+0x48>
 8009f0e:	f1ba 0f00 	cmp.w	sl, #0
 8009f12:	ddf5      	ble.n	8009f00 <GUI_DrawGraphEx+0x48>
 8009f14:	1c7b      	adds	r3, r7, #1
 8009f16:	d104      	bne.n	8009f22 <GUI_DrawGraphEx+0x6a>
 8009f18:	2e01      	cmp	r6, #1
 8009f1a:	bf14      	ite	ne
 8009f1c:	2302      	movne	r3, #2
 8009f1e:	2301      	moveq	r3, #1
 8009f20:	e00a      	b.n	8009f38 <GUI_DrawGraphEx+0x80>
 8009f22:	2f01      	cmp	r7, #1
 8009f24:	d104      	bne.n	8009f30 <GUI_DrawGraphEx+0x78>
 8009f26:	2e01      	cmp	r6, #1
 8009f28:	bf14      	ite	ne
 8009f2a:	2303      	movne	r3, #3
 8009f2c:	2300      	moveq	r3, #0
 8009f2e:	e003      	b.n	8009f38 <GUI_DrawGraphEx+0x80>
 8009f30:	2e01      	cmp	r6, #1
 8009f32:	bf14      	ite	ne
 8009f34:	2305      	movne	r3, #5
 8009f36:	2304      	moveq	r3, #4
 8009f38:	9305      	str	r3, [sp, #20]
 8009f3a:	4b62      	ldr	r3, [pc, #392]	; (800a0c4 <GUI_DrawGraphEx+0x20c>)
 8009f3c:	681b      	ldr	r3, [r3, #0]
 8009f3e:	695b      	ldr	r3, [r3, #20]
 8009f40:	b1eb      	cbz	r3, 8009f7e <GUI_DrawGraphEx+0xc6>
 8009f42:	f9b3 8000 	ldrsh.w	r8, [r3]
 8009f46:	f9b3 0002 	ldrsh.w	r0, [r3, #2]
 8009f4a:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8009f4e:	f9b3 b006 	ldrsh.w	fp, [r3, #6]
 8009f52:	9004      	str	r0, [sp, #16]
 8009f54:	f108 38ff 	add.w	r8, r8, #4294967295
 8009f58:	45c1      	cmp	r9, r8
 8009f5a:	eb09 030a 	add.w	r3, r9, sl
 8009f5e:	bfb8      	it	lt
 8009f60:	ebc9 0808 	rsblt	r8, r9, r8
 8009f64:	f103 33ff 	add.w	r3, r3, #4294967295
 8009f68:	bfb4      	ite	lt
 8009f6a:	ea28 78e8 	biclt.w	r8, r8, r8, asr #31
 8009f6e:	f04f 0800 	movge.w	r8, #0
 8009f72:	4293      	cmp	r3, r2
 8009f74:	dd0a      	ble.n	8009f8c <GUI_DrawGraphEx+0xd4>
 8009f76:	ebc9 0202 	rsb	r2, r9, r2
 8009f7a:	3201      	adds	r2, #1
 8009f7c:	e007      	b.n	8009f8e <GUI_DrawGraphEx+0xd6>
 8009f7e:	f04f 3bff 	mov.w	fp, #4294967295
 8009f82:	4652      	mov	r2, sl
 8009f84:	f8cd b010 	str.w	fp, [sp, #16]
 8009f88:	4698      	mov	r8, r3
 8009f8a:	e000      	b.n	8009f8e <GUI_DrawGraphEx+0xd6>
 8009f8c:	4652      	mov	r2, sl
 8009f8e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8009f90:	b91b      	cbnz	r3, 8009f9a <GUI_DrawGraphEx+0xe2>
 8009f92:	9b06      	ldr	r3, [sp, #24]
 8009f94:	eb03 0348 	add.w	r3, r3, r8, lsl #1
 8009f98:	e000      	b.n	8009f9c <GUI_DrawGraphEx+0xe4>
 8009f9a:	9b07      	ldr	r3, [sp, #28]
 8009f9c:	4590      	cmp	r8, r2
 8009f9e:	9303      	str	r3, [sp, #12]
 8009fa0:	daae      	bge.n	8009f00 <GUI_DrawGraphEx+0x48>
 8009fa2:	444a      	add	r2, r9
 8009fa4:	9208      	str	r2, [sp, #32]
 8009fa6:	2200      	movs	r2, #0
 8009fa8:	44c8      	add	r8, r9
 8009faa:	2301      	movs	r3, #1
 8009fac:	9202      	str	r2, [sp, #8]
 8009fae:	9803      	ldr	r0, [sp, #12]
 8009fb0:	9909      	ldr	r1, [sp, #36]	; 0x24
 8009fb2:	8805      	ldrh	r5, [r0, #0]
 8009fb4:	4408      	add	r0, r1
 8009fb6:	b22d      	sxth	r5, r5
 8009fb8:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8009fbc:	428d      	cmp	r5, r1
 8009fbe:	9003      	str	r0, [sp, #12]
 8009fc0:	d10d      	bne.n	8009fde <GUI_DrawGraphEx+0x126>
 8009fc2:	9802      	ldr	r0, [sp, #8]
 8009fc4:	2800      	cmp	r0, #0
 8009fc6:	d16f      	bne.n	800a0a8 <GUI_DrawGraphEx+0x1f0>
 8009fc8:	2b00      	cmp	r3, #0
 8009fca:	d16f      	bne.n	800a0ac <GUI_DrawGraphEx+0x1f4>
 8009fcc:	4611      	mov	r1, r2
 8009fce:	f108 30ff 	add.w	r0, r8, #4294967295
 8009fd2:	9201      	str	r2, [sp, #4]
 8009fd4:	f7fe fb7a 	bl	80086cc <LCD_DrawPixel>
 8009fd8:	2301      	movs	r3, #1
 8009fda:	9a01      	ldr	r2, [sp, #4]
 8009fdc:	e067      	b.n	800a0ae <GUI_DrawGraphEx+0x1f6>
 8009fde:	9805      	ldr	r0, [sp, #20]
 8009fe0:	1e41      	subs	r1, r0, #1
 8009fe2:	b1db      	cbz	r3, 800a01c <GUI_DrawGraphEx+0x164>
 8009fe4:	2904      	cmp	r1, #4
 8009fe6:	d817      	bhi.n	800a018 <GUI_DrawGraphEx+0x160>
 8009fe8:	e8df f001 	tbb	[pc, r1]
 8009fec:	0b070503 	.word	0x0b070503
 8009ff0:	0f          	.byte	0x0f
 8009ff1:	00          	.byte	0x00
 8009ff2:	1b62      	subs	r2, r4, r5
 8009ff4:	e00e      	b.n	800a014 <GUI_DrawGraphEx+0x15c>
 8009ff6:	1b65      	subs	r5, r4, r5
 8009ff8:	e000      	b.n	8009ffc <GUI_DrawGraphEx+0x144>
 8009ffa:	4425      	add	r5, r4
 8009ffc:	fbb5 f2f6 	udiv	r2, r5, r6
 800a000:	e008      	b.n	800a014 <GUI_DrawGraphEx+0x15c>
 800a002:	4425      	add	r5, r4
 800a004:	fb07 f205 	mul.w	r2, r7, r5
 800a008:	e004      	b.n	800a014 <GUI_DrawGraphEx+0x15c>
 800a00a:	4425      	add	r5, r4
 800a00c:	fb07 f205 	mul.w	r2, r7, r5
 800a010:	fbb2 f2f6 	udiv	r2, r2, r6
 800a014:	2300      	movs	r3, #0
 800a016:	e04a      	b.n	800a0ae <GUI_DrawGraphEx+0x1f6>
 800a018:	192a      	adds	r2, r5, r4
 800a01a:	e7fb      	b.n	800a014 <GUI_DrawGraphEx+0x15c>
 800a01c:	2904      	cmp	r1, #4
 800a01e:	d812      	bhi.n	800a046 <GUI_DrawGraphEx+0x18e>
 800a020:	e8df f001 	tbb	[pc, r1]
 800a024:	0b070503 	.word	0x0b070503
 800a028:	0e          	.byte	0x0e
 800a029:	00          	.byte	0x00
 800a02a:	1b65      	subs	r5, r4, r5
 800a02c:	e00c      	b.n	800a048 <GUI_DrawGraphEx+0x190>
 800a02e:	1b65      	subs	r5, r4, r5
 800a030:	e000      	b.n	800a034 <GUI_DrawGraphEx+0x17c>
 800a032:	4425      	add	r5, r4
 800a034:	fbb5 f5f6 	udiv	r5, r5, r6
 800a038:	e006      	b.n	800a048 <GUI_DrawGraphEx+0x190>
 800a03a:	4425      	add	r5, r4
 800a03c:	437d      	muls	r5, r7
 800a03e:	e003      	b.n	800a048 <GUI_DrawGraphEx+0x190>
 800a040:	4425      	add	r5, r4
 800a042:	437d      	muls	r5, r7
 800a044:	e7f6      	b.n	800a034 <GUI_DrawGraphEx+0x17c>
 800a046:	4425      	add	r5, r4
 800a048:	9904      	ldr	r1, [sp, #16]
 800a04a:	428a      	cmp	r2, r1
 800a04c:	da01      	bge.n	800a052 <GUI_DrawGraphEx+0x19a>
 800a04e:	428d      	cmp	r5, r1
 800a050:	db25      	blt.n	800a09e <GUI_DrawGraphEx+0x1e6>
 800a052:	455a      	cmp	r2, fp
 800a054:	dd01      	ble.n	800a05a <GUI_DrawGraphEx+0x1a2>
 800a056:	455d      	cmp	r5, fp
 800a058:	dc21      	bgt.n	800a09e <GUI_DrawGraphEx+0x1e6>
 800a05a:	eb05 0c02 	add.w	ip, r5, r2
 800a05e:	2102      	movs	r1, #2
 800a060:	42aa      	cmp	r2, r5
 800a062:	fb9c fcf1 	sdiv	ip, ip, r1
 800a066:	f108 30ff 	add.w	r0, r8, #4294967295
 800a06a:	dc0b      	bgt.n	800a084 <GUI_DrawGraphEx+0x1cc>
 800a06c:	4611      	mov	r1, r2
 800a06e:	4662      	mov	r2, ip
 800a070:	e88d 1008 	stmia.w	sp, {r3, ip}
 800a074:	f7fe fb7e 	bl	8008774 <LCD_DrawVLine>
 800a078:	f8dd c004 	ldr.w	ip, [sp, #4]
 800a07c:	4640      	mov	r0, r8
 800a07e:	4661      	mov	r1, ip
 800a080:	462a      	mov	r2, r5
 800a082:	e009      	b.n	800a098 <GUI_DrawGraphEx+0x1e0>
 800a084:	4661      	mov	r1, ip
 800a086:	e88d 1008 	stmia.w	sp, {r3, ip}
 800a08a:	f7fe fb73 	bl	8008774 <LCD_DrawVLine>
 800a08e:	f8dd c004 	ldr.w	ip, [sp, #4]
 800a092:	4640      	mov	r0, r8
 800a094:	4629      	mov	r1, r5
 800a096:	4662      	mov	r2, ip
 800a098:	f7fe fb6c 	bl	8008774 <LCD_DrawVLine>
 800a09c:	9b00      	ldr	r3, [sp, #0]
 800a09e:	9a02      	ldr	r2, [sp, #8]
 800a0a0:	3201      	adds	r2, #1
 800a0a2:	9202      	str	r2, [sp, #8]
 800a0a4:	462a      	mov	r2, r5
 800a0a6:	e002      	b.n	800a0ae <GUI_DrawGraphEx+0x1f6>
 800a0a8:	2300      	movs	r3, #0
 800a0aa:	9302      	str	r3, [sp, #8]
 800a0ac:	2301      	movs	r3, #1
 800a0ae:	9808      	ldr	r0, [sp, #32]
 800a0b0:	f108 0801 	add.w	r8, r8, #1
 800a0b4:	4580      	cmp	r8, r0
 800a0b6:	f47f af7a 	bne.w	8009fae <GUI_DrawGraphEx+0xf6>
 800a0ba:	e721      	b.n	8009f00 <GUI_DrawGraphEx+0x48>
 800a0bc:	b00b      	add	sp, #44	; 0x2c
 800a0be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a0c2:	bf00      	nop
 800a0c4:	200000b8 	.word	0x200000b8

0800a0c8 <GUI_DispString>:
 800a0c8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a0cc:	4604      	mov	r4, r0
 800a0ce:	2800      	cmp	r0, #0
 800a0d0:	d079      	beq.n	800a1c6 <GUI_DispString+0xfe>
 800a0d2:	4d3e      	ldr	r5, [pc, #248]	; (800a1cc <GUI_DispString+0x104>)
 800a0d4:	f001 f8c8 	bl	800b268 <GUI_GetFontDistY>
 800a0d8:	682b      	ldr	r3, [r5, #0]
 800a0da:	4680      	mov	r8, r0
 800a0dc:	f8b3 9022 	ldrh.w	r9, [r3, #34]	; 0x22
 800a0e0:	f001 f8aa 	bl	800b238 <GUI_GetYAdjust>
 800a0e4:	682b      	ldr	r3, [r5, #0]
 800a0e6:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 800a0e8:	b287      	uxth	r7, r0
 800a0ea:	1bd2      	subs	r2, r2, r7
 800a0ec:	849a      	strh	r2, [r3, #36]	; 0x24
 800a0ee:	7823      	ldrb	r3, [r4, #0]
 800a0f0:	2b00      	cmp	r3, #0
 800a0f2:	d05d      	beq.n	800a1b0 <GUI_DispString+0xe8>
 800a0f4:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800a0f8:	4620      	mov	r0, r4
 800a0fa:	f000 ffeb 	bl	800b0d4 <GUI__GetLineNumChars>
 800a0fe:	4606      	mov	r6, r0
 800a100:	4631      	mov	r1, r6
 800a102:	4620      	mov	r0, r4
 800a104:	f001 f814 	bl	800b130 <GUI__GetLineDistX>
 800a108:	682b      	ldr	r3, [r5, #0]
 800a10a:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800a10c:	f002 0203 	and.w	r2, r2, #3
 800a110:	2a01      	cmp	r2, #1
 800a112:	d005      	beq.n	800a120 <GUI_DispString+0x58>
 800a114:	2a02      	cmp	r2, #2
 800a116:	bf14      	ite	ne
 800a118:	2200      	movne	r2, #0
 800a11a:	fb90 f2f2 	sdiveq	r2, r0, r2
 800a11e:	e000      	b.n	800a122 <GUI_DispString+0x5a>
 800a120:	4602      	mov	r2, r0
 800a122:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800a124:	1a8a      	subs	r2, r1, r2
 800a126:	b292      	uxth	r2, r2
 800a128:	b291      	uxth	r1, r2
 800a12a:	8459      	strh	r1, [r3, #34]	; 0x22
 800a12c:	fa1f fa80 	uxth.w	sl, r0
 800a130:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800a132:	f8ad 1000 	strh.w	r1, [sp]
 800a136:	f10a 31ff 	add.w	r1, sl, #4294967295
 800a13a:	440a      	add	r2, r1
 800a13c:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a140:	fa1f fb88 	uxth.w	fp, r8
 800a144:	3b01      	subs	r3, #1
 800a146:	445b      	add	r3, fp
 800a148:	f8ad 2004 	strh.w	r2, [sp, #4]
 800a14c:	4620      	mov	r0, r4
 800a14e:	4631      	mov	r1, r6
 800a150:	466a      	mov	r2, sp
 800a152:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a156:	f001 f81b 	bl	800b190 <GUI__DispLine>
 800a15a:	682b      	ldr	r3, [r5, #0]
 800a15c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800a160:	849a      	strh	r2, [r3, #36]	; 0x24
 800a162:	4620      	mov	r0, r4
 800a164:	4631      	mov	r1, r6
 800a166:	f7ff f98d 	bl	8009484 <GUI_UC__NumChars2NumBytes>
 800a16a:	5c23      	ldrb	r3, [r4, r0]
 800a16c:	2b0a      	cmp	r3, #10
 800a16e:	eb04 0200 	add.w	r2, r4, r0
 800a172:	d001      	beq.n	800a178 <GUI_DispString+0xb0>
 800a174:	2b0d      	cmp	r3, #13
 800a176:	d112      	bne.n	800a19e <GUI_DispString+0xd6>
 800a178:	682b      	ldr	r3, [r5, #0]
 800a17a:	8d99      	ldrh	r1, [r3, #44]	; 0x2c
 800a17c:	f001 0103 	and.w	r1, r1, #3
 800a180:	3901      	subs	r1, #1
 800a182:	2901      	cmp	r1, #1
 800a184:	bf8a      	itet	hi
 800a186:	8c19      	ldrhhi	r1, [r3, #32]
 800a188:	f8a3 9022 	strhls.w	r9, [r3, #34]	; 0x22
 800a18c:	8459      	strhhi	r1, [r3, #34]	; 0x22
 800a18e:	7811      	ldrb	r1, [r2, #0]
 800a190:	290a      	cmp	r1, #10
 800a192:	d10b      	bne.n	800a1ac <GUI_DispString+0xe4>
 800a194:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 800a196:	448b      	add	fp, r1
 800a198:	f8a3 b024 	strh.w	fp, [r3, #36]	; 0x24
 800a19c:	e006      	b.n	800a1ac <GUI_DispString+0xe4>
 800a19e:	4b0b      	ldr	r3, [pc, #44]	; (800a1cc <GUI_DispString+0x104>)
 800a1a0:	f8bd 0000 	ldrh.w	r0, [sp]
 800a1a4:	681b      	ldr	r3, [r3, #0]
 800a1a6:	4482      	add	sl, r0
 800a1a8:	f8a3 a022 	strh.w	sl, [r3, #34]	; 0x22
 800a1ac:	7813      	ldrb	r3, [r2, #0]
 800a1ae:	b943      	cbnz	r3, 800a1c2 <GUI_DispString+0xfa>
 800a1b0:	682b      	ldr	r3, [r5, #0]
 800a1b2:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 800a1b4:	4417      	add	r7, r2
 800a1b6:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800a1b8:	849f      	strh	r7, [r3, #36]	; 0x24
 800a1ba:	f022 0203 	bic.w	r2, r2, #3
 800a1be:	859a      	strh	r2, [r3, #44]	; 0x2c
 800a1c0:	e001      	b.n	800a1c6 <GUI_DispString+0xfe>
 800a1c2:	1c54      	adds	r4, r2, #1
 800a1c4:	e793      	b.n	800a0ee <GUI_DispString+0x26>
 800a1c6:	b003      	add	sp, #12
 800a1c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a1cc:	200000b8 	.word	0x200000b8

0800a1d0 <GUI_DispStringAt>:
 800a1d0:	4b02      	ldr	r3, [pc, #8]	; (800a1dc <GUI_DispStringAt+0xc>)
 800a1d2:	681b      	ldr	r3, [r3, #0]
 800a1d4:	8459      	strh	r1, [r3, #34]	; 0x22
 800a1d6:	849a      	strh	r2, [r3, #36]	; 0x24
 800a1d8:	f7ff bf76 	b.w	800a0c8 <GUI_DispString>
 800a1dc:	200000b8 	.word	0x200000b8

0800a1e0 <GUI__DispStringInRect>:
 800a1e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1e4:	b087      	sub	sp, #28
 800a1e6:	460c      	mov	r4, r1
 800a1e8:	9001      	str	r0, [sp, #4]
 800a1ea:	4691      	mov	r9, r2
 800a1ec:	461d      	mov	r5, r3
 800a1ee:	f001 f83b 	bl	800b268 <GUI_GetFontDistY>
 800a1f2:	9f01      	ldr	r7, [sp, #4]
 800a1f4:	4680      	mov	r8, r0
 800a1f6:	b124      	cbz	r4, 800a202 <GUI__DispStringInRect+0x22>
 800a1f8:	6820      	ldr	r0, [r4, #0]
 800a1fa:	6861      	ldr	r1, [r4, #4]
 800a1fc:	ab04      	add	r3, sp, #16
 800a1fe:	c303      	stmia	r3!, {r0, r1}
 800a200:	e002      	b.n	800a208 <GUI__DispStringInRect+0x28>
 800a202:	a804      	add	r0, sp, #16
 800a204:	f000 fbf0 	bl	800a9e8 <GUI_GetClientRect>
 800a208:	f019 0a0c 	ands.w	sl, r9, #12
 800a20c:	d002      	beq.n	800a214 <GUI__DispStringInRect+0x34>
 800a20e:	462c      	mov	r4, r5
 800a210:	2600      	movs	r6, #0
 800a212:	e016      	b.n	800a242 <GUI__DispStringInRect+0x62>
 800a214:	f9bd 4012 	ldrsh.w	r4, [sp, #18]
 800a218:	e032      	b.n	800a280 <GUI__DispStringInRect+0xa0>
 800a21a:	4621      	mov	r1, r4
 800a21c:	9801      	ldr	r0, [sp, #4]
 800a21e:	f000 ff59 	bl	800b0d4 <GUI__GetLineNumChars>
 800a222:	f8dd b004 	ldr.w	fp, [sp, #4]
 800a226:	4601      	mov	r1, r0
 800a228:	1a24      	subs	r4, r4, r0
 800a22a:	4658      	mov	r0, fp
 800a22c:	f7ff f92a 	bl	8009484 <GUI_UC__NumChars2NumBytes>
 800a230:	eb0b 0300 	add.w	r3, fp, r0
 800a234:	a806      	add	r0, sp, #24
 800a236:	3601      	adds	r6, #1
 800a238:	f840 3d14 	str.w	r3, [r0, #-20]!
 800a23c:	f7fe fdad 	bl	8008d9a <GUI__HandleEOLine>
 800a240:	b908      	cbnz	r0, 800a246 <GUI__DispStringInRect+0x66>
 800a242:	2c00      	cmp	r4, #0
 800a244:	d1e9      	bne.n	800a21a <GUI__DispStringInRect+0x3a>
 800a246:	f1ba 0f08 	cmp.w	sl, #8
 800a24a:	d005      	beq.n	800a258 <GUI__DispStringInRect+0x78>
 800a24c:	f1ba 0f0c 	cmp.w	sl, #12
 800a250:	d008      	beq.n	800a264 <GUI__DispStringInRect+0x84>
 800a252:	f1ba 0f04 	cmp.w	sl, #4
 800a256:	d112      	bne.n	800a27e <GUI__DispStringInRect+0x9e>
 800a258:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 800a25c:	fb08 4416 	mls	r4, r8, r6, r4
 800a260:	3401      	adds	r4, #1
 800a262:	e00d      	b.n	800a280 <GUI__DispStringInRect+0xa0>
 800a264:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800a268:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 800a26c:	1ae4      	subs	r4, r4, r3
 800a26e:	3401      	adds	r4, #1
 800a270:	fb08 4416 	mls	r4, r8, r6, r4
 800a274:	2202      	movs	r2, #2
 800a276:	fb94 f4f2 	sdiv	r4, r4, r2
 800a27a:	441c      	add	r4, r3
 800a27c:	e000      	b.n	800a280 <GUI__DispStringInRect+0xa0>
 800a27e:	2400      	movs	r4, #0
 800a280:	9701      	str	r7, [sp, #4]
 800a282:	2600      	movs	r6, #0
 800a284:	2d00      	cmp	r5, #0
 800a286:	d04b      	beq.n	800a320 <GUI__DispStringInRect+0x140>
 800a288:	4629      	mov	r1, r5
 800a28a:	9801      	ldr	r0, [sp, #4]
 800a28c:	f000 ff22 	bl	800b0d4 <GUI__GetLineNumChars>
 800a290:	4607      	mov	r7, r0
 800a292:	1a2d      	subs	r5, r5, r0
 800a294:	4639      	mov	r1, r7
 800a296:	9801      	ldr	r0, [sp, #4]
 800a298:	f000 ff4a 	bl	800b130 <GUI__GetLineDistX>
 800a29c:	f009 0303 	and.w	r3, r9, #3
 800a2a0:	2b01      	cmp	r3, #1
 800a2a2:	d00f      	beq.n	800a2c4 <GUI__DispStringInRect+0xe4>
 800a2a4:	2b02      	cmp	r3, #2
 800a2a6:	d003      	beq.n	800a2b0 <GUI__DispStringInRect+0xd0>
 800a2a8:	b983      	cbnz	r3, 800a2cc <GUI__DispStringInRect+0xec>
 800a2aa:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
 800a2ae:	e00d      	b.n	800a2cc <GUI__DispStringInRect+0xec>
 800a2b0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800a2b4:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 800a2b8:	1ab6      	subs	r6, r6, r2
 800a2ba:	1a36      	subs	r6, r6, r0
 800a2bc:	fb96 f6f3 	sdiv	r6, r6, r3
 800a2c0:	4416      	add	r6, r2
 800a2c2:	e003      	b.n	800a2cc <GUI__DispStringInRect+0xec>
 800a2c4:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 800a2c8:	1a36      	subs	r6, r6, r0
 800a2ca:	3601      	adds	r6, #1
 800a2cc:	4b16      	ldr	r3, [pc, #88]	; (800a328 <GUI__DispStringInRect+0x148>)
 800a2ce:	6819      	ldr	r1, [r3, #0]
 800a2d0:	3801      	subs	r0, #1
 800a2d2:	b2a3      	uxth	r3, r4
 800a2d4:	b2b2      	uxth	r2, r6
 800a2d6:	848b      	strh	r3, [r1, #36]	; 0x24
 800a2d8:	4430      	add	r0, r6
 800a2da:	f8ad 300a 	strh.w	r3, [sp, #10]
 800a2de:	f108 33ff 	add.w	r3, r8, #4294967295
 800a2e2:	4423      	add	r3, r4
 800a2e4:	844a      	strh	r2, [r1, #34]	; 0x22
 800a2e6:	f8ad 2008 	strh.w	r2, [sp, #8]
 800a2ea:	4639      	mov	r1, r7
 800a2ec:	aa02      	add	r2, sp, #8
 800a2ee:	f8ad 000c 	strh.w	r0, [sp, #12]
 800a2f2:	9801      	ldr	r0, [sp, #4]
 800a2f4:	f8ad 300e 	strh.w	r3, [sp, #14]
 800a2f8:	f000 ff4a 	bl	800b190 <GUI__DispLine>
 800a2fc:	f8dd a004 	ldr.w	sl, [sp, #4]
 800a300:	4639      	mov	r1, r7
 800a302:	4650      	mov	r0, sl
 800a304:	f7ff f8be 	bl	8009484 <GUI_UC__NumChars2NumBytes>
 800a308:	af06      	add	r7, sp, #24
 800a30a:	4450      	add	r0, sl
 800a30c:	f847 0d14 	str.w	r0, [r7, #-20]!
 800a310:	f000 ffaa 	bl	800b268 <GUI_GetFontDistY>
 800a314:	4404      	add	r4, r0
 800a316:	4638      	mov	r0, r7
 800a318:	f7fe fd3f 	bl	8008d9a <GUI__HandleEOLine>
 800a31c:	2800      	cmp	r0, #0
 800a31e:	d0b1      	beq.n	800a284 <GUI__DispStringInRect+0xa4>
 800a320:	b007      	add	sp, #28
 800a322:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a326:	bf00      	nop
 800a328:	200000b8 	.word	0x200000b8

0800a32c <GUI_DispStringInRectMax>:
 800a32c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a330:	460c      	mov	r4, r1
 800a332:	4690      	mov	r8, r2
 800a334:	461f      	mov	r7, r3
 800a336:	4606      	mov	r6, r0
 800a338:	b1c0      	cbz	r0, 800a36c <GUI_DispStringInRectMax+0x40>
 800a33a:	b169      	cbz	r1, 800a358 <GUI_DispStringInRectMax+0x2c>
 800a33c:	4608      	mov	r0, r1
 800a33e:	f7fa fceb 	bl	8004d18 <WM_SetUserClipRect>
 800a342:	4605      	mov	r5, r0
 800a344:	b148      	cbz	r0, 800a35a <GUI_DispStringInRectMax+0x2e>
 800a346:	4668      	mov	r0, sp
 800a348:	4621      	mov	r1, r4
 800a34a:	462a      	mov	r2, r5
 800a34c:	f7fe fd57 	bl	8008dfe <GUI__IntersectRects>
 800a350:	4668      	mov	r0, sp
 800a352:	f7fa fce1 	bl	8004d18 <WM_SetUserClipRect>
 800a356:	e000      	b.n	800a35a <GUI_DispStringInRectMax+0x2e>
 800a358:	460d      	mov	r5, r1
 800a35a:	4630      	mov	r0, r6
 800a35c:	4621      	mov	r1, r4
 800a35e:	4642      	mov	r2, r8
 800a360:	463b      	mov	r3, r7
 800a362:	f7ff ff3d 	bl	800a1e0 <GUI__DispStringInRect>
 800a366:	4628      	mov	r0, r5
 800a368:	f7fa fcd6 	bl	8004d18 <WM_SetUserClipRect>
 800a36c:	b002      	add	sp, #8
 800a36e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a372 <GUI_DispStringInRect>:
 800a372:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800a376:	f7ff bfd9 	b.w	800a32c <GUI_DispStringInRectMax>

0800a37a <GUI_WrapGetNumLines>:
 800a37a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a37c:	4605      	mov	r5, r0
 800a37e:	460e      	mov	r6, r1
 800a380:	4617      	mov	r7, r2
 800a382:	2400      	movs	r4, #0
 800a384:	4628      	mov	r0, r5
 800a386:	4631      	mov	r1, r6
 800a388:	463a      	mov	r2, r7
 800a38a:	f004 fac7 	bl	800e91c <GUI__WrapGetNumBytesToNextLine>
 800a38e:	b110      	cbz	r0, 800a396 <GUI_WrapGetNumLines+0x1c>
 800a390:	4405      	add	r5, r0
 800a392:	3401      	adds	r4, #1
 800a394:	e7f6      	b.n	800a384 <GUI_WrapGetNumLines+0xa>
 800a396:	4620      	mov	r0, r4
 800a398:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800a39a <GUI_DispStringInRectWrap>:
 800a39a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a39e:	b089      	sub	sp, #36	; 0x24
 800a3a0:	460c      	mov	r4, r1
 800a3a2:	9202      	str	r2, [sp, #8]
 800a3a4:	9303      	str	r3, [sp, #12]
 800a3a6:	4605      	mov	r5, r0
 800a3a8:	2800      	cmp	r0, #0
 800a3aa:	f000 8092 	beq.w	800a4d2 <GUI_DispStringInRectWrap+0x138>
 800a3ae:	f8b1 a000 	ldrh.w	sl, [r1]
 800a3b2:	f8b1 9004 	ldrh.w	r9, [r1, #4]
 800a3b6:	884e      	ldrh	r6, [r1, #2]
 800a3b8:	f8b1 b006 	ldrh.w	fp, [r1, #6]
 800a3bc:	fa0f f289 	sxth.w	r2, r9
 800a3c0:	fa0f f38a 	sxth.w	r3, sl
 800a3c4:	1ad3      	subs	r3, r2, r3
 800a3c6:	3301      	adds	r3, #1
 800a3c8:	9301      	str	r3, [sp, #4]
 800a3ca:	f000 ff4d 	bl	800b268 <GUI_GetFontDistY>
 800a3ce:	9902      	ldr	r1, [sp, #8]
 800a3d0:	f011 070c 	ands.w	r7, r1, #12
 800a3d4:	4680      	mov	r8, r0
 800a3d6:	d01b      	beq.n	800a410 <GUI_DispStringInRectWrap+0x76>
 800a3d8:	4628      	mov	r0, r5
 800a3da:	9901      	ldr	r1, [sp, #4]
 800a3dc:	9a03      	ldr	r2, [sp, #12]
 800a3de:	f7ff ffcc 	bl	800a37a <GUI_WrapGetNumLines>
 800a3e2:	2f08      	cmp	r7, #8
 800a3e4:	d003      	beq.n	800a3ee <GUI_DispStringInRectWrap+0x54>
 800a3e6:	2f0c      	cmp	r7, #12
 800a3e8:	d006      	beq.n	800a3f8 <GUI_DispStringInRectWrap+0x5e>
 800a3ea:	2f04      	cmp	r7, #4
 800a3ec:	d110      	bne.n	800a410 <GUI_DispStringInRectWrap+0x76>
 800a3ee:	f10b 0601 	add.w	r6, fp, #1
 800a3f2:	fb00 6618 	mls	r6, r0, r8, r6
 800a3f6:	e00a      	b.n	800a40e <GUI_DispStringInRectWrap+0x74>
 800a3f8:	b232      	sxth	r2, r6
 800a3fa:	fa0f f38b 	sxth.w	r3, fp
 800a3fe:	1a9b      	subs	r3, r3, r2
 800a400:	3301      	adds	r3, #1
 800a402:	fb08 3010 	mls	r0, r8, r0, r3
 800a406:	2302      	movs	r3, #2
 800a408:	fb90 f0f3 	sdiv	r0, r0, r3
 800a40c:	4406      	add	r6, r0
 800a40e:	b2b6      	uxth	r6, r6
 800a410:	4620      	mov	r0, r4
 800a412:	f7fa fc81 	bl	8004d18 <WM_SetUserClipRect>
 800a416:	4607      	mov	r7, r0
 800a418:	b178      	cbz	r0, 800a43a <GUI_DispStringInRectWrap+0xa0>
 800a41a:	a804      	add	r0, sp, #16
 800a41c:	4621      	mov	r1, r4
 800a41e:	463a      	mov	r2, r7
 800a420:	f8ad a010 	strh.w	sl, [sp, #16]
 800a424:	f8ad 6012 	strh.w	r6, [sp, #18]
 800a428:	f8ad 9014 	strh.w	r9, [sp, #20]
 800a42c:	f8ad b016 	strh.w	fp, [sp, #22]
 800a430:	f7fe fce5 	bl	8008dfe <GUI__IntersectRects>
 800a434:	a804      	add	r0, sp, #16
 800a436:	f7fa fc6f 	bl	8004d18 <WM_SetUserClipRect>
 800a43a:	9901      	ldr	r1, [sp, #4]
 800a43c:	9a03      	ldr	r2, [sp, #12]
 800a43e:	4628      	mov	r0, r5
 800a440:	f004 fa3a 	bl	800e8b8 <GUI__WrapGetNumCharsDisp>
 800a444:	eb06 0b08 	add.w	fp, r6, r8
 800a448:	4602      	mov	r2, r0
 800a44a:	fa1f fb8b 	uxth.w	fp, fp
 800a44e:	f10b 33ff 	add.w	r3, fp, #4294967295
 800a452:	4611      	mov	r1, r2
 800a454:	4628      	mov	r0, r5
 800a456:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a45a:	9200      	str	r2, [sp, #0]
 800a45c:	f8ad a018 	strh.w	sl, [sp, #24]
 800a460:	f8ad 601a 	strh.w	r6, [sp, #26]
 800a464:	f8ad 901c 	strh.w	r9, [sp, #28]
 800a468:	f000 fe62 	bl	800b130 <GUI__GetLineDistX>
 800a46c:	9902      	ldr	r1, [sp, #8]
 800a46e:	9a00      	ldr	r2, [sp, #0]
 800a470:	f001 0303 	and.w	r3, r1, #3
 800a474:	2b01      	cmp	r3, #1
 800a476:	d014      	beq.n	800a4a2 <GUI_DispStringInRectWrap+0x108>
 800a478:	2b02      	cmp	r3, #2
 800a47a:	d004      	beq.n	800a486 <GUI_DispStringInRectWrap+0xec>
 800a47c:	b9b3      	cbnz	r3, 800a4ac <GUI_DispStringInRectWrap+0x112>
 800a47e:	8823      	ldrh	r3, [r4, #0]
 800a480:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a484:	e012      	b.n	800a4ac <GUI_DispStringInRectWrap+0x112>
 800a486:	8821      	ldrh	r1, [r4, #0]
 800a488:	f9b4 e004 	ldrsh.w	lr, [r4, #4]
 800a48c:	b20e      	sxth	r6, r1
 800a48e:	ebc6 060e 	rsb	r6, r6, lr
 800a492:	1a30      	subs	r0, r6, r0
 800a494:	3001      	adds	r0, #1
 800a496:	fb90 f3f3 	sdiv	r3, r0, r3
 800a49a:	4419      	add	r1, r3
 800a49c:	f8ad 1018 	strh.w	r1, [sp, #24]
 800a4a0:	e004      	b.n	800a4ac <GUI_DispStringInRectWrap+0x112>
 800a4a2:	88a3      	ldrh	r3, [r4, #4]
 800a4a4:	3301      	adds	r3, #1
 800a4a6:	1a18      	subs	r0, r3, r0
 800a4a8:	f8ad 0018 	strh.w	r0, [sp, #24]
 800a4ac:	4628      	mov	r0, r5
 800a4ae:	4611      	mov	r1, r2
 800a4b0:	aa06      	add	r2, sp, #24
 800a4b2:	f000 fe6d 	bl	800b190 <GUI__DispLine>
 800a4b6:	4628      	mov	r0, r5
 800a4b8:	9901      	ldr	r1, [sp, #4]
 800a4ba:	9a03      	ldr	r2, [sp, #12]
 800a4bc:	f004 fa2e 	bl	800e91c <GUI__WrapGetNumBytesToNextLine>
 800a4c0:	4405      	add	r5, r0
 800a4c2:	fa1f f68b 	uxth.w	r6, fp
 800a4c6:	782b      	ldrb	r3, [r5, #0]
 800a4c8:	2b00      	cmp	r3, #0
 800a4ca:	d1b6      	bne.n	800a43a <GUI_DispStringInRectWrap+0xa0>
 800a4cc:	4638      	mov	r0, r7
 800a4ce:	f7fa fc23 	bl	8004d18 <WM_SetUserClipRect>
 800a4d2:	b009      	add	sp, #36	; 0x24
 800a4d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800a4d8 <GUI_GetStringDistX>:
 800a4d8:	b510      	push	{r4, lr}
 800a4da:	4604      	mov	r4, r0
 800a4dc:	f7fe ffe4 	bl	80094a8 <GUI__GetNumChars>
 800a4e0:	4601      	mov	r1, r0
 800a4e2:	4620      	mov	r0, r4
 800a4e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a4e8:	f000 be22 	b.w	800b130 <GUI__GetLineDistX>

0800a4ec <GUI_DEVICE__GetpDriver>:
 800a4ec:	2801      	cmp	r0, #1
 800a4ee:	dc09      	bgt.n	800a504 <GUI_DEVICE__GetpDriver+0x18>
 800a4f0:	4b05      	ldr	r3, [pc, #20]	; (800a508 <GUI_DEVICE__GetpDriver+0x1c>)
 800a4f2:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800a4f6:	b120      	cbz	r0, 800a502 <GUI_DEVICE__GetpDriver+0x16>
 800a4f8:	68c3      	ldr	r3, [r0, #12]
 800a4fa:	681b      	ldr	r3, [r3, #0]
 800a4fc:	b11b      	cbz	r3, 800a506 <GUI_DEVICE__GetpDriver+0x1a>
 800a4fe:	6800      	ldr	r0, [r0, #0]
 800a500:	e7f9      	b.n	800a4f6 <GUI_DEVICE__GetpDriver+0xa>
 800a502:	4770      	bx	lr
 800a504:	2000      	movs	r0, #0
 800a506:	4770      	bx	lr
 800a508:	20002d28 	.word	0x20002d28

0800a50c <GUI_DEVICE_Delete>:
 800a50c:	f000 bf98 	b.w	800b440 <GUI_ALLOC_FreeFixedBlock>

0800a510 <GUI_DEVICE_Create>:
 800a510:	2b01      	cmp	r3, #1
 800a512:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a514:	4606      	mov	r6, r0
 800a516:	460d      	mov	r5, r1
 800a518:	4617      	mov	r7, r2
 800a51a:	461c      	mov	r4, r3
 800a51c:	dd01      	ble.n	800a522 <GUI_DEVICE_Create+0x12>
 800a51e:	2000      	movs	r0, #0
 800a520:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a522:	201c      	movs	r0, #28
 800a524:	f001 f870 	bl	800b608 <GUI_ALLOC_GetFixedBlock>
 800a528:	2800      	cmp	r0, #0
 800a52a:	d0f8      	beq.n	800a51e <GUI_DEVICE_Create+0xe>
 800a52c:	b10d      	cbz	r5, 800a532 <GUI_DEVICE_Create+0x22>
 800a52e:	6105      	str	r5, [r0, #16]
 800a530:	e009      	b.n	800a546 <GUI_DEVICE_Create+0x36>
 800a532:	4b09      	ldr	r3, [pc, #36]	; (800a558 <GUI_DEVICE_Create+0x48>)
 800a534:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 800a538:	b129      	cbz	r1, 800a546 <GUI_DEVICE_Create+0x36>
 800a53a:	680b      	ldr	r3, [r1, #0]
 800a53c:	b10b      	cbz	r3, 800a542 <GUI_DEVICE_Create+0x32>
 800a53e:	4619      	mov	r1, r3
 800a540:	e7fb      	b.n	800a53a <GUI_DEVICE_Create+0x2a>
 800a542:	690b      	ldr	r3, [r1, #16]
 800a544:	6103      	str	r3, [r0, #16]
 800a546:	2300      	movs	r3, #0
 800a548:	6083      	str	r3, [r0, #8]
 800a54a:	6184      	str	r4, [r0, #24]
 800a54c:	8287      	strh	r7, [r0, #20]
 800a54e:	60c6      	str	r6, [r0, #12]
 800a550:	6003      	str	r3, [r0, #0]
 800a552:	6043      	str	r3, [r0, #4]
 800a554:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a556:	bf00      	nop
 800a558:	20002d28 	.word	0x20002d28

0800a55c <GUI_DEVICE_Unlink>:
 800a55c:	6981      	ldr	r1, [r0, #24]
 800a55e:	4a0b      	ldr	r2, [pc, #44]	; (800a58c <GUI_DEVICE_Unlink+0x30>)
 800a560:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800a564:	4283      	cmp	r3, r0
 800a566:	d105      	bne.n	800a574 <GUI_DEVICE_Unlink+0x18>
 800a568:	6803      	ldr	r3, [r0, #0]
 800a56a:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 800a56e:	b10b      	cbz	r3, 800a574 <GUI_DEVICE_Unlink+0x18>
 800a570:	2200      	movs	r2, #0
 800a572:	605a      	str	r2, [r3, #4]
 800a574:	6843      	ldr	r3, [r0, #4]
 800a576:	b10b      	cbz	r3, 800a57c <GUI_DEVICE_Unlink+0x20>
 800a578:	6802      	ldr	r2, [r0, #0]
 800a57a:	601a      	str	r2, [r3, #0]
 800a57c:	6802      	ldr	r2, [r0, #0]
 800a57e:	b102      	cbz	r2, 800a582 <GUI_DEVICE_Unlink+0x26>
 800a580:	6053      	str	r3, [r2, #4]
 800a582:	2300      	movs	r3, #0
 800a584:	6003      	str	r3, [r0, #0]
 800a586:	6043      	str	r3, [r0, #4]
 800a588:	4770      	bx	lr
 800a58a:	bf00      	nop
 800a58c:	20002d28 	.word	0x20002d28

0800a590 <GUI_DEVICE_Link>:
 800a590:	b570      	push	{r4, r5, r6, lr}
 800a592:	b908      	cbnz	r0, 800a598 <GUI_DEVICE_Link+0x8>
 800a594:	2001      	movs	r0, #1
 800a596:	bd70      	pop	{r4, r5, r6, pc}
 800a598:	6982      	ldr	r2, [r0, #24]
 800a59a:	2a01      	cmp	r2, #1
 800a59c:	dcfa      	bgt.n	800a594 <GUI_DEVICE_Link+0x4>
 800a59e:	4b1b      	ldr	r3, [pc, #108]	; (800a60c <GUI_DEVICE_Link+0x7c>)
 800a5a0:	7819      	ldrb	r1, [r3, #0]
 800a5a2:	428a      	cmp	r2, r1
 800a5a4:	bfa4      	itt	ge
 800a5a6:	1c51      	addge	r1, r2, #1
 800a5a8:	7019      	strbge	r1, [r3, #0]
 800a5aa:	4919      	ldr	r1, [pc, #100]	; (800a610 <GUI_DEVICE_Link+0x80>)
 800a5ac:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 800a5b0:	460d      	mov	r5, r1
 800a5b2:	b913      	cbnz	r3, 800a5ba <GUI_DEVICE_Link+0x2a>
 800a5b4:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 800a5b8:	e01a      	b.n	800a5f0 <GUI_DEVICE_Link+0x60>
 800a5ba:	6859      	ldr	r1, [r3, #4]
 800a5bc:	b109      	cbz	r1, 800a5c2 <GUI_DEVICE_Link+0x32>
 800a5be:	460b      	mov	r3, r1
 800a5c0:	e7fb      	b.n	800a5ba <GUI_DEVICE_Link+0x2a>
 800a5c2:	68c1      	ldr	r1, [r0, #12]
 800a5c4:	680e      	ldr	r6, [r1, #0]
 800a5c6:	68d9      	ldr	r1, [r3, #12]
 800a5c8:	680c      	ldr	r4, [r1, #0]
 800a5ca:	42b4      	cmp	r4, r6
 800a5cc:	dd03      	ble.n	800a5d6 <GUI_DEVICE_Link+0x46>
 800a5ce:	681b      	ldr	r3, [r3, #0]
 800a5d0:	2b00      	cmp	r3, #0
 800a5d2:	d1f8      	bne.n	800a5c6 <GUI_DEVICE_Link+0x36>
 800a5d4:	e7de      	b.n	800a594 <GUI_DEVICE_Link+0x4>
 800a5d6:	d102      	bne.n	800a5de <GUI_DEVICE_Link+0x4e>
 800a5d8:	8a81      	ldrh	r1, [r0, #20]
 800a5da:	2901      	cmp	r1, #1
 800a5dc:	d00f      	beq.n	800a5fe <GUI_DEVICE_Link+0x6e>
 800a5de:	6859      	ldr	r1, [r3, #4]
 800a5e0:	b189      	cbz	r1, 800a606 <GUI_DEVICE_Link+0x76>
 800a5e2:	6008      	str	r0, [r1, #0]
 800a5e4:	6041      	str	r1, [r0, #4]
 800a5e6:	6058      	str	r0, [r3, #4]
 800a5e8:	4298      	cmp	r0, r3
 800a5ea:	bf08      	it	eq
 800a5ec:	2300      	moveq	r3, #0
 800a5ee:	6003      	str	r3, [r0, #0]
 800a5f0:	2000      	movs	r0, #0
 800a5f2:	bd70      	pop	{r4, r5, r6, pc}
 800a5f4:	68cb      	ldr	r3, [r1, #12]
 800a5f6:	681b      	ldr	r3, [r3, #0]
 800a5f8:	42a3      	cmp	r3, r4
 800a5fa:	460b      	mov	r3, r1
 800a5fc:	dbef      	blt.n	800a5de <GUI_DEVICE_Link+0x4e>
 800a5fe:	6819      	ldr	r1, [r3, #0]
 800a600:	2900      	cmp	r1, #0
 800a602:	d1f7      	bne.n	800a5f4 <GUI_DEVICE_Link+0x64>
 800a604:	e7eb      	b.n	800a5de <GUI_DEVICE_Link+0x4e>
 800a606:	f845 0022 	str.w	r0, [r5, r2, lsl #2]
 800a60a:	e7ec      	b.n	800a5e6 <GUI_DEVICE_Link+0x56>
 800a60c:	20002cd6 	.word	0x20002cd6
 800a610:	20002d28 	.word	0x20002d28

0800a614 <GUI_DEVICE_CreateAndLink>:
 800a614:	b538      	push	{r3, r4, r5, lr}
 800a616:	461d      	mov	r5, r3
 800a618:	f7ff ff7a 	bl	800a510 <GUI_DEVICE_Create>
 800a61c:	4604      	mov	r4, r0
 800a61e:	b148      	cbz	r0, 800a634 <GUI_DEVICE_CreateAndLink+0x20>
 800a620:	f7ff ffb6 	bl	800a590 <GUI_DEVICE_Link>
 800a624:	68e3      	ldr	r3, [r4, #12]
 800a626:	681b      	ldr	r3, [r3, #0]
 800a628:	b923      	cbnz	r3, 800a634 <GUI_DEVICE_CreateAndLink+0x20>
 800a62a:	4b03      	ldr	r3, [pc, #12]	; (800a638 <GUI_DEVICE_CreateAndLink+0x24>)
 800a62c:	3516      	adds	r5, #22
 800a62e:	681b      	ldr	r3, [r3, #0]
 800a630:	f843 4025 	str.w	r4, [r3, r5, lsl #2]
 800a634:	4620      	mov	r0, r4
 800a636:	bd38      	pop	{r3, r4, r5, pc}
 800a638:	200000b8 	.word	0x200000b8

0800a63c <_OnExit>:
 800a63c:	b570      	push	{r4, r5, r6, lr}
 800a63e:	4b0b      	ldr	r3, [pc, #44]	; (800a66c <_OnExit+0x30>)
 800a640:	4e0b      	ldr	r6, [pc, #44]	; (800a670 <_OnExit+0x34>)
 800a642:	4d0c      	ldr	r5, [pc, #48]	; (800a674 <_OnExit+0x38>)
 800a644:	2400      	movs	r4, #0
 800a646:	601c      	str	r4, [r3, #0]
 800a648:	4621      	mov	r1, r4
 800a64a:	6833      	ldr	r3, [r6, #0]
 800a64c:	2270      	movs	r2, #112	; 0x70
 800a64e:	4628      	mov	r0, r5
 800a650:	4798      	blx	r3
 800a652:	6833      	ldr	r3, [r6, #0]
 800a654:	4808      	ldr	r0, [pc, #32]	; (800a678 <_OnExit+0x3c>)
 800a656:	4621      	mov	r1, r4
 800a658:	2208      	movs	r2, #8
 800a65a:	4798      	blx	r3
 800a65c:	4b07      	ldr	r3, [pc, #28]	; (800a67c <_OnExit+0x40>)
 800a65e:	601d      	str	r5, [r3, #0]
 800a660:	4b07      	ldr	r3, [pc, #28]	; (800a680 <_OnExit+0x44>)
 800a662:	701c      	strb	r4, [r3, #0]
 800a664:	4b07      	ldr	r3, [pc, #28]	; (800a684 <_OnExit+0x48>)
 800a666:	601c      	str	r4, [r3, #0]
 800a668:	bd70      	pop	{r4, r5, r6, pc}
 800a66a:	bf00      	nop
 800a66c:	20002b80 	.word	0x20002b80
 800a670:	200000a4 	.word	0x200000a4
 800a674:	20002b10 	.word	0x20002b10
 800a678:	20002d28 	.word	0x20002d28
 800a67c:	200000b8 	.word	0x200000b8
 800a680:	20002d10 	.word	0x20002d10
 800a684:	20002ce8 	.word	0x20002ce8

0800a688 <_InitContext>:
 800a688:	b538      	push	{r3, r4, r5, lr}
 800a68a:	4d19      	ldr	r5, [pc, #100]	; (800a6f0 <_InitContext+0x68>)
 800a68c:	682b      	ldr	r3, [r5, #0]
 800a68e:	1d1a      	adds	r2, r3, #4
 800a690:	63da      	str	r2, [r3, #60]	; 0x3c
 800a692:	f103 0208 	add.w	r2, r3, #8
 800a696:	639b      	str	r3, [r3, #56]	; 0x38
 800a698:	641b      	str	r3, [r3, #64]	; 0x40
 800a69a:	6142      	str	r2, [r0, #20]
 800a69c:	7c5a      	ldrb	r2, [r3, #17]
 800a69e:	4b15      	ldr	r3, [pc, #84]	; (800a6f4 <_InitContext+0x6c>)
 800a6a0:	4604      	mov	r4, r0
 800a6a2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800a6a6:	68c3      	ldr	r3, [r0, #12]
 800a6a8:	f104 0108 	add.w	r1, r4, #8
 800a6ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a6ae:	4798      	blx	r3
 800a6b0:	4b11      	ldr	r3, [pc, #68]	; (800a6f8 <_InitContext+0x70>)
 800a6b2:	6663      	str	r3, [r4, #100]	; 0x64
 800a6b4:	4b11      	ldr	r3, [pc, #68]	; (800a6fc <_InitContext+0x74>)
 800a6b6:	681b      	ldr	r3, [r3, #0]
 800a6b8:	61e3      	str	r3, [r4, #28]
 800a6ba:	682b      	ldr	r3, [r5, #0]
 800a6bc:	3308      	adds	r3, #8
 800a6be:	6163      	str	r3, [r4, #20]
 800a6c0:	2301      	movs	r3, #1
 800a6c2:	7623      	strb	r3, [r4, #24]
 800a6c4:	f7fa f83e 	bl	8004744 <WM_GetDesktopWindow>
 800a6c8:	2303      	movs	r3, #3
 800a6ca:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 800a6ce:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800a6d2:	6323      	str	r3, [r4, #48]	; 0x30
 800a6d4:	6363      	str	r3, [r4, #52]	; 0x34
 800a6d6:	4b0a      	ldr	r3, [pc, #40]	; (800a700 <_InitContext+0x78>)
 800a6d8:	64a0      	str	r0, [r4, #72]	; 0x48
 800a6da:	6818      	ldr	r0, [r3, #0]
 800a6dc:	f7fe fb40 	bl	8008d60 <LCD_SetBkColor>
 800a6e0:	4b08      	ldr	r3, [pc, #32]	; (800a704 <_InitContext+0x7c>)
 800a6e2:	6818      	ldr	r0, [r3, #0]
 800a6e4:	f7fe fb44 	bl	8008d70 <LCD_SetColor>
 800a6e8:	4b07      	ldr	r3, [pc, #28]	; (800a708 <_InitContext+0x80>)
 800a6ea:	4a08      	ldr	r2, [pc, #32]	; (800a70c <_InitContext+0x84>)
 800a6ec:	601a      	str	r2, [r3, #0]
 800a6ee:	bd38      	pop	{r3, r4, r5, pc}
 800a6f0:	200000b8 	.word	0x200000b8
 800a6f4:	20002d28 	.word	0x20002d28
 800a6f8:	08012014 	.word	0x08012014
 800a6fc:	200000bc 	.word	0x200000bc
 800a700:	20002b0c 	.word	0x20002b0c
 800a704:	200000c0 	.word	0x200000c0
 800a708:	20002d20 	.word	0x20002d20
 800a70c:	08012b80 	.word	0x08012b80

0800a710 <GUI_SetDefaultFont>:
 800a710:	4b01      	ldr	r3, [pc, #4]	; (800a718 <GUI_SetDefaultFont+0x8>)
 800a712:	6018      	str	r0, [r3, #0]
 800a714:	4770      	bx	lr
 800a716:	bf00      	nop
 800a718:	200000bc 	.word	0x200000bc

0800a71c <GUI_ClearRect>:
 800a71c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800a720:	4607      	mov	r7, r0
 800a722:	2004      	movs	r0, #4
 800a724:	469a      	mov	sl, r3
 800a726:	460e      	mov	r6, r1
 800a728:	4691      	mov	r9, r2
 800a72a:	f7fd ffc7 	bl	80086bc <LCD_SetDrawMode>
 800a72e:	4b13      	ldr	r3, [pc, #76]	; (800a77c <GUI_ClearRect+0x60>)
 800a730:	681c      	ldr	r4, [r3, #0]
 800a732:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800a734:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800a736:	442f      	add	r7, r5
 800a738:	4426      	add	r6, r4
 800a73a:	4680      	mov	r8, r0
 800a73c:	444d      	add	r5, r9
 800a73e:	4454      	add	r4, sl
 800a740:	4668      	mov	r0, sp
 800a742:	f8ad 7000 	strh.w	r7, [sp]
 800a746:	f8ad 5004 	strh.w	r5, [sp, #4]
 800a74a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a74e:	f8ad 4006 	strh.w	r4, [sp, #6]
 800a752:	f7fb fb0d 	bl	8005d70 <WM__InitIVRSearch>
 800a756:	b928      	cbnz	r0, 800a764 <GUI_ClearRect+0x48>
 800a758:	4640      	mov	r0, r8
 800a75a:	f7fd ffaf 	bl	80086bc <LCD_SetDrawMode>
 800a75e:	b002      	add	sp, #8
 800a760:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a764:	4638      	mov	r0, r7
 800a766:	4631      	mov	r1, r6
 800a768:	462a      	mov	r2, r5
 800a76a:	4623      	mov	r3, r4
 800a76c:	f7fe f828 	bl	80087c0 <LCD_FillRect>
 800a770:	f7fb fa3c 	bl	8005bec <WM__GetNextIVR>
 800a774:	2800      	cmp	r0, #0
 800a776:	d1f5      	bne.n	800a764 <GUI_ClearRect+0x48>
 800a778:	e7ee      	b.n	800a758 <GUI_ClearRect+0x3c>
 800a77a:	bf00      	nop
 800a77c:	200000b8 	.word	0x200000b8

0800a780 <GUI_Clear>:
 800a780:	b510      	push	{r4, lr}
 800a782:	2000      	movs	r0, #0
 800a784:	4601      	mov	r1, r0
 800a786:	f000 f9c1 	bl	800ab0c <GUI_GotoXY>
 800a78a:	4804      	ldr	r0, [pc, #16]	; (800a79c <GUI_Clear+0x1c>)
 800a78c:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800a790:	4601      	mov	r1, r0
 800a792:	4613      	mov	r3, r2
 800a794:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a798:	f7ff bfc0 	b.w	800a71c <GUI_ClearRect>
 800a79c:	ffffc001 	.word	0xffffc001

0800a7a0 <GUI__RegisterExit>:
 800a7a0:	b480      	push	{r7}
 800a7a2:	b083      	sub	sp, #12
 800a7a4:	af00      	add	r7, sp, #0
 800a7a6:	6078      	str	r0, [r7, #4]
 800a7a8:	4b05      	ldr	r3, [pc, #20]	; (800a7c0 <GUI__RegisterExit+0x20>)
 800a7aa:	681a      	ldr	r2, [r3, #0]
 800a7ac:	687b      	ldr	r3, [r7, #4]
 800a7ae:	605a      	str	r2, [r3, #4]
 800a7b0:	4b03      	ldr	r3, [pc, #12]	; (800a7c0 <GUI__RegisterExit+0x20>)
 800a7b2:	687a      	ldr	r2, [r7, #4]
 800a7b4:	601a      	str	r2, [r3, #0]
 800a7b6:	370c      	adds	r7, #12
 800a7b8:	46bd      	mov	sp, r7
 800a7ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7be:	4770      	bx	lr
 800a7c0:	20002b00 	.word	0x20002b00

0800a7c4 <GUI__Config>:
 800a7c4:	b508      	push	{r3, lr}
 800a7c6:	4b08      	ldr	r3, [pc, #32]	; (800a7e8 <GUI__Config+0x24>)
 800a7c8:	681a      	ldr	r2, [r3, #0]
 800a7ca:	b962      	cbnz	r2, 800a7e6 <GUI__Config+0x22>
 800a7cc:	2201      	movs	r2, #1
 800a7ce:	601a      	str	r2, [r3, #0]
 800a7d0:	f7f5 fe82 	bl	80004d8 <GUI_X_Config>
 800a7d4:	f7f6 f800 	bl	80007d8 <LCD_X_Config>
 800a7d8:	4804      	ldr	r0, [pc, #16]	; (800a7ec <GUI__Config+0x28>)
 800a7da:	4b05      	ldr	r3, [pc, #20]	; (800a7f0 <GUI__Config+0x2c>)
 800a7dc:	6003      	str	r3, [r0, #0]
 800a7de:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a7e2:	f7ff bfdd 	b.w	800a7a0 <GUI__RegisterExit>
 800a7e6:	bd08      	pop	{r3, pc}
 800a7e8:	20002b80 	.word	0x20002b80
 800a7ec:	20002b04 	.word	0x20002b04
 800a7f0:	0800a63d 	.word	0x0800a63d

0800a7f4 <GUI_Init>:
 800a7f4:	b590      	push	{r4, r7, lr}
 800a7f6:	b083      	sub	sp, #12
 800a7f8:	af00      	add	r7, sp, #0
 800a7fa:	4b26      	ldr	r3, [pc, #152]	; (800a894 <GUI_Init+0xa0>)
 800a7fc:	4a25      	ldr	r2, [pc, #148]	; (800a894 <GUI_Init+0xa0>)
 800a7fe:	6812      	ldr	r2, [r2, #0]
 800a800:	f022 0201 	bic.w	r2, r2, #1
 800a804:	601a      	str	r2, [r3, #0]
 800a806:	4b24      	ldr	r3, [pc, #144]	; (800a898 <GUI_Init+0xa4>)
 800a808:	2201      	movs	r2, #1
 800a80a:	601a      	str	r2, [r3, #0]
 800a80c:	bf00      	nop
 800a80e:	4b22      	ldr	r3, [pc, #136]	; (800a898 <GUI_Init+0xa4>)
 800a810:	681b      	ldr	r3, [r3, #0]
 800a812:	2b00      	cmp	r3, #0
 800a814:	d1fb      	bne.n	800a80e <GUI_Init+0x1a>
 800a816:	4b21      	ldr	r3, [pc, #132]	; (800a89c <GUI_Init+0xa8>)
 800a818:	4a21      	ldr	r2, [pc, #132]	; (800a8a0 <GUI_Init+0xac>)
 800a81a:	601a      	str	r2, [r3, #0]
 800a81c:	4b1f      	ldr	r3, [pc, #124]	; (800a89c <GUI_Init+0xa8>)
 800a81e:	681a      	ldr	r2, [r3, #0]
 800a820:	4b20      	ldr	r3, [pc, #128]	; (800a8a4 <GUI_Init+0xb0>)
 800a822:	429a      	cmp	r2, r3
 800a824:	d000      	beq.n	800a828 <GUI_Init+0x34>
 800a826:	e7fe      	b.n	800a826 <GUI_Init+0x32>
 800a828:	f7ff ffcc 	bl	800a7c4 <GUI__Config>
 800a82c:	4b1e      	ldr	r3, [pc, #120]	; (800a8a8 <GUI_Init+0xb4>)
 800a82e:	222e      	movs	r2, #46	; 0x2e
 800a830:	701a      	strb	r2, [r3, #0]
 800a832:	f7f5 fe6d 	bl	8000510 <GUI_X_Init>
 800a836:	481d      	ldr	r0, [pc, #116]	; (800a8ac <GUI_Init+0xb8>)
 800a838:	f7ff ff26 	bl	800a688 <_InitContext>
 800a83c:	f7fe f9e4 	bl	8008c08 <emWin_LCD_Init>
 800a840:	6078      	str	r0, [r7, #4]
 800a842:	f7fd fec5 	bl	80085d0 <LCD_GetXSizeDisplay>
 800a846:	4603      	mov	r3, r0
 800a848:	2b00      	cmp	r3, #0
 800a84a:	d004      	beq.n	800a856 <GUI_Init+0x62>
 800a84c:	f7fd fec6 	bl	80085dc <LCD_GetYSizeDisplay>
 800a850:	4603      	mov	r3, r0
 800a852:	2b00      	cmp	r3, #0
 800a854:	d109      	bne.n	800a86a <GUI_Init+0x76>
 800a856:	f7fd fea7 	bl	80085a8 <LCD_GetXSizeMax>
 800a85a:	4604      	mov	r4, r0
 800a85c:	f7fd fea7 	bl	80085ae <LCD_GetYSizeMax>
 800a860:	4603      	mov	r3, r0
 800a862:	4620      	mov	r0, r4
 800a864:	4619      	mov	r1, r3
 800a866:	f7fd fea9 	bl	80085bc <LCD_SetDisplaySize>
 800a86a:	2000      	movs	r0, #0
 800a86c:	2100      	movs	r1, #0
 800a86e:	f000 f9b1 	bl	800abd4 <GUI_SetOrg>
 800a872:	f7fb fc97 	bl	80061a4 <WM_Init>
 800a876:	4b0e      	ldr	r3, [pc, #56]	; (800a8b0 <GUI_Init+0xbc>)
 800a878:	681b      	ldr	r3, [r3, #0]
 800a87a:	2b00      	cmp	r3, #0
 800a87c:	d002      	beq.n	800a884 <GUI_Init+0x90>
 800a87e:	4b0c      	ldr	r3, [pc, #48]	; (800a8b0 <GUI_Init+0xbc>)
 800a880:	681b      	ldr	r3, [r3, #0]
 800a882:	4798      	blx	r3
 800a884:	4b0b      	ldr	r3, [pc, #44]	; (800a8b4 <GUI_Init+0xc0>)
 800a886:	2201      	movs	r2, #1
 800a888:	701a      	strb	r2, [r3, #0]
 800a88a:	687b      	ldr	r3, [r7, #4]
 800a88c:	4618      	mov	r0, r3
 800a88e:	370c      	adds	r7, #12
 800a890:	46bd      	mov	sp, r7
 800a892:	bd90      	pop	{r4, r7, pc}
 800a894:	e0002000 	.word	0xe0002000
 800a898:	40023008 	.word	0x40023008
 800a89c:	40023000 	.word	0x40023000
 800a8a0:	f407a5c2 	.word	0xf407a5c2
 800a8a4:	b5e8b5cd 	.word	0xb5e8b5cd
 800a8a8:	20002cdc 	.word	0x20002cdc
 800a8ac:	20002b10 	.word	0x20002b10
 800a8b0:	20002d00 	.word	0x20002d00
 800a8b4:	20002d08 	.word	0x20002d08

0800a8b8 <GUI__GetFontSizeY>:
 800a8b8:	4b03      	ldr	r3, [pc, #12]	; (800a8c8 <GUI__GetFontSizeY+0x10>)
 800a8ba:	681b      	ldr	r3, [r3, #0]
 800a8bc:	69db      	ldr	r3, [r3, #28]
 800a8be:	7e18      	ldrb	r0, [r3, #24]
 800a8c0:	7edb      	ldrb	r3, [r3, #27]
 800a8c2:	4358      	muls	r0, r3
 800a8c4:	4770      	bx	lr
 800a8c6:	bf00      	nop
 800a8c8:	200000b8 	.word	0x200000b8

0800a8cc <GUI_Long2Len>:
 800a8cc:	b510      	push	{r4, lr}
 800a8ce:	ea80 71e0 	eor.w	r1, r0, r0, asr #31
 800a8d2:	eba1 71e0 	sub.w	r1, r1, r0, asr #31
 800a8d6:	2200      	movs	r2, #0
 800a8d8:	1c53      	adds	r3, r2, #1
 800a8da:	2b0a      	cmp	r3, #10
 800a8dc:	d006      	beq.n	800a8ec <GUI_Long2Len+0x20>
 800a8de:	4c06      	ldr	r4, [pc, #24]	; (800a8f8 <GUI_Long2Len+0x2c>)
 800a8e0:	f854 4023 	ldr.w	r4, [r4, r3, lsl #2]
 800a8e4:	42a1      	cmp	r1, r4
 800a8e6:	d301      	bcc.n	800a8ec <GUI_Long2Len+0x20>
 800a8e8:	461a      	mov	r2, r3
 800a8ea:	e7f5      	b.n	800a8d8 <GUI_Long2Len+0xc>
 800a8ec:	2800      	cmp	r0, #0
 800a8ee:	bfb8      	it	lt
 800a8f0:	1c93      	addlt	r3, r2, #2
 800a8f2:	4618      	mov	r0, r3
 800a8f4:	bd10      	pop	{r4, pc}
 800a8f6:	bf00      	nop
 800a8f8:	0801201c 	.word	0x0801201c

0800a8fc <GUI_AddDecShift>:
 800a8fc:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
 800a900:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a902:	681c      	ldr	r4, [r3, #0]
 800a904:	d109      	bne.n	800a91a <GUI_AddDecShift+0x1e>
 800a906:	1c60      	adds	r0, r4, #1
 800a908:	6018      	str	r0, [r3, #0]
 800a90a:	3901      	subs	r1, #1
 800a90c:	202d      	movs	r0, #45	; 0x2d
 800a90e:	7020      	strb	r0, [r4, #0]
 800a910:	b2c9      	uxtb	r1, r1
 800a912:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a916:	2601      	movs	r6, #1
 800a918:	e00c      	b.n	800a934 <GUI_AddDecShift+0x38>
 800a91a:	2800      	cmp	r0, #0
 800a91c:	da06      	bge.n	800a92c <GUI_AddDecShift+0x30>
 800a91e:	1c65      	adds	r5, r4, #1
 800a920:	601d      	str	r5, [r3, #0]
 800a922:	252d      	movs	r5, #45	; 0x2d
 800a924:	7025      	strb	r5, [r4, #0]
 800a926:	4240      	negs	r0, r0
 800a928:	2401      	movs	r4, #1
 800a92a:	e000      	b.n	800a92e <GUI_AddDecShift+0x32>
 800a92c:	2400      	movs	r4, #0
 800a92e:	1b09      	subs	r1, r1, r4
 800a930:	b2c9      	uxtb	r1, r1
 800a932:	2600      	movs	r6, #0
 800a934:	b30a      	cbz	r2, 800a97a <GUI_AddDecShift+0x7e>
 800a936:	3901      	subs	r1, #1
 800a938:	b2c9      	uxtb	r1, r1
 800a93a:	e01e      	b.n	800a97a <GUI_AddDecShift+0x7e>
 800a93c:	1e4d      	subs	r5, r1, #1
 800a93e:	4291      	cmp	r1, r2
 800a940:	b2ed      	uxtb	r5, r5
 800a942:	d105      	bne.n	800a950 <GUI_AddDecShift+0x54>
 800a944:	681c      	ldr	r4, [r3, #0]
 800a946:	1c67      	adds	r7, r4, #1
 800a948:	601f      	str	r7, [r3, #0]
 800a94a:	4f11      	ldr	r7, [pc, #68]	; (800a990 <GUI_AddDecShift+0x94>)
 800a94c:	783f      	ldrb	r7, [r7, #0]
 800a94e:	7027      	strb	r7, [r4, #0]
 800a950:	4c10      	ldr	r4, [pc, #64]	; (800a994 <GUI_AddDecShift+0x98>)
 800a952:	f854 7025 	ldr.w	r7, [r4, r5, lsl #2]
 800a956:	fb90 f4f7 	sdiv	r4, r0, r7
 800a95a:	b2e4      	uxtb	r4, r4
 800a95c:	2c0a      	cmp	r4, #10
 800a95e:	d80e      	bhi.n	800a97e <GUI_AddDecShift+0x82>
 800a960:	fb07 0014 	mls	r0, r7, r4, r0
 800a964:	b17d      	cbz	r5, 800a986 <GUI_AddDecShift+0x8a>
 800a966:	2c0a      	cmp	r4, #10
 800a968:	bf18      	it	ne
 800a96a:	4629      	movne	r1, r5
 800a96c:	681d      	ldr	r5, [r3, #0]
 800a96e:	bf08      	it	eq
 800a970:	2401      	moveq	r4, #1
 800a972:	1c6f      	adds	r7, r5, #1
 800a974:	3430      	adds	r4, #48	; 0x30
 800a976:	601f      	str	r7, [r3, #0]
 800a978:	702c      	strb	r4, [r5, #0]
 800a97a:	2900      	cmp	r1, #0
 800a97c:	d1de      	bne.n	800a93c <GUI_AddDecShift+0x40>
 800a97e:	681b      	ldr	r3, [r3, #0]
 800a980:	2200      	movs	r2, #0
 800a982:	701a      	strb	r2, [r3, #0]
 800a984:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a986:	2e00      	cmp	r6, #0
 800a988:	d0ed      	beq.n	800a966 <GUI_AddDecShift+0x6a>
 800a98a:	3401      	adds	r4, #1
 800a98c:	b2e4      	uxtb	r4, r4
 800a98e:	e7ea      	b.n	800a966 <GUI_AddDecShift+0x6a>
 800a990:	20002cdc 	.word	0x20002cdc
 800a994:	0801201c 	.word	0x0801201c

0800a998 <GUI_CalcColorDist>:
 800a998:	b2cb      	uxtb	r3, r1
 800a99a:	b2c2      	uxtb	r2, r0
 800a99c:	1ad2      	subs	r2, r2, r3
 800a99e:	b292      	uxth	r2, r2
 800a9a0:	b293      	uxth	r3, r2
 800a9a2:	b530      	push	{r4, r5, lr}
 800a9a4:	041c      	lsls	r4, r3, #16
 800a9a6:	bf48      	it	mi
 800a9a8:	4253      	negmi	r3, r2
 800a9aa:	f3c1 2507 	ubfx	r5, r1, #8, #8
 800a9ae:	f3c0 2207 	ubfx	r2, r0, #8, #8
 800a9b2:	ebc5 0202 	rsb	r2, r5, r2
 800a9b6:	bf48      	it	mi
 800a9b8:	b29b      	uxthmi	r3, r3
 800a9ba:	b292      	uxth	r2, r2
 800a9bc:	0c09      	lsrs	r1, r1, #16
 800a9be:	fb13 f403 	smulbb	r4, r3, r3
 800a9c2:	ebc1 4110 	rsb	r1, r1, r0, lsr #16
 800a9c6:	b293      	uxth	r3, r2
 800a9c8:	041d      	lsls	r5, r3, #16
 800a9ca:	b289      	uxth	r1, r1
 800a9cc:	b288      	uxth	r0, r1
 800a9ce:	bf44      	itt	mi
 800a9d0:	4253      	negmi	r3, r2
 800a9d2:	b29b      	uxthmi	r3, r3
 800a9d4:	0402      	lsls	r2, r0, #16
 800a9d6:	bf48      	it	mi
 800a9d8:	4248      	negmi	r0, r1
 800a9da:	fb13 4303 	smlabb	r3, r3, r3, r4
 800a9de:	bf48      	it	mi
 800a9e0:	b280      	uxthmi	r0, r0
 800a9e2:	fb00 3000 	mla	r0, r0, r0, r3
 800a9e6:	bd30      	pop	{r4, r5, pc}

0800a9e8 <GUI_GetClientRect>:
 800a9e8:	b108      	cbz	r0, 800a9ee <GUI_GetClientRect+0x6>
 800a9ea:	f7f9 be8f 	b.w	800470c <WM_GetClientRect>
 800a9ee:	4770      	bx	lr

0800a9f0 <GUI_GetBkColor>:
 800a9f0:	b508      	push	{r3, lr}
 800a9f2:	f003 fe69 	bl	800e6c8 <LCD_GetBkColorIndex>
 800a9f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a9fa:	f7fe b969 	b.w	8008cd0 <LCD_Index2Color>

0800a9fe <GUI_GetColor>:
 800a9fe:	b508      	push	{r3, lr}
 800aa00:	f003 fe6a 	bl	800e6d8 <LCD_GetColorIndex>
 800aa04:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800aa08:	f7fe b962 	b.w	8008cd0 <LCD_Index2Color>

0800aa0c <GUI_GetFontSizeY>:
 800aa0c:	f7ff bf54 	b.w	800a8b8 <GUI__GetFontSizeY>

0800aa10 <GUI_GetLineStyle>:
 800aa10:	4b01      	ldr	r3, [pc, #4]	; (800aa18 <GUI_GetLineStyle+0x8>)
 800aa12:	681b      	ldr	r3, [r3, #0]
 800aa14:	7e98      	ldrb	r0, [r3, #26]
 800aa16:	4770      	bx	lr
 800aa18:	200000b8 	.word	0x200000b8

0800aa1c <GUI_GetOrg>:
 800aa1c:	4b04      	ldr	r3, [pc, #16]	; (800aa30 <GUI_GetOrg+0x14>)
 800aa1e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800aa22:	6003      	str	r3, [r0, #0]
 800aa24:	4b03      	ldr	r3, [pc, #12]	; (800aa34 <GUI_GetOrg+0x18>)
 800aa26:	f9b3 3000 	ldrsh.w	r3, [r3]
 800aa2a:	600b      	str	r3, [r1, #0]
 800aa2c:	4770      	bx	lr
 800aa2e:	bf00      	nop
 800aa30:	20002cfc 	.word	0x20002cfc
 800aa34:	20002cec 	.word	0x20002cec

0800aa38 <GUI_GetYSizeOfFont>:
 800aa38:	7e02      	ldrb	r2, [r0, #24]
 800aa3a:	7ec0      	ldrb	r0, [r0, #27]
 800aa3c:	4350      	muls	r0, r2
 800aa3e:	4770      	bx	lr

0800aa40 <GUI_MergeRect>:
 800aa40:	b510      	push	{r4, lr}
 800aa42:	b338      	cbz	r0, 800aa94 <GUI_MergeRect+0x54>
 800aa44:	b309      	cbz	r1, 800aa8a <GUI_MergeRect+0x4a>
 800aa46:	b30a      	cbz	r2, 800aa8c <GUI_MergeRect+0x4c>
 800aa48:	f9b1 4000 	ldrsh.w	r4, [r1]
 800aa4c:	f9b2 3000 	ldrsh.w	r3, [r2]
 800aa50:	429c      	cmp	r4, r3
 800aa52:	bfb8      	it	lt
 800aa54:	4623      	movlt	r3, r4
 800aa56:	8003      	strh	r3, [r0, #0]
 800aa58:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800aa5c:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800aa60:	429c      	cmp	r4, r3
 800aa62:	bfb8      	it	lt
 800aa64:	4623      	movlt	r3, r4
 800aa66:	8043      	strh	r3, [r0, #2]
 800aa68:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 800aa6c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800aa70:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 800aa74:	429c      	cmp	r4, r3
 800aa76:	bfa8      	it	ge
 800aa78:	4623      	movge	r3, r4
 800aa7a:	8083      	strh	r3, [r0, #4]
 800aa7c:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 800aa80:	4299      	cmp	r1, r3
 800aa82:	bfa8      	it	ge
 800aa84:	460b      	movge	r3, r1
 800aa86:	80c3      	strh	r3, [r0, #6]
 800aa88:	bd10      	pop	{r4, pc}
 800aa8a:	4611      	mov	r1, r2
 800aa8c:	680b      	ldr	r3, [r1, #0]
 800aa8e:	6003      	str	r3, [r0, #0]
 800aa90:	684b      	ldr	r3, [r1, #4]
 800aa92:	6043      	str	r3, [r0, #4]
 800aa94:	bd10      	pop	{r4, pc}

0800aa96 <GUI_MoveRect>:
 800aa96:	b168      	cbz	r0, 800aab4 <GUI_MoveRect+0x1e>
 800aa98:	8803      	ldrh	r3, [r0, #0]
 800aa9a:	b289      	uxth	r1, r1
 800aa9c:	440b      	add	r3, r1
 800aa9e:	8003      	strh	r3, [r0, #0]
 800aaa0:	8883      	ldrh	r3, [r0, #4]
 800aaa2:	4419      	add	r1, r3
 800aaa4:	8843      	ldrh	r3, [r0, #2]
 800aaa6:	8081      	strh	r1, [r0, #4]
 800aaa8:	b292      	uxth	r2, r2
 800aaaa:	4413      	add	r3, r2
 800aaac:	8043      	strh	r3, [r0, #2]
 800aaae:	88c3      	ldrh	r3, [r0, #6]
 800aab0:	441a      	add	r2, r3
 800aab2:	80c2      	strh	r2, [r0, #6]
 800aab4:	4770      	bx	lr
	...

0800aab8 <GUI_Exec1>:
 800aab8:	4b0c      	ldr	r3, [pc, #48]	; (800aaec <GUI_Exec1+0x34>)
 800aaba:	b510      	push	{r4, lr}
 800aabc:	681c      	ldr	r4, [r3, #0]
 800aabe:	b11c      	cbz	r4, 800aac8 <GUI_Exec1+0x10>
 800aac0:	47a0      	blx	r4
 800aac2:	1c04      	adds	r4, r0, #0
 800aac4:	bf18      	it	ne
 800aac6:	2401      	movne	r4, #1
 800aac8:	f7fb fac6 	bl	8006058 <WM_Exec>
 800aacc:	4b08      	ldr	r3, [pc, #32]	; (800aaf0 <GUI_Exec1+0x38>)
 800aace:	681b      	ldr	r3, [r3, #0]
 800aad0:	2800      	cmp	r0, #0
 800aad2:	bf18      	it	ne
 800aad4:	2401      	movne	r4, #1
 800aad6:	b11b      	cbz	r3, 800aae0 <GUI_Exec1+0x28>
 800aad8:	4798      	blx	r3
 800aada:	2800      	cmp	r0, #0
 800aadc:	bf18      	it	ne
 800aade:	2401      	movne	r4, #1
 800aae0:	4b04      	ldr	r3, [pc, #16]	; (800aaf4 <GUI_Exec1+0x3c>)
 800aae2:	681b      	ldr	r3, [r3, #0]
 800aae4:	b103      	cbz	r3, 800aae8 <GUI_Exec1+0x30>
 800aae6:	4798      	blx	r3
 800aae8:	4620      	mov	r0, r4
 800aaea:	bd10      	pop	{r4, pc}
 800aaec:	20002cf8 	.word	0x20002cf8
 800aaf0:	20002d24 	.word	0x20002d24
 800aaf4:	20002d1c 	.word	0x20002d1c

0800aaf8 <GUI_Exec>:
 800aaf8:	b510      	push	{r4, lr}
 800aafa:	2400      	movs	r4, #0
 800aafc:	f7ff ffdc 	bl	800aab8 <GUI_Exec1>
 800ab00:	b108      	cbz	r0, 800ab06 <GUI_Exec+0xe>
 800ab02:	2401      	movs	r4, #1
 800ab04:	e7fa      	b.n	800aafc <GUI_Exec+0x4>
 800ab06:	4620      	mov	r0, r4
 800ab08:	bd10      	pop	{r4, pc}
	...

0800ab0c <GUI_GotoXY>:
 800ab0c:	4b02      	ldr	r3, [pc, #8]	; (800ab18 <GUI_GotoXY+0xc>)
 800ab0e:	681b      	ldr	r3, [r3, #0]
 800ab10:	8458      	strh	r0, [r3, #34]	; 0x22
 800ab12:	8499      	strh	r1, [r3, #36]	; 0x24
 800ab14:	2000      	movs	r0, #0
 800ab16:	4770      	bx	lr
 800ab18:	200000b8 	.word	0x200000b8

0800ab1c <GUI_SetPenSize>:
 800ab1c:	4b02      	ldr	r3, [pc, #8]	; (800ab28 <GUI_SetPenSize+0xc>)
 800ab1e:	681b      	ldr	r3, [r3, #0]
 800ab20:	7e1a      	ldrb	r2, [r3, #24]
 800ab22:	7618      	strb	r0, [r3, #24]
 800ab24:	4610      	mov	r0, r2
 800ab26:	4770      	bx	lr
 800ab28:	200000b8 	.word	0x200000b8

0800ab2c <GUI_RectsIntersect>:
 800ab2c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ab30:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800ab34:	429a      	cmp	r2, r3
 800ab36:	dc14      	bgt.n	800ab62 <GUI_RectsIntersect+0x36>
 800ab38:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800ab3c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800ab40:	429a      	cmp	r2, r3
 800ab42:	dc0e      	bgt.n	800ab62 <GUI_RectsIntersect+0x36>
 800ab44:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ab48:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800ab4c:	429a      	cmp	r2, r3
 800ab4e:	dc08      	bgt.n	800ab62 <GUI_RectsIntersect+0x36>
 800ab50:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ab54:	f9b1 2000 	ldrsh.w	r2, [r1]
 800ab58:	429a      	cmp	r2, r3
 800ab5a:	bfcc      	ite	gt
 800ab5c:	2000      	movgt	r0, #0
 800ab5e:	2001      	movle	r0, #1
 800ab60:	4770      	bx	lr
 800ab62:	2000      	movs	r0, #0
 800ab64:	4770      	bx	lr
	...

0800ab68 <GUI_SaveContext_W>:
 800ab68:	b508      	push	{r3, lr}
 800ab6a:	4b03      	ldr	r3, [pc, #12]	; (800ab78 <GUI_SaveContext_W+0x10>)
 800ab6c:	2270      	movs	r2, #112	; 0x70
 800ab6e:	6819      	ldr	r1, [r3, #0]
 800ab70:	f005 f890 	bl	800fc94 <memcpy>
 800ab74:	bd08      	pop	{r3, pc}
 800ab76:	bf00      	nop
 800ab78:	200000b8 	.word	0x200000b8

0800ab7c <GUI_RestoreContext>:
 800ab7c:	b508      	push	{r3, lr}
 800ab7e:	4b03      	ldr	r3, [pc, #12]	; (800ab8c <GUI_RestoreContext+0x10>)
 800ab80:	4601      	mov	r1, r0
 800ab82:	2270      	movs	r2, #112	; 0x70
 800ab84:	6818      	ldr	r0, [r3, #0]
 800ab86:	f005 f885 	bl	800fc94 <memcpy>
 800ab8a:	bd08      	pop	{r3, pc}
 800ab8c:	200000b8 	.word	0x200000b8

0800ab90 <GUI_SelectLCD>:
 800ab90:	b508      	push	{r3, lr}
 800ab92:	f003 fc55 	bl	800e440 <LCD_SelectLCD>
 800ab96:	f7fd fc1d 	bl	80083d4 <LCD_UpdateColorIndices>
 800ab9a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ab9e:	f7fb ba97 	b.w	80060d0 <WM_Activate>

0800aba2 <GUI_SetBkColor>:
 800aba2:	f7fe b8dd 	b.w	8008d60 <LCD_SetBkColor>

0800aba6 <GUI_SetColor>:
 800aba6:	f7fe b8e3 	b.w	8008d70 <LCD_SetColor>

0800abaa <GUI_SetDrawMode>:
 800abaa:	f7fd bd87 	b.w	80086bc <LCD_SetDrawMode>
	...

0800abb0 <GUI_SetFont>:
 800abb0:	4b03      	ldr	r3, [pc, #12]	; (800abc0 <GUI_SetFont+0x10>)
 800abb2:	681b      	ldr	r3, [r3, #0]
 800abb4:	69d9      	ldr	r1, [r3, #28]
 800abb6:	b100      	cbz	r0, 800abba <GUI_SetFont+0xa>
 800abb8:	61d8      	str	r0, [r3, #28]
 800abba:	4608      	mov	r0, r1
 800abbc:	4770      	bx	lr
 800abbe:	bf00      	nop
 800abc0:	200000b8 	.word	0x200000b8

0800abc4 <GUI_SetLineStyle>:
 800abc4:	4b02      	ldr	r3, [pc, #8]	; (800abd0 <GUI_SetLineStyle+0xc>)
 800abc6:	681b      	ldr	r3, [r3, #0]
 800abc8:	7e9a      	ldrb	r2, [r3, #26]
 800abca:	7698      	strb	r0, [r3, #26]
 800abcc:	4610      	mov	r0, r2
 800abce:	4770      	bx	lr
 800abd0:	200000b8 	.word	0x200000b8

0800abd4 <GUI_SetOrg>:
 800abd4:	460a      	mov	r2, r1
 800abd6:	4908      	ldr	r1, [pc, #32]	; (800abf8 <GUI_SetOrg+0x24>)
 800abd8:	b510      	push	{r4, lr}
 800abda:	8008      	strh	r0, [r1, #0]
 800abdc:	4907      	ldr	r1, [pc, #28]	; (800abfc <GUI_SetOrg+0x28>)
 800abde:	800a      	strh	r2, [r1, #0]
 800abe0:	4907      	ldr	r1, [pc, #28]	; (800ac00 <GUI_SetOrg+0x2c>)
 800abe2:	6809      	ldr	r1, [r1, #0]
 800abe4:	4603      	mov	r3, r0
 800abe6:	7c48      	ldrb	r0, [r1, #17]
 800abe8:	4906      	ldr	r1, [pc, #24]	; (800ac04 <GUI_SetOrg+0x30>)
 800abea:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800abee:	68c1      	ldr	r1, [r0, #12]
 800abf0:	6a0c      	ldr	r4, [r1, #32]
 800abf2:	4619      	mov	r1, r3
 800abf4:	47a0      	blx	r4
 800abf6:	bd10      	pop	{r4, pc}
 800abf8:	20002cfc 	.word	0x20002cfc
 800abfc:	20002cec 	.word	0x20002cec
 800ac00:	200000b8 	.word	0x200000b8
 800ac04:	20002d28 	.word	0x20002d28

0800ac08 <GUI_SetTextAlign>:
 800ac08:	4b03      	ldr	r3, [pc, #12]	; (800ac18 <GUI_SetTextAlign+0x10>)
 800ac0a:	681b      	ldr	r3, [r3, #0]
 800ac0c:	f9b3 202c 	ldrsh.w	r2, [r3, #44]	; 0x2c
 800ac10:	8598      	strh	r0, [r3, #44]	; 0x2c
 800ac12:	4610      	mov	r0, r2
 800ac14:	4770      	bx	lr
 800ac16:	bf00      	nop
 800ac18:	200000b8 	.word	0x200000b8

0800ac1c <GUI_SetTextMode>:
 800ac1c:	4b03      	ldr	r3, [pc, #12]	; (800ac2c <GUI_SetTextMode+0x10>)
 800ac1e:	681b      	ldr	r3, [r3, #0]
 800ac20:	f9b3 202a 	ldrsh.w	r2, [r3, #42]	; 0x2a
 800ac24:	8558      	strh	r0, [r3, #42]	; 0x2a
 800ac26:	4610      	mov	r0, r2
 800ac28:	4770      	bx	lr
 800ac2a:	bf00      	nop
 800ac2c:	200000b8 	.word	0x200000b8

0800ac30 <GL_SetDefault>:
 800ac30:	b508      	push	{r3, lr}
 800ac32:	4b0e      	ldr	r3, [pc, #56]	; (800ac6c <GL_SetDefault+0x3c>)
 800ac34:	6818      	ldr	r0, [r3, #0]
 800ac36:	f7fe f893 	bl	8008d60 <LCD_SetBkColor>
 800ac3a:	4b0d      	ldr	r3, [pc, #52]	; (800ac70 <GL_SetDefault+0x40>)
 800ac3c:	6818      	ldr	r0, [r3, #0]
 800ac3e:	f7fe f897 	bl	8008d70 <LCD_SetColor>
 800ac42:	2001      	movs	r0, #1
 800ac44:	f7ff ff6a 	bl	800ab1c <GUI_SetPenSize>
 800ac48:	2000      	movs	r0, #0
 800ac4a:	f7ff ffdd 	bl	800ac08 <GUI_SetTextAlign>
 800ac4e:	2000      	movs	r0, #0
 800ac50:	f7ff ffe4 	bl	800ac1c <GUI_SetTextMode>
 800ac54:	2000      	movs	r0, #0
 800ac56:	f7ff ffa8 	bl	800abaa <GUI_SetDrawMode>
 800ac5a:	4b06      	ldr	r3, [pc, #24]	; (800ac74 <GL_SetDefault+0x44>)
 800ac5c:	6818      	ldr	r0, [r3, #0]
 800ac5e:	f7ff ffa7 	bl	800abb0 <GUI_SetFont>
 800ac62:	2000      	movs	r0, #0
 800ac64:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ac68:	f7ff bfac 	b.w	800abc4 <GUI_SetLineStyle>
 800ac6c:	20002b0c 	.word	0x20002b0c
 800ac70:	200000c0 	.word	0x200000c0
 800ac74:	200000bc 	.word	0x200000bc

0800ac78 <GL_FillCircle>:
 800ac78:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ac7c:	f240 29c3 	movw	r9, #707	; 0x2c3
 800ac80:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 800ad38 <GL_FillCircle+0xc0>
 800ac84:	fb09 f902 	mul.w	r9, r9, r2
 800ac88:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800ac8c:	fb99 f9f3 	sdiv	r9, r9, r3
 800ac90:	f8d8 3000 	ldr.w	r3, [r8]
 800ac94:	f04f 0b02 	mov.w	fp, #2
 800ac98:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ac9a:	4606      	mov	r6, r0
 800ac9c:	fb92 fbfb 	sdiv	fp, r2, fp
 800aca0:	1a80      	subs	r0, r0, r2
 800aca2:	4614      	mov	r4, r2
 800aca4:	fb02 bb02 	mla	fp, r2, r2, fp
 800aca8:	681b      	ldr	r3, [r3, #0]
 800acaa:	18b2      	adds	r2, r6, r2
 800acac:	460f      	mov	r7, r1
 800acae:	4798      	blx	r3
 800acb0:	f109 0901 	add.w	r9, r9, #1
 800acb4:	2501      	movs	r5, #1
 800acb6:	454d      	cmp	r5, r9
 800acb8:	dc3a      	bgt.n	800ad30 <GL_FillCircle+0xb8>
 800acba:	fb04 f304 	mul.w	r3, r4, r4
 800acbe:	fb05 3305 	mla	r3, r5, r5, r3
 800acc2:	455b      	cmp	r3, fp
 800acc4:	dd1b      	ble.n	800acfe <GL_FillCircle+0x86>
 800acc6:	454c      	cmp	r4, r9
 800acc8:	dd18      	ble.n	800acfc <GL_FillCircle+0x84>
 800acca:	f8d8 2000 	ldr.w	r2, [r8]
 800acce:	1c73      	adds	r3, r6, #1
 800acd0:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800acd2:	f106 3aff 	add.w	sl, r6, #4294967295
 800acd6:	1b5b      	subs	r3, r3, r5
 800acd8:	44aa      	add	sl, r5
 800acda:	f8d2 c000 	ldr.w	ip, [r2]
 800acde:	9301      	str	r3, [sp, #4]
 800ace0:	4618      	mov	r0, r3
 800ace2:	1939      	adds	r1, r7, r4
 800ace4:	4652      	mov	r2, sl
 800ace6:	47e0      	blx	ip
 800ace8:	f8d8 2000 	ldr.w	r2, [r8]
 800acec:	9b01      	ldr	r3, [sp, #4]
 800acee:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800acf0:	4618      	mov	r0, r3
 800acf2:	f8d2 c000 	ldr.w	ip, [r2]
 800acf6:	1b39      	subs	r1, r7, r4
 800acf8:	4652      	mov	r2, sl
 800acfa:	47e0      	blx	ip
 800acfc:	3c01      	subs	r4, #1
 800acfe:	f8d8 2000 	ldr.w	r2, [r8]
 800ad02:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800ad04:	1b33      	subs	r3, r6, r4
 800ad06:	eb06 0a04 	add.w	sl, r6, r4
 800ad0a:	f8d2 c000 	ldr.w	ip, [r2]
 800ad0e:	9301      	str	r3, [sp, #4]
 800ad10:	4618      	mov	r0, r3
 800ad12:	19e9      	adds	r1, r5, r7
 800ad14:	4652      	mov	r2, sl
 800ad16:	47e0      	blx	ip
 800ad18:	f8d8 2000 	ldr.w	r2, [r8]
 800ad1c:	9b01      	ldr	r3, [sp, #4]
 800ad1e:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800ad20:	1b79      	subs	r1, r7, r5
 800ad22:	f8d2 c000 	ldr.w	ip, [r2]
 800ad26:	4618      	mov	r0, r3
 800ad28:	4652      	mov	r2, sl
 800ad2a:	47e0      	blx	ip
 800ad2c:	3501      	adds	r5, #1
 800ad2e:	e7c2      	b.n	800acb6 <GL_FillCircle+0x3e>
 800ad30:	b003      	add	sp, #12
 800ad32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad36:	bf00      	nop
 800ad38:	200000b8 	.word	0x200000b8

0800ad3c <GUIPROP__FindChar>:
 800ad3c:	b138      	cbz	r0, 800ad4e <GUIPROP__FindChar+0x12>
 800ad3e:	8803      	ldrh	r3, [r0, #0]
 800ad40:	428b      	cmp	r3, r1
 800ad42:	d802      	bhi.n	800ad4a <GUIPROP__FindChar+0xe>
 800ad44:	8843      	ldrh	r3, [r0, #2]
 800ad46:	428b      	cmp	r3, r1
 800ad48:	d201      	bcs.n	800ad4e <GUIPROP__FindChar+0x12>
 800ad4a:	6880      	ldr	r0, [r0, #8]
 800ad4c:	e7f6      	b.n	800ad3c <GUIPROP__FindChar>
 800ad4e:	4770      	bx	lr

0800ad50 <GUIPROP_DispChar>:
 800ad50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad54:	4c38      	ldr	r4, [pc, #224]	; (800ae38 <GUIPROP_DispChar+0xe8>)
 800ad56:	6823      	ldr	r3, [r4, #0]
 800ad58:	f9b3 902a 	ldrsh.w	r9, [r3, #42]	; 0x2a
 800ad5c:	69db      	ldr	r3, [r3, #28]
 800ad5e:	4605      	mov	r5, r0
 800ad60:	b089      	sub	sp, #36	; 0x24
 800ad62:	69d8      	ldr	r0, [r3, #28]
 800ad64:	4629      	mov	r1, r5
 800ad66:	f7ff ffe9 	bl	800ad3c <GUIPROP__FindChar>
 800ad6a:	2800      	cmp	r0, #0
 800ad6c:	d061      	beq.n	800ae32 <GUIPROP_DispChar+0xe2>
 800ad6e:	f8b0 8000 	ldrh.w	r8, [r0]
 800ad72:	6847      	ldr	r7, [r0, #4]
 800ad74:	ebc8 0805 	rsb	r8, r8, r5
 800ad78:	eb07 06c8 	add.w	r6, r7, r8, lsl #3
 800ad7c:	4648      	mov	r0, r9
 800ad7e:	f896 b002 	ldrb.w	fp, [r6, #2]
 800ad82:	f7fd fc9b 	bl	80086bc <LCD_SetDrawMode>
 800ad86:	6825      	ldr	r5, [r4, #0]
 800ad88:	f817 2038 	ldrb.w	r2, [r7, r8, lsl #3]
 800ad8c:	f8d5 e01c 	ldr.w	lr, [r5, #28]
 800ad90:	f9b5 1024 	ldrsh.w	r1, [r5, #36]	; 0x24
 800ad94:	f89e c01a 	ldrb.w	ip, [lr, #26]
 800ad98:	f89e 3018 	ldrb.w	r3, [lr, #24]
 800ad9c:	9306      	str	r3, [sp, #24]
 800ad9e:	4682      	mov	sl, r0
 800ada0:	f9b5 0022 	ldrsh.w	r0, [r5, #34]	; 0x22
 800ada4:	f8cd c000 	str.w	ip, [sp]
 800ada8:	f89e e01b 	ldrb.w	lr, [lr, #27]
 800adac:	f8cd e004 	str.w	lr, [sp, #4]
 800adb0:	f04f 0e01 	mov.w	lr, #1
 800adb4:	f8cd b00c 	str.w	fp, [sp, #12]
 800adb8:	f8cd e008 	str.w	lr, [sp, #8]
 800adbc:	6873      	ldr	r3, [r6, #4]
 800adbe:	9304      	str	r3, [sp, #16]
 800adc0:	6bad      	ldr	r5, [r5, #56]	; 0x38
 800adc2:	9b06      	ldr	r3, [sp, #24]
 800adc4:	9505      	str	r5, [sp, #20]
 800adc6:	f7fd fe03 	bl	80089d0 <LCD_DrawBitmap>
 800adca:	6823      	ldr	r3, [r4, #0]
 800adcc:	69da      	ldr	r2, [r3, #28]
 800adce:	f892 b019 	ldrb.w	fp, [r2, #25]
 800add2:	7e11      	ldrb	r1, [r2, #24]
 800add4:	458b      	cmp	fp, r1
 800add6:	d920      	bls.n	800ae1a <GUIPROP_DispChar+0xca>
 800add8:	f1b9 0f02 	cmp.w	r9, #2
 800addc:	7ed5      	ldrb	r5, [r2, #27]
 800adde:	d01c      	beq.n	800ae1a <GUIPROP_DispChar+0xca>
 800ade0:	9107      	str	r1, [sp, #28]
 800ade2:	f7ff fe0c 	bl	800a9fe <GUI_GetColor>
 800ade6:	4681      	mov	r9, r0
 800ade8:	f7ff fe02 	bl	800a9f0 <GUI_GetBkColor>
 800adec:	f7ff fedb 	bl	800aba6 <GUI_SetColor>
 800adf0:	6824      	ldr	r4, [r4, #0]
 800adf2:	f817 7038 	ldrb.w	r7, [r7, r8, lsl #3]
 800adf6:	69e2      	ldr	r2, [r4, #28]
 800adf8:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
 800adfc:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800ae00:	7ed2      	ldrb	r2, [r2, #27]
 800ae02:	9907      	ldr	r1, [sp, #28]
 800ae04:	fb07 0202 	mla	r2, r7, r2, r0
 800ae08:	fb01 3105 	mla	r1, r1, r5, r3
 800ae0c:	fb0b 3305 	mla	r3, fp, r5, r3
 800ae10:	f7fd fcd6 	bl	80087c0 <LCD_FillRect>
 800ae14:	4648      	mov	r0, r9
 800ae16:	f7ff fec6 	bl	800aba6 <GUI_SetColor>
 800ae1a:	4650      	mov	r0, sl
 800ae1c:	f7fd fc4e 	bl	80086bc <LCD_SetDrawMode>
 800ae20:	4b05      	ldr	r3, [pc, #20]	; (800ae38 <GUIPROP_DispChar+0xe8>)
 800ae22:	681b      	ldr	r3, [r3, #0]
 800ae24:	69da      	ldr	r2, [r3, #28]
 800ae26:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800ae28:	7e90      	ldrb	r0, [r2, #26]
 800ae2a:	7872      	ldrb	r2, [r6, #1]
 800ae2c:	fb00 1202 	mla	r2, r0, r2, r1
 800ae30:	845a      	strh	r2, [r3, #34]	; 0x22
 800ae32:	b009      	add	sp, #36	; 0x24
 800ae34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae38:	200000b8 	.word	0x200000b8

0800ae3c <GUIPROP_GetCharDistX>:
 800ae3c:	4b0d      	ldr	r3, [pc, #52]	; (800ae74 <GUIPROP_GetCharDistX+0x38>)
 800ae3e:	b570      	push	{r4, r5, r6, lr}
 800ae40:	681b      	ldr	r3, [r3, #0]
 800ae42:	69dd      	ldr	r5, [r3, #28]
 800ae44:	4606      	mov	r6, r0
 800ae46:	460c      	mov	r4, r1
 800ae48:	69e8      	ldr	r0, [r5, #28]
 800ae4a:	4631      	mov	r1, r6
 800ae4c:	f7ff ff76 	bl	800ad3c <GUIPROP__FindChar>
 800ae50:	b170      	cbz	r0, 800ae70 <GUIPROP_GetCharDistX+0x34>
 800ae52:	8803      	ldrh	r3, [r0, #0]
 800ae54:	6842      	ldr	r2, [r0, #4]
 800ae56:	1af6      	subs	r6, r6, r3
 800ae58:	eb02 03c6 	add.w	r3, r2, r6, lsl #3
 800ae5c:	7858      	ldrb	r0, [r3, #1]
 800ae5e:	7eab      	ldrb	r3, [r5, #26]
 800ae60:	fb10 f003 	smulbb	r0, r0, r3
 800ae64:	b124      	cbz	r4, 800ae70 <GUIPROP_GetCharDistX+0x34>
 800ae66:	f812 2036 	ldrb.w	r2, [r2, r6, lsl #3]
 800ae6a:	fb12 f303 	smulbb	r3, r2, r3
 800ae6e:	6023      	str	r3, [r4, #0]
 800ae70:	bd70      	pop	{r4, r5, r6, pc}
 800ae72:	bf00      	nop
 800ae74:	200000b8 	.word	0x200000b8

0800ae78 <GUIPROP_GetFontInfo>:
 800ae78:	2301      	movs	r3, #1
 800ae7a:	800b      	strh	r3, [r1, #0]
 800ae7c:	4770      	bx	lr

0800ae7e <GUIPROP_IsInFont>:
 800ae7e:	b508      	push	{r3, lr}
 800ae80:	69c0      	ldr	r0, [r0, #28]
 800ae82:	f7ff ff5b 	bl	800ad3c <GUIPROP__FindChar>
 800ae86:	3000      	adds	r0, #0
 800ae88:	bf18      	it	ne
 800ae8a:	2001      	movne	r0, #1
 800ae8c:	bd08      	pop	{r3, pc}
	...

0800ae90 <GUIMONO_DispChar>:
 800ae90:	4b52      	ldr	r3, [pc, #328]	; (800afdc <GUIMONO_DispChar+0x14c>)
 800ae92:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ae96:	681b      	ldr	r3, [r3, #0]
 800ae98:	69d9      	ldr	r1, [r3, #28]
 800ae9a:	8c5f      	ldrh	r7, [r3, #34]	; 0x22
 800ae9c:	69cc      	ldr	r4, [r1, #28]
 800ae9e:	8c9d      	ldrh	r5, [r3, #36]	; 0x24
 800aea0:	89a2      	ldrh	r2, [r4, #12]
 800aea2:	4290      	cmp	r0, r2
 800aea4:	b08b      	sub	sp, #44	; 0x2c
 800aea6:	d308      	bcc.n	800aeba <GUIMONO_DispChar+0x2a>
 800aea8:	89e6      	ldrh	r6, [r4, #14]
 800aeaa:	4286      	cmp	r6, r0
 800aeac:	d305      	bcc.n	800aeba <GUIMONO_DispChar+0x2a>
 800aeae:	f8d4 9000 	ldr.w	r9, [r4]
 800aeb2:	1a82      	subs	r2, r0, r2
 800aeb4:	f04f 3bff 	mov.w	fp, #4294967295
 800aeb8:	e015      	b.n	800aee6 <GUIMONO_DispChar+0x56>
 800aeba:	68a2      	ldr	r2, [r4, #8]
 800aebc:	f8d4 9004 	ldr.w	r9, [r4, #4]
 800aec0:	2a00      	cmp	r2, #0
 800aec2:	f000 8081 	beq.w	800afc8 <GUIMONO_DispChar+0x138>
 800aec6:	8816      	ldrh	r6, [r2, #0]
 800aec8:	42b0      	cmp	r0, r6
 800aeca:	d37d      	bcc.n	800afc8 <GUIMONO_DispChar+0x138>
 800aecc:	f8b2 c002 	ldrh.w	ip, [r2, #2]
 800aed0:	4584      	cmp	ip, r0
 800aed2:	d379      	bcc.n	800afc8 <GUIMONO_DispChar+0x138>
 800aed4:	6852      	ldr	r2, [r2, #4]
 800aed6:	1b80      	subs	r0, r0, r6
 800aed8:	b280      	uxth	r0, r0
 800aeda:	eb02 0680 	add.w	r6, r2, r0, lsl #2
 800aede:	f932 2020 	ldrsh.w	r2, [r2, r0, lsl #2]
 800aee2:	f9b6 b002 	ldrsh.w	fp, [r6, #2]
 800aee6:	1c50      	adds	r0, r2, #1
 800aee8:	d06e      	beq.n	800afc8 <GUIMONO_DispChar+0x138>
 800aeea:	f891 8018 	ldrb.w	r8, [r1, #24]
 800aeee:	7ca1      	ldrb	r1, [r4, #18]
 800aef0:	f8b3 a02a 	ldrh.w	sl, [r3, #42]	; 0x2a
 800aef4:	7c26      	ldrb	r6, [r4, #16]
 800aef6:	9206      	str	r2, [sp, #24]
 800aef8:	fb18 f101 	smulbb	r1, r8, r1
 800aefc:	9107      	str	r1, [sp, #28]
 800aefe:	fa0f f18a 	sxth.w	r1, sl
 800af02:	4608      	mov	r0, r1
 800af04:	9108      	str	r1, [sp, #32]
 800af06:	f7fd fbd9 	bl	80086bc <LCD_SetDrawMode>
 800af0a:	4934      	ldr	r1, [pc, #208]	; (800afdc <GUIMONO_DispChar+0x14c>)
 800af0c:	9009      	str	r0, [sp, #36]	; 0x24
 800af0e:	680b      	ldr	r3, [r1, #0]
 800af10:	9a06      	ldr	r2, [sp, #24]
 800af12:	69d9      	ldr	r1, [r3, #28]
 800af14:	7e88      	ldrb	r0, [r1, #26]
 800af16:	9000      	str	r0, [sp, #0]
 800af18:	7ec9      	ldrb	r1, [r1, #27]
 800af1a:	9101      	str	r1, [sp, #4]
 800af1c:	2101      	movs	r1, #1
 800af1e:	9102      	str	r1, [sp, #8]
 800af20:	7ca1      	ldrb	r1, [r4, #18]
 800af22:	9103      	str	r1, [sp, #12]
 800af24:	9907      	ldr	r1, [sp, #28]
 800af26:	fb01 9202 	mla	r2, r1, r2, r9
 800af2a:	9204      	str	r2, [sp, #16]
 800af2c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800af2e:	9305      	str	r3, [sp, #20]
 800af30:	b23f      	sxth	r7, r7
 800af32:	b22d      	sxth	r5, r5
 800af34:	4638      	mov	r0, r7
 800af36:	4629      	mov	r1, r5
 800af38:	4632      	mov	r2, r6
 800af3a:	4643      	mov	r3, r8
 800af3c:	f7fd fd48 	bl	80089d0 <LCD_DrawBitmap>
 800af40:	f1bb 3fff 	cmp.w	fp, #4294967295
 800af44:	d01b      	beq.n	800af7e <GUIMONO_DispChar+0xee>
 800af46:	f04a 0002 	orr.w	r0, sl, #2
 800af4a:	b200      	sxth	r0, r0
 800af4c:	f7fd fbb6 	bl	80086bc <LCD_SetDrawMode>
 800af50:	4a22      	ldr	r2, [pc, #136]	; (800afdc <GUIMONO_DispChar+0x14c>)
 800af52:	6813      	ldr	r3, [r2, #0]
 800af54:	69da      	ldr	r2, [r3, #28]
 800af56:	7e91      	ldrb	r1, [r2, #26]
 800af58:	9100      	str	r1, [sp, #0]
 800af5a:	7ed2      	ldrb	r2, [r2, #27]
 800af5c:	9201      	str	r2, [sp, #4]
 800af5e:	2101      	movs	r1, #1
 800af60:	9102      	str	r1, [sp, #8]
 800af62:	9907      	ldr	r1, [sp, #28]
 800af64:	7ca2      	ldrb	r2, [r4, #18]
 800af66:	9203      	str	r2, [sp, #12]
 800af68:	fb01 920b 	mla	r2, r1, fp, r9
 800af6c:	9204      	str	r2, [sp, #16]
 800af6e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800af70:	9305      	str	r3, [sp, #20]
 800af72:	4638      	mov	r0, r7
 800af74:	4629      	mov	r1, r5
 800af76:	4632      	mov	r2, r6
 800af78:	4643      	mov	r3, r8
 800af7a:	f7fd fd29 	bl	80089d0 <LCD_DrawBitmap>
 800af7e:	f8df 805c 	ldr.w	r8, [pc, #92]	; 800afdc <GUIMONO_DispChar+0x14c>
 800af82:	f8d8 3000 	ldr.w	r3, [r8]
 800af86:	69db      	ldr	r3, [r3, #28]
 800af88:	7e5a      	ldrb	r2, [r3, #25]
 800af8a:	7e1b      	ldrb	r3, [r3, #24]
 800af8c:	429a      	cmp	r2, r3
 800af8e:	d917      	bls.n	800afc0 <GUIMONO_DispChar+0x130>
 800af90:	9a08      	ldr	r2, [sp, #32]
 800af92:	2a02      	cmp	r2, #2
 800af94:	d014      	beq.n	800afc0 <GUIMONO_DispChar+0x130>
 800af96:	f08a 0004 	eor.w	r0, sl, #4
 800af9a:	b200      	sxth	r0, r0
 800af9c:	f7fd fb8e 	bl	80086bc <LCD_SetDrawMode>
 800afa0:	f8d8 3000 	ldr.w	r3, [r8]
 800afa4:	69db      	ldr	r3, [r3, #28]
 800afa6:	f893 e018 	ldrb.w	lr, [r3, #24]
 800afaa:	7ed9      	ldrb	r1, [r3, #27]
 800afac:	7e9a      	ldrb	r2, [r3, #26]
 800afae:	7e5b      	ldrb	r3, [r3, #25]
 800afb0:	4638      	mov	r0, r7
 800afb2:	fb0e 5101 	mla	r1, lr, r1, r5
 800afb6:	fb06 7202 	mla	r2, r6, r2, r7
 800afba:	442b      	add	r3, r5
 800afbc:	f7fd fc00 	bl	80087c0 <LCD_FillRect>
 800afc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800afc2:	b2d8      	uxtb	r0, r3
 800afc4:	f7fd fb7a 	bl	80086bc <LCD_SetDrawMode>
 800afc8:	4b04      	ldr	r3, [pc, #16]	; (800afdc <GUIMONO_DispChar+0x14c>)
 800afca:	7c61      	ldrb	r1, [r4, #17]
 800afcc:	681b      	ldr	r3, [r3, #0]
 800afce:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
 800afd0:	440a      	add	r2, r1
 800afd2:	845a      	strh	r2, [r3, #34]	; 0x22
 800afd4:	b00b      	add	sp, #44	; 0x2c
 800afd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800afda:	bf00      	nop
 800afdc:	200000b8 	.word	0x200000b8

0800afe0 <GUIMONO_GetCharDistX>:
 800afe0:	4b04      	ldr	r3, [pc, #16]	; (800aff4 <GUIMONO_GetCharDistX+0x14>)
 800afe2:	681b      	ldr	r3, [r3, #0]
 800afe4:	69db      	ldr	r3, [r3, #28]
 800afe6:	69db      	ldr	r3, [r3, #28]
 800afe8:	b109      	cbz	r1, 800afee <GUIMONO_GetCharDistX+0xe>
 800afea:	7c1a      	ldrb	r2, [r3, #16]
 800afec:	600a      	str	r2, [r1, #0]
 800afee:	7c58      	ldrb	r0, [r3, #17]
 800aff0:	4770      	bx	lr
 800aff2:	bf00      	nop
 800aff4:	200000b8 	.word	0x200000b8

0800aff8 <GUIMONO_GetFontInfo>:
 800aff8:	2302      	movs	r3, #2
 800affa:	800b      	strh	r3, [r1, #0]
 800affc:	4770      	bx	lr

0800affe <GUIMONO_IsInFont>:
 800affe:	69c3      	ldr	r3, [r0, #28]
 800b000:	899a      	ldrh	r2, [r3, #12]
 800b002:	428a      	cmp	r2, r1
 800b004:	d802      	bhi.n	800b00c <GUIMONO_IsInFont+0xe>
 800b006:	89da      	ldrh	r2, [r3, #14]
 800b008:	428a      	cmp	r2, r1
 800b00a:	d20f      	bcs.n	800b02c <GUIMONO_IsInFont+0x2e>
 800b00c:	6898      	ldr	r0, [r3, #8]
 800b00e:	b180      	cbz	r0, 800b032 <GUIMONO_IsInFont+0x34>
 800b010:	8803      	ldrh	r3, [r0, #0]
 800b012:	4299      	cmp	r1, r3
 800b014:	d30c      	bcc.n	800b030 <GUIMONO_IsInFont+0x32>
 800b016:	8842      	ldrh	r2, [r0, #2]
 800b018:	428a      	cmp	r2, r1
 800b01a:	d309      	bcc.n	800b030 <GUIMONO_IsInFont+0x32>
 800b01c:	1ac9      	subs	r1, r1, r3
 800b01e:	6842      	ldr	r2, [r0, #4]
 800b020:	f832 0021 	ldrh.w	r0, [r2, r1, lsl #2]
 800b024:	43c0      	mvns	r0, r0
 800b026:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 800b02a:	4770      	bx	lr
 800b02c:	2001      	movs	r0, #1
 800b02e:	4770      	bx	lr
 800b030:	2000      	movs	r0, #0
 800b032:	4770      	bx	lr

0800b034 <_Log2VisBuffered>:
 800b034:	4770      	bx	lr
	...

0800b038 <_DispLine>:
 800b038:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b03a:	4615      	mov	r5, r2
 800b03c:	ab02      	add	r3, sp, #8
 800b03e:	4a21      	ldr	r2, [pc, #132]	; (800b0c4 <_DispLine+0x8c>)
 800b040:	f843 1d08 	str.w	r1, [r3, #-8]!
 800b044:	9001      	str	r0, [sp, #4]
 800b046:	6812      	ldr	r2, [r2, #0]
 800b048:	4c1f      	ldr	r4, [pc, #124]	; (800b0c8 <_DispLine+0x90>)
 800b04a:	4669      	mov	r1, sp
 800b04c:	4790      	blx	r2
 800b04e:	6823      	ldr	r3, [r4, #0]
 800b050:	9001      	str	r0, [sp, #4]
 800b052:	6958      	ldr	r0, [r3, #20]
 800b054:	b938      	cbnz	r0, 800b066 <_DispLine+0x2e>
 800b056:	2001      	movs	r0, #1
 800b058:	f7fe f838 	bl	80090cc <GUI__ManageCache>
 800b05c:	6822      	ldr	r2, [r4, #0]
 800b05e:	69d3      	ldr	r3, [r2, #28]
 800b060:	695b      	ldr	r3, [r3, #20]
 800b062:	b933      	cbnz	r3, 800b072 <_DispLine+0x3a>
 800b064:	e023      	b.n	800b0ae <_DispLine+0x76>
 800b066:	4629      	mov	r1, r5
 800b068:	f7ff fd60 	bl	800ab2c <GUI_RectsIntersect>
 800b06c:	2800      	cmp	r0, #0
 800b06e:	d1f2      	bne.n	800b056 <_DispLine+0x1e>
 800b070:	e025      	b.n	800b0be <_DispLine+0x86>
 800b072:	4c16      	ldr	r4, [pc, #88]	; (800b0cc <_DispLine+0x94>)
 800b074:	689b      	ldr	r3, [r3, #8]
 800b076:	6821      	ldr	r1, [r4, #0]
 800b078:	b141      	cbz	r1, 800b08c <_DispLine+0x54>
 800b07a:	f9b2 5022 	ldrsh.w	r5, [r2, #34]	; 0x22
 800b07e:	9801      	ldr	r0, [sp, #4]
 800b080:	9900      	ldr	r1, [sp, #0]
 800b082:	4798      	blx	r3
 800b084:	6823      	ldr	r3, [r4, #0]
 800b086:	4628      	mov	r0, r5
 800b088:	4798      	blx	r3
 800b08a:	e015      	b.n	800b0b8 <_DispLine+0x80>
 800b08c:	9801      	ldr	r0, [sp, #4]
 800b08e:	9900      	ldr	r1, [sp, #0]
 800b090:	4798      	blx	r3
 800b092:	e011      	b.n	800b0b8 <_DispLine+0x80>
 800b094:	a801      	add	r0, sp, #4
 800b096:	f7fe f9e1 	bl	800945c <GUI_UC__GetCharCodeInc>
 800b09a:	6823      	ldr	r3, [r4, #0]
 800b09c:	69db      	ldr	r3, [r3, #28]
 800b09e:	681b      	ldr	r3, [r3, #0]
 800b0a0:	4605      	mov	r5, r0
 800b0a2:	4798      	blx	r3
 800b0a4:	4b0a      	ldr	r3, [pc, #40]	; (800b0d0 <_DispLine+0x98>)
 800b0a6:	681b      	ldr	r3, [r3, #0]
 800b0a8:	b10b      	cbz	r3, 800b0ae <_DispLine+0x76>
 800b0aa:	4628      	mov	r0, r5
 800b0ac:	4798      	blx	r3
 800b0ae:	9b00      	ldr	r3, [sp, #0]
 800b0b0:	3b01      	subs	r3, #1
 800b0b2:	2b00      	cmp	r3, #0
 800b0b4:	9300      	str	r3, [sp, #0]
 800b0b6:	daed      	bge.n	800b094 <_DispLine+0x5c>
 800b0b8:	2000      	movs	r0, #0
 800b0ba:	f7fe f807 	bl	80090cc <GUI__ManageCache>
 800b0be:	b003      	add	sp, #12
 800b0c0:	bd30      	pop	{r4, r5, pc}
 800b0c2:	bf00      	nop
 800b0c4:	200000c4 	.word	0x200000c4
 800b0c8:	200000b8 	.word	0x200000b8
 800b0cc:	20002cf4 	.word	0x20002cf4
 800b0d0:	20002d04 	.word	0x20002d04

0800b0d4 <GUI__GetLineNumChars>:
 800b0d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b0d6:	460d      	mov	r5, r1
 800b0d8:	9001      	str	r0, [sp, #4]
 800b0da:	4604      	mov	r4, r0
 800b0dc:	b198      	cbz	r0, 800b106 <GUI__GetLineNumChars+0x32>
 800b0de:	4b0b      	ldr	r3, [pc, #44]	; (800b10c <GUI__GetLineNumChars+0x38>)
 800b0e0:	681b      	ldr	r3, [r3, #0]
 800b0e2:	69db      	ldr	r3, [r3, #28]
 800b0e4:	695b      	ldr	r3, [r3, #20]
 800b0e6:	b10b      	cbz	r3, 800b0ec <GUI__GetLineNumChars+0x18>
 800b0e8:	685b      	ldr	r3, [r3, #4]
 800b0ea:	b90b      	cbnz	r3, 800b0f0 <GUI__GetLineNumChars+0x1c>
 800b0ec:	2400      	movs	r4, #0
 800b0ee:	e008      	b.n	800b102 <GUI__GetLineNumChars+0x2e>
 800b0f0:	4798      	blx	r3
 800b0f2:	e009      	b.n	800b108 <GUI__GetLineNumChars+0x34>
 800b0f4:	a801      	add	r0, sp, #4
 800b0f6:	f7fe f9b1 	bl	800945c <GUI_UC__GetCharCodeInc>
 800b0fa:	b120      	cbz	r0, 800b106 <GUI__GetLineNumChars+0x32>
 800b0fc:	280a      	cmp	r0, #10
 800b0fe:	d002      	beq.n	800b106 <GUI__GetLineNumChars+0x32>
 800b100:	3401      	adds	r4, #1
 800b102:	42ac      	cmp	r4, r5
 800b104:	dbf6      	blt.n	800b0f4 <GUI__GetLineNumChars+0x20>
 800b106:	4620      	mov	r0, r4
 800b108:	b003      	add	sp, #12
 800b10a:	bd30      	pop	{r4, r5, pc}
 800b10c:	200000b8 	.word	0x200000b8

0800b110 <GUI__GetOverlap>:
 800b110:	b513      	push	{r0, r1, r4, lr}
 800b112:	a902      	add	r1, sp, #8
 800b114:	2400      	movs	r4, #0
 800b116:	f841 4d04 	str.w	r4, [r1, #-4]!
 800b11a:	f000 f8b7 	bl	800b28c <GUI_GetCharDistXEx>
 800b11e:	9b01      	ldr	r3, [sp, #4]
 800b120:	4283      	cmp	r3, r0
 800b122:	bfcc      	ite	gt
 800b124:	ebc0 0003 	rsbgt	r0, r0, r3
 800b128:	4620      	movle	r0, r4
 800b12a:	b002      	add	sp, #8
 800b12c:	bd10      	pop	{r4, pc}
	...

0800b130 <GUI__GetLineDistX>:
 800b130:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b132:	4a15      	ldr	r2, [pc, #84]	; (800b188 <GUI__GetLineDistX+0x58>)
 800b134:	9001      	str	r0, [sp, #4]
 800b136:	ab02      	add	r3, sp, #8
 800b138:	6812      	ldr	r2, [r2, #0]
 800b13a:	f843 1d08 	str.w	r1, [r3, #-8]!
 800b13e:	4669      	mov	r1, sp
 800b140:	4790      	blx	r2
 800b142:	9001      	str	r0, [sp, #4]
 800b144:	b1f0      	cbz	r0, 800b184 <GUI__GetLineDistX+0x54>
 800b146:	4b11      	ldr	r3, [pc, #68]	; (800b18c <GUI__GetLineDistX+0x5c>)
 800b148:	681b      	ldr	r3, [r3, #0]
 800b14a:	69db      	ldr	r3, [r3, #28]
 800b14c:	695b      	ldr	r3, [r3, #20]
 800b14e:	b10b      	cbz	r3, 800b154 <GUI__GetLineDistX+0x24>
 800b150:	681b      	ldr	r3, [r3, #0]
 800b152:	b913      	cbnz	r3, 800b15a <GUI__GetLineDistX+0x2a>
 800b154:	2500      	movs	r5, #0
 800b156:	462c      	mov	r4, r5
 800b158:	e002      	b.n	800b160 <GUI__GetLineDistX+0x30>
 800b15a:	9900      	ldr	r1, [sp, #0]
 800b15c:	4798      	blx	r3
 800b15e:	e011      	b.n	800b184 <GUI__GetLineDistX+0x54>
 800b160:	9b00      	ldr	r3, [sp, #0]
 800b162:	3b01      	subs	r3, #1
 800b164:	2b00      	cmp	r3, #0
 800b166:	9300      	str	r3, [sp, #0]
 800b168:	db07      	blt.n	800b17a <GUI__GetLineDistX+0x4a>
 800b16a:	a801      	add	r0, sp, #4
 800b16c:	f7fe f976 	bl	800945c <GUI_UC__GetCharCodeInc>
 800b170:	4605      	mov	r5, r0
 800b172:	f000 f881 	bl	800b278 <GUI_GetCharDistX>
 800b176:	4404      	add	r4, r0
 800b178:	e7f2      	b.n	800b160 <GUI__GetLineDistX+0x30>
 800b17a:	4628      	mov	r0, r5
 800b17c:	f7ff ffc8 	bl	800b110 <GUI__GetOverlap>
 800b180:	4420      	add	r0, r4
 800b182:	e7ff      	b.n	800b184 <GUI__GetLineDistX+0x54>
 800b184:	b003      	add	sp, #12
 800b186:	bd30      	pop	{r4, r5, pc}
 800b188:	200000c4 	.word	0x200000c4
 800b18c:	200000b8 	.word	0x200000b8

0800b190 <GUI__DispLine>:
 800b190:	4b27      	ldr	r3, [pc, #156]	; (800b230 <GUI__DispLine+0xa0>)
 800b192:	681b      	ldr	r3, [r3, #0]
 800b194:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b196:	4605      	mov	r5, r0
 800b198:	460c      	mov	r4, r1
 800b19a:	b163      	cbz	r3, 800b1b6 <GUI__DispLine+0x26>
 800b19c:	2000      	movs	r0, #0
 800b19e:	f7fa fde7 	bl	8005d70 <WM__InitIVRSearch>
 800b1a2:	2800      	cmp	r0, #0
 800b1a4:	d041      	beq.n	800b22a <GUI__DispLine+0x9a>
 800b1a6:	4628      	mov	r0, r5
 800b1a8:	4621      	mov	r1, r4
 800b1aa:	466a      	mov	r2, sp
 800b1ac:	f7ff ff44 	bl	800b038 <_DispLine>
 800b1b0:	f7fa fd1c 	bl	8005bec <WM__GetNextIVR>
 800b1b4:	e7f5      	b.n	800b1a2 <GUI__DispLine+0x12>
 800b1b6:	6810      	ldr	r0, [r2, #0]
 800b1b8:	6851      	ldr	r1, [r2, #4]
 800b1ba:	4e1e      	ldr	r6, [pc, #120]	; (800b234 <GUI__DispLine+0xa4>)
 800b1bc:	466b      	mov	r3, sp
 800b1be:	c303      	stmia	r3!, {r0, r1}
 800b1c0:	6833      	ldr	r3, [r6, #0]
 800b1c2:	f8bd 1000 	ldrh.w	r1, [sp]
 800b1c6:	f8b3 204c 	ldrh.w	r2, [r3, #76]	; 0x4c
 800b1ca:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 800b1ce:	4411      	add	r1, r2
 800b1d0:	f8ad 1000 	strh.w	r1, [sp]
 800b1d4:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800b1d8:	4419      	add	r1, r3
 800b1da:	f8ad 1002 	strh.w	r1, [sp, #2]
 800b1de:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 800b1e2:	440a      	add	r2, r1
 800b1e4:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b1e8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800b1ec:	4668      	mov	r0, sp
 800b1ee:	4413      	add	r3, r2
 800b1f0:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b1f4:	f7fa fdbc 	bl	8005d70 <WM__InitIVRSearch>
 800b1f8:	6833      	ldr	r3, [r6, #0]
 800b1fa:	b940      	cbnz	r0, 800b20e <GUI__DispLine+0x7e>
 800b1fc:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800b1fe:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800b200:	1a8a      	subs	r2, r1, r2
 800b202:	845a      	strh	r2, [r3, #34]	; 0x22
 800b204:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 800b206:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800b208:	1a8a      	subs	r2, r1, r2
 800b20a:	849a      	strh	r2, [r3, #36]	; 0x24
 800b20c:	e00d      	b.n	800b22a <GUI__DispLine+0x9a>
 800b20e:	f8bd 2000 	ldrh.w	r2, [sp]
 800b212:	845a      	strh	r2, [r3, #34]	; 0x22
 800b214:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800b218:	849a      	strh	r2, [r3, #36]	; 0x24
 800b21a:	4628      	mov	r0, r5
 800b21c:	4621      	mov	r1, r4
 800b21e:	466a      	mov	r2, sp
 800b220:	f7ff ff0a 	bl	800b038 <_DispLine>
 800b224:	f7fa fce2 	bl	8005bec <WM__GetNextIVR>
 800b228:	e7e6      	b.n	800b1f8 <GUI__DispLine+0x68>
 800b22a:	b002      	add	sp, #8
 800b22c:	bd70      	pop	{r4, r5, r6, pc}
 800b22e:	bf00      	nop
 800b230:	20002ce0 	.word	0x20002ce0
 800b234:	200000b8 	.word	0x200000b8

0800b238 <GUI_GetYAdjust>:
 800b238:	4b0a      	ldr	r3, [pc, #40]	; (800b264 <GUI_GetYAdjust+0x2c>)
 800b23a:	681b      	ldr	r3, [r3, #0]
 800b23c:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800b23e:	f002 020c 	and.w	r2, r2, #12
 800b242:	2a08      	cmp	r2, #8
 800b244:	d007      	beq.n	800b256 <GUI_GetYAdjust+0x1e>
 800b246:	2a0c      	cmp	r2, #12
 800b248:	d005      	beq.n	800b256 <GUI_GetYAdjust+0x1e>
 800b24a:	2a04      	cmp	r2, #4
 800b24c:	d107      	bne.n	800b25e <GUI_GetYAdjust+0x26>
 800b24e:	69db      	ldr	r3, [r3, #28]
 800b250:	7e18      	ldrb	r0, [r3, #24]
 800b252:	3801      	subs	r0, #1
 800b254:	4770      	bx	lr
 800b256:	69db      	ldr	r3, [r3, #28]
 800b258:	7e18      	ldrb	r0, [r3, #24]
 800b25a:	0840      	lsrs	r0, r0, #1
 800b25c:	4770      	bx	lr
 800b25e:	2000      	movs	r0, #0
 800b260:	4770      	bx	lr
 800b262:	bf00      	nop
 800b264:	200000b8 	.word	0x200000b8

0800b268 <GUI_GetFontDistY>:
 800b268:	4b02      	ldr	r3, [pc, #8]	; (800b274 <GUI_GetFontDistY+0xc>)
 800b26a:	681b      	ldr	r3, [r3, #0]
 800b26c:	69db      	ldr	r3, [r3, #28]
 800b26e:	7e58      	ldrb	r0, [r3, #25]
 800b270:	4770      	bx	lr
 800b272:	bf00      	nop
 800b274:	200000b8 	.word	0x200000b8

0800b278 <GUI_GetCharDistX>:
 800b278:	b508      	push	{r3, lr}
 800b27a:	4b03      	ldr	r3, [pc, #12]	; (800b288 <GUI_GetCharDistX+0x10>)
 800b27c:	681b      	ldr	r3, [r3, #0]
 800b27e:	69db      	ldr	r3, [r3, #28]
 800b280:	2100      	movs	r1, #0
 800b282:	685b      	ldr	r3, [r3, #4]
 800b284:	4798      	blx	r3
 800b286:	bd08      	pop	{r3, pc}
 800b288:	200000b8 	.word	0x200000b8

0800b28c <GUI_GetCharDistXEx>:
 800b28c:	b508      	push	{r3, lr}
 800b28e:	4b03      	ldr	r3, [pc, #12]	; (800b29c <GUI_GetCharDistXEx+0x10>)
 800b290:	681b      	ldr	r3, [r3, #0]
 800b292:	69db      	ldr	r3, [r3, #28]
 800b294:	685b      	ldr	r3, [r3, #4]
 800b296:	4798      	blx	r3
 800b298:	bd08      	pop	{r3, pc}
 800b29a:	bf00      	nop
 800b29c:	200000b8 	.word	0x200000b8

0800b2a0 <_PushFreeBlock>:
 800b2a0:	4b07      	ldr	r3, [pc, #28]	; (800b2c0 <_PushFreeBlock+0x20>)
 800b2a2:	685a      	ldr	r2, [r3, #4]
 800b2a4:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800b2a6:	3201      	adds	r2, #1
 800b2a8:	b510      	push	{r4, lr}
 800b2aa:	605a      	str	r2, [r3, #4]
 800b2ac:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b2ae:	eb02 04c0 	add.w	r4, r2, r0, lsl #3
 800b2b2:	6061      	str	r1, [r4, #4]
 800b2b4:	2100      	movs	r1, #0
 800b2b6:	f802 1030 	strb.w	r1, [r2, r0, lsl #3]
 800b2ba:	6258      	str	r0, [r3, #36]	; 0x24
 800b2bc:	bd10      	pop	{r4, pc}
 800b2be:	bf00      	nop
 800b2c0:	20002d38 	.word	0x20002d38

0800b2c4 <_RemoveFreeBlock>:
 800b2c4:	b510      	push	{r4, lr}
 800b2c6:	6842      	ldr	r2, [r0, #4]
 800b2c8:	230f      	movs	r3, #15
 800b2ca:	490d      	ldr	r1, [pc, #52]	; (800b300 <_RemoveFreeBlock+0x3c>)
 800b2cc:	eb01 04c3 	add.w	r4, r1, r3, lsl #3
 800b2d0:	6c24      	ldr	r4, [r4, #64]	; 0x40
 800b2d2:	42a2      	cmp	r2, r4
 800b2d4:	d203      	bcs.n	800b2de <_RemoveFreeBlock+0x1a>
 800b2d6:	f113 33ff 	adds.w	r3, r3, #4294967295
 800b2da:	d2f6      	bcs.n	800b2ca <_RemoveFreeBlock+0x6>
 800b2dc:	bd10      	pop	{r4, pc}
 800b2de:	2b0f      	cmp	r3, #15
 800b2e0:	d80c      	bhi.n	800b2fc <_RemoveFreeBlock+0x38>
 800b2e2:	680c      	ldr	r4, [r1, #0]
 800b2e4:	1aa2      	subs	r2, r4, r2
 800b2e6:	600a      	str	r2, [r1, #0]
 800b2e8:	6882      	ldr	r2, [r0, #8]
 800b2ea:	68c0      	ldr	r0, [r0, #12]
 800b2ec:	b102      	cbz	r2, 800b2f0 <_RemoveFreeBlock+0x2c>
 800b2ee:	6050      	str	r0, [r2, #4]
 800b2f0:	b108      	cbz	r0, 800b2f6 <_RemoveFreeBlock+0x32>
 800b2f2:	6002      	str	r2, [r0, #0]
 800b2f4:	bd10      	pop	{r4, pc}
 800b2f6:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800b2fa:	645a      	str	r2, [r3, #68]	; 0x44
 800b2fc:	bd10      	pop	{r4, pc}
 800b2fe:	bf00      	nop
 800b300:	20002d38 	.word	0x20002d38

0800b304 <_AddFreeMemory>:
 800b304:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b306:	4e26      	ldr	r6, [pc, #152]	; (800b3a0 <_AddFreeMemory+0x9c>)
 800b308:	68f3      	ldr	r3, [r6, #12]
 800b30a:	1e5a      	subs	r2, r3, #1
 800b30c:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 800b30e:	4605      	mov	r5, r0
 800b310:	4413      	add	r3, r2
 800b312:	1808      	adds	r0, r1, r0
 800b314:	4298      	cmp	r0, r3
 800b316:	460c      	mov	r4, r1
 800b318:	d805      	bhi.n	800b326 <_AddFreeMemory+0x22>
 800b31a:	594b      	ldr	r3, [r1, r5]
 800b31c:	b91b      	cbnz	r3, 800b326 <_AddFreeMemory+0x22>
 800b31e:	6843      	ldr	r3, [r0, #4]
 800b320:	441d      	add	r5, r3
 800b322:	f7ff ffcf 	bl	800b2c4 <_RemoveFreeBlock>
 800b326:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 800b328:	429c      	cmp	r4, r3
 800b32a:	d90a      	bls.n	800b342 <_AddFreeMemory+0x3e>
 800b32c:	f854 7c04 	ldr.w	r7, [r4, #-4]
 800b330:	1be7      	subs	r7, r4, r7
 800b332:	683b      	ldr	r3, [r7, #0]
 800b334:	b92b      	cbnz	r3, 800b342 <_AddFreeMemory+0x3e>
 800b336:	687b      	ldr	r3, [r7, #4]
 800b338:	4638      	mov	r0, r7
 800b33a:	441d      	add	r5, r3
 800b33c:	f7ff ffc2 	bl	800b2c4 <_RemoveFreeBlock>
 800b340:	463c      	mov	r4, r7
 800b342:	230f      	movs	r3, #15
 800b344:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800b348:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800b34a:	4295      	cmp	r5, r2
 800b34c:	d203      	bcs.n	800b356 <_AddFreeMemory+0x52>
 800b34e:	f113 33ff 	adds.w	r3, r3, #4294967295
 800b352:	d2f7      	bcs.n	800b344 <_AddFreeMemory+0x40>
 800b354:	e022      	b.n	800b39c <_AddFreeMemory+0x98>
 800b356:	2b0f      	cmp	r3, #15
 800b358:	d820      	bhi.n	800b39c <_AddFreeMemory+0x98>
 800b35a:	3308      	adds	r3, #8
 800b35c:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800b360:	1961      	adds	r1, r4, r5
 800b362:	6852      	ldr	r2, [r2, #4]
 800b364:	60a2      	str	r2, [r4, #8]
 800b366:	2000      	movs	r0, #0
 800b368:	e884 0021 	stmia.w	r4, {r0, r5}
 800b36c:	6124      	str	r4, [r4, #16]
 800b36e:	f841 5c04 	str.w	r5, [r1, #-4]
 800b372:	f104 0108 	add.w	r1, r4, #8
 800b376:	b102      	cbz	r2, 800b37a <_AddFreeMemory+0x76>
 800b378:	6051      	str	r1, [r2, #4]
 800b37a:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 800b37e:	60e0      	str	r0, [r4, #12]
 800b380:	6059      	str	r1, [r3, #4]
 800b382:	6833      	ldr	r3, [r6, #0]
 800b384:	f896 1029 	ldrb.w	r1, [r6, #41]	; 0x29
 800b388:	4a05      	ldr	r2, [pc, #20]	; (800b3a0 <_AddFreeMemory+0x9c>)
 800b38a:	442b      	add	r3, r5
 800b38c:	6033      	str	r3, [r6, #0]
 800b38e:	b929      	cbnz	r1, 800b39c <_AddFreeMemory+0x98>
 800b390:	68d1      	ldr	r1, [r2, #12]
 800b392:	1acb      	subs	r3, r1, r3
 800b394:	6891      	ldr	r1, [r2, #8]
 800b396:	4299      	cmp	r1, r3
 800b398:	bf38      	it	cc
 800b39a:	6093      	strcc	r3, [r2, #8]
 800b39c:	4628      	mov	r0, r5
 800b39e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b3a0:	20002d38 	.word	0x20002d38

0800b3a4 <_RemoveHoles>:
 800b3a4:	4b25      	ldr	r3, [pc, #148]	; (800b43c <_RemoveHoles+0x98>)
 800b3a6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b3aa:	68da      	ldr	r2, [r3, #12]
 800b3ac:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800b3ae:	3a01      	subs	r2, #1
 800b3b0:	4682      	mov	sl, r0
 800b3b2:	eb02 0904 	add.w	r9, r2, r4
 800b3b6:	469b      	mov	fp, r3
 800b3b8:	e894 0028 	ldmia.w	r4, {r3, r5}
 800b3bc:	2b00      	cmp	r3, #0
 800b3be:	d133      	bne.n	800b428 <_RemoveHoles+0x84>
 800b3c0:	eb04 0805 	add.w	r8, r4, r5
 800b3c4:	45c8      	cmp	r8, r9
 800b3c6:	d22f      	bcs.n	800b428 <_RemoveHoles+0x84>
 800b3c8:	f854 c005 	ldr.w	ip, [r4, r5]
 800b3cc:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800b3d0:	f1bc 0f00 	cmp.w	ip, #0
 800b3d4:	d028      	beq.n	800b428 <_RemoveHoles+0x84>
 800b3d6:	f8db 3034 	ldr.w	r3, [fp, #52]	; 0x34
 800b3da:	4f18      	ldr	r7, [pc, #96]	; (800b43c <_RemoveHoles+0x98>)
 800b3dc:	f813 303c 	ldrb.w	r3, [r3, ip, lsl #3]
 800b3e0:	2b01      	cmp	r3, #1
 800b3e2:	d121      	bne.n	800b428 <_RemoveHoles+0x84>
 800b3e4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b3e6:	4620      	mov	r0, r4
 800b3e8:	e88d 1008 	stmia.w	sp, {r3, ip}
 800b3ec:	f7ff ff6a 	bl	800b2c4 <_RemoveFreeBlock>
 800b3f0:	f8d8 1000 	ldr.w	r1, [r8]
 800b3f4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b3f6:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 800b3fa:	4620      	mov	r0, r4
 800b3fc:	6054      	str	r4, [r2, #4]
 800b3fe:	4641      	mov	r1, r8
 800b400:	4632      	mov	r2, r6
 800b402:	f004 fc52 	bl	800fcaa <memmove>
 800b406:	e89d 1008 	ldmia.w	sp, {r3, ip}
 800b40a:	459c      	cmp	ip, r3
 800b40c:	d102      	bne.n	800b414 <_RemoveHoles+0x70>
 800b40e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b410:	1b5b      	subs	r3, r3, r5
 800b412:	637b      	str	r3, [r7, #52]	; 0x34
 800b414:	4628      	mov	r0, r5
 800b416:	19a1      	adds	r1, r4, r6
 800b418:	f7ff ff74 	bl	800b304 <_AddFreeMemory>
 800b41c:	f1ba 0f00 	cmp.w	sl, #0
 800b420:	d001      	beq.n	800b426 <_RemoveHoles+0x82>
 800b422:	4582      	cmp	sl, r0
 800b424:	d905      	bls.n	800b432 <_RemoveHoles+0x8e>
 800b426:	4635      	mov	r5, r6
 800b428:	442c      	add	r4, r5
 800b42a:	454c      	cmp	r4, r9
 800b42c:	d3c4      	bcc.n	800b3b8 <_RemoveHoles+0x14>
 800b42e:	2001      	movs	r0, #1
 800b430:	e000      	b.n	800b434 <_RemoveHoles+0x90>
 800b432:	2000      	movs	r0, #0
 800b434:	b003      	add	sp, #12
 800b436:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b43a:	bf00      	nop
 800b43c:	20002d38 	.word	0x20002d38

0800b440 <GUI_ALLOC_FreeFixedBlock>:
 800b440:	b128      	cbz	r0, 800b44e <GUI_ALLOC_FreeFixedBlock+0xe>
 800b442:	4a03      	ldr	r2, [pc, #12]	; (800b450 <GUI_ALLOC_FreeFixedBlock+0x10>)
 800b444:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 800b446:	6003      	str	r3, [r0, #0]
 800b448:	b103      	cbz	r3, 800b44c <GUI_ALLOC_FreeFixedBlock+0xc>
 800b44a:	6058      	str	r0, [r3, #4]
 800b44c:	63d0      	str	r0, [r2, #60]	; 0x3c
 800b44e:	4770      	bx	lr
 800b450:	20002d38 	.word	0x20002d38

0800b454 <GUI_ALLOC_h2p>:
 800b454:	4b03      	ldr	r3, [pc, #12]	; (800b464 <GUI_ALLOC_h2p+0x10>)
 800b456:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b458:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800b45c:	6840      	ldr	r0, [r0, #4]
 800b45e:	3008      	adds	r0, #8
 800b460:	4770      	bx	lr
 800b462:	bf00      	nop
 800b464:	20002d38 	.word	0x20002d38

0800b468 <GUI_ALLOC_LockH>:
 800b468:	4b05      	ldr	r3, [pc, #20]	; (800b480 <GUI_ALLOC_LockH+0x18>)
 800b46a:	69d9      	ldr	r1, [r3, #28]
 800b46c:	3101      	adds	r1, #1
 800b46e:	61d9      	str	r1, [r3, #28]
 800b470:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b472:	f813 1030 	ldrb.w	r1, [r3, r0, lsl #3]
 800b476:	3101      	adds	r1, #1
 800b478:	f803 1030 	strb.w	r1, [r3, r0, lsl #3]
 800b47c:	f7ff bfea 	b.w	800b454 <GUI_ALLOC_h2p>
 800b480:	20002d38 	.word	0x20002d38

0800b484 <GUI_ALLOC_UnlockH>:
 800b484:	b530      	push	{r4, r5, lr}
 800b486:	6802      	ldr	r2, [r0, #0]
 800b488:	4b09      	ldr	r3, [pc, #36]	; (800b4b0 <GUI_ALLOC_UnlockH+0x2c>)
 800b48a:	f852 1c08 	ldr.w	r1, [r2, #-8]
 800b48e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b490:	f812 4031 	ldrb.w	r4, [r2, r1, lsl #3]
 800b494:	2c01      	cmp	r4, #1
 800b496:	d903      	bls.n	800b4a0 <GUI_ALLOC_UnlockH+0x1c>
 800b498:	69dd      	ldr	r5, [r3, #28]
 800b49a:	b10d      	cbz	r5, 800b4a0 <GUI_ALLOC_UnlockH+0x1c>
 800b49c:	3d01      	subs	r5, #1
 800b49e:	61dd      	str	r5, [r3, #28]
 800b4a0:	3c01      	subs	r4, #1
 800b4a2:	f802 4031 	strb.w	r4, [r2, r1, lsl #3]
 800b4a6:	2300      	movs	r3, #0
 800b4a8:	6003      	str	r3, [r0, #0]
 800b4aa:	4618      	mov	r0, r3
 800b4ac:	bd30      	pop	{r4, r5, pc}
 800b4ae:	bf00      	nop
 800b4b0:	20002d38 	.word	0x20002d38

0800b4b4 <GUI_ALLOC_AssignMemory>:
 800b4b4:	4b02      	ldr	r3, [pc, #8]	; (800b4c0 <GUI_ALLOC_AssignMemory+0xc>)
 800b4b6:	f021 0103 	bic.w	r1, r1, #3
 800b4ba:	6018      	str	r0, [r3, #0]
 800b4bc:	6059      	str	r1, [r3, #4]
 800b4be:	4770      	bx	lr
 800b4c0:	20002b84 	.word	0x20002b84

0800b4c4 <GUI_ALLOC_GetSize>:
 800b4c4:	b130      	cbz	r0, 800b4d4 <GUI_ALLOC_GetSize+0x10>
 800b4c6:	4b04      	ldr	r3, [pc, #16]	; (800b4d8 <GUI_ALLOC_GetSize+0x14>)
 800b4c8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b4ca:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800b4ce:	6843      	ldr	r3, [r0, #4]
 800b4d0:	6858      	ldr	r0, [r3, #4]
 800b4d2:	380c      	subs	r0, #12
 800b4d4:	4770      	bx	lr
 800b4d6:	bf00      	nop
 800b4d8:	20002d38 	.word	0x20002d38

0800b4dc <GUI_ALLOC_Free>:
 800b4dc:	b510      	push	{r4, lr}
 800b4de:	4604      	mov	r4, r0
 800b4e0:	b160      	cbz	r0, 800b4fc <GUI_ALLOC_Free+0x20>
 800b4e2:	4b07      	ldr	r3, [pc, #28]	; (800b500 <GUI_ALLOC_Free+0x24>)
 800b4e4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b4e6:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 800b4ea:	6859      	ldr	r1, [r3, #4]
 800b4ec:	6848      	ldr	r0, [r1, #4]
 800b4ee:	f7ff ff09 	bl	800b304 <_AddFreeMemory>
 800b4f2:	4620      	mov	r0, r4
 800b4f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b4f8:	f7ff bed2 	b.w	800b2a0 <_PushFreeBlock>
 800b4fc:	bd10      	pop	{r4, pc}
 800b4fe:	bf00      	nop
 800b500:	20002d38 	.word	0x20002d38

0800b504 <_EnlargeBlocks>:
 800b504:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b508:	4c23      	ldr	r4, [pc, #140]	; (800b598 <_EnlargeBlocks+0x94>)
 800b50a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b50c:	b93b      	cbnz	r3, 800b51e <_EnlargeBlocks+0x1a>
 800b50e:	4b23      	ldr	r3, [pc, #140]	; (800b59c <_EnlargeBlocks+0x98>)
 800b510:	689d      	ldr	r5, [r3, #8]
 800b512:	685b      	ldr	r3, [r3, #4]
 800b514:	3508      	adds	r5, #8
 800b516:	fbb3 f5f5 	udiv	r5, r3, r5
 800b51a:	3502      	adds	r5, #2
 800b51c:	e003      	b.n	800b526 <_EnlargeBlocks+0x22>
 800b51e:	6923      	ldr	r3, [r4, #16]
 800b520:	1d1d      	adds	r5, r3, #4
 800b522:	eb05 05d3 	add.w	r5, r5, r3, lsr #3
 800b526:	00e8      	lsls	r0, r5, #3
 800b528:	f000 f8f4 	bl	800b714 <_Alloc>
 800b52c:	4680      	mov	r8, r0
 800b52e:	b368      	cbz	r0, 800b58c <_EnlargeBlocks+0x88>
 800b530:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800b532:	6922      	ldr	r2, [r4, #16]
 800b534:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800b536:	eb01 03c0 	add.w	r3, r1, r0, lsl #3
 800b53a:	00d2      	lsls	r2, r2, #3
 800b53c:	685e      	ldr	r6, [r3, #4]
 800b53e:	4b18      	ldr	r3, [pc, #96]	; (800b5a0 <_EnlargeBlocks+0x9c>)
 800b540:	3608      	adds	r6, #8
 800b542:	681b      	ldr	r3, [r3, #0]
 800b544:	4630      	mov	r0, r6
 800b546:	4798      	blx	r3
 800b548:	6922      	ldr	r2, [r4, #16]
 800b54a:	6366      	str	r6, [r4, #52]	; 0x34
 800b54c:	eb06 01c2 	add.w	r1, r6, r2, lsl #3
 800b550:	f8c4 802c 	str.w	r8, [r4, #44]	; 0x2c
 800b554:	3104      	adds	r1, #4
 800b556:	4613      	mov	r3, r2
 800b558:	1e68      	subs	r0, r5, #1
 800b55a:	4283      	cmp	r3, r0
 800b55c:	f101 0108 	add.w	r1, r1, #8
 800b560:	d203      	bcs.n	800b56a <_EnlargeBlocks+0x66>
 800b562:	3301      	adds	r3, #1
 800b564:	f841 3c08 	str.w	r3, [r1, #-8]
 800b568:	e7f6      	b.n	800b558 <_EnlargeBlocks+0x54>
 800b56a:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 800b56e:	2600      	movs	r6, #0
 800b570:	605e      	str	r6, [r3, #4]
 800b572:	6863      	ldr	r3, [r4, #4]
 800b574:	6262      	str	r2, [r4, #36]	; 0x24
 800b576:	1a9b      	subs	r3, r3, r2
 800b578:	442b      	add	r3, r5
 800b57a:	6063      	str	r3, [r4, #4]
 800b57c:	6125      	str	r5, [r4, #16]
 800b57e:	4638      	mov	r0, r7
 800b580:	b13f      	cbz	r7, 800b592 <_EnlargeBlocks+0x8e>
 800b582:	f7ff ffab 	bl	800b4dc <GUI_ALLOC_Free>
 800b586:	4630      	mov	r0, r6
 800b588:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b58c:	2001      	movs	r0, #1
 800b58e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b592:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b596:	bf00      	nop
 800b598:	20002d38 	.word	0x20002d38
 800b59c:	20002b84 	.word	0x20002b84
 800b5a0:	200000a8 	.word	0x200000a8

0800b5a4 <_InitOnce>:
 800b5a4:	b538      	push	{r3, r4, r5, lr}
 800b5a6:	4916      	ldr	r1, [pc, #88]	; (800b600 <_InitOnce+0x5c>)
 800b5a8:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800b5ac:	bb3b      	cbnz	r3, 800b5fe <_InitOnce+0x5a>
 800b5ae:	4a15      	ldr	r2, [pc, #84]	; (800b604 <_InitOnce+0x60>)
 800b5b0:	2301      	movs	r3, #1
 800b5b2:	f881 3028 	strb.w	r3, [r1, #40]	; 0x28
 800b5b6:	6893      	ldr	r3, [r2, #8]
 800b5b8:	b913      	cbnz	r3, 800b5c0 <_InitOnce+0x1c>
 800b5ba:	6853      	ldr	r3, [r2, #4]
 800b5bc:	089b      	lsrs	r3, r3, #2
 800b5be:	6093      	str	r3, [r2, #8]
 800b5c0:	235a      	movs	r3, #90	; 0x5a
 800b5c2:	620b      	str	r3, [r1, #32]
 800b5c4:	2300      	movs	r3, #0
 800b5c6:	2510      	movs	r5, #16
 800b5c8:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
 800b5cc:	409d      	lsls	r5, r3
 800b5ce:	3301      	adds	r3, #1
 800b5d0:	2b10      	cmp	r3, #16
 800b5d2:	4c0b      	ldr	r4, [pc, #44]	; (800b600 <_InitOnce+0x5c>)
 800b5d4:	6405      	str	r5, [r0, #64]	; 0x40
 800b5d6:	d1f6      	bne.n	800b5c6 <_InitOnce+0x22>
 800b5d8:	6850      	ldr	r0, [r2, #4]
 800b5da:	6811      	ldr	r1, [r2, #0]
 800b5dc:	63a1      	str	r1, [r4, #56]	; 0x38
 800b5de:	2302      	movs	r3, #2
 800b5e0:	6123      	str	r3, [r4, #16]
 800b5e2:	f1a0 0314 	sub.w	r3, r0, #20
 800b5e6:	440b      	add	r3, r1
 800b5e8:	2501      	movs	r5, #1
 800b5ea:	6363      	str	r3, [r4, #52]	; 0x34
 800b5ec:	60e0      	str	r0, [r4, #12]
 800b5ee:	605d      	str	r5, [r3, #4]
 800b5f0:	6265      	str	r5, [r4, #36]	; 0x24
 800b5f2:	6065      	str	r5, [r4, #4]
 800b5f4:	f7ff fe86 	bl	800b304 <_AddFreeMemory>
 800b5f8:	f7ff ff84 	bl	800b504 <_EnlargeBlocks>
 800b5fc:	6325      	str	r5, [r4, #48]	; 0x30
 800b5fe:	bd38      	pop	{r3, r4, r5, pc}
 800b600:	20002d38 	.word	0x20002d38
 800b604:	20002b84 	.word	0x20002b84

0800b608 <GUI_ALLOC_GetFixedBlock>:
 800b608:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b60c:	4605      	mov	r5, r0
 800b60e:	4e26      	ldr	r6, [pc, #152]	; (800b6a8 <GUI_ALLOC_GetFixedBlock+0xa0>)
 800b610:	3503      	adds	r5, #3
 800b612:	f7ff ffc7 	bl	800b5a4 <_InitOnce>
 800b616:	f025 0503 	bic.w	r5, r5, #3
 800b61a:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800b61c:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800b61e:	3504      	adds	r5, #4
 800b620:	429d      	cmp	r5, r3
 800b622:	bf38      	it	cc
 800b624:	461d      	movcc	r5, r3
 800b626:	4614      	mov	r4, r2
 800b628:	b12c      	cbz	r4, 800b636 <GUI_ALLOC_GetFixedBlock+0x2e>
 800b62a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800b62e:	42ab      	cmp	r3, r5
 800b630:	d02c      	beq.n	800b68c <GUI_ALLOC_GetFixedBlock+0x84>
 800b632:	6824      	ldr	r4, [r4, #0]
 800b634:	e7f8      	b.n	800b628 <GUI_ALLOC_GetFixedBlock+0x20>
 800b636:	68f3      	ldr	r3, [r6, #12]
 800b638:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 800b63a:	eb02 0803 	add.w	r8, r2, r3
 800b63e:	f858 7c04 	ldr.w	r7, [r8, #-4]
 800b642:	ebc7 0708 	rsb	r7, r7, r8
 800b646:	683b      	ldr	r3, [r7, #0]
 800b648:	b133      	cbz	r3, 800b658 <GUI_ALLOC_GetFixedBlock+0x50>
 800b64a:	4620      	mov	r0, r4
 800b64c:	f7ff feaa 	bl	800b3a4 <_RemoveHoles>
 800b650:	f858 7c04 	ldr.w	r7, [r8, #-4]
 800b654:	ebc7 0708 	rsb	r7, r7, r8
 800b658:	683b      	ldr	r3, [r7, #0]
 800b65a:	bb13      	cbnz	r3, 800b6a2 <GUI_ALLOC_GetFixedBlock+0x9a>
 800b65c:	687b      	ldr	r3, [r7, #4]
 800b65e:	42ab      	cmp	r3, r5
 800b660:	db1f      	blt.n	800b6a2 <GUI_ALLOC_GetFixedBlock+0x9a>
 800b662:	4638      	mov	r0, r7
 800b664:	1d1c      	adds	r4, r3, #4
 800b666:	f7ff fe2d 	bl	800b2c4 <_RemoveFreeBlock>
 800b66a:	68f3      	ldr	r3, [r6, #12]
 800b66c:	6878      	ldr	r0, [r7, #4]
 800b66e:	1b5b      	subs	r3, r3, r5
 800b670:	60f3      	str	r3, [r6, #12]
 800b672:	6973      	ldr	r3, [r6, #20]
 800b674:	1b64      	subs	r4, r4, r5
 800b676:	442b      	add	r3, r5
 800b678:	1b40      	subs	r0, r0, r5
 800b67a:	443c      	add	r4, r7
 800b67c:	6173      	str	r3, [r6, #20]
 800b67e:	d002      	beq.n	800b686 <GUI_ALLOC_GetFixedBlock+0x7e>
 800b680:	4639      	mov	r1, r7
 800b682:	f7ff fe3f 	bl	800b304 <_AddFreeMemory>
 800b686:	f844 5c04 	str.w	r5, [r4, #-4]
 800b68a:	e00a      	b.n	800b6a2 <GUI_ALLOC_GetFixedBlock+0x9a>
 800b68c:	6823      	ldr	r3, [r4, #0]
 800b68e:	b10b      	cbz	r3, 800b694 <GUI_ALLOC_GetFixedBlock+0x8c>
 800b690:	6861      	ldr	r1, [r4, #4]
 800b692:	6059      	str	r1, [r3, #4]
 800b694:	6861      	ldr	r1, [r4, #4]
 800b696:	b101      	cbz	r1, 800b69a <GUI_ALLOC_GetFixedBlock+0x92>
 800b698:	600b      	str	r3, [r1, #0]
 800b69a:	42a2      	cmp	r2, r4
 800b69c:	d101      	bne.n	800b6a2 <GUI_ALLOC_GetFixedBlock+0x9a>
 800b69e:	6823      	ldr	r3, [r4, #0]
 800b6a0:	63f3      	str	r3, [r6, #60]	; 0x3c
 800b6a2:	4620      	mov	r0, r4
 800b6a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b6a8:	20002d38 	.word	0x20002d38

0800b6ac <GUI_ALLOC_GetMaxSize>:
 800b6ac:	b508      	push	{r3, lr}
 800b6ae:	f7ff ff79 	bl	800b5a4 <_InitOnce>
 800b6b2:	2200      	movs	r2, #0
 800b6b4:	4b0b      	ldr	r3, [pc, #44]	; (800b6e4 <GUI_ALLOC_GetMaxSize+0x38>)
 800b6b6:	4413      	add	r3, r2
 800b6b8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b6bc:	b113      	cbz	r3, 800b6c4 <GUI_ALLOC_GetMaxSize+0x18>
 800b6be:	689b      	ldr	r3, [r3, #8]
 800b6c0:	2000      	movs	r0, #0
 800b6c2:	e00b      	b.n	800b6dc <GUI_ALLOC_GetMaxSize+0x30>
 800b6c4:	3a08      	subs	r2, #8
 800b6c6:	f112 0f80 	cmn.w	r2, #128	; 0x80
 800b6ca:	d1f3      	bne.n	800b6b4 <GUI_ALLOC_GetMaxSize+0x8>
 800b6cc:	e7f8      	b.n	800b6c0 <GUI_ALLOC_GetMaxSize+0x14>
 800b6ce:	685a      	ldr	r2, [r3, #4]
 800b6d0:	689b      	ldr	r3, [r3, #8]
 800b6d2:	4290      	cmp	r0, r2
 800b6d4:	bf38      	it	cc
 800b6d6:	4610      	movcc	r0, r2
 800b6d8:	b113      	cbz	r3, 800b6e0 <GUI_ALLOC_GetMaxSize+0x34>
 800b6da:	689b      	ldr	r3, [r3, #8]
 800b6dc:	2b00      	cmp	r3, #0
 800b6de:	d1f6      	bne.n	800b6ce <GUI_ALLOC_GetMaxSize+0x22>
 800b6e0:	380c      	subs	r0, #12
 800b6e2:	bd08      	pop	{r3, pc}
 800b6e4:	20002d38 	.word	0x20002d38

0800b6e8 <GUI_ALLOC_RequestSize>:
 800b6e8:	b508      	push	{r3, lr}
 800b6ea:	f7ff ffdf 	bl	800b6ac <GUI_ALLOC_GetMaxSize>
 800b6ee:	f5b0 0f80 	cmp.w	r0, #4194304	; 0x400000
 800b6f2:	f04f 0364 	mov.w	r3, #100	; 0x64
 800b6f6:	4a06      	ldr	r2, [pc, #24]	; (800b710 <GUI_ALLOC_RequestSize+0x28>)
 800b6f8:	d904      	bls.n	800b704 <GUI_ALLOC_RequestSize+0x1c>
 800b6fa:	fb90 f0f3 	sdiv	r0, r0, r3
 800b6fe:	6a13      	ldr	r3, [r2, #32]
 800b700:	4358      	muls	r0, r3
 800b702:	bd08      	pop	{r3, pc}
 800b704:	6a12      	ldr	r2, [r2, #32]
 800b706:	4350      	muls	r0, r2
 800b708:	fbb0 f0f3 	udiv	r0, r0, r3
 800b70c:	bd08      	pop	{r3, pc}
 800b70e:	bf00      	nop
 800b710:	20002d38 	.word	0x20002d38

0800b714 <_Alloc>:
 800b714:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b718:	4d38      	ldr	r5, [pc, #224]	; (800b7fc <_Alloc+0xe8>)
 800b71a:	4604      	mov	r4, r0
 800b71c:	f7ff ff42 	bl	800b5a4 <_InitOnce>
 800b720:	6c2f      	ldr	r7, [r5, #64]	; 0x40
 800b722:	682b      	ldr	r3, [r5, #0]
 800b724:	42bc      	cmp	r4, r7
 800b726:	bf24      	itt	cs
 800b728:	1ce7      	addcs	r7, r4, #3
 800b72a:	f027 0703 	biccs.w	r7, r7, #3
 800b72e:	370c      	adds	r7, #12
 800b730:	429f      	cmp	r7, r3
 800b732:	4c32      	ldr	r4, [pc, #200]	; (800b7fc <_Alloc+0xe8>)
 800b734:	d83e      	bhi.n	800b7b4 <_Alloc+0xa0>
 800b736:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b738:	6862      	ldr	r2, [r4, #4]
 800b73a:	429a      	cmp	r2, r3
 800b73c:	d90f      	bls.n	800b75e <_Alloc+0x4a>
 800b73e:	686b      	ldr	r3, [r5, #4]
 800b740:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 800b742:	3b01      	subs	r3, #1
 800b744:	606b      	str	r3, [r5, #4]
 800b746:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800b748:	ea4f 09c6 	mov.w	r9, r6, lsl #3
 800b74c:	eb03 0209 	add.w	r2, r3, r9
 800b750:	6852      	ldr	r2, [r2, #4]
 800b752:	626a      	str	r2, [r5, #36]	; 0x24
 800b754:	2201      	movs	r2, #1
 800b756:	f803 2036 	strb.w	r2, [r3, r6, lsl #3]
 800b75a:	b956      	cbnz	r6, 800b772 <_Alloc+0x5e>
 800b75c:	e02a      	b.n	800b7b4 <_Alloc+0xa0>
 800b75e:	3b01      	subs	r3, #1
 800b760:	6323      	str	r3, [r4, #48]	; 0x30
 800b762:	f7ff fecf 	bl	800b504 <_EnlargeBlocks>
 800b766:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b768:	3301      	adds	r3, #1
 800b76a:	6323      	str	r3, [r4, #48]	; 0x30
 800b76c:	2800      	cmp	r0, #0
 800b76e:	d0e6      	beq.n	800b73e <_Alloc+0x2a>
 800b770:	e020      	b.n	800b7b4 <_Alloc+0xa0>
 800b772:	230f      	movs	r3, #15
 800b774:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 800b778:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800b77a:	4297      	cmp	r7, r2
 800b77c:	d20c      	bcs.n	800b798 <_Alloc+0x84>
 800b77e:	f113 33ff 	adds.w	r3, r3, #4294967295
 800b782:	d2f7      	bcs.n	800b774 <_Alloc+0x60>
 800b784:	e008      	b.n	800b798 <_Alloc+0x84>
 800b786:	6894      	ldr	r4, [r2, #8]
 800b788:	b12c      	cbz	r4, 800b796 <_Alloc+0x82>
 800b78a:	6862      	ldr	r2, [r4, #4]
 800b78c:	4297      	cmp	r7, r2
 800b78e:	d914      	bls.n	800b7ba <_Alloc+0xa6>
 800b790:	68a2      	ldr	r2, [r4, #8]
 800b792:	2a00      	cmp	r2, #0
 800b794:	d1f7      	bne.n	800b786 <_Alloc+0x72>
 800b796:	3301      	adds	r3, #1
 800b798:	2b0f      	cmp	r3, #15
 800b79a:	d803      	bhi.n	800b7a4 <_Alloc+0x90>
 800b79c:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 800b7a0:	6c52      	ldr	r2, [r2, #68]	; 0x44
 800b7a2:	e7f6      	b.n	800b792 <_Alloc+0x7e>
 800b7a4:	4638      	mov	r0, r7
 800b7a6:	f7ff fdfd 	bl	800b3a4 <_RemoveHoles>
 800b7aa:	2800      	cmp	r0, #0
 800b7ac:	d0e1      	beq.n	800b772 <_Alloc+0x5e>
 800b7ae:	4630      	mov	r0, r6
 800b7b0:	f7ff fd76 	bl	800b2a0 <_PushFreeBlock>
 800b7b4:	2000      	movs	r0, #0
 800b7b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b7ba:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800b7be:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800b7c0:	ebc7 0208 	rsb	r2, r7, r8
 800b7c4:	330c      	adds	r3, #12
 800b7c6:	4620      	mov	r0, r4
 800b7c8:	429a      	cmp	r2, r3
 800b7ca:	bf38      	it	cc
 800b7cc:	4647      	movcc	r7, r8
 800b7ce:	f7ff fd79 	bl	800b2c4 <_RemoveFreeBlock>
 800b7d2:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800b7d4:	444b      	add	r3, r9
 800b7d6:	19e1      	adds	r1, r4, r7
 800b7d8:	605c      	str	r4, [r3, #4]
 800b7da:	45b8      	cmp	r8, r7
 800b7dc:	f04f 0300 	mov.w	r3, #0
 800b7e0:	e884 00c0 	stmia.w	r4, {r6, r7}
 800b7e4:	60a3      	str	r3, [r4, #8]
 800b7e6:	6124      	str	r4, [r4, #16]
 800b7e8:	f841 7c04 	str.w	r7, [r1, #-4]
 800b7ec:	dd03      	ble.n	800b7f6 <_Alloc+0xe2>
 800b7ee:	ebc7 0008 	rsb	r0, r7, r8
 800b7f2:	f7ff fd87 	bl	800b304 <_AddFreeMemory>
 800b7f6:	4630      	mov	r0, r6
 800b7f8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b7fc:	20002d38 	.word	0x20002d38

0800b800 <GUI_ALLOC_AllocNoInit>:
 800b800:	b108      	cbz	r0, 800b806 <GUI_ALLOC_AllocNoInit+0x6>
 800b802:	f7ff bf87 	b.w	800b714 <_Alloc>
 800b806:	4770      	bx	lr

0800b808 <GUI_ALLOC_FreePtr>:
 800b808:	b510      	push	{r4, lr}
 800b80a:	4604      	mov	r4, r0
 800b80c:	6800      	ldr	r0, [r0, #0]
 800b80e:	f7ff fe65 	bl	800b4dc <GUI_ALLOC_Free>
 800b812:	2300      	movs	r3, #0
 800b814:	6023      	str	r3, [r4, #0]
 800b816:	bd10      	pop	{r4, pc}

0800b818 <GUI_ALLOC_AllocInit>:
 800b818:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b81a:	4605      	mov	r5, r0
 800b81c:	460c      	mov	r4, r1
 800b81e:	b909      	cbnz	r1, 800b824 <GUI_ALLOC_AllocInit+0xc>
 800b820:	2000      	movs	r0, #0
 800b822:	e014      	b.n	800b84e <GUI_ALLOC_AllocInit+0x36>
 800b824:	4608      	mov	r0, r1
 800b826:	f7ff ffeb 	bl	800b800 <GUI_ALLOC_AllocNoInit>
 800b82a:	4606      	mov	r6, r0
 800b82c:	2800      	cmp	r0, #0
 800b82e:	d0f7      	beq.n	800b820 <GUI_ALLOC_AllocInit+0x8>
 800b830:	f7ff fe1a 	bl	800b468 <GUI_ALLOC_LockH>
 800b834:	9001      	str	r0, [sp, #4]
 800b836:	b10d      	cbz	r5, 800b83c <GUI_ALLOC_AllocInit+0x24>
 800b838:	4b06      	ldr	r3, [pc, #24]	; (800b854 <GUI_ALLOC_AllocInit+0x3c>)
 800b83a:	e000      	b.n	800b83e <GUI_ALLOC_AllocInit+0x26>
 800b83c:	4b06      	ldr	r3, [pc, #24]	; (800b858 <GUI_ALLOC_AllocInit+0x40>)
 800b83e:	681b      	ldr	r3, [r3, #0]
 800b840:	4629      	mov	r1, r5
 800b842:	4622      	mov	r2, r4
 800b844:	4798      	blx	r3
 800b846:	a801      	add	r0, sp, #4
 800b848:	f7ff fe1c 	bl	800b484 <GUI_ALLOC_UnlockH>
 800b84c:	4630      	mov	r0, r6
 800b84e:	b002      	add	sp, #8
 800b850:	bd70      	pop	{r4, r5, r6, pc}
 800b852:	bf00      	nop
 800b854:	200000a8 	.word	0x200000a8
 800b858:	200000a4 	.word	0x200000a4

0800b85c <GUI_ALLOC_AllocZero>:
 800b85c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b85e:	4605      	mov	r5, r0
 800b860:	f7ff ffce 	bl	800b800 <GUI_ALLOC_AllocNoInit>
 800b864:	4606      	mov	r6, r0
 800b866:	b160      	cbz	r0, 800b882 <GUI_ALLOC_AllocZero+0x26>
 800b868:	f7ff fdfe 	bl	800b468 <GUI_ALLOC_LockH>
 800b86c:	ac02      	add	r4, sp, #8
 800b86e:	4b06      	ldr	r3, [pc, #24]	; (800b888 <GUI_ALLOC_AllocZero+0x2c>)
 800b870:	f844 0d04 	str.w	r0, [r4, #-4]!
 800b874:	681b      	ldr	r3, [r3, #0]
 800b876:	2100      	movs	r1, #0
 800b878:	462a      	mov	r2, r5
 800b87a:	4798      	blx	r3
 800b87c:	4620      	mov	r0, r4
 800b87e:	f7ff fe01 	bl	800b484 <GUI_ALLOC_UnlockH>
 800b882:	4630      	mov	r0, r6
 800b884:	b002      	add	sp, #8
 800b886:	bd70      	pop	{r4, r5, r6, pc}
 800b888:	200000a4 	.word	0x200000a4

0800b88c <GUI_ALLOC_Realloc>:
 800b88c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b88e:	4604      	mov	r4, r0
 800b890:	4608      	mov	r0, r1
 800b892:	460e      	mov	r6, r1
 800b894:	f7ff ffb4 	bl	800b800 <GUI_ALLOC_AllocNoInit>
 800b898:	4605      	mov	r5, r0
 800b89a:	b300      	cbz	r0, 800b8de <GUI_ALLOC_Realloc+0x52>
 800b89c:	b1fc      	cbz	r4, 800b8de <GUI_ALLOC_Realloc+0x52>
 800b89e:	4620      	mov	r0, r4
 800b8a0:	f7ff fe10 	bl	800b4c4 <GUI_ALLOC_GetSize>
 800b8a4:	42b0      	cmp	r0, r6
 800b8a6:	bfb4      	ite	lt
 800b8a8:	4607      	movlt	r7, r0
 800b8aa:	4637      	movge	r7, r6
 800b8ac:	4628      	mov	r0, r5
 800b8ae:	f7ff fddb 	bl	800b468 <GUI_ALLOC_LockH>
 800b8b2:	9000      	str	r0, [sp, #0]
 800b8b4:	4620      	mov	r0, r4
 800b8b6:	f7ff fdd7 	bl	800b468 <GUI_ALLOC_LockH>
 800b8ba:	ae02      	add	r6, sp, #8
 800b8bc:	4b09      	ldr	r3, [pc, #36]	; (800b8e4 <GUI_ALLOC_Realloc+0x58>)
 800b8be:	9001      	str	r0, [sp, #4]
 800b8c0:	4601      	mov	r1, r0
 800b8c2:	681b      	ldr	r3, [r3, #0]
 800b8c4:	f856 0d08 	ldr.w	r0, [r6, #-8]!
 800b8c8:	463a      	mov	r2, r7
 800b8ca:	4798      	blx	r3
 800b8cc:	4668      	mov	r0, sp
 800b8ce:	f7ff fdd9 	bl	800b484 <GUI_ALLOC_UnlockH>
 800b8d2:	a801      	add	r0, sp, #4
 800b8d4:	f7ff fdd6 	bl	800b484 <GUI_ALLOC_UnlockH>
 800b8d8:	4620      	mov	r0, r4
 800b8da:	f7ff fdff 	bl	800b4dc <GUI_ALLOC_Free>
 800b8de:	4628      	mov	r0, r5
 800b8e0:	b003      	add	sp, #12
 800b8e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b8e4:	200000a8 	.word	0x200000a8

0800b8e8 <GUI_DrawRect>:
 800b8e8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b8ec:	4c1e      	ldr	r4, [pc, #120]	; (800b968 <GUI_DrawRect+0x80>)
 800b8ee:	f8d4 e000 	ldr.w	lr, [r4]
 800b8f2:	f8de 404c 	ldr.w	r4, [lr, #76]	; 0x4c
 800b8f6:	f8de 6050 	ldr.w	r6, [lr, #80]	; 0x50
 800b8fa:	1905      	adds	r5, r0, r4
 800b8fc:	4414      	add	r4, r2
 800b8fe:	f89e 2018 	ldrb.w	r2, [lr, #24]
 800b902:	3a01      	subs	r2, #1
 800b904:	b292      	uxth	r2, r2
 800b906:	198f      	adds	r7, r1, r6
 800b908:	441e      	add	r6, r3
 800b90a:	1aab      	subs	r3, r5, r2
 800b90c:	f8ad 3000 	strh.w	r3, [sp]
 800b910:	1913      	adds	r3, r2, r4
 800b912:	f8ad 3004 	strh.w	r3, [sp, #4]
 800b916:	4668      	mov	r0, sp
 800b918:	1abb      	subs	r3, r7, r2
 800b91a:	4432      	add	r2, r6
 800b91c:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b920:	f8ad 2006 	strh.w	r2, [sp, #6]
 800b924:	f7fa fa24 	bl	8005d70 <WM__InitIVRSearch>
 800b928:	b1d0      	cbz	r0, 800b960 <GUI_DrawRect+0x78>
 800b92a:	4628      	mov	r0, r5
 800b92c:	4639      	mov	r1, r7
 800b92e:	4622      	mov	r2, r4
 800b930:	f7fc fefa 	bl	8008728 <LCD_DrawHLine>
 800b934:	f107 0901 	add.w	r9, r7, #1
 800b938:	4628      	mov	r0, r5
 800b93a:	4631      	mov	r1, r6
 800b93c:	4622      	mov	r2, r4
 800b93e:	f106 38ff 	add.w	r8, r6, #4294967295
 800b942:	f7fc fef1 	bl	8008728 <LCD_DrawHLine>
 800b946:	4628      	mov	r0, r5
 800b948:	4649      	mov	r1, r9
 800b94a:	4642      	mov	r2, r8
 800b94c:	f7fc ff12 	bl	8008774 <LCD_DrawVLine>
 800b950:	4620      	mov	r0, r4
 800b952:	4649      	mov	r1, r9
 800b954:	4642      	mov	r2, r8
 800b956:	f7fc ff0d 	bl	8008774 <LCD_DrawVLine>
 800b95a:	f7fa f947 	bl	8005bec <WM__GetNextIVR>
 800b95e:	e7e3      	b.n	800b928 <GUI_DrawRect+0x40>
 800b960:	b003      	add	sp, #12
 800b962:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b966:	bf00      	nop
 800b968:	200000b8 	.word	0x200000b8

0800b96c <LCD_Index2Color_M565>:
 800b96c:	f3c0 21c4 	ubfx	r1, r0, #11, #5
 800b970:	4b06      	ldr	r3, [pc, #24]	; (800b98c <LCD_Index2Color_M565+0x20>)
 800b972:	f000 021f 	and.w	r2, r0, #31
 800b976:	f3c0 1045 	ubfx	r0, r0, #5, #6
 800b97a:	5c9a      	ldrb	r2, [r3, r2]
 800b97c:	5c5b      	ldrb	r3, [r3, r1]
 800b97e:	eb03 4302 	add.w	r3, r3, r2, lsl #16
 800b982:	4a03      	ldr	r2, [pc, #12]	; (800b990 <LCD_Index2Color_M565+0x24>)
 800b984:	5c10      	ldrb	r0, [r2, r0]
 800b986:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 800b98a:	4770      	bx	lr
 800b98c:	08012a1e 	.word	0x08012a1e
 800b990:	08012a3e 	.word	0x08012a3e

0800b994 <_Color2Index_M565>:
 800b994:	f3c0 4107 	ubfx	r1, r0, #16, #8
 800b998:	4b06      	ldr	r3, [pc, #24]	; (800b9b4 <_Color2Index_M565+0x20>)
 800b99a:	b2c2      	uxtb	r2, r0
 800b99c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 800b9a0:	5c9a      	ldrb	r2, [r3, r2]
 800b9a2:	5c5b      	ldrb	r3, [r3, r1]
 800b9a4:	eb03 23c2 	add.w	r3, r3, r2, lsl #11
 800b9a8:	4a03      	ldr	r2, [pc, #12]	; (800b9b8 <_Color2Index_M565+0x24>)
 800b9aa:	5c10      	ldrb	r0, [r2, r0]
 800b9ac:	eb03 1040 	add.w	r0, r3, r0, lsl #5
 800b9b0:	4770      	bx	lr
 800b9b2:	bf00      	nop
 800b9b4:	0801291e 	.word	0x0801291e
 800b9b8:	08012a7e 	.word	0x08012a7e

0800b9bc <_GetIndexMask_M565>:
 800b9bc:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800b9c0:	4770      	bx	lr
	...

0800b9c4 <_Color2IndexBulk>:
 800b9c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b9c6:	4f0f      	ldr	r7, [pc, #60]	; (800ba04 <_Color2IndexBulk+0x40>)
 800b9c8:	683f      	ldr	r7, [r7, #0]
 800b9ca:	4606      	mov	r6, r0
 800b9cc:	460d      	mov	r5, r1
 800b9ce:	4614      	mov	r4, r2
 800b9d0:	469c      	mov	ip, r3
 800b9d2:	b10f      	cbz	r7, 800b9d8 <_Color2IndexBulk+0x14>
 800b9d4:	47b8      	blx	r7
 800b9d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b9d8:	f856 2b04 	ldr.w	r2, [r6], #4
 800b9dc:	490a      	ldr	r1, [pc, #40]	; (800ba08 <_Color2IndexBulk+0x44>)
 800b9de:	b2d3      	uxtb	r3, r2
 800b9e0:	3c01      	subs	r4, #1
 800b9e2:	5cc8      	ldrb	r0, [r1, r3]
 800b9e4:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800b9e8:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800b9ec:	5ccb      	ldrb	r3, [r1, r3]
 800b9ee:	4907      	ldr	r1, [pc, #28]	; (800ba0c <_Color2IndexBulk+0x48>)
 800b9f0:	5c8a      	ldrb	r2, [r1, r2]
 800b9f2:	eb03 23c0 	add.w	r3, r3, r0, lsl #11
 800b9f6:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 800b9fa:	802b      	strh	r3, [r5, #0]
 800b9fc:	4465      	add	r5, ip
 800b9fe:	d1eb      	bne.n	800b9d8 <_Color2IndexBulk+0x14>
 800ba00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ba02:	bf00      	nop
 800ba04:	20002b94 	.word	0x20002b94
 800ba08:	0801291e 	.word	0x0801291e
 800ba0c:	08012a7e 	.word	0x08012a7e

0800ba10 <_Index2ColorBulk>:
 800ba10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ba12:	4e13      	ldr	r6, [pc, #76]	; (800ba60 <_Index2ColorBulk+0x50>)
 800ba14:	6836      	ldr	r6, [r6, #0]
 800ba16:	4684      	mov	ip, r0
 800ba18:	4614      	mov	r4, r2
 800ba1a:	461d      	mov	r5, r3
 800ba1c:	b10e      	cbz	r6, 800ba22 <_Index2ColorBulk+0x12>
 800ba1e:	47b0      	blx	r6
 800ba20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ba22:	1e50      	subs	r0, r2, #1
 800ba24:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 800ba28:	3a01      	subs	r2, #1
 800ba2a:	fb03 c000 	mla	r0, r3, r0, ip
 800ba2e:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800ba32:	8802      	ldrh	r2, [r0, #0]
 800ba34:	4b0b      	ldr	r3, [pc, #44]	; (800ba64 <_Index2ColorBulk+0x54>)
 800ba36:	f002 061f 	and.w	r6, r2, #31
 800ba3a:	0ad7      	lsrs	r7, r2, #11
 800ba3c:	5d9e      	ldrb	r6, [r3, r6]
 800ba3e:	5ddb      	ldrb	r3, [r3, r7]
 800ba40:	f3c2 1245 	ubfx	r2, r2, #5, #6
 800ba44:	eb03 4306 	add.w	r3, r3, r6, lsl #16
 800ba48:	4e07      	ldr	r6, [pc, #28]	; (800ba68 <_Index2ColorBulk+0x58>)
 800ba4a:	5cb2      	ldrb	r2, [r6, r2]
 800ba4c:	3c01      	subs	r4, #1
 800ba4e:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800ba52:	f841 3904 	str.w	r3, [r1], #-4
 800ba56:	ebc5 0000 	rsb	r0, r5, r0
 800ba5a:	d1ea      	bne.n	800ba32 <_Index2ColorBulk+0x22>
 800ba5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ba5e:	bf00      	nop
 800ba60:	20002b90 	.word	0x20002b90
 800ba64:	08012a1e 	.word	0x08012a1e
 800ba68:	08012a3e 	.word	0x08012a3e

0800ba6c <LCD_Index2Color_888>:
 800ba6c:	4770      	bx	lr

0800ba6e <LCD_Index2Color_8888>:
 800ba6e:	4770      	bx	lr

0800ba70 <_Color2Index_8888>:
 800ba70:	4770      	bx	lr

0800ba72 <_GetIndexMask_8888>:
 800ba72:	f04f 30ff 	mov.w	r0, #4294967295
 800ba76:	4770      	bx	lr

0800ba78 <_Color2IndexBulk>:
 800ba78:	b510      	push	{r4, lr}
 800ba7a:	f850 4b04 	ldr.w	r4, [r0], #4
 800ba7e:	600c      	str	r4, [r1, #0]
 800ba80:	3a01      	subs	r2, #1
 800ba82:	4419      	add	r1, r3
 800ba84:	d1f9      	bne.n	800ba7a <_Color2IndexBulk+0x2>
 800ba86:	bd10      	pop	{r4, pc}

0800ba88 <_Index2ColorBulk>:
 800ba88:	b510      	push	{r4, lr}
 800ba8a:	6804      	ldr	r4, [r0, #0]
 800ba8c:	f841 4b04 	str.w	r4, [r1], #4
 800ba90:	3a01      	subs	r2, #1
 800ba92:	4418      	add	r0, r3
 800ba94:	d1f9      	bne.n	800ba8a <_Index2ColorBulk+0x2>
 800ba96:	bd10      	pop	{r4, pc}

0800ba98 <_DrawDown>:
 800ba98:	4770      	bx	lr

0800ba9a <_DrawUp>:
 800ba9a:	4770      	bx	lr

0800ba9c <_DrawDownRect>:
 800ba9c:	4770      	bx	lr

0800ba9e <_DrawUpRect>:
 800ba9e:	4770      	bx	lr

0800baa0 <_DrawFlat>:
 800baa0:	4770      	bx	lr

0800baa2 <_EffectRequiresRedraw>:
 800baa2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800baa4:	460d      	mov	r5, r1
 800baa6:	f100 0108 	add.w	r1, r0, #8
 800baaa:	4602      	mov	r2, r0
 800baac:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800baae:	c903      	ldmia	r1, {r0, r1}
 800bab0:	681c      	ldr	r4, [r3, #0]
 800bab2:	e88d 0003 	stmia.w	sp, {r0, r1}
 800bab6:	4610      	mov	r0, r2
 800bab8:	4669      	mov	r1, sp
 800baba:	f7f8 fb6f 	bl	800419c <WM__Screen2Client>
 800babe:	f9b5 2000 	ldrsh.w	r2, [r5]
 800bac2:	f9bd 3000 	ldrsh.w	r3, [sp]
 800bac6:	4422      	add	r2, r4
 800bac8:	429a      	cmp	r2, r3
 800baca:	dc17      	bgt.n	800bafc <_EffectRequiresRedraw+0x5a>
 800bacc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800bad0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800bad4:	1b12      	subs	r2, r2, r4
 800bad6:	429a      	cmp	r2, r3
 800bad8:	db10      	blt.n	800bafc <_EffectRequiresRedraw+0x5a>
 800bada:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800bade:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800bae2:	4422      	add	r2, r4
 800bae4:	429a      	cmp	r2, r3
 800bae6:	dc09      	bgt.n	800bafc <_EffectRequiresRedraw+0x5a>
 800bae8:	f9b5 0006 	ldrsh.w	r0, [r5, #6]
 800baec:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800baf0:	1b04      	subs	r4, r0, r4
 800baf2:	429c      	cmp	r4, r3
 800baf4:	bfac      	ite	ge
 800baf6:	2000      	movge	r0, #0
 800baf8:	2001      	movlt	r0, #1
 800bafa:	e000      	b.n	800bafe <_EffectRequiresRedraw+0x5c>
 800bafc:	2001      	movs	r0, #1
 800bafe:	b003      	add	sp, #12
 800bb00:	bd30      	pop	{r4, r5, pc}

0800bb02 <WIDGET__RotateRect90>:
 800bb02:	f9b0 3000 	ldrsh.w	r3, [r0]
 800bb06:	b570      	push	{r4, r5, r6, lr}
 800bb08:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 800bb0c:	8815      	ldrh	r5, [r2, #0]
 800bb0e:	88d0      	ldrh	r0, [r2, #6]
 800bb10:	8894      	ldrh	r4, [r2, #4]
 800bb12:	8852      	ldrh	r2, [r2, #2]
 800bb14:	804d      	strh	r5, [r1, #2]
 800bb16:	1af3      	subs	r3, r6, r3
 800bb18:	b29b      	uxth	r3, r3
 800bb1a:	1a18      	subs	r0, r3, r0
 800bb1c:	1a9b      	subs	r3, r3, r2
 800bb1e:	8008      	strh	r0, [r1, #0]
 800bb20:	808b      	strh	r3, [r1, #4]
 800bb22:	80cc      	strh	r4, [r1, #6]
 800bb24:	bd70      	pop	{r4, r5, r6, pc}

0800bb26 <WIDGET__GetClientRect>:
 800bb26:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800bb28:	071b      	lsls	r3, r3, #28
 800bb2a:	b513      	push	{r0, r1, r4, lr}
 800bb2c:	460c      	mov	r4, r1
 800bb2e:	d50f      	bpl.n	800bb50 <WIDGET__GetClientRect+0x2a>
 800bb30:	4668      	mov	r0, sp
 800bb32:	f7f8 fdeb 	bl	800470c <WM_GetClientRect>
 800bb36:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bb3a:	8023      	strh	r3, [r4, #0]
 800bb3c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bb40:	80a3      	strh	r3, [r4, #4]
 800bb42:	f8bd 3000 	ldrh.w	r3, [sp]
 800bb46:	8063      	strh	r3, [r4, #2]
 800bb48:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bb4c:	80e3      	strh	r3, [r4, #6]
 800bb4e:	e002      	b.n	800bb56 <WIDGET__GetClientRect+0x30>
 800bb50:	4608      	mov	r0, r1
 800bb52:	f7f8 fddb 	bl	800470c <WM_GetClientRect>
 800bb56:	b002      	add	sp, #8
 800bb58:	bd10      	pop	{r4, pc}

0800bb5a <WIDGET__GetInsideRect>:
 800bb5a:	b538      	push	{r3, r4, r5, lr}
 800bb5c:	4604      	mov	r4, r0
 800bb5e:	460d      	mov	r5, r1
 800bb60:	f7f9 fd50 	bl	8005604 <WM__GetClientRectWin>
 800bb64:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800bb66:	4628      	mov	r0, r5
 800bb68:	4629      	mov	r1, r5
 800bb6a:	681a      	ldr	r2, [r3, #0]
 800bb6c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bb70:	f7fd b9a5 	b.w	8008ebe <GUI__ReduceRect>

0800bb74 <WIDGET__Init>:
 800bb74:	4b02      	ldr	r3, [pc, #8]	; (800bb80 <WIDGET__Init+0xc>)
 800bb76:	8642      	strh	r2, [r0, #50]	; 0x32
 800bb78:	681b      	ldr	r3, [r3, #0]
 800bb7a:	62c3      	str	r3, [r0, #44]	; 0x2c
 800bb7c:	8601      	strh	r1, [r0, #48]	; 0x30
 800bb7e:	4770      	bx	lr
 800bb80:	200000c8 	.word	0x200000c8

0800bb84 <WIDGET_SetState>:
 800bb84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bb86:	460c      	mov	r4, r1
 800bb88:	4605      	mov	r5, r0
 800bb8a:	f7ff fc6d 	bl	800b468 <GUI_ALLOC_LockH>
 800bb8e:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800bb90:	9001      	str	r0, [sp, #4]
 800bb92:	4294      	cmp	r4, r2
 800bb94:	d003      	beq.n	800bb9e <WIDGET_SetState+0x1a>
 800bb96:	8644      	strh	r4, [r0, #50]	; 0x32
 800bb98:	4628      	mov	r0, r5
 800bb9a:	f7f9 fe7d 	bl	8005898 <WM_InvalidateWindow>
 800bb9e:	a801      	add	r0, sp, #4
 800bba0:	f7ff fc70 	bl	800b484 <GUI_ALLOC_UnlockH>
 800bba4:	b003      	add	sp, #12
 800bba6:	bd30      	pop	{r4, r5, pc}

0800bba8 <WIDGET_OrState>:
 800bba8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bbaa:	460c      	mov	r4, r1
 800bbac:	4605      	mov	r5, r0
 800bbae:	b178      	cbz	r0, 800bbd0 <WIDGET_OrState+0x28>
 800bbb0:	f7ff fc5a 	bl	800b468 <GUI_ALLOC_LockH>
 800bbb4:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800bbb6:	9001      	str	r0, [sp, #4]
 800bbb8:	ea04 0102 	and.w	r1, r4, r2
 800bbbc:	428c      	cmp	r4, r1
 800bbbe:	d004      	beq.n	800bbca <WIDGET_OrState+0x22>
 800bbc0:	4314      	orrs	r4, r2
 800bbc2:	8644      	strh	r4, [r0, #50]	; 0x32
 800bbc4:	4628      	mov	r0, r5
 800bbc6:	f7f9 fe67 	bl	8005898 <WM_InvalidateWindow>
 800bbca:	a801      	add	r0, sp, #4
 800bbcc:	f7ff fc5a 	bl	800b484 <GUI_ALLOC_UnlockH>
 800bbd0:	b003      	add	sp, #12
 800bbd2:	bd30      	pop	{r4, r5, pc}

0800bbd4 <WIDGET_AndState>:
 800bbd4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bbd6:	460d      	mov	r5, r1
 800bbd8:	4604      	mov	r4, r0
 800bbda:	b170      	cbz	r0, 800bbfa <WIDGET_AndState+0x26>
 800bbdc:	f7ff fc44 	bl	800b468 <GUI_ALLOC_LockH>
 800bbe0:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800bbe2:	9001      	str	r0, [sp, #4]
 800bbe4:	ea22 0105 	bic.w	r1, r2, r5
 800bbe8:	428a      	cmp	r2, r1
 800bbea:	d003      	beq.n	800bbf4 <WIDGET_AndState+0x20>
 800bbec:	8641      	strh	r1, [r0, #50]	; 0x32
 800bbee:	4620      	mov	r0, r4
 800bbf0:	f7f9 fe52 	bl	8005898 <WM_InvalidateWindow>
 800bbf4:	a801      	add	r0, sp, #4
 800bbf6:	f7ff fc45 	bl	800b484 <GUI_ALLOC_UnlockH>
 800bbfa:	b003      	add	sp, #12
 800bbfc:	bd30      	pop	{r4, r5, pc}

0800bbfe <WIDGET_HandleActive>:
 800bbfe:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bc00:	460d      	mov	r5, r1
 800bc02:	b085      	sub	sp, #20
 800bc04:	4606      	mov	r6, r0
 800bc06:	2800      	cmp	r0, #0
 800bc08:	f000 8095 	beq.w	800bd36 <WIDGET_HandleActive+0x138>
 800bc0c:	f7ff fc2c 	bl	800b468 <GUI_ALLOC_LockH>
 800bc10:	682b      	ldr	r3, [r5, #0]
 800bc12:	9002      	str	r0, [sp, #8]
 800bc14:	2b16      	cmp	r3, #22
 800bc16:	d054      	beq.n	800bcc2 <WIDGET_HandleActive+0xc4>
 800bc18:	dc0c      	bgt.n	800bc34 <WIDGET_HandleActive+0x36>
 800bc1a:	2b11      	cmp	r3, #17
 800bc1c:	d033      	beq.n	800bc86 <WIDGET_HandleActive+0x88>
 800bc1e:	dc02      	bgt.n	800bc26 <WIDGET_HandleActive+0x28>
 800bc20:	2b0d      	cmp	r3, #13
 800bc22:	d040      	beq.n	800bca6 <WIDGET_HandleActive+0xa8>
 800bc24:	e080      	b.n	800bd28 <WIDGET_HandleActive+0x12a>
 800bc26:	2b14      	cmp	r3, #20
 800bc28:	d079      	beq.n	800bd1e <WIDGET_HandleActive+0x120>
 800bc2a:	2b15      	cmp	r3, #21
 800bc2c:	d17c      	bne.n	800bd28 <WIDGET_HandleActive+0x12a>
 800bc2e:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 800bc32:	e072      	b.n	800bd1a <WIDGET_HandleActive+0x11c>
 800bc34:	2b1f      	cmp	r3, #31
 800bc36:	d06d      	beq.n	800bd14 <WIDGET_HandleActive+0x116>
 800bc38:	dc02      	bgt.n	800bc40 <WIDGET_HandleActive+0x42>
 800bc3a:	2b1e      	cmp	r3, #30
 800bc3c:	d044      	beq.n	800bcc8 <WIDGET_HandleActive+0xca>
 800bc3e:	e073      	b.n	800bd28 <WIDGET_HandleActive+0x12a>
 800bc40:	2b31      	cmp	r3, #49	; 0x31
 800bc42:	d01e      	beq.n	800bc82 <WIDGET_HandleActive+0x84>
 800bc44:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800bc48:	d16e      	bne.n	800bd28 <WIDGET_HandleActive+0x12a>
 800bc4a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800bc4c:	6819      	ldr	r1, [r3, #0]
 800bc4e:	68eb      	ldr	r3, [r5, #12]
 800bc50:	62c3      	str	r3, [r0, #44]	; 0x2c
 800bc52:	681b      	ldr	r3, [r3, #0]
 800bc54:	a802      	add	r0, sp, #8
 800bc56:	1acd      	subs	r5, r1, r3
 800bc58:	f7ff fc14 	bl	800b484 <GUI_ALLOC_UnlockH>
 800bc5c:	4630      	mov	r0, r6
 800bc5e:	f7ff fc03 	bl	800b468 <GUI_ALLOC_LockH>
 800bc62:	ac04      	add	r4, sp, #16
 800bc64:	4269      	negs	r1, r5
 800bc66:	f844 0d04 	str.w	r0, [r4, #-4]!
 800bc6a:	460a      	mov	r2, r1
 800bc6c:	462b      	mov	r3, r5
 800bc6e:	9500      	str	r5, [sp, #0]
 800bc70:	f7f8 fad0 	bl	8004214 <WM__UpdateChildPositions>
 800bc74:	4620      	mov	r0, r4
 800bc76:	f7ff fc05 	bl	800b484 <GUI_ALLOC_UnlockH>
 800bc7a:	4630      	mov	r0, r6
 800bc7c:	f7f9 fe0c 	bl	8005898 <WM_InvalidateWindow>
 800bc80:	e050      	b.n	800bd24 <WIDGET_HandleActive+0x126>
 800bc82:	2400      	movs	r4, #0
 800bc84:	e041      	b.n	800bd0a <WIDGET_HandleActive+0x10c>
 800bc86:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800bc88:	06d9      	lsls	r1, r3, #27
 800bc8a:	d54d      	bpl.n	800bd28 <WIDGET_HandleActive+0x12a>
 800bc8c:	68eb      	ldr	r3, [r5, #12]
 800bc8e:	2b00      	cmp	r3, #0
 800bc90:	d04a      	beq.n	800bd28 <WIDGET_HandleActive+0x12a>
 800bc92:	7a1b      	ldrb	r3, [r3, #8]
 800bc94:	2b00      	cmp	r3, #0
 800bc96:	d047      	beq.n	800bd28 <WIDGET_HandleActive+0x12a>
 800bc98:	a802      	add	r0, sp, #8
 800bc9a:	f7ff fbf3 	bl	800b484 <GUI_ALLOC_UnlockH>
 800bc9e:	4630      	mov	r0, r6
 800bca0:	f7f8 ffbc 	bl	8004c1c <WM_SetFocus>
 800bca4:	e040      	b.n	800bd28 <WIDGET_HandleActive+0x12a>
 800bca6:	68eb      	ldr	r3, [r5, #12]
 800bca8:	68db      	ldr	r3, [r3, #12]
 800bcaa:	2b00      	cmp	r3, #0
 800bcac:	d03c      	beq.n	800bd28 <WIDGET_HandleActive+0x12a>
 800bcae:	7a1b      	ldrb	r3, [r3, #8]
 800bcb0:	2b00      	cmp	r3, #0
 800bcb2:	d039      	beq.n	800bd28 <WIDGET_HandleActive+0x12a>
 800bcb4:	a802      	add	r0, sp, #8
 800bcb6:	f7ff fbe5 	bl	800b484 <GUI_ALLOC_UnlockH>
 800bcba:	4630      	mov	r0, r6
 800bcbc:	f7f9 f8c8 	bl	8004e50 <WM_BringToTop>
 800bcc0:	e030      	b.n	800bd24 <WIDGET_HandleActive+0x126>
 800bcc2:	68eb      	ldr	r3, [r5, #12]
 800bcc4:	8603      	strh	r3, [r0, #48]	; 0x30
 800bcc6:	e02d      	b.n	800bd24 <WIDGET_HandleActive+0x126>
 800bcc8:	68eb      	ldr	r3, [r5, #12]
 800bcca:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 800bccc:	2b01      	cmp	r3, #1
 800bcce:	d108      	bne.n	800bce2 <WIDGET_HandleActive+0xe4>
 800bcd0:	06ca      	lsls	r2, r1, #27
 800bcd2:	d50d      	bpl.n	800bcf0 <WIDGET_HandleActive+0xf2>
 800bcd4:	4630      	mov	r0, r6
 800bcd6:	f041 0101 	orr.w	r1, r1, #1
 800bcda:	f7ff ff53 	bl	800bb84 <WIDGET_SetState>
 800bcde:	2708      	movs	r7, #8
 800bce0:	e008      	b.n	800bcf4 <WIDGET_HandleActive+0xf6>
 800bce2:	f021 0101 	bic.w	r1, r1, #1
 800bce6:	4630      	mov	r0, r6
 800bce8:	f7ff ff4c 	bl	800bb84 <WIDGET_SetState>
 800bcec:	2709      	movs	r7, #9
 800bcee:	e001      	b.n	800bcf4 <WIDGET_HandleActive+0xf6>
 800bcf0:	f04f 37ff 	mov.w	r7, #4294967295
 800bcf4:	a802      	add	r0, sp, #8
 800bcf6:	f7ff fbc5 	bl	800b484 <GUI_ALLOC_UnlockH>
 800bcfa:	1c7b      	adds	r3, r7, #1
 800bcfc:	f04f 0400 	mov.w	r4, #0
 800bd00:	d005      	beq.n	800bd0e <WIDGET_HandleActive+0x110>
 800bd02:	4630      	mov	r0, r6
 800bd04:	4639      	mov	r1, r7
 800bd06:	f7f8 ff7e 	bl	8004c06 <WM_NotifyParent>
 800bd0a:	60ec      	str	r4, [r5, #12]
 800bd0c:	e00d      	b.n	800bd2a <WIDGET_HandleActive+0x12c>
 800bd0e:	2301      	movs	r3, #1
 800bd10:	60eb      	str	r3, [r5, #12]
 800bd12:	e00a      	b.n	800bd2a <WIDGET_HandleActive+0x12c>
 800bd14:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800bd16:	f3c3 1300 	ubfx	r3, r3, #4, #1
 800bd1a:	60eb      	str	r3, [r5, #12]
 800bd1c:	e002      	b.n	800bd24 <WIDGET_HandleActive+0x126>
 800bd1e:	68e9      	ldr	r1, [r5, #12]
 800bd20:	f7ff ff1b 	bl	800bb5a <WIDGET__GetInsideRect>
 800bd24:	2400      	movs	r4, #0
 800bd26:	e000      	b.n	800bd2a <WIDGET_HandleActive+0x12c>
 800bd28:	2401      	movs	r4, #1
 800bd2a:	9b02      	ldr	r3, [sp, #8]
 800bd2c:	b123      	cbz	r3, 800bd38 <WIDGET_HandleActive+0x13a>
 800bd2e:	a802      	add	r0, sp, #8
 800bd30:	f7ff fba8 	bl	800b484 <GUI_ALLOC_UnlockH>
 800bd34:	e000      	b.n	800bd38 <WIDGET_HandleActive+0x13a>
 800bd36:	2401      	movs	r4, #1
 800bd38:	4620      	mov	r0, r4
 800bd3a:	b005      	add	sp, #20
 800bd3c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800bd3e <WIDGET__SetScrollState>:
 800bd3e:	b570      	push	{r4, r5, r6, lr}
 800bd40:	460d      	mov	r5, r1
 800bd42:	21fe      	movs	r1, #254	; 0xfe
 800bd44:	4616      	mov	r6, r2
 800bd46:	4604      	mov	r4, r0
 800bd48:	f7f8 fd62 	bl	8004810 <WM_GetDialogItem>
 800bd4c:	4629      	mov	r1, r5
 800bd4e:	f7f8 ffb3 	bl	8004cb8 <WM_SetScrollState>
 800bd52:	4620      	mov	r0, r4
 800bd54:	21ff      	movs	r1, #255	; 0xff
 800bd56:	f7f8 fd5b 	bl	8004810 <WM_GetDialogItem>
 800bd5a:	4631      	mov	r1, r6
 800bd5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd60:	f7f8 bfaa 	b.w	8004cb8 <WM_SetScrollState>

0800bd64 <WIDGET__DrawTriangle>:
 800bd64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bd66:	461c      	mov	r4, r3
 800bd68:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800bd6a:	9f06      	ldr	r7, [sp, #24]
 800bd6c:	071b      	lsls	r3, r3, #28
 800bd6e:	460d      	mov	r5, r1
 800bd70:	4616      	mov	r6, r2
 800bd72:	d50a      	bpl.n	800bd8a <WIDGET__DrawTriangle+0x26>
 800bd74:	2c00      	cmp	r4, #0
 800bd76:	db07      	blt.n	800bd88 <WIDGET__DrawTriangle+0x24>
 800bd78:	4628      	mov	r0, r5
 800bd7a:	1b31      	subs	r1, r6, r4
 800bd7c:	19a2      	adds	r2, r4, r6
 800bd7e:	f7fd fff1 	bl	8009d64 <GUI_DrawHLine>
 800bd82:	3c01      	subs	r4, #1
 800bd84:	443d      	add	r5, r7
 800bd86:	e7f5      	b.n	800bd74 <WIDGET__DrawTriangle+0x10>
 800bd88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bd8a:	2c00      	cmp	r4, #0
 800bd8c:	db07      	blt.n	800bd9e <WIDGET__DrawTriangle+0x3a>
 800bd8e:	4628      	mov	r0, r5
 800bd90:	1b31      	subs	r1, r6, r4
 800bd92:	19a2      	adds	r2, r4, r6
 800bd94:	f7fe f840 	bl	8009e18 <GUI_DrawVLine>
 800bd98:	3c01      	subs	r4, #1
 800bd9a:	443d      	add	r5, r7
 800bd9c:	e7f5      	b.n	800bd8a <WIDGET__DrawTriangle+0x26>
 800bd9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800bda0 <WIDGET__EFFECT_DrawDownRect>:
 800bda0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bda2:	4605      	mov	r5, r0
 800bda4:	460c      	mov	r4, r1
 800bda6:	b919      	cbnz	r1, 800bdb0 <WIDGET__EFFECT_DrawDownRect+0x10>
 800bda8:	4668      	mov	r0, sp
 800bdaa:	f7f8 fcaf 	bl	800470c <WM_GetClientRect>
 800bdae:	466c      	mov	r4, sp
 800bdb0:	8e6b      	ldrh	r3, [r5, #50]	; 0x32
 800bdb2:	071b      	lsls	r3, r3, #28
 800bdb4:	d505      	bpl.n	800bdc2 <WIDGET__EFFECT_DrawDownRect+0x22>
 800bdb6:	4622      	mov	r2, r4
 800bdb8:	4628      	mov	r0, r5
 800bdba:	4669      	mov	r1, sp
 800bdbc:	f7ff fea1 	bl	800bb02 <WIDGET__RotateRect90>
 800bdc0:	466c      	mov	r4, sp
 800bdc2:	4628      	mov	r0, r5
 800bdc4:	4621      	mov	r1, r4
 800bdc6:	f7ff fe6c 	bl	800baa2 <_EffectRequiresRedraw>
 800bdca:	b118      	cbz	r0, 800bdd4 <WIDGET__EFFECT_DrawDownRect+0x34>
 800bdcc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800bdce:	4620      	mov	r0, r4
 800bdd0:	691b      	ldr	r3, [r3, #16]
 800bdd2:	4798      	blx	r3
 800bdd4:	b003      	add	sp, #12
 800bdd6:	bd30      	pop	{r4, r5, pc}

0800bdd8 <WIDGET_SetEffect>:
 800bdd8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bdda:	2300      	movs	r3, #0
 800bddc:	9302      	str	r3, [sp, #8]
 800bdde:	9103      	str	r1, [sp, #12]
 800bde0:	f44f 7340 	mov.w	r3, #768	; 0x300
 800bde4:	4669      	mov	r1, sp
 800bde6:	9300      	str	r3, [sp, #0]
 800bde8:	f7f9 fbfd 	bl	80055e6 <WM_SendMessage>
 800bdec:	b005      	add	sp, #20
 800bdee:	f85d fb04 	ldr.w	pc, [sp], #4

0800bdf2 <_DeleteTimer>:
 800bdf2:	b507      	push	{r0, r1, r2, lr}
 800bdf4:	f7ff fb38 	bl	800b468 <GUI_ALLOC_LockH>
 800bdf8:	9001      	str	r0, [sp, #4]
 800bdfa:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800bdfc:	f000 ff93 	bl	800cd26 <WM_DeleteTimer>
 800be00:	a802      	add	r0, sp, #8
 800be02:	2200      	movs	r2, #0
 800be04:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800be08:	665a      	str	r2, [r3, #100]	; 0x64
 800be0a:	65da      	str	r2, [r3, #92]	; 0x5c
 800be0c:	f7ff fb3a 	bl	800b484 <GUI_ALLOC_UnlockH>
 800be10:	b003      	add	sp, #12
 800be12:	f85d fb04 	ldr.w	pc, [sp], #4

0800be16 <SCROLLBAR__Rect2VRect>:
 800be16:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800be18:	071b      	lsls	r3, r3, #28
 800be1a:	b510      	push	{r4, lr}
 800be1c:	d512      	bpl.n	800be44 <SCROLLBAR__Rect2VRect+0x2e>
 800be1e:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800be22:	f9b0 3000 	ldrsh.w	r3, [r0]
 800be26:	8808      	ldrh	r0, [r1, #0]
 800be28:	884c      	ldrh	r4, [r1, #2]
 800be2a:	800c      	strh	r4, [r1, #0]
 800be2c:	1ad3      	subs	r3, r2, r3
 800be2e:	888a      	ldrh	r2, [r1, #4]
 800be30:	88cc      	ldrh	r4, [r1, #6]
 800be32:	808c      	strh	r4, [r1, #4]
 800be34:	3301      	adds	r3, #1
 800be36:	b29b      	uxth	r3, r3
 800be38:	43c0      	mvns	r0, r0
 800be3a:	43d2      	mvns	r2, r2
 800be3c:	4418      	add	r0, r3
 800be3e:	4413      	add	r3, r2
 800be40:	80c8      	strh	r0, [r1, #6]
 800be42:	804b      	strh	r3, [r1, #2]
 800be44:	bd10      	pop	{r4, pc}

0800be46 <SCROLLBAR__InvalidatePartner>:
 800be46:	b510      	push	{r4, lr}
 800be48:	4604      	mov	r4, r0
 800be4a:	f7f8 fd8c 	bl	8004966 <WM_GetScrollPartner>
 800be4e:	f7f9 fd23 	bl	8005898 <WM_InvalidateWindow>
 800be52:	4620      	mov	r0, r4
 800be54:	f7f8 fd32 	bl	80048bc <WM_GetParent>
 800be58:	2125      	movs	r1, #37	; 0x25
 800be5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800be5e:	f7f8 bec2 	b.w	8004be6 <WM_SendMessageNoPara>
	...

0800be64 <SCROLLBAR_CreateUser>:
 800be64:	b5f0      	push	{r4, r5, r6, r7, lr}
 800be66:	b089      	sub	sp, #36	; 0x24
 800be68:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800be6a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800be6c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800be6e:	b9fa      	cbnz	r2, 800beb0 <SCROLLBAR_CreateUser+0x4c>
 800be70:	b9f3      	cbnz	r3, 800beb0 <SCROLLBAR_CreateUser+0x4c>
 800be72:	4630      	mov	r0, r6
 800be74:	a906      	add	r1, sp, #24
 800be76:	f7f8 fcec 	bl	8004852 <WM_GetInsideRectEx>
 800be7a:	f014 0f08 	tst.w	r4, #8
 800be7e:	4b2c      	ldr	r3, [pc, #176]	; (800bf30 <SCROLLBAR_CreateUser+0xcc>)
 800be80:	f9bd 701c 	ldrsh.w	r7, [sp, #28]
 800be84:	f9bd e01e 	ldrsh.w	lr, [sp, #30]
 800be88:	d009      	beq.n	800be9e <SCROLLBAR_CreateUser+0x3a>
 800be8a:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 800be8e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800be92:	1c78      	adds	r0, r7, #1
 800be94:	ebc1 030e 	rsb	r3, r1, lr
 800be98:	1a80      	subs	r0, r0, r2
 800be9a:	3301      	adds	r3, #1
 800be9c:	e008      	b.n	800beb0 <SCROLLBAR_CreateUser+0x4c>
 800be9e:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 800bea2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800bea6:	f10e 0101 	add.w	r1, lr, #1
 800beaa:	1a3a      	subs	r2, r7, r0
 800beac:	1ac9      	subs	r1, r1, r3
 800beae:	3201      	adds	r2, #1
 800beb0:	9600      	str	r6, [sp, #0]
 800beb2:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800beb4:	9601      	str	r6, [sp, #4]
 800beb6:	4e1f      	ldr	r6, [pc, #124]	; (800bf34 <SCROLLBAR_CreateUser+0xd0>)
 800beb8:	9602      	str	r6, [sp, #8]
 800beba:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800bebc:	363c      	adds	r6, #60	; 0x3c
 800bebe:	9603      	str	r6, [sp, #12]
 800bec0:	f7f9 fd18 	bl	80058f4 <WM_CreateWindowAsChild>
 800bec4:	4606      	mov	r6, r0
 800bec6:	2800      	cmp	r0, #0
 800bec8:	d02f      	beq.n	800bf2a <SCROLLBAR_CreateUser+0xc6>
 800beca:	f7ff facd 	bl	800b468 <GUI_ALLOC_LockH>
 800bece:	f004 0208 	and.w	r2, r4, #8
 800bed2:	06e3      	lsls	r3, r4, #27
 800bed4:	bf48      	it	mi
 800bed6:	f042 0210 	orrmi.w	r2, r2, #16
 800beda:	f1a5 03fe 	sub.w	r3, r5, #254	; 0xfe
 800bede:	bf48      	it	mi
 800bee0:	b292      	uxthmi	r2, r2
 800bee2:	2b01      	cmp	r3, #1
 800bee4:	bf88      	it	hi
 800bee6:	f042 0210 	orrhi.w	r2, r2, #16
 800beea:	4629      	mov	r1, r5
 800beec:	9005      	str	r0, [sp, #20]
 800beee:	f7ff fe41 	bl	800bb74 <WIDGET__Init>
 800bef2:	4b11      	ldr	r3, [pc, #68]	; (800bf38 <SCROLLBAR_CreateUser+0xd4>)
 800bef4:	af08      	add	r7, sp, #32
 800bef6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800bef8:	f857 4d0c 	ldr.w	r4, [r7, #-12]!
 800befc:	f104 0534 	add.w	r5, r4, #52	; 0x34
 800bf00:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 800bf04:	2364      	movs	r3, #100	; 0x64
 800bf06:	64e3      	str	r3, [r4, #76]	; 0x4c
 800bf08:	4d0c      	ldr	r5, [pc, #48]	; (800bf3c <SCROLLBAR_CreateUser+0xd8>)
 800bf0a:	230a      	movs	r3, #10
 800bf0c:	6563      	str	r3, [r4, #84]	; 0x54
 800bf0e:	2300      	movs	r3, #0
 800bf10:	6523      	str	r3, [r4, #80]	; 0x50
 800bf12:	682b      	ldr	r3, [r5, #0]
 800bf14:	6463      	str	r3, [r4, #68]	; 0x44
 800bf16:	4638      	mov	r0, r7
 800bf18:	f7ff fab4 	bl	800b484 <GUI_ALLOC_UnlockH>
 800bf1c:	682b      	ldr	r3, [r5, #0]
 800bf1e:	4630      	mov	r0, r6
 800bf20:	685b      	ldr	r3, [r3, #4]
 800bf22:	4798      	blx	r3
 800bf24:	4630      	mov	r0, r6
 800bf26:	f7ff ff8e 	bl	800be46 <SCROLLBAR__InvalidatePartner>
 800bf2a:	4630      	mov	r0, r6
 800bf2c:	b009      	add	sp, #36	; 0x24
 800bf2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bf30:	200000e0 	.word	0x200000e0
 800bf34:	0800c01f 	.word	0x0800c01f
 800bf38:	200000cc 	.word	0x200000cc
 800bf3c:	200000dc 	.word	0x200000dc

0800bf40 <SCROLLBAR_CreateEx>:
 800bf40:	b510      	push	{r4, lr}
 800bf42:	b086      	sub	sp, #24
 800bf44:	9c08      	ldr	r4, [sp, #32]
 800bf46:	9400      	str	r4, [sp, #0]
 800bf48:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800bf4a:	9401      	str	r4, [sp, #4]
 800bf4c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800bf4e:	9402      	str	r4, [sp, #8]
 800bf50:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800bf52:	9403      	str	r4, [sp, #12]
 800bf54:	2400      	movs	r4, #0
 800bf56:	9404      	str	r4, [sp, #16]
 800bf58:	f7ff ff84 	bl	800be64 <SCROLLBAR_CreateUser>
 800bf5c:	b006      	add	sp, #24
 800bf5e:	bd10      	pop	{r4, pc}

0800bf60 <SCROLLBAR_CreateAttached>:
 800bf60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bf62:	f001 0308 	and.w	r3, r1, #8
 800bf66:	2b00      	cmp	r3, #0
 800bf68:	f240 348a 	movw	r4, #906	; 0x38a
 800bf6c:	f240 528a 	movw	r2, #1418	; 0x58a
 800bf70:	bf08      	it	eq
 800bf72:	4622      	moveq	r2, r4
 800bf74:	bf0c      	ite	eq
 800bf76:	23ff      	moveq	r3, #255	; 0xff
 800bf78:	23fe      	movne	r3, #254	; 0xfe
 800bf7a:	e88d 0005 	stmia.w	sp, {r0, r2}
 800bf7e:	2000      	movs	r0, #0
 800bf80:	9102      	str	r1, [sp, #8]
 800bf82:	9303      	str	r3, [sp, #12]
 800bf84:	4602      	mov	r2, r0
 800bf86:	4603      	mov	r3, r0
 800bf88:	4601      	mov	r1, r0
 800bf8a:	f7ff ffd9 	bl	800bf40 <SCROLLBAR_CreateEx>
 800bf8e:	2106      	movs	r1, #6
 800bf90:	4604      	mov	r4, r0
 800bf92:	f7f8 fe38 	bl	8004c06 <WM_NotifyParent>
 800bf96:	4620      	mov	r0, r4
 800bf98:	b004      	add	sp, #16
 800bf9a:	bd10      	pop	{r4, pc}

0800bf9c <SCROLLBAR_SetValue>:
 800bf9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bf9e:	460c      	mov	r4, r1
 800bfa0:	4605      	mov	r5, r0
 800bfa2:	b300      	cbz	r0, 800bfe6 <SCROLLBAR_SetValue+0x4a>
 800bfa4:	f7ff fa60 	bl	800b468 <GUI_ALLOC_LockH>
 800bfa8:	2c00      	cmp	r4, #0
 800bfaa:	9001      	str	r0, [sp, #4]
 800bfac:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 800bfae:	6d42      	ldr	r2, [r0, #84]	; 0x54
 800bfb0:	db05      	blt.n	800bfbe <SCROLLBAR_SetValue+0x22>
 800bfb2:	1a8a      	subs	r2, r1, r2
 800bfb4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800bfb8:	4294      	cmp	r4, r2
 800bfba:	dc02      	bgt.n	800bfc2 <SCROLLBAR_SetValue+0x26>
 800bfbc:	e000      	b.n	800bfc0 <SCROLLBAR_SetValue+0x24>
 800bfbe:	2400      	movs	r4, #0
 800bfc0:	4622      	mov	r2, r4
 800bfc2:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800bfc4:	4291      	cmp	r1, r2
 800bfc6:	d00b      	beq.n	800bfe0 <SCROLLBAR_SetValue+0x44>
 800bfc8:	6502      	str	r2, [r0, #80]	; 0x50
 800bfca:	4628      	mov	r0, r5
 800bfcc:	f7f9 fc64 	bl	8005898 <WM_InvalidateWindow>
 800bfd0:	a801      	add	r0, sp, #4
 800bfd2:	f7ff fa57 	bl	800b484 <GUI_ALLOC_UnlockH>
 800bfd6:	4628      	mov	r0, r5
 800bfd8:	2105      	movs	r1, #5
 800bfda:	f7f8 fe14 	bl	8004c06 <WM_NotifyParent>
 800bfde:	e002      	b.n	800bfe6 <SCROLLBAR_SetValue+0x4a>
 800bfe0:	a801      	add	r0, sp, #4
 800bfe2:	f7ff fa4f 	bl	800b484 <GUI_ALLOC_UnlockH>
 800bfe6:	b003      	add	sp, #12
 800bfe8:	bd30      	pop	{r4, r5, pc}

0800bfea <SCROLLBAR_AddValue>:
 800bfea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bfec:	460d      	mov	r5, r1
 800bfee:	4606      	mov	r6, r0
 800bff0:	b160      	cbz	r0, 800c00c <SCROLLBAR_AddValue+0x22>
 800bff2:	f7ff fa39 	bl	800b468 <GUI_ALLOC_LockH>
 800bff6:	4602      	mov	r2, r0
 800bff8:	a802      	add	r0, sp, #8
 800bffa:	6d14      	ldr	r4, [r2, #80]	; 0x50
 800bffc:	f840 2d04 	str.w	r2, [r0, #-4]!
 800c000:	f7ff fa40 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c004:	4630      	mov	r0, r6
 800c006:	1961      	adds	r1, r4, r5
 800c008:	f7ff ffc8 	bl	800bf9c <SCROLLBAR_SetValue>
 800c00c:	b002      	add	sp, #8
 800c00e:	bd70      	pop	{r4, r5, r6, pc}

0800c010 <SCROLLBAR_Dec>:
 800c010:	f04f 31ff 	mov.w	r1, #4294967295
 800c014:	f7ff bfe9 	b.w	800bfea <SCROLLBAR_AddValue>

0800c018 <SCROLLBAR_Inc>:
 800c018:	2101      	movs	r1, #1
 800c01a:	f7ff bfe6 	b.w	800bfea <SCROLLBAR_AddValue>

0800c01e <SCROLLBAR_Callback>:
 800c01e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c022:	6844      	ldr	r4, [r0, #4]
 800c024:	4680      	mov	r8, r0
 800c026:	b08f      	sub	sp, #60	; 0x3c
 800c028:	4620      	mov	r0, r4
 800c02a:	4641      	mov	r1, r8
 800c02c:	f7ff fde7 	bl	800bbfe <WIDGET_HandleActive>
 800c030:	2800      	cmp	r0, #0
 800c032:	f000 81c0 	beq.w	800c3b6 <SCROLLBAR_Callback+0x398>
 800c036:	f8d8 3000 	ldr.w	r3, [r8]
 800c03a:	2b23      	cmp	r3, #35	; 0x23
 800c03c:	f000 8182 	beq.w	800c344 <SCROLLBAR_Callback+0x326>
 800c040:	dc0b      	bgt.n	800c05a <SCROLLBAR_Callback+0x3c>
 800c042:	2b0e      	cmp	r3, #14
 800c044:	f000 812a 	beq.w	800c29c <SCROLLBAR_Callback+0x27e>
 800c048:	2b0f      	cmp	r3, #15
 800c04a:	d012      	beq.n	800c072 <SCROLLBAR_Callback+0x54>
 800c04c:	2b0b      	cmp	r3, #11
 800c04e:	f040 81af 	bne.w	800c3b0 <SCROLLBAR_Callback+0x392>
 800c052:	4620      	mov	r0, r4
 800c054:	f7ff fef7 	bl	800be46 <SCROLLBAR__InvalidatePartner>
 800c058:	e1aa      	b.n	800c3b0 <SCROLLBAR_Callback+0x392>
 800c05a:	f240 1213 	movw	r2, #275	; 0x113
 800c05e:	4293      	cmp	r3, r2
 800c060:	f000 817f 	beq.w	800c362 <SCROLLBAR_Callback+0x344>
 800c064:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800c068:	d012      	beq.n	800c090 <SCROLLBAR_Callback+0x72>
 800c06a:	2b24      	cmp	r3, #36	; 0x24
 800c06c:	f040 81a0 	bne.w	800c3b0 <SCROLLBAR_Callback+0x392>
 800c070:	e143      	b.n	800c2fa <SCROLLBAR_Callback+0x2dc>
 800c072:	4620      	mov	r0, r4
 800c074:	f7ff f9f8 	bl	800b468 <GUI_ALLOC_LockH>
 800c078:	9005      	str	r0, [sp, #20]
 800c07a:	2800      	cmp	r0, #0
 800c07c:	f000 819b 	beq.w	800c3b6 <SCROLLBAR_Callback+0x398>
 800c080:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800c082:	a805      	add	r0, sp, #20
 800c084:	681d      	ldr	r5, [r3, #0]
 800c086:	f7ff f9fd 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c08a:	4620      	mov	r0, r4
 800c08c:	47a8      	blx	r5
 800c08e:	e192      	b.n	800c3b6 <SCROLLBAR_Callback+0x398>
 800c090:	f8d8 700c 	ldr.w	r7, [r8, #12]
 800c094:	2f00      	cmp	r7, #0
 800c096:	f000 818b 	beq.w	800c3b0 <SCROLLBAR_Callback+0x392>
 800c09a:	7a3b      	ldrb	r3, [r7, #8]
 800c09c:	4620      	mov	r0, r4
 800c09e:	2b00      	cmp	r3, #0
 800c0a0:	f000 80d6 	beq.w	800c250 <SCROLLBAR_Callback+0x232>
 800c0a4:	f7ff f9e0 	bl	800b468 <GUI_ALLOC_LockH>
 800c0a8:	a905      	add	r1, sp, #20
 800c0aa:	6c83      	ldr	r3, [r0, #72]	; 0x48
 800c0ac:	9003      	str	r0, [sp, #12]
 800c0ae:	6d06      	ldr	r6, [r0, #80]	; 0x50
 800c0b0:	4620      	mov	r0, r4
 800c0b2:	4798      	blx	r3
 800c0b4:	9b03      	ldr	r3, [sp, #12]
 800c0b6:	f8b3 a032 	ldrh.w	sl, [r3, #50]	; 0x32
 800c0ba:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 800c0bc:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800c0be:	f01a 0f08 	tst.w	sl, #8
 800c0c2:	ebc5 0902 	rsb	r9, r5, r2
 800c0c6:	d003      	beq.n	800c0d0 <SCROLLBAR_Callback+0xb2>
 800c0c8:	e897 0006 	ldmia.w	r7, {r1, r2}
 800c0cc:	603a      	str	r2, [r7, #0]
 800c0ce:	6079      	str	r1, [r7, #4]
 800c0d0:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 800c0d2:	683f      	ldr	r7, [r7, #0]
 800c0d4:	2a03      	cmp	r2, #3
 800c0d6:	d114      	bne.n	800c102 <SCROLLBAR_Callback+0xe4>
 800c0d8:	4620      	mov	r0, r4
 800c0da:	f7ff fe8a 	bl	800bdf2 <_DeleteTimer>
 800c0de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c0e0:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c0e2:	2002      	movs	r0, #2
 800c0e4:	fb93 f3f0 	sdiv	r3, r3, r0
 800c0e8:	1aff      	subs	r7, r7, r3
 800c0ea:	9b06      	ldr	r3, [sp, #24]
 800c0ec:	1afb      	subs	r3, r7, r3
 800c0ee:	1e58      	subs	r0, r3, #1
 800c0f0:	fb00 f009 	mul.w	r0, r0, r9
 800c0f4:	f7fc fe44 	bl	8008d80 <GUI__DivideRound32>
 800c0f8:	9b03      	ldr	r3, [sp, #12]
 800c0fa:	4606      	mov	r6, r0
 800c0fc:	6618      	str	r0, [r3, #96]	; 0x60
 800c0fe:	a803      	add	r0, sp, #12
 800c100:	e07e      	b.n	800c200 <SCROLLBAR_Callback+0x1e2>
 800c102:	9806      	ldr	r0, [sp, #24]
 800c104:	4287      	cmp	r7, r0
 800c106:	dc0b      	bgt.n	800c120 <SCROLLBAR_Callback+0x102>
 800c108:	2a02      	cmp	r2, #2
 800c10a:	d039      	beq.n	800c180 <SCROLLBAR_Callback+0x162>
 800c10c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c10e:	b113      	cbz	r3, 800c116 <SCROLLBAR_Callback+0xf8>
 800c110:	4620      	mov	r0, r4
 800c112:	f7ff fe6e 	bl	800bdf2 <_DeleteTimer>
 800c116:	9b03      	ldr	r3, [sp, #12]
 800c118:	2202      	movs	r2, #2
 800c11a:	3e01      	subs	r6, #1
 800c11c:	659a      	str	r2, [r3, #88]	; 0x58
 800c11e:	e02f      	b.n	800c180 <SCROLLBAR_Callback+0x162>
 800c120:	9907      	ldr	r1, [sp, #28]
 800c122:	428f      	cmp	r7, r1
 800c124:	da02      	bge.n	800c12c <SCROLLBAR_Callback+0x10e>
 800c126:	1b76      	subs	r6, r6, r5
 800c128:	426d      	negs	r5, r5
 800c12a:	e02f      	b.n	800c18c <SCROLLBAR_Callback+0x16e>
 800c12c:	9908      	ldr	r1, [sp, #32]
 800c12e:	428f      	cmp	r7, r1
 800c130:	dc12      	bgt.n	800c158 <SCROLLBAR_Callback+0x13a>
 800c132:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c134:	2900      	cmp	r1, #0
 800c136:	dd0b      	ble.n	800c150 <SCROLLBAR_Callback+0x132>
 800c138:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c13a:	2202      	movs	r2, #2
 800c13c:	fb93 f3f2 	sdiv	r3, r3, r2
 800c140:	1aff      	subs	r7, r7, r3
 800c142:	1a3f      	subs	r7, r7, r0
 800c144:	3f01      	subs	r7, #1
 800c146:	fb07 f009 	mul.w	r0, r7, r9
 800c14a:	f7fc fe19 	bl	8008d80 <GUI__DivideRound32>
 800c14e:	4606      	mov	r6, r0
 800c150:	9b03      	ldr	r3, [sp, #12]
 800c152:	2203      	movs	r2, #3
 800c154:	659a      	str	r2, [r3, #88]	; 0x58
 800c156:	e016      	b.n	800c186 <SCROLLBAR_Callback+0x168>
 800c158:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c15a:	428f      	cmp	r7, r1
 800c15c:	da01      	bge.n	800c162 <SCROLLBAR_Callback+0x144>
 800c15e:	442e      	add	r6, r5
 800c160:	e014      	b.n	800c18c <SCROLLBAR_Callback+0x16e>
 800c162:	990a      	ldr	r1, [sp, #40]	; 0x28
 800c164:	428f      	cmp	r7, r1
 800c166:	dc0e      	bgt.n	800c186 <SCROLLBAR_Callback+0x168>
 800c168:	2a01      	cmp	r2, #1
 800c16a:	d00e      	beq.n	800c18a <SCROLLBAR_Callback+0x16c>
 800c16c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c16e:	b113      	cbz	r3, 800c176 <SCROLLBAR_Callback+0x158>
 800c170:	4620      	mov	r0, r4
 800c172:	f7ff fe3e 	bl	800bdf2 <_DeleteTimer>
 800c176:	9b03      	ldr	r3, [sp, #12]
 800c178:	2501      	movs	r5, #1
 800c17a:	3601      	adds	r6, #1
 800c17c:	659d      	str	r5, [r3, #88]	; 0x58
 800c17e:	e005      	b.n	800c18c <SCROLLBAR_Callback+0x16e>
 800c180:	f04f 35ff 	mov.w	r5, #4294967295
 800c184:	e002      	b.n	800c18c <SCROLLBAR_Callback+0x16e>
 800c186:	2500      	movs	r5, #0
 800c188:	e000      	b.n	800c18c <SCROLLBAR_Callback+0x16e>
 800c18a:	4615      	mov	r5, r2
 800c18c:	f8dd b00c 	ldr.w	fp, [sp, #12]
 800c190:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c192:	f8db 305c 	ldr.w	r3, [fp, #92]	; 0x5c
 800c196:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 800c19a:	9a06      	ldr	r2, [sp, #24]
 800c19c:	b171      	cbz	r1, 800c1bc <SCROLLBAR_Callback+0x19e>
 800c19e:	2002      	movs	r0, #2
 800c1a0:	fb9e f0f0 	sdiv	r0, lr, r0
 800c1a4:	1a38      	subs	r0, r7, r0
 800c1a6:	1a80      	subs	r0, r0, r2
 800c1a8:	3801      	subs	r0, #1
 800c1aa:	fb00 f009 	mul.w	r0, r0, r9
 800c1ae:	9301      	str	r3, [sp, #4]
 800c1b0:	f7fc fde6 	bl	8008d80 <GUI__DivideRound32>
 800c1b4:	9b01      	ldr	r3, [sp, #4]
 800c1b6:	f8cb 0060 	str.w	r0, [fp, #96]	; 0x60
 800c1ba:	e009      	b.n	800c1d0 <SCROLLBAR_Callback+0x1b2>
 800c1bc:	f8db 2058 	ldr.w	r2, [fp, #88]	; 0x58
 800c1c0:	2a01      	cmp	r2, #1
 800c1c2:	bf04      	itt	eq
 800c1c4:	f8db 104c 	ldreq.w	r1, [fp, #76]	; 0x4c
 800c1c8:	f101 31ff 	addeq.w	r1, r1, #4294967295
 800c1cc:	f8cb 1060 	str.w	r1, [fp, #96]	; 0x60
 800c1d0:	a803      	add	r0, sp, #12
 800c1d2:	9301      	str	r3, [sp, #4]
 800c1d4:	f7ff f956 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c1d8:	9b01      	ldr	r3, [sp, #4]
 800c1da:	b1a5      	cbz	r5, 800c206 <SCROLLBAR_Callback+0x1e8>
 800c1dc:	b9bb      	cbnz	r3, 800c20e <SCROLLBAR_Callback+0x1f0>
 800c1de:	f44f 72c8 	mov.w	r2, #400	; 0x190
 800c1e2:	f240 41d2 	movw	r1, #1234	; 0x4d2
 800c1e6:	4620      	mov	r0, r4
 800c1e8:	f000 fdd6 	bl	800cd98 <WM_CreateTimer>
 800c1ec:	4607      	mov	r7, r0
 800c1ee:	4620      	mov	r0, r4
 800c1f0:	f7ff f93a 	bl	800b468 <GUI_ALLOC_LockH>
 800c1f4:	4602      	mov	r2, r0
 800c1f6:	a80e      	add	r0, sp, #56	; 0x38
 800c1f8:	f840 2d28 	str.w	r2, [r0, #-40]!
 800c1fc:	6657      	str	r7, [r2, #100]	; 0x64
 800c1fe:	65d5      	str	r5, [r2, #92]	; 0x5c
 800c200:	f7ff f940 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c204:	e003      	b.n	800c20e <SCROLLBAR_Callback+0x1f0>
 800c206:	b113      	cbz	r3, 800c20e <SCROLLBAR_Callback+0x1f0>
 800c208:	4620      	mov	r0, r4
 800c20a:	f7ff fdf2 	bl	800bdf2 <_DeleteTimer>
 800c20e:	4620      	mov	r0, r4
 800c210:	2101      	movs	r1, #1
 800c212:	f7f8 f9c5 	bl	80045a0 <WM_SetCapture>
 800c216:	4620      	mov	r0, r4
 800c218:	4631      	mov	r1, r6
 800c21a:	f7ff febf 	bl	800bf9c <SCROLLBAR_SetValue>
 800c21e:	f41a 7f80 	tst.w	sl, #256	; 0x100
 800c222:	f040 80c5 	bne.w	800c3b0 <SCROLLBAR_Callback+0x392>
 800c226:	4620      	mov	r0, r4
 800c228:	f7ff f91e 	bl	800b468 <GUI_ALLOC_LockH>
 800c22c:	ab0e      	add	r3, sp, #56	; 0x38
 800c22e:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800c230:	f843 0d28 	str.w	r0, [r3, #-40]!
 800c234:	4618      	mov	r0, r3
 800c236:	f7ff f925 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c23a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800c23e:	4620      	mov	r0, r4
 800c240:	f7ff fcb2 	bl	800bba8 <WIDGET_OrState>
 800c244:	07a9      	lsls	r1, r5, #30
 800c246:	f140 80b3 	bpl.w	800c3b0 <SCROLLBAR_Callback+0x392>
 800c24a:	4620      	mov	r0, r4
 800c24c:	2101      	movs	r1, #1
 800c24e:	e074      	b.n	800c33a <SCROLLBAR_Callback+0x31c>
 800c250:	f7ff f90a 	bl	800b468 <GUI_ALLOC_LockH>
 800c254:	8e45      	ldrh	r5, [r0, #50]	; 0x32
 800c256:	9003      	str	r0, [sp, #12]
 800c258:	a803      	add	r0, sp, #12
 800c25a:	f7ff f913 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c25e:	05ea      	lsls	r2, r5, #23
 800c260:	f140 80a6 	bpl.w	800c3b0 <SCROLLBAR_Callback+0x392>
 800c264:	4620      	mov	r0, r4
 800c266:	f44f 7180 	mov.w	r1, #256	; 0x100
 800c26a:	f7ff fcb3 	bl	800bbd4 <WIDGET_AndState>
 800c26e:	4620      	mov	r0, r4
 800c270:	f7ff f8fa 	bl	800b468 <GUI_ALLOC_LockH>
 800c274:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 800c276:	9005      	str	r0, [sp, #20]
 800c278:	b113      	cbz	r3, 800c280 <SCROLLBAR_Callback+0x262>
 800c27a:	4620      	mov	r0, r4
 800c27c:	f7ff fdb9 	bl	800bdf2 <_DeleteTimer>
 800c280:	a80e      	add	r0, sp, #56	; 0x38
 800c282:	2200      	movs	r2, #0
 800c284:	f850 3d24 	ldr.w	r3, [r0, #-36]!
 800c288:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800c28a:	659a      	str	r2, [r3, #88]	; 0x58
 800c28c:	f7ff f8fa 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c290:	07ab      	lsls	r3, r5, #30
 800c292:	f140 808d 	bpl.w	800c3b0 <SCROLLBAR_Callback+0x392>
 800c296:	4620      	mov	r0, r4
 800c298:	2102      	movs	r1, #2
 800c29a:	e04e      	b.n	800c33a <SCROLLBAR_Callback+0x31c>
 800c29c:	4620      	mov	r0, r4
 800c29e:	f7ff f8e3 	bl	800b468 <GUI_ALLOC_LockH>
 800c2a2:	ab0e      	add	r3, sp, #56	; 0x38
 800c2a4:	6d45      	ldr	r5, [r0, #84]	; 0x54
 800c2a6:	f843 0d24 	str.w	r0, [r3, #-36]!
 800c2aa:	4618      	mov	r0, r3
 800c2ac:	f7ff f8ea 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c2b0:	f8d8 200c 	ldr.w	r2, [r8, #12]
 800c2b4:	6813      	ldr	r3, [r2, #0]
 800c2b6:	6852      	ldr	r2, [r2, #4]
 800c2b8:	2a00      	cmp	r2, #0
 800c2ba:	dd79      	ble.n	800c3b0 <SCROLLBAR_Callback+0x392>
 800c2bc:	3b10      	subs	r3, #16
 800c2be:	2b12      	cmp	r3, #18
 800c2c0:	d876      	bhi.n	800c3b0 <SCROLLBAR_Callback+0x392>
 800c2c2:	e8df f003 	tbb	[pc, r3]
 800c2c6:	1616      	.short	0x1616
 800c2c8:	75751212 	.word	0x75751212
 800c2cc:	75757575 	.word	0x75757575
 800c2d0:	75757575 	.word	0x75757575
 800c2d4:	0a757575 	.word	0x0a757575
 800c2d8:	0d          	.byte	0x0d
 800c2d9:	00          	.byte	0x00
 800c2da:	4620      	mov	r0, r4
 800c2dc:	4629      	mov	r1, r5
 800c2de:	e001      	b.n	800c2e4 <SCROLLBAR_Callback+0x2c6>
 800c2e0:	4620      	mov	r0, r4
 800c2e2:	4269      	negs	r1, r5
 800c2e4:	f7ff fe81 	bl	800bfea <SCROLLBAR_AddValue>
 800c2e8:	e062      	b.n	800c3b0 <SCROLLBAR_Callback+0x392>
 800c2ea:	4620      	mov	r0, r4
 800c2ec:	f7ff fe94 	bl	800c018 <SCROLLBAR_Inc>
 800c2f0:	e05e      	b.n	800c3b0 <SCROLLBAR_Callback+0x392>
 800c2f2:	4620      	mov	r0, r4
 800c2f4:	f7ff fe8c 	bl	800c010 <SCROLLBAR_Dec>
 800c2f8:	e05a      	b.n	800c3b0 <SCROLLBAR_Callback+0x392>
 800c2fa:	4620      	mov	r0, r4
 800c2fc:	f8d8 600c 	ldr.w	r6, [r8, #12]
 800c300:	f7ff f8b2 	bl	800b468 <GUI_ALLOC_LockH>
 800c304:	ad0e      	add	r5, sp, #56	; 0x38
 800c306:	4603      	mov	r3, r0
 800c308:	f845 0d24 	str.w	r0, [r5, #-36]!
 800c30c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800c30e:	6830      	ldr	r0, [r6, #0]
 800c310:	68b1      	ldr	r1, [r6, #8]
 800c312:	4290      	cmp	r0, r2
 800c314:	6872      	ldr	r2, [r6, #4]
 800c316:	d105      	bne.n	800c324 <SCROLLBAR_Callback+0x306>
 800c318:	6d5e      	ldr	r6, [r3, #84]	; 0x54
 800c31a:	428e      	cmp	r6, r1
 800c31c:	d102      	bne.n	800c324 <SCROLLBAR_Callback+0x306>
 800c31e:	6d1e      	ldr	r6, [r3, #80]	; 0x50
 800c320:	4296      	cmp	r6, r2
 800c322:	d00d      	beq.n	800c340 <SCROLLBAR_Callback+0x322>
 800c324:	64d8      	str	r0, [r3, #76]	; 0x4c
 800c326:	6559      	str	r1, [r3, #84]	; 0x54
 800c328:	651a      	str	r2, [r3, #80]	; 0x50
 800c32a:	4620      	mov	r0, r4
 800c32c:	f7f9 fab4 	bl	8005898 <WM_InvalidateWindow>
 800c330:	4628      	mov	r0, r5
 800c332:	f7ff f8a7 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c336:	4620      	mov	r0, r4
 800c338:	2105      	movs	r1, #5
 800c33a:	f7f8 fc64 	bl	8004c06 <WM_NotifyParent>
 800c33e:	e037      	b.n	800c3b0 <SCROLLBAR_Callback+0x392>
 800c340:	4628      	mov	r0, r5
 800c342:	e033      	b.n	800c3ac <SCROLLBAR_Callback+0x38e>
 800c344:	4620      	mov	r0, r4
 800c346:	f7ff f88f 	bl	800b468 <GUI_ALLOC_LockH>
 800c34a:	9005      	str	r0, [sp, #20]
 800c34c:	2800      	cmp	r0, #0
 800c34e:	d02f      	beq.n	800c3b0 <SCROLLBAR_Callback+0x392>
 800c350:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800c354:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 800c356:	601a      	str	r2, [r3, #0]
 800c358:	6d42      	ldr	r2, [r0, #84]	; 0x54
 800c35a:	609a      	str	r2, [r3, #8]
 800c35c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c35e:	605a      	str	r2, [r3, #4]
 800c360:	e023      	b.n	800c3aa <SCROLLBAR_Callback+0x38c>
 800c362:	4620      	mov	r0, r4
 800c364:	f7ff f880 	bl	800b468 <GUI_ALLOC_LockH>
 800c368:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 800c36a:	9005      	str	r0, [sp, #20]
 800c36c:	b111      	cbz	r1, 800c374 <SCROLLBAR_Callback+0x356>
 800c36e:	4620      	mov	r0, r4
 800c370:	f7ff fe3b 	bl	800bfea <SCROLLBAR_AddValue>
 800c374:	9b05      	ldr	r3, [sp, #20]
 800c376:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800c378:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800c37a:	2a00      	cmp	r2, #0
 800c37c:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 800c37e:	dd05      	ble.n	800c38c <SCROLLBAR_Callback+0x36e>
 800c380:	4291      	cmp	r1, r2
 800c382:	bfb4      	ite	lt
 800c384:	2100      	movlt	r1, #0
 800c386:	2101      	movge	r1, #1
 800c388:	dd06      	ble.n	800c398 <SCROLLBAR_Callback+0x37a>
 800c38a:	e004      	b.n	800c396 <SCROLLBAR_Callback+0x378>
 800c38c:	4291      	cmp	r1, r2
 800c38e:	bfcc      	ite	gt
 800c390:	2100      	movgt	r1, #0
 800c392:	2101      	movle	r1, #1
 800c394:	da00      	bge.n	800c398 <SCROLLBAR_Callback+0x37a>
 800c396:	651a      	str	r2, [r3, #80]	; 0x50
 800c398:	b119      	cbz	r1, 800c3a2 <SCROLLBAR_Callback+0x384>
 800c39a:	4620      	mov	r0, r4
 800c39c:	f7ff fd29 	bl	800bdf2 <_DeleteTimer>
 800c3a0:	e003      	b.n	800c3aa <SCROLLBAR_Callback+0x38c>
 800c3a2:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800c3a4:	2132      	movs	r1, #50	; 0x32
 800c3a6:	f000 fd27 	bl	800cdf8 <WM_RestartTimer>
 800c3aa:	a805      	add	r0, sp, #20
 800c3ac:	f7ff f86a 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c3b0:	4640      	mov	r0, r8
 800c3b2:	f7f9 fe9f 	bl	80060f4 <WM_DefaultProc>
 800c3b6:	b00f      	add	sp, #60	; 0x3c
 800c3b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c3bc <SCROLLBAR_GetValue>:
 800c3bc:	b513      	push	{r0, r1, r4, lr}
 800c3be:	4604      	mov	r4, r0
 800c3c0:	b140      	cbz	r0, 800c3d4 <SCROLLBAR_GetValue+0x18>
 800c3c2:	f7ff f851 	bl	800b468 <GUI_ALLOC_LockH>
 800c3c6:	ab02      	add	r3, sp, #8
 800c3c8:	6d04      	ldr	r4, [r0, #80]	; 0x50
 800c3ca:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c3ce:	4618      	mov	r0, r3
 800c3d0:	f7ff f858 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c3d4:	4620      	mov	r0, r4
 800c3d6:	b002      	add	sp, #8
 800c3d8:	bd10      	pop	{r4, pc}
	...

0800c3dc <PROGBAR_DrawSkinFlex>:
 800c3dc:	6843      	ldr	r3, [r0, #4]
 800c3de:	2b0b      	cmp	r3, #11
 800c3e0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c3e4:	4604      	mov	r4, r0
 800c3e6:	6a06      	ldr	r6, [r0, #32]
 800c3e8:	d006      	beq.n	800c3f8 <PROGBAR_DrawSkinFlex+0x1c>
 800c3ea:	2b12      	cmp	r3, #18
 800c3ec:	f000 8094 	beq.w	800c518 <PROGBAR_DrawSkinFlex+0x13c>
 800c3f0:	2b05      	cmp	r3, #5
 800c3f2:	f040 80a0 	bne.w	800c536 <PROGBAR_DrawSkinFlex+0x15a>
 800c3f6:	e01c      	b.n	800c432 <PROGBAR_DrawSkinFlex+0x56>
 800c3f8:	4b51      	ldr	r3, [pc, #324]	; (800c540 <PROGBAR_DrawSkinFlex+0x164>)
 800c3fa:	6a18      	ldr	r0, [r3, #32]
 800c3fc:	f7fe fbd3 	bl	800aba6 <GUI_SetColor>
 800c400:	6960      	ldr	r0, [r4, #20]
 800c402:	6921      	ldr	r1, [r4, #16]
 800c404:	69a2      	ldr	r2, [r4, #24]
 800c406:	f7fd fcad 	bl	8009d64 <GUI_DrawHLine>
 800c40a:	69e0      	ldr	r0, [r4, #28]
 800c40c:	6921      	ldr	r1, [r4, #16]
 800c40e:	69a2      	ldr	r2, [r4, #24]
 800c410:	f7fd fca8 	bl	8009d64 <GUI_DrawHLine>
 800c414:	6961      	ldr	r1, [r4, #20]
 800c416:	69e2      	ldr	r2, [r4, #28]
 800c418:	6920      	ldr	r0, [r4, #16]
 800c41a:	3101      	adds	r1, #1
 800c41c:	3a01      	subs	r2, #1
 800c41e:	f7fd fcfb 	bl	8009e18 <GUI_DrawVLine>
 800c422:	6961      	ldr	r1, [r4, #20]
 800c424:	69e2      	ldr	r2, [r4, #28]
 800c426:	69a0      	ldr	r0, [r4, #24]
 800c428:	3101      	adds	r1, #1
 800c42a:	3a01      	subs	r2, #1
 800c42c:	f7fd fcf4 	bl	8009e18 <GUI_DrawVLine>
 800c430:	e081      	b.n	800c536 <PROGBAR_DrawSkinFlex+0x15a>
 800c432:	6830      	ldr	r0, [r6, #0]
 800c434:	4d42      	ldr	r5, [pc, #264]	; (800c540 <PROGBAR_DrawSkinFlex+0x164>)
 800c436:	6967      	ldr	r7, [r4, #20]
 800c438:	69e3      	ldr	r3, [r4, #28]
 800c43a:	6922      	ldr	r2, [r4, #16]
 800c43c:	f8d4 9018 	ldr.w	r9, [r4, #24]
 800c440:	6871      	ldr	r1, [r6, #4]
 800c442:	2800      	cmp	r0, #0
 800c444:	d034      	beq.n	800c4b0 <PROGBAR_DrawSkinFlex+0xd4>
 800c446:	ebc2 0909 	rsb	r9, r2, r9
 800c44a:	f109 0901 	add.w	r9, r9, #1
 800c44e:	ea4f 0969 	mov.w	r9, r9, asr #1
 800c452:	b929      	cbnz	r1, 800c460 <PROGBAR_DrawSkinFlex+0x84>
 800c454:	468e      	mov	lr, r1
 800c456:	f8d5 c010 	ldr.w	ip, [r5, #16]
 800c45a:	6968      	ldr	r0, [r5, #20]
 800c45c:	2101      	movs	r1, #1
 800c45e:	e005      	b.n	800c46c <PROGBAR_DrawSkinFlex+0x90>
 800c460:	f8d5 c000 	ldr.w	ip, [r5]
 800c464:	6868      	ldr	r0, [r5, #4]
 800c466:	f04f 0e01 	mov.w	lr, #1
 800c46a:	2100      	movs	r1, #0
 800c46c:	9001      	str	r0, [sp, #4]
 800c46e:	ebce 0303 	rsb	r3, lr, r3
 800c472:	1c50      	adds	r0, r2, #1
 800c474:	f8cd c000 	str.w	ip, [sp]
 800c478:	4439      	add	r1, r7
 800c47a:	444a      	add	r2, r9
 800c47c:	f002 ff9c 	bl	800f3b8 <GUI_DrawGradientH>
 800c480:	6873      	ldr	r3, [r6, #4]
 800c482:	b91b      	cbnz	r3, 800c48c <PROGBAR_DrawSkinFlex+0xb0>
 800c484:	69ae      	ldr	r6, [r5, #24]
 800c486:	69ed      	ldr	r5, [r5, #28]
 800c488:	2101      	movs	r1, #1
 800c48a:	e003      	b.n	800c494 <PROGBAR_DrawSkinFlex+0xb8>
 800c48c:	68ae      	ldr	r6, [r5, #8]
 800c48e:	68ed      	ldr	r5, [r5, #12]
 800c490:	2301      	movs	r3, #1
 800c492:	2100      	movs	r1, #0
 800c494:	6920      	ldr	r0, [r4, #16]
 800c496:	6967      	ldr	r7, [r4, #20]
 800c498:	69a2      	ldr	r2, [r4, #24]
 800c49a:	69e4      	ldr	r4, [r4, #28]
 800c49c:	9600      	str	r6, [sp, #0]
 800c49e:	4448      	add	r0, r9
 800c4a0:	9501      	str	r5, [sp, #4]
 800c4a2:	3001      	adds	r0, #1
 800c4a4:	4439      	add	r1, r7
 800c4a6:	3a01      	subs	r2, #1
 800c4a8:	1ae3      	subs	r3, r4, r3
 800c4aa:	f002 ff85 	bl	800f3b8 <GUI_DrawGradientH>
 800c4ae:	e042      	b.n	800c536 <PROGBAR_DrawSkinFlex+0x15a>
 800c4b0:	ebc7 0803 	rsb	r8, r7, r3
 800c4b4:	f108 0801 	add.w	r8, r8, #1
 800c4b8:	ea4f 0868 	mov.w	r8, r8, asr #1
 800c4bc:	b921      	cbnz	r1, 800c4c8 <PROGBAR_DrawSkinFlex+0xec>
 800c4be:	e895 5000 	ldmia.w	r5, {ip, lr}
 800c4c2:	460b      	mov	r3, r1
 800c4c4:	2001      	movs	r0, #1
 800c4c6:	e004      	b.n	800c4d2 <PROGBAR_DrawSkinFlex+0xf6>
 800c4c8:	f8d5 c010 	ldr.w	ip, [r5, #16]
 800c4cc:	f8d5 e014 	ldr.w	lr, [r5, #20]
 800c4d0:	2301      	movs	r3, #1
 800c4d2:	4410      	add	r0, r2
 800c4d4:	e88d 5000 	stmia.w	sp, {ip, lr}
 800c4d8:	ebc3 0209 	rsb	r2, r3, r9
 800c4dc:	1c79      	adds	r1, r7, #1
 800c4de:	eb07 0308 	add.w	r3, r7, r8
 800c4e2:	f002 ff37 	bl	800f354 <GUI_DrawGradientV>
 800c4e6:	6872      	ldr	r2, [r6, #4]
 800c4e8:	b91a      	cbnz	r2, 800c4f2 <PROGBAR_DrawSkinFlex+0x116>
 800c4ea:	68ae      	ldr	r6, [r5, #8]
 800c4ec:	68ed      	ldr	r5, [r5, #12]
 800c4ee:	2001      	movs	r0, #1
 800c4f0:	e003      	b.n	800c4fa <PROGBAR_DrawSkinFlex+0x11e>
 800c4f2:	69ae      	ldr	r6, [r5, #24]
 800c4f4:	69ed      	ldr	r5, [r5, #28]
 800c4f6:	2201      	movs	r2, #1
 800c4f8:	2000      	movs	r0, #0
 800c4fa:	6961      	ldr	r1, [r4, #20]
 800c4fc:	f8d4 e010 	ldr.w	lr, [r4, #16]
 800c500:	69a7      	ldr	r7, [r4, #24]
 800c502:	69e3      	ldr	r3, [r4, #28]
 800c504:	9600      	str	r6, [sp, #0]
 800c506:	4441      	add	r1, r8
 800c508:	9501      	str	r5, [sp, #4]
 800c50a:	4470      	add	r0, lr
 800c50c:	3101      	adds	r1, #1
 800c50e:	1aba      	subs	r2, r7, r2
 800c510:	3b01      	subs	r3, #1
 800c512:	f002 ff1f 	bl	800f354 <GUI_DrawGradientV>
 800c516:	e00e      	b.n	800c536 <PROGBAR_DrawSkinFlex+0x15a>
 800c518:	6833      	ldr	r3, [r6, #0]
 800c51a:	b963      	cbnz	r3, 800c536 <PROGBAR_DrawSkinFlex+0x15a>
 800c51c:	4b08      	ldr	r3, [pc, #32]	; (800c540 <PROGBAR_DrawSkinFlex+0x164>)
 800c51e:	68b5      	ldr	r5, [r6, #8]
 800c520:	6a58      	ldr	r0, [r3, #36]	; 0x24
 800c522:	f7fe fb40 	bl	800aba6 <GUI_SetColor>
 800c526:	2002      	movs	r0, #2
 800c528:	f7fe fb78 	bl	800ac1c <GUI_SetTextMode>
 800c52c:	4628      	mov	r0, r5
 800c52e:	6921      	ldr	r1, [r4, #16]
 800c530:	6962      	ldr	r2, [r4, #20]
 800c532:	f7fd fe4d 	bl	800a1d0 <GUI_DispStringAt>
 800c536:	2000      	movs	r0, #0
 800c538:	b003      	add	sp, #12
 800c53a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c53e:	bf00      	nop
 800c540:	200000e4 	.word	0x200000e4

0800c544 <_Create>:
 800c544:	b530      	push	{r4, r5, lr}
 800c546:	b08b      	sub	sp, #44	; 0x2c
 800c548:	4605      	mov	r5, r0
 800c54a:	f7fe ff8d 	bl	800b468 <GUI_ALLOC_LockH>
 800c54e:	ab0a      	add	r3, sp, #40	; 0x28
 800c550:	6e42      	ldr	r2, [r0, #100]	; 0x64
 800c552:	f843 0d28 	str.w	r0, [r3, #-40]!
 800c556:	4668      	mov	r0, sp
 800c558:	6894      	ldr	r4, [r2, #8]
 800c55a:	f7fe ff93 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c55e:	a80a      	add	r0, sp, #40	; 0x28
 800c560:	2300      	movs	r3, #0
 800c562:	9302      	str	r3, [sp, #8]
 800c564:	f840 5d24 	str.w	r5, [r0, #-36]!
 800c568:	6823      	ldr	r3, [r4, #0]
 800c56a:	4798      	blx	r3
 800c56c:	b00b      	add	sp, #44	; 0x2c
 800c56e:	bd30      	pop	{r4, r5, pc}

0800c570 <_Paint>:
 800c570:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c574:	b093      	sub	sp, #76	; 0x4c
 800c576:	4604      	mov	r4, r0
 800c578:	f7fe ff76 	bl	800b468 <GUI_ALLOC_LockH>
 800c57c:	f890 2068 	ldrb.w	r2, [r0, #104]	; 0x68
 800c580:	6b41      	ldr	r1, [r0, #52]	; 0x34
 800c582:	6e06      	ldr	r6, [r0, #96]	; 0x60
 800c584:	9000      	str	r0, [sp, #0]
 800c586:	f002 0201 	and.w	r2, r2, #1
 800c58a:	9206      	str	r2, [sp, #24]
 800c58c:	f8d0 904c 	ldr.w	r9, [r0, #76]	; 0x4c
 800c590:	f7f6 fb2b 	bl	8002bea <PROGBAR__Value2Pos>
 800c594:	af02      	add	r7, sp, #8
 800c596:	4680      	mov	r8, r0
 800c598:	4668      	mov	r0, sp
 800c59a:	f7fe ff73 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c59e:	ab06      	add	r3, sp, #24
 800c5a0:	4639      	mov	r1, r7
 800c5a2:	4620      	mov	r0, r4
 800c5a4:	9311      	str	r3, [sp, #68]	; 0x44
 800c5a6:	f7f8 f8ae 	bl	8004706 <WM_GetClientRectEx>
 800c5aa:	230b      	movs	r3, #11
 800c5ac:	930a      	str	r3, [sp, #40]	; 0x28
 800c5ae:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800c5b2:	930d      	str	r3, [sp, #52]	; 0x34
 800c5b4:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800c5b8:	930e      	str	r3, [sp, #56]	; 0x38
 800c5ba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c5be:	930f      	str	r3, [sp, #60]	; 0x3c
 800c5c0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c5c4:	9310      	str	r3, [sp, #64]	; 0x40
 800c5c6:	9409      	str	r4, [sp, #36]	; 0x24
 800c5c8:	a809      	add	r0, sp, #36	; 0x24
 800c5ca:	47b0      	blx	r6
 800c5cc:	e897 0003 	ldmia.w	r7, {r0, r1}
 800c5d0:	ad04      	add	r5, sp, #16
 800c5d2:	e885 0003 	stmia.w	r5, {r0, r1}
 800c5d6:	2201      	movs	r2, #1
 800c5d8:	4629      	mov	r1, r5
 800c5da:	4628      	mov	r0, r5
 800c5dc:	f7fc fc6f 	bl	8008ebe <GUI__ReduceRect>
 800c5e0:	4628      	mov	r0, r5
 800c5e2:	f7f8 fb99 	bl	8004d18 <WM_SetUserClipRect>
 800c5e6:	2305      	movs	r3, #5
 800c5e8:	9906      	ldr	r1, [sp, #24]
 800c5ea:	930a      	str	r3, [sp, #40]	; 0x28
 800c5ec:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800c5f0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800c5f4:	9409      	str	r4, [sp, #36]	; 0x24
 800c5f6:	930d      	str	r3, [sp, #52]	; 0x34
 800c5f8:	920e      	str	r2, [sp, #56]	; 0x38
 800c5fa:	b129      	cbz	r1, 800c608 <_Paint+0x98>
 800c5fc:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c600:	930f      	str	r3, [sp, #60]	; 0x3c
 800c602:	4442      	add	r2, r8
 800c604:	9210      	str	r2, [sp, #64]	; 0x40
 800c606:	e004      	b.n	800c612 <_Paint+0xa2>
 800c608:	4443      	add	r3, r8
 800c60a:	930f      	str	r3, [sp, #60]	; 0x3c
 800c60c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c610:	9310      	str	r3, [sp, #64]	; 0x40
 800c612:	2300      	movs	r3, #0
 800c614:	9307      	str	r3, [sp, #28]
 800c616:	a809      	add	r0, sp, #36	; 0x24
 800c618:	47b0      	blx	r6
 800c61a:	9906      	ldr	r1, [sp, #24]
 800c61c:	f9bd 5008 	ldrsh.w	r5, [sp, #8]
 800c620:	f9bd 000a 	ldrsh.w	r0, [sp, #10]
 800c624:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800c628:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c62c:	b119      	cbz	r1, 800c636 <_Paint+0xc6>
 800c62e:	4440      	add	r0, r8
 800c630:	950d      	str	r5, [sp, #52]	; 0x34
 800c632:	3001      	adds	r0, #1
 800c634:	e002      	b.n	800c63c <_Paint+0xcc>
 800c636:	4445      	add	r5, r8
 800c638:	3501      	adds	r5, #1
 800c63a:	950d      	str	r5, [sp, #52]	; 0x34
 800c63c:	9310      	str	r3, [sp, #64]	; 0x40
 800c63e:	2301      	movs	r3, #1
 800c640:	920f      	str	r2, [sp, #60]	; 0x3c
 800c642:	9307      	str	r3, [sp, #28]
 800c644:	900e      	str	r0, [sp, #56]	; 0x38
 800c646:	a809      	add	r0, sp, #36	; 0x24
 800c648:	47b0      	blx	r6
 800c64a:	4620      	mov	r0, r4
 800c64c:	f7fe ff0c 	bl	800b468 <GUI_ALLOC_LockH>
 800c650:	9000      	str	r0, [sp, #0]
 800c652:	f7f6 fa83 	bl	8002b5c <PROGBAR__GetTextLocked>
 800c656:	9001      	str	r0, [sp, #4]
 800c658:	b1f8      	cbz	r0, 800c69a <_Paint+0x12a>
 800c65a:	4648      	mov	r0, r9
 800c65c:	f7fe faa8 	bl	800abb0 <GUI_SetFont>
 800c660:	4639      	mov	r1, r7
 800c662:	9a01      	ldr	r2, [sp, #4]
 800c664:	9800      	ldr	r0, [sp, #0]
 800c666:	f7f6 fa7c 	bl	8002b62 <PROGBAR__GetTextRect>
 800c66a:	4668      	mov	r0, sp
 800c66c:	f7fe ff0a 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c670:	9b01      	ldr	r3, [sp, #4]
 800c672:	9308      	str	r3, [sp, #32]
 800c674:	2312      	movs	r3, #18
 800c676:	930a      	str	r3, [sp, #40]	; 0x28
 800c678:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800c67c:	930d      	str	r3, [sp, #52]	; 0x34
 800c67e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800c682:	930e      	str	r3, [sp, #56]	; 0x38
 800c684:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c688:	930f      	str	r3, [sp, #60]	; 0x3c
 800c68a:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c68e:	9409      	str	r4, [sp, #36]	; 0x24
 800c690:	9310      	str	r3, [sp, #64]	; 0x40
 800c692:	a809      	add	r0, sp, #36	; 0x24
 800c694:	47b0      	blx	r6
 800c696:	a801      	add	r0, sp, #4
 800c698:	e000      	b.n	800c69c <_Paint+0x12c>
 800c69a:	4668      	mov	r0, sp
 800c69c:	f7fe fef2 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c6a0:	2000      	movs	r0, #0
 800c6a2:	f7f8 fb39 	bl	8004d18 <WM_SetUserClipRect>
 800c6a6:	b013      	add	sp, #76	; 0x4c
 800c6a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c6ac <GUI_ARRAY__GethItem>:
 800c6ac:	8803      	ldrh	r3, [r0, #0]
 800c6ae:	4299      	cmp	r1, r3
 800c6b0:	b513      	push	{r0, r1, r4, lr}
 800c6b2:	460c      	mov	r4, r1
 800c6b4:	d20e      	bcs.n	800c6d4 <GUI_ARRAY__GethItem+0x28>
 800c6b6:	6840      	ldr	r0, [r0, #4]
 800c6b8:	b150      	cbz	r0, 800c6d0 <GUI_ARRAY__GethItem+0x24>
 800c6ba:	f7fe fed5 	bl	800b468 <GUI_ALLOC_LockH>
 800c6be:	ab02      	add	r3, sp, #8
 800c6c0:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 800c6c4:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c6c8:	4618      	mov	r0, r3
 800c6ca:	f7fe fedb 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c6ce:	e002      	b.n	800c6d6 <GUI_ARRAY__GethItem+0x2a>
 800c6d0:	4604      	mov	r4, r0
 800c6d2:	e000      	b.n	800c6d6 <GUI_ARRAY__GethItem+0x2a>
 800c6d4:	2400      	movs	r4, #0
 800c6d6:	4620      	mov	r0, r4
 800c6d8:	b002      	add	sp, #8
 800c6da:	bd10      	pop	{r4, pc}

0800c6dc <GUI_ARRAY_GetNumItems>:
 800c6dc:	b513      	push	{r0, r1, r4, lr}
 800c6de:	4604      	mov	r4, r0
 800c6e0:	b140      	cbz	r0, 800c6f4 <GUI_ARRAY_GetNumItems+0x18>
 800c6e2:	f7fe fec1 	bl	800b468 <GUI_ALLOC_LockH>
 800c6e6:	ab02      	add	r3, sp, #8
 800c6e8:	8804      	ldrh	r4, [r0, #0]
 800c6ea:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c6ee:	4618      	mov	r0, r3
 800c6f0:	f7fe fec8 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c6f4:	4620      	mov	r0, r4
 800c6f6:	b002      	add	sp, #8
 800c6f8:	bd10      	pop	{r4, pc}

0800c6fa <GUI_ARRAY_AddItem>:
 800c6fa:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c6fe:	4605      	mov	r5, r0
 800c700:	2800      	cmp	r0, #0
 800c702:	d03d      	beq.n	800c780 <GUI_ARRAY_AddItem+0x86>
 800c704:	b14a      	cbz	r2, 800c71a <GUI_ARRAY_AddItem+0x20>
 800c706:	4608      	mov	r0, r1
 800c708:	4611      	mov	r1, r2
 800c70a:	f7ff f885 	bl	800b818 <GUI_ALLOC_AllocInit>
 800c70e:	f1d0 0401 	rsbs	r4, r0, #1
 800c712:	4607      	mov	r7, r0
 800c714:	bf38      	it	cc
 800c716:	2400      	movcc	r4, #0
 800c718:	e001      	b.n	800c71e <GUI_ARRAY_AddItem+0x24>
 800c71a:	4614      	mov	r4, r2
 800c71c:	4617      	mov	r7, r2
 800c71e:	4628      	mov	r0, r5
 800c720:	f7fe fea2 	bl	800b468 <GUI_ALLOC_LockH>
 800c724:	ae02      	add	r6, sp, #8
 800c726:	f8b0 8000 	ldrh.w	r8, [r0]
 800c72a:	f846 0d08 	str.w	r0, [r6, #-8]!
 800c72e:	f8d0 9004 	ldr.w	r9, [r0, #4]
 800c732:	4668      	mov	r0, sp
 800c734:	f7fe fea6 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c738:	bb24      	cbnz	r4, 800c784 <GUI_ARRAY_AddItem+0x8a>
 800c73a:	f108 0101 	add.w	r1, r8, #1
 800c73e:	4648      	mov	r0, r9
 800c740:	0089      	lsls	r1, r1, #2
 800c742:	f7ff f8a3 	bl	800b88c <GUI_ALLOC_Realloc>
 800c746:	4681      	mov	r9, r0
 800c748:	b918      	cbnz	r0, 800c752 <GUI_ARRAY_AddItem+0x58>
 800c74a:	4638      	mov	r0, r7
 800c74c:	f7fe fec6 	bl	800b4dc <GUI_ALLOC_Free>
 800c750:	e018      	b.n	800c784 <GUI_ARRAY_AddItem+0x8a>
 800c752:	f7fe fe89 	bl	800b468 <GUI_ALLOC_LockH>
 800c756:	ab02      	add	r3, sp, #8
 800c758:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c75c:	f840 7028 	str.w	r7, [r0, r8, lsl #2]
 800c760:	4618      	mov	r0, r3
 800c762:	f7fe fe8f 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c766:	4628      	mov	r0, r5
 800c768:	f7fe fe7e 	bl	800b468 <GUI_ALLOC_LockH>
 800c76c:	8803      	ldrh	r3, [r0, #0]
 800c76e:	9000      	str	r0, [sp, #0]
 800c770:	3301      	adds	r3, #1
 800c772:	f8c0 9004 	str.w	r9, [r0, #4]
 800c776:	8003      	strh	r3, [r0, #0]
 800c778:	4668      	mov	r0, sp
 800c77a:	f7fe fe83 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c77e:	e002      	b.n	800c786 <GUI_ARRAY_AddItem+0x8c>
 800c780:	4604      	mov	r4, r0
 800c782:	e000      	b.n	800c786 <GUI_ARRAY_AddItem+0x8c>
 800c784:	2401      	movs	r4, #1
 800c786:	4620      	mov	r0, r4
 800c788:	b003      	add	sp, #12
 800c78a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c78e <GUI_ARRAY_Delete>:
 800c78e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c790:	4605      	mov	r5, r0
 800c792:	b318      	cbz	r0, 800c7dc <GUI_ARRAY_Delete+0x4e>
 800c794:	f7fe fe68 	bl	800b468 <GUI_ALLOC_LockH>
 800c798:	9000      	str	r0, [sp, #0]
 800c79a:	6840      	ldr	r0, [r0, #4]
 800c79c:	b1c0      	cbz	r0, 800c7d0 <GUI_ARRAY_Delete+0x42>
 800c79e:	f7fe fe63 	bl	800b468 <GUI_ALLOC_LockH>
 800c7a2:	2400      	movs	r4, #0
 800c7a4:	9001      	str	r0, [sp, #4]
 800c7a6:	9b00      	ldr	r3, [sp, #0]
 800c7a8:	881b      	ldrh	r3, [r3, #0]
 800c7aa:	429c      	cmp	r4, r3
 800c7ac:	da06      	bge.n	800c7bc <GUI_ARRAY_Delete+0x2e>
 800c7ae:	9801      	ldr	r0, [sp, #4]
 800c7b0:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 800c7b4:	f7ff f828 	bl	800b808 <GUI_ALLOC_FreePtr>
 800c7b8:	3401      	adds	r4, #1
 800c7ba:	e7f4      	b.n	800c7a6 <GUI_ARRAY_Delete+0x18>
 800c7bc:	a801      	add	r0, sp, #4
 800c7be:	f7fe fe61 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c7c2:	9800      	ldr	r0, [sp, #0]
 800c7c4:	3004      	adds	r0, #4
 800c7c6:	f7ff f81f 	bl	800b808 <GUI_ALLOC_FreePtr>
 800c7ca:	9b00      	ldr	r3, [sp, #0]
 800c7cc:	2200      	movs	r2, #0
 800c7ce:	801a      	strh	r2, [r3, #0]
 800c7d0:	4668      	mov	r0, sp
 800c7d2:	f7fe fe57 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c7d6:	4628      	mov	r0, r5
 800c7d8:	f7fe fe80 	bl	800b4dc <GUI_ALLOC_Free>
 800c7dc:	b003      	add	sp, #12
 800c7de:	bd30      	pop	{r4, r5, pc}

0800c7e0 <GUI_ARRAY_GethItem>:
 800c7e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c7e2:	460e      	mov	r6, r1
 800c7e4:	4605      	mov	r5, r0
 800c7e6:	b158      	cbz	r0, 800c800 <GUI_ARRAY_GethItem+0x20>
 800c7e8:	f7fe fe3e 	bl	800b468 <GUI_ALLOC_LockH>
 800c7ec:	ac02      	add	r4, sp, #8
 800c7ee:	4631      	mov	r1, r6
 800c7f0:	f844 0d04 	str.w	r0, [r4, #-4]!
 800c7f4:	f7ff ff5a 	bl	800c6ac <GUI_ARRAY__GethItem>
 800c7f8:	4605      	mov	r5, r0
 800c7fa:	4620      	mov	r0, r4
 800c7fc:	f7fe fe42 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c800:	4628      	mov	r0, r5
 800c802:	b002      	add	sp, #8
 800c804:	bd70      	pop	{r4, r5, r6, pc}

0800c806 <GUI_ARRAY_Create>:
 800c806:	2008      	movs	r0, #8
 800c808:	f7ff b828 	b.w	800b85c <GUI_ALLOC_AllocZero>

0800c80c <FRAMEWIN_DrawSkinFlex>:
 800c80c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c810:	4604      	mov	r4, r0
 800c812:	b090      	sub	sp, #64	; 0x40
 800c814:	6800      	ldr	r0, [r0, #0]
 800c816:	4d9b      	ldr	r5, [pc, #620]	; (800ca84 <FRAMEWIN_DrawSkinFlex+0x278>)
 800c818:	f7f7 fbe2 	bl	8003fe0 <FRAMEWIN_GetActive>
 800c81c:	4b9a      	ldr	r3, [pc, #616]	; (800ca88 <FRAMEWIN_DrawSkinFlex+0x27c>)
 800c81e:	6866      	ldr	r6, [r4, #4]
 800c820:	2800      	cmp	r0, #0
 800c822:	bf18      	it	ne
 800c824:	461d      	movne	r5, r3
 800c826:	2e1c      	cmp	r6, #28
 800c828:	f200 81a6 	bhi.w	800cb78 <FRAMEWIN_DrawSkinFlex+0x36c>
 800c82c:	e8df f016 	tbh	[pc, r6, lsl #1]
 800c830:	01a40191 	.word	0x01a40191
 800c834:	01a401a4 	.word	0x01a401a4
 800c838:	012e01a4 	.word	0x012e01a4
 800c83c:	01a401a4 	.word	0x01a401a4
 800c840:	01a401a4 	.word	0x01a401a4
 800c844:	002701a4 	.word	0x002701a4
 800c848:	01a401a4 	.word	0x01a401a4
 800c84c:	01a4017e 	.word	0x01a4017e
 800c850:	01a401a4 	.word	0x01a401a4
 800c854:	01a40145 	.word	0x01a40145
 800c858:	002301a4 	.word	0x002301a4
 800c85c:	001f001d 	.word	0x001f001d
 800c860:	01a40021 	.word	0x01a40021
 800c864:	01a401a4 	.word	0x01a401a4
 800c868:	0025      	.short	0x0025
 800c86a:	69ee      	ldr	r6, [r5, #28]
 800c86c:	e189      	b.n	800cb82 <FRAMEWIN_DrawSkinFlex+0x376>
 800c86e:	6a2e      	ldr	r6, [r5, #32]
 800c870:	e187      	b.n	800cb82 <FRAMEWIN_DrawSkinFlex+0x376>
 800c872:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 800c874:	e185      	b.n	800cb82 <FRAMEWIN_DrawSkinFlex+0x376>
 800c876:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800c878:	e183      	b.n	800cb82 <FRAMEWIN_DrawSkinFlex+0x376>
 800c87a:	696e      	ldr	r6, [r5, #20]
 800c87c:	e181      	b.n	800cb82 <FRAMEWIN_DrawSkinFlex+0x376>
 800c87e:	231c      	movs	r3, #28
 800c880:	6820      	ldr	r0, [r4, #0]
 800c882:	9308      	str	r3, [sp, #32]
 800c884:	9007      	str	r0, [sp, #28]
 800c886:	f7fe fdef 	bl	800b468 <GUI_ALLOC_LockH>
 800c88a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800c88c:	9005      	str	r0, [sp, #20]
 800c88e:	a807      	add	r0, sp, #28
 800c890:	4798      	blx	r3
 800c892:	4606      	mov	r6, r0
 800c894:	a805      	add	r0, sp, #20
 800c896:	f7fe fdf5 	bl	800b484 <GUI_ALLOC_UnlockH>
 800c89a:	2e01      	cmp	r6, #1
 800c89c:	dd11      	ble.n	800c8c2 <FRAMEWIN_DrawSkinFlex+0xb6>
 800c89e:	682b      	ldr	r3, [r5, #0]
 800c8a0:	9300      	str	r3, [sp, #0]
 800c8a2:	686b      	ldr	r3, [r5, #4]
 800c8a4:	9301      	str	r3, [sp, #4]
 800c8a6:	68ab      	ldr	r3, [r5, #8]
 800c8a8:	9302      	str	r3, [sp, #8]
 800c8aa:	6920      	ldr	r0, [r4, #16]
 800c8ac:	69a1      	ldr	r1, [r4, #24]
 800c8ae:	6962      	ldr	r2, [r4, #20]
 800c8b0:	4633      	mov	r3, r6
 800c8b2:	f002 f923 	bl	800eafc <GUI__DrawTwinArc2>
 800c8b6:	6923      	ldr	r3, [r4, #16]
 800c8b8:	69a7      	ldr	r7, [r4, #24]
 800c8ba:	eb06 0803 	add.w	r8, r6, r3
 800c8be:	1bbf      	subs	r7, r7, r6
 800c8c0:	e02c      	b.n	800c91c <FRAMEWIN_DrawSkinFlex+0x110>
 800c8c2:	6828      	ldr	r0, [r5, #0]
 800c8c4:	f7fe f96f 	bl	800aba6 <GUI_SetColor>
 800c8c8:	6921      	ldr	r1, [r4, #16]
 800c8ca:	69ea      	ldr	r2, [r5, #28]
 800c8cc:	6960      	ldr	r0, [r4, #20]
 800c8ce:	440a      	add	r2, r1
 800c8d0:	3a01      	subs	r2, #1
 800c8d2:	f7fd fa47 	bl	8009d64 <GUI_DrawHLine>
 800c8d6:	69a2      	ldr	r2, [r4, #24]
 800c8d8:	69e9      	ldr	r1, [r5, #28]
 800c8da:	6960      	ldr	r0, [r4, #20]
 800c8dc:	1a51      	subs	r1, r2, r1
 800c8de:	3101      	adds	r1, #1
 800c8e0:	f7fd fa40 	bl	8009d64 <GUI_DrawHLine>
 800c8e4:	6967      	ldr	r7, [r4, #20]
 800c8e6:	6920      	ldr	r0, [r4, #16]
 800c8e8:	3701      	adds	r7, #1
 800c8ea:	4639      	mov	r1, r7
 800c8ec:	f7fd fa5e 	bl	8009dac <GUI_DrawPixel>
 800c8f0:	4639      	mov	r1, r7
 800c8f2:	69a0      	ldr	r0, [r4, #24]
 800c8f4:	f7fd fa5a 	bl	8009dac <GUI_DrawPixel>
 800c8f8:	6868      	ldr	r0, [r5, #4]
 800c8fa:	f7fe f954 	bl	800aba6 <GUI_SetColor>
 800c8fe:	6920      	ldr	r0, [r4, #16]
 800c900:	4639      	mov	r1, r7
 800c902:	3001      	adds	r0, #1
 800c904:	f7fd fa52 	bl	8009dac <GUI_DrawPixel>
 800c908:	69a0      	ldr	r0, [r4, #24]
 800c90a:	4639      	mov	r1, r7
 800c90c:	3801      	subs	r0, #1
 800c90e:	f7fd fa4d 	bl	8009dac <GUI_DrawPixel>
 800c912:	6923      	ldr	r3, [r4, #16]
 800c914:	69a7      	ldr	r7, [r4, #24]
 800c916:	f103 0802 	add.w	r8, r3, #2
 800c91a:	3f02      	subs	r7, #2
 800c91c:	6828      	ldr	r0, [r5, #0]
 800c91e:	f7fe f942 	bl	800aba6 <GUI_SetColor>
 800c922:	4641      	mov	r1, r8
 800c924:	463a      	mov	r2, r7
 800c926:	6960      	ldr	r0, [r4, #20]
 800c928:	f7fd fa1c 	bl	8009d64 <GUI_DrawHLine>
 800c92c:	6868      	ldr	r0, [r5, #4]
 800c92e:	f7fe f93a 	bl	800aba6 <GUI_SetColor>
 800c932:	6960      	ldr	r0, [r4, #20]
 800c934:	4641      	mov	r1, r8
 800c936:	3001      	adds	r0, #1
 800c938:	463a      	mov	r2, r7
 800c93a:	f7fd fa13 	bl	8009d64 <GUI_DrawHLine>
 800c93e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800c940:	2b02      	cmp	r3, #2
 800c942:	dd0a      	ble.n	800c95a <FRAMEWIN_DrawSkinFlex+0x14e>
 800c944:	68a8      	ldr	r0, [r5, #8]
 800c946:	f7fe f92e 	bl	800aba6 <GUI_SetColor>
 800c94a:	6961      	ldr	r1, [r4, #20]
 800c94c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800c94e:	440b      	add	r3, r1
 800c950:	4640      	mov	r0, r8
 800c952:	3102      	adds	r1, #2
 800c954:	463a      	mov	r2, r7
 800c956:	3b01      	subs	r3, #1
 800c958:	e01d      	b.n	800c996 <FRAMEWIN_DrawSkinFlex+0x18a>
 800c95a:	6a2a      	ldr	r2, [r5, #32]
 800c95c:	42b2      	cmp	r2, r6
 800c95e:	dd1c      	ble.n	800c99a <FRAMEWIN_DrawSkinFlex+0x18e>
 800c960:	6967      	ldr	r7, [r4, #20]
 800c962:	6923      	ldr	r3, [r4, #16]
 800c964:	2e01      	cmp	r6, #1
 800c966:	f107 0802 	add.w	r8, r7, #2
 800c96a:	f340 8107 	ble.w	800cb7c <FRAMEWIN_DrawSkinFlex+0x370>
 800c96e:	4437      	add	r7, r6
 800c970:	18f0      	adds	r0, r6, r3
 800c972:	441a      	add	r2, r3
 800c974:	3a01      	subs	r2, #1
 800c976:	4641      	mov	r1, r8
 800c978:	463b      	mov	r3, r7
 800c97a:	f7fd fa6f 	bl	8009e5c <GUI_FillRect>
 800c97e:	69a3      	ldr	r3, [r4, #24]
 800c980:	69e8      	ldr	r0, [r5, #28]
 800c982:	2e01      	cmp	r6, #1
 800c984:	ebc0 0003 	rsb	r0, r0, r3
 800c988:	bfcc      	ite	gt
 800c98a:	ebc6 0203 	rsbgt	r2, r6, r3
 800c98e:	1e9a      	suble	r2, r3, #2
 800c990:	3001      	adds	r0, #1
 800c992:	4641      	mov	r1, r8
 800c994:	463b      	mov	r3, r7
 800c996:	f7fd fa61 	bl	8009e5c <GUI_FillRect>
 800c99a:	6963      	ldr	r3, [r4, #20]
 800c99c:	69e7      	ldr	r7, [r4, #28]
 800c99e:	6828      	ldr	r0, [r5, #0]
 800c9a0:	2e01      	cmp	r6, #1
 800c9a2:	bfcc      	ite	gt
 800c9a4:	18f6      	addgt	r6, r6, r3
 800c9a6:	1c9e      	addle	r6, r3, #2
 800c9a8:	3f01      	subs	r7, #1
 800c9aa:	f7fe f8fc 	bl	800aba6 <GUI_SetColor>
 800c9ae:	463a      	mov	r2, r7
 800c9b0:	6920      	ldr	r0, [r4, #16]
 800c9b2:	4631      	mov	r1, r6
 800c9b4:	f7fd fa30 	bl	8009e18 <GUI_DrawVLine>
 800c9b8:	463a      	mov	r2, r7
 800c9ba:	4631      	mov	r1, r6
 800c9bc:	69a0      	ldr	r0, [r4, #24]
 800c9be:	f7fd fa2b 	bl	8009e18 <GUI_DrawVLine>
 800c9c2:	69e7      	ldr	r7, [r4, #28]
 800c9c4:	6868      	ldr	r0, [r5, #4]
 800c9c6:	f7fe f8ee 	bl	800aba6 <GUI_SetColor>
 800c9ca:	6920      	ldr	r0, [r4, #16]
 800c9cc:	3f02      	subs	r7, #2
 800c9ce:	3001      	adds	r0, #1
 800c9d0:	4631      	mov	r1, r6
 800c9d2:	463a      	mov	r2, r7
 800c9d4:	f7fd fa20 	bl	8009e18 <GUI_DrawVLine>
 800c9d8:	69a0      	ldr	r0, [r4, #24]
 800c9da:	4631      	mov	r1, r6
 800c9dc:	3801      	subs	r0, #1
 800c9de:	463a      	mov	r2, r7
 800c9e0:	f7fd fa1a 	bl	8009e18 <GUI_DrawVLine>
 800c9e4:	69eb      	ldr	r3, [r5, #28]
 800c9e6:	2b02      	cmp	r3, #2
 800c9e8:	dc02      	bgt.n	800c9f0 <FRAMEWIN_DrawSkinFlex+0x1e4>
 800c9ea:	6a2b      	ldr	r3, [r5, #32]
 800c9ec:	2b02      	cmp	r3, #2
 800c9ee:	dd20      	ble.n	800ca32 <FRAMEWIN_DrawSkinFlex+0x226>
 800c9f0:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800c9f2:	69e7      	ldr	r7, [r4, #28]
 800c9f4:	68a8      	ldr	r0, [r5, #8]
 800c9f6:	2b02      	cmp	r3, #2
 800c9f8:	bfcc      	ite	gt
 800c9fa:	ebc3 0707 	rsbgt	r7, r3, r7
 800c9fe:	3f02      	suble	r7, #2
 800ca00:	f7fe f8d1 	bl	800aba6 <GUI_SetColor>
 800ca04:	69ea      	ldr	r2, [r5, #28]
 800ca06:	2a02      	cmp	r2, #2
 800ca08:	dd07      	ble.n	800ca1a <FRAMEWIN_DrawSkinFlex+0x20e>
 800ca0a:	6920      	ldr	r0, [r4, #16]
 800ca0c:	4402      	add	r2, r0
 800ca0e:	4631      	mov	r1, r6
 800ca10:	3002      	adds	r0, #2
 800ca12:	3a01      	subs	r2, #1
 800ca14:	463b      	mov	r3, r7
 800ca16:	f7fd fa21 	bl	8009e5c <GUI_FillRect>
 800ca1a:	6a2b      	ldr	r3, [r5, #32]
 800ca1c:	2b02      	cmp	r3, #2
 800ca1e:	dd08      	ble.n	800ca32 <FRAMEWIN_DrawSkinFlex+0x226>
 800ca20:	69a2      	ldr	r2, [r4, #24]
 800ca22:	69e8      	ldr	r0, [r5, #28]
 800ca24:	1a10      	subs	r0, r2, r0
 800ca26:	3001      	adds	r0, #1
 800ca28:	4631      	mov	r1, r6
 800ca2a:	3a02      	subs	r2, #2
 800ca2c:	463b      	mov	r3, r7
 800ca2e:	f7fd fa15 	bl	8009e5c <GUI_FillRect>
 800ca32:	6828      	ldr	r0, [r5, #0]
 800ca34:	f7fe f8b7 	bl	800aba6 <GUI_SetColor>
 800ca38:	6921      	ldr	r1, [r4, #16]
 800ca3a:	69a2      	ldr	r2, [r4, #24]
 800ca3c:	69e0      	ldr	r0, [r4, #28]
 800ca3e:	f7fd f991 	bl	8009d64 <GUI_DrawHLine>
 800ca42:	6868      	ldr	r0, [r5, #4]
 800ca44:	f7fe f8af 	bl	800aba6 <GUI_SetColor>
 800ca48:	69e0      	ldr	r0, [r4, #28]
 800ca4a:	6921      	ldr	r1, [r4, #16]
 800ca4c:	69a2      	ldr	r2, [r4, #24]
 800ca4e:	3801      	subs	r0, #1
 800ca50:	3101      	adds	r1, #1
 800ca52:	3a01      	subs	r2, #1
 800ca54:	f7fd f986 	bl	8009d64 <GUI_DrawHLine>
 800ca58:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800ca5a:	2e02      	cmp	r6, #2
 800ca5c:	f340 808c 	ble.w	800cb78 <FRAMEWIN_DrawSkinFlex+0x36c>
 800ca60:	6920      	ldr	r0, [r4, #16]
 800ca62:	69a2      	ldr	r2, [r4, #24]
 800ca64:	69e4      	ldr	r4, [r4, #28]
 800ca66:	f100 0802 	add.w	r8, r0, #2
 800ca6a:	68a8      	ldr	r0, [r5, #8]
 800ca6c:	1e97      	subs	r7, r2, #2
 800ca6e:	f7fe f89a 	bl	800aba6 <GUI_SetColor>
 800ca72:	1ba1      	subs	r1, r4, r6
 800ca74:	4640      	mov	r0, r8
 800ca76:	3101      	adds	r1, #1
 800ca78:	463a      	mov	r2, r7
 800ca7a:	1ea3      	subs	r3, r4, #2
 800ca7c:	f7fd f9ee 	bl	8009e5c <GUI_FillRect>
 800ca80:	e07a      	b.n	800cb78 <FRAMEWIN_DrawSkinFlex+0x36c>
 800ca82:	bf00      	nop
 800ca84:	20000144 	.word	0x20000144
 800ca88:	20000118 	.word	0x20000118
 800ca8c:	8a20      	ldrh	r0, [r4, #16]
 800ca8e:	8aa1      	ldrh	r1, [r4, #20]
 800ca90:	8b22      	ldrh	r2, [r4, #24]
 800ca92:	8ba3      	ldrh	r3, [r4, #28]
 800ca94:	68ec      	ldr	r4, [r5, #12]
 800ca96:	9400      	str	r4, [sp, #0]
 800ca98:	692c      	ldr	r4, [r5, #16]
 800ca9a:	f8ad 001c 	strh.w	r0, [sp, #28]
 800ca9e:	f8ad 101e 	strh.w	r1, [sp, #30]
 800caa2:	f8ad 2020 	strh.w	r2, [sp, #32]
 800caa6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800caaa:	9401      	str	r4, [sp, #4]
 800caac:	b200      	sxth	r0, r0
 800caae:	b209      	sxth	r1, r1
 800cab0:	b212      	sxth	r2, r2
 800cab2:	b21b      	sxth	r3, r3
 800cab4:	f002 fc4e 	bl	800f354 <GUI_DrawGradientV>
 800cab8:	e05e      	b.n	800cb78 <FRAMEWIN_DrawSkinFlex+0x36c>
 800caba:	8b2b      	ldrh	r3, [r5, #24]
 800cabc:	6922      	ldr	r2, [r4, #16]
 800cabe:	6820      	ldr	r0, [r4, #0]
 800cac0:	441a      	add	r2, r3
 800cac2:	f8ad 201c 	strh.w	r2, [sp, #28]
 800cac6:	6962      	ldr	r2, [r4, #20]
 800cac8:	f8ad 201e 	strh.w	r2, [sp, #30]
 800cacc:	69a2      	ldr	r2, [r4, #24]
 800cace:	1ad3      	subs	r3, r2, r3
 800cad0:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cad4:	69e3      	ldr	r3, [r4, #28]
 800cad6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cada:	f7fe fcc5 	bl	800b468 <GUI_ALLOC_LockH>
 800cade:	6f03      	ldr	r3, [r0, #112]	; 0x70
 800cae0:	9005      	str	r0, [sp, #20]
 800cae2:	b1fb      	cbz	r3, 800cb24 <FRAMEWIN_DrawSkinFlex+0x318>
 800cae4:	2002      	movs	r0, #2
 800cae6:	f7fe f899 	bl	800ac1c <GUI_SetTextMode>
 800caea:	9b05      	ldr	r3, [sp, #20]
 800caec:	f8b3 207c 	ldrh.w	r2, [r3, #124]	; 0x7c
 800caf0:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800caf4:	320e      	adds	r2, #14
 800caf6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800cafa:	6898      	ldr	r0, [r3, #8]
 800cafc:	f7fe f853 	bl	800aba6 <GUI_SetColor>
 800cb00:	9b05      	ldr	r3, [sp, #20]
 800cb02:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800cb04:	f7fe f854 	bl	800abb0 <GUI_SetFont>
 800cb08:	9b05      	ldr	r3, [sp, #20]
 800cb0a:	6f18      	ldr	r0, [r3, #112]	; 0x70
 800cb0c:	f7fe fcac 	bl	800b468 <GUI_ALLOC_LockH>
 800cb10:	9b05      	ldr	r3, [sp, #20]
 800cb12:	9006      	str	r0, [sp, #24]
 800cb14:	a907      	add	r1, sp, #28
 800cb16:	f9b3 205a 	ldrsh.w	r2, [r3, #90]	; 0x5a
 800cb1a:	f7fd fc2a 	bl	800a372 <GUI_DispStringInRect>
 800cb1e:	a806      	add	r0, sp, #24
 800cb20:	f7fe fcb0 	bl	800b484 <GUI_ALLOC_UnlockH>
 800cb24:	a805      	add	r0, sp, #20
 800cb26:	f7fe fcad 	bl	800b484 <GUI_ALLOC_UnlockH>
 800cb2a:	e025      	b.n	800cb78 <FRAMEWIN_DrawSkinFlex+0x36c>
 800cb2c:	6923      	ldr	r3, [r4, #16]
 800cb2e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cb32:	6963      	ldr	r3, [r4, #20]
 800cb34:	f8ad 301e 	strh.w	r3, [sp, #30]
 800cb38:	69a3      	ldr	r3, [r4, #24]
 800cb3a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cb3e:	68a8      	ldr	r0, [r5, #8]
 800cb40:	69e3      	ldr	r3, [r4, #28]
 800cb42:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cb46:	f7fe f82e 	bl	800aba6 <GUI_SetColor>
 800cb4a:	a807      	add	r0, sp, #28
 800cb4c:	f7fd f9a8 	bl	8009ea0 <GUI_FillRectEx>
 800cb50:	e012      	b.n	800cb78 <FRAMEWIN_DrawSkinFlex+0x36c>
 800cb52:	6820      	ldr	r0, [r4, #0]
 800cb54:	f7fe fc88 	bl	800b468 <GUI_ALLOC_LockH>
 800cb58:	ab10      	add	r3, sp, #64	; 0x40
 800cb5a:	f8b0 205a 	ldrh.w	r2, [r0, #90]	; 0x5a
 800cb5e:	f843 0d2c 	str.w	r0, [r3, #-44]!
 800cb62:	f042 020c 	orr.w	r2, r2, #12
 800cb66:	f8a0 205a 	strh.w	r2, [r0, #90]	; 0x5a
 800cb6a:	4618      	mov	r0, r3
 800cb6c:	f7fe fc8a 	bl	800b484 <GUI_ALLOC_UnlockH>
 800cb70:	6820      	ldr	r0, [r4, #0]
 800cb72:	f7f7 fbe3 	bl	800433c <WM_SetHasTrans>
 800cb76:	e004      	b.n	800cb82 <FRAMEWIN_DrawSkinFlex+0x376>
 800cb78:	2600      	movs	r6, #0
 800cb7a:	e002      	b.n	800cb82 <FRAMEWIN_DrawSkinFlex+0x376>
 800cb7c:	1c98      	adds	r0, r3, #2
 800cb7e:	4647      	mov	r7, r8
 800cb80:	e6f7      	b.n	800c972 <FRAMEWIN_DrawSkinFlex+0x166>
 800cb82:	4630      	mov	r0, r6
 800cb84:	b010      	add	sp, #64	; 0x40
 800cb86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cb8a:	bf00      	nop

0800cb8c <_GetBorderSize>:
 800cb8c:	b570      	push	{r4, r5, r6, lr}
 800cb8e:	b08a      	sub	sp, #40	; 0x28
 800cb90:	4605      	mov	r5, r0
 800cb92:	460c      	mov	r4, r1
 800cb94:	f7fe fc68 	bl	800b468 <GUI_ALLOC_LockH>
 800cb98:	ab0a      	add	r3, sp, #40	; 0x28
 800cb9a:	6d06      	ldr	r6, [r0, #80]	; 0x50
 800cb9c:	f843 0d28 	str.w	r0, [r3, #-40]!
 800cba0:	4668      	mov	r0, sp
 800cba2:	f7fe fc6f 	bl	800b484 <GUI_ALLOC_UnlockH>
 800cba6:	9501      	str	r5, [sp, #4]
 800cba8:	2c03      	cmp	r4, #3
 800cbaa:	d80b      	bhi.n	800cbc4 <_GetBorderSize+0x38>
 800cbac:	e8df f004 	tbb	[pc, r4]
 800cbb0:	08060402 	.word	0x08060402
 800cbb4:	2318      	movs	r3, #24
 800cbb6:	e004      	b.n	800cbc2 <_GetBorderSize+0x36>
 800cbb8:	2316      	movs	r3, #22
 800cbba:	e002      	b.n	800cbc2 <_GetBorderSize+0x36>
 800cbbc:	2315      	movs	r3, #21
 800cbbe:	e000      	b.n	800cbc2 <_GetBorderSize+0x36>
 800cbc0:	2317      	movs	r3, #23
 800cbc2:	9302      	str	r3, [sp, #8]
 800cbc4:	a801      	add	r0, sp, #4
 800cbc6:	47b0      	blx	r6
 800cbc8:	b00a      	add	sp, #40	; 0x28
 800cbca:	bd70      	pop	{r4, r5, r6, pc}

0800cbcc <_Create>:
 800cbcc:	b530      	push	{r4, r5, lr}
 800cbce:	b08b      	sub	sp, #44	; 0x2c
 800cbd0:	4605      	mov	r5, r0
 800cbd2:	f7fe fc49 	bl	800b468 <GUI_ALLOC_LockH>
 800cbd6:	ab0a      	add	r3, sp, #40	; 0x28
 800cbd8:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 800cbda:	f843 0d28 	str.w	r0, [r3, #-40]!
 800cbde:	4668      	mov	r0, sp
 800cbe0:	6894      	ldr	r4, [r2, #8]
 800cbe2:	f7fe fc4f 	bl	800b484 <GUI_ALLOC_UnlockH>
 800cbe6:	a80a      	add	r0, sp, #40	; 0x28
 800cbe8:	2300      	movs	r3, #0
 800cbea:	9302      	str	r3, [sp, #8]
 800cbec:	f840 5d24 	str.w	r5, [r0, #-36]!
 800cbf0:	6863      	ldr	r3, [r4, #4]
 800cbf2:	4798      	blx	r3
 800cbf4:	b00b      	add	sp, #44	; 0x2c
 800cbf6:	bd30      	pop	{r4, r5, pc}

0800cbf8 <_Paint>:
 800cbf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cbfc:	b091      	sub	sp, #68	; 0x44
 800cbfe:	4604      	mov	r4, r0
 800cc00:	f7fe fc32 	bl	800b468 <GUI_ALLOC_LockH>
 800cc04:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 800cc06:	6b46      	ldr	r6, [r0, #52]	; 0x34
 800cc08:	9603      	str	r6, [sp, #12]
 800cc0a:	9006      	str	r0, [sp, #24]
 800cc0c:	689e      	ldr	r6, [r3, #8]
 800cc0e:	6d05      	ldr	r5, [r0, #80]	; 0x50
 800cc10:	f7f6 ff1d 	bl	8003a4e <FRAMEWIN__CalcTitleHeight>
 800cc14:	4683      	mov	fp, r0
 800cc16:	a810      	add	r0, sp, #64	; 0x40
 800cc18:	f850 2d28 	ldr.w	r2, [r0, #-40]!
 800cc1c:	f8b2 2058 	ldrh.w	r2, [r2, #88]	; 0x58
 800cc20:	9204      	str	r2, [sp, #16]
 800cc22:	f7fe fc2f 	bl	800b484 <GUI_ALLOC_UnlockH>
 800cc26:	4620      	mov	r0, r4
 800cc28:	f7f8 f8e6 	bl	8004df8 <WM_GetWindowSizeX>
 800cc2c:	4681      	mov	r9, r0
 800cc2e:	4620      	mov	r0, r4
 800cc30:	f7f8 f8f7 	bl	8004e22 <WM_GetWindowSizeY>
 800cc34:	6832      	ldr	r2, [r6, #0]
 800cc36:	2101      	movs	r1, #1
 800cc38:	4680      	mov	r8, r0
 800cc3a:	4620      	mov	r0, r4
 800cc3c:	4790      	blx	r2
 800cc3e:	6832      	ldr	r2, [r6, #0]
 800cc40:	2103      	movs	r1, #3
 800cc42:	4607      	mov	r7, r0
 800cc44:	4620      	mov	r0, r4
 800cc46:	4790      	blx	r2
 800cc48:	6832      	ldr	r2, [r6, #0]
 800cc4a:	2100      	movs	r1, #0
 800cc4c:	4682      	mov	sl, r0
 800cc4e:	4620      	mov	r0, r4
 800cc50:	4790      	blx	r2
 800cc52:	6833      	ldr	r3, [r6, #0]
 800cc54:	9002      	str	r0, [sp, #8]
 800cc56:	2102      	movs	r1, #2
 800cc58:	4620      	mov	r0, r4
 800cc5a:	4798      	blx	r3
 800cc5c:	9005      	str	r0, [sp, #20]
 800cc5e:	2000      	movs	r0, #0
 800cc60:	9407      	str	r4, [sp, #28]
 800cc62:	f7f9 f885 	bl	8005d70 <WM__InitIVRSearch>
 800cc66:	2800      	cmp	r0, #0
 800cc68:	d044      	beq.n	800ccf4 <_Paint+0xfc>
 800cc6a:	2300      	movs	r3, #0
 800cc6c:	930c      	str	r3, [sp, #48]	; 0x30
 800cc6e:	930b      	str	r3, [sp, #44]	; 0x2c
 800cc70:	f109 33ff 	add.w	r3, r9, #4294967295
 800cc74:	930d      	str	r3, [sp, #52]	; 0x34
 800cc76:	f108 33ff 	add.w	r3, r8, #4294967295
 800cc7a:	930e      	str	r3, [sp, #56]	; 0x38
 800cc7c:	230b      	movs	r3, #11
 800cc7e:	9308      	str	r3, [sp, #32]
 800cc80:	a807      	add	r0, sp, #28
 800cc82:	47a8      	blx	r5
 800cc84:	9b02      	ldr	r3, [sp, #8]
 800cc86:	9e04      	ldr	r6, [sp, #16]
 800cc88:	970b      	str	r7, [sp, #44]	; 0x2c
 800cc8a:	445b      	add	r3, fp
 800cc8c:	fa03 f086 	sxtah	r0, r3, r6
 800cc90:	9e05      	ldr	r6, [sp, #20]
 800cc92:	930c      	str	r3, [sp, #48]	; 0x30
 800cc94:	ebc6 0108 	rsb	r1, r6, r8
 800cc98:	ebca 0209 	rsb	r2, sl, r9
 800cc9c:	3801      	subs	r0, #1
 800cc9e:	3901      	subs	r1, #1
 800cca0:	3a01      	subs	r2, #1
 800cca2:	4288      	cmp	r0, r1
 800cca4:	bfd4      	ite	le
 800cca6:	900e      	strle	r0, [sp, #56]	; 0x38
 800cca8:	910e      	strgt	r1, [sp, #56]	; 0x38
 800ccaa:	210e      	movs	r1, #14
 800ccac:	9108      	str	r1, [sp, #32]
 800ccae:	e88d 000c 	stmia.w	sp, {r2, r3}
 800ccb2:	920d      	str	r2, [sp, #52]	; 0x34
 800ccb4:	a807      	add	r0, sp, #28
 800ccb6:	47a8      	blx	r5
 800ccb8:	9b01      	ldr	r3, [sp, #4]
 800ccba:	9a00      	ldr	r2, [sp, #0]
 800ccbc:	9e02      	ldr	r6, [sp, #8]
 800ccbe:	920d      	str	r2, [sp, #52]	; 0x34
 800ccc0:	3b01      	subs	r3, #1
 800ccc2:	930e      	str	r3, [sp, #56]	; 0x38
 800ccc4:	2305      	movs	r3, #5
 800ccc6:	9308      	str	r3, [sp, #32]
 800ccc8:	970b      	str	r7, [sp, #44]	; 0x2c
 800ccca:	960c      	str	r6, [sp, #48]	; 0x30
 800cccc:	a807      	add	r0, sp, #28
 800ccce:	47a8      	blx	r5
 800ccd0:	a90b      	add	r1, sp, #44	; 0x2c
 800ccd2:	aa0d      	add	r2, sp, #52	; 0x34
 800ccd4:	4620      	mov	r0, r4
 800ccd6:	f7f6 fec9 	bl	8003a6c <FRAMEWIN__GetTitleLimits>
 800ccda:	2002      	movs	r0, #2
 800ccdc:	f7fd ff9e 	bl	800ac1c <GUI_SetTextMode>
 800cce0:	9803      	ldr	r0, [sp, #12]
 800cce2:	f7fd ff65 	bl	800abb0 <GUI_SetFont>
 800cce6:	2312      	movs	r3, #18
 800cce8:	9308      	str	r3, [sp, #32]
 800ccea:	a807      	add	r0, sp, #28
 800ccec:	47a8      	blx	r5
 800ccee:	f7f8 ff7d 	bl	8005bec <WM__GetNextIVR>
 800ccf2:	e7b8      	b.n	800cc66 <_Paint+0x6e>
 800ccf4:	b011      	add	sp, #68	; 0x44
 800ccf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ccfa <_cbTimer>:
 800ccfa:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ccfc:	4604      	mov	r4, r0
 800ccfe:	2100      	movs	r1, #0
 800cd00:	4668      	mov	r0, sp
 800cd02:	2210      	movs	r2, #16
 800cd04:	f002 ffea 	bl	800fcdc <memset>
 800cd08:	6860      	ldr	r0, [r4, #4]
 800cd0a:	b150      	cbz	r0, 800cd22 <_cbTimer+0x28>
 800cd0c:	f7fe fba2 	bl	800b454 <GUI_ALLOC_h2p>
 800cd10:	f240 1313 	movw	r3, #275	; 0x113
 800cd14:	6840      	ldr	r0, [r0, #4]
 800cd16:	9300      	str	r3, [sp, #0]
 800cd18:	4669      	mov	r1, sp
 800cd1a:	6863      	ldr	r3, [r4, #4]
 800cd1c:	9303      	str	r3, [sp, #12]
 800cd1e:	f7f8 fc62 	bl	80055e6 <WM_SendMessage>
 800cd22:	b004      	add	sp, #16
 800cd24:	bd10      	pop	{r4, pc}

0800cd26 <WM_DeleteTimer>:
 800cd26:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cd28:	4605      	mov	r5, r0
 800cd2a:	b168      	cbz	r0, 800cd48 <WM_DeleteTimer+0x22>
 800cd2c:	f7fe fb9c 	bl	800b468 <GUI_ALLOC_LockH>
 800cd30:	ac02      	add	r4, sp, #8
 800cd32:	f844 0d04 	str.w	r0, [r4, #-4]!
 800cd36:	6800      	ldr	r0, [r0, #0]
 800cd38:	f7fc fd00 	bl	800973c <GUI_TIMER_Delete>
 800cd3c:	4620      	mov	r0, r4
 800cd3e:	f7fe fba1 	bl	800b484 <GUI_ALLOC_UnlockH>
 800cd42:	4628      	mov	r0, r5
 800cd44:	f7fe fbca 	bl	800b4dc <GUI_ALLOC_Free>
 800cd48:	b003      	add	sp, #12
 800cd4a:	bd30      	pop	{r4, r5, pc}

0800cd4c <WM__DeleteAssocTimer>:
 800cd4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cd4e:	4605      	mov	r5, r0
 800cd50:	a801      	add	r0, sp, #4
 800cd52:	f7fc fc71 	bl	8009638 <GUI_TIMER__GetFirstTimer>
 800cd56:	4604      	mov	r4, r0
 800cd58:	b1dc      	cbz	r4, 800cd92 <WM__DeleteAssocTimer+0x46>
 800cd5a:	4620      	mov	r0, r4
 800cd5c:	2101      	movs	r1, #1
 800cd5e:	f7fc fd48 	bl	80097f2 <GUI_TIMER_GetFlag>
 800cd62:	9b01      	ldr	r3, [sp, #4]
 800cd64:	b183      	cbz	r3, 800cd88 <WM__DeleteAssocTimer+0x3c>
 800cd66:	b178      	cbz	r0, 800cd88 <WM__DeleteAssocTimer+0x3c>
 800cd68:	4618      	mov	r0, r3
 800cd6a:	f7fe fb73 	bl	800b454 <GUI_ALLOC_h2p>
 800cd6e:	6843      	ldr	r3, [r0, #4]
 800cd70:	42ab      	cmp	r3, r5
 800cd72:	d109      	bne.n	800cd88 <WM__DeleteAssocTimer+0x3c>
 800cd74:	4620      	mov	r0, r4
 800cd76:	a901      	add	r1, sp, #4
 800cd78:	9e01      	ldr	r6, [sp, #4]
 800cd7a:	f7fc fc75 	bl	8009668 <GUI_TIMER__GetNextTimerLin>
 800cd7e:	4604      	mov	r4, r0
 800cd80:	4630      	mov	r0, r6
 800cd82:	f7ff ffd0 	bl	800cd26 <WM_DeleteTimer>
 800cd86:	e7e7      	b.n	800cd58 <WM__DeleteAssocTimer+0xc>
 800cd88:	4620      	mov	r0, r4
 800cd8a:	a901      	add	r1, sp, #4
 800cd8c:	f7fc fc6c 	bl	8009668 <GUI_TIMER__GetNextTimerLin>
 800cd90:	e7e1      	b.n	800cd56 <WM__DeleteAssocTimer+0xa>
 800cd92:	b002      	add	sp, #8
 800cd94:	bd70      	pop	{r4, r5, r6, pc}
	...

0800cd98 <WM_CreateTimer>:
 800cd98:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800cd9c:	4680      	mov	r8, r0
 800cd9e:	200c      	movs	r0, #12
 800cda0:	460f      	mov	r7, r1
 800cda2:	4616      	mov	r6, r2
 800cda4:	f7fe fd5a 	bl	800b85c <GUI_ALLOC_AllocZero>
 800cda8:	4604      	mov	r4, r0
 800cdaa:	b1f0      	cbz	r0, 800cdea <WM_CreateTimer+0x52>
 800cdac:	f7fc fd36 	bl	800981c <GUI_GetTime>
 800cdb0:	4622      	mov	r2, r4
 800cdb2:	1981      	adds	r1, r0, r6
 800cdb4:	2301      	movs	r3, #1
 800cdb6:	480f      	ldr	r0, [pc, #60]	; (800cdf4 <WM_CreateTimer+0x5c>)
 800cdb8:	f7fc fc72 	bl	80096a0 <GUI_TIMER_Create>
 800cdbc:	4605      	mov	r5, r0
 800cdbe:	4620      	mov	r0, r4
 800cdc0:	b185      	cbz	r5, 800cde4 <WM_CreateTimer+0x4c>
 800cdc2:	f7fe fb51 	bl	800b468 <GUI_ALLOC_LockH>
 800cdc6:	4603      	mov	r3, r0
 800cdc8:	a802      	add	r0, sp, #8
 800cdca:	f8c3 8004 	str.w	r8, [r3, #4]
 800cdce:	f840 3d04 	str.w	r3, [r0, #-4]!
 800cdd2:	609f      	str	r7, [r3, #8]
 800cdd4:	601d      	str	r5, [r3, #0]
 800cdd6:	f7fe fb55 	bl	800b484 <GUI_ALLOC_UnlockH>
 800cdda:	4628      	mov	r0, r5
 800cddc:	4631      	mov	r1, r6
 800cdde:	f7fc fce1 	bl	80097a4 <GUI_TIMER_SetPeriod>
 800cde2:	e002      	b.n	800cdea <WM_CreateTimer+0x52>
 800cde4:	f7fe fb7a 	bl	800b4dc <GUI_ALLOC_Free>
 800cde8:	462c      	mov	r4, r5
 800cdea:	4620      	mov	r0, r4
 800cdec:	b002      	add	sp, #8
 800cdee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cdf2:	bf00      	nop
 800cdf4:	0800ccfb 	.word	0x0800ccfb

0800cdf8 <WM_RestartTimer>:
 800cdf8:	b513      	push	{r0, r1, r4, lr}
 800cdfa:	460c      	mov	r4, r1
 800cdfc:	b180      	cbz	r0, 800ce20 <WM_RestartTimer+0x28>
 800cdfe:	f7fe fb33 	bl	800b468 <GUI_ALLOC_LockH>
 800ce02:	9001      	str	r0, [sp, #4]
 800ce04:	b11c      	cbz	r4, 800ce0e <WM_RestartTimer+0x16>
 800ce06:	6800      	ldr	r0, [r0, #0]
 800ce08:	4621      	mov	r1, r4
 800ce0a:	f7fc fccb 	bl	80097a4 <GUI_TIMER_SetPeriod>
 800ce0e:	ac02      	add	r4, sp, #8
 800ce10:	f854 3d04 	ldr.w	r3, [r4, #-4]!
 800ce14:	6818      	ldr	r0, [r3, #0]
 800ce16:	f7fc fcd3 	bl	80097c0 <GUI_TIMER_Restart>
 800ce1a:	4620      	mov	r0, r4
 800ce1c:	f7fe fb32 	bl	800b484 <GUI_ALLOC_UnlockH>
 800ce20:	b002      	add	sp, #8
 800ce22:	bd10      	pop	{r4, pc}

0800ce24 <_Convert16>:
 800ce24:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce28:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800ce2c:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800ce30:	4605      	mov	r5, r0
 800ce32:	460e      	mov	r6, r1
 800ce34:	4690      	mov	r8, r2
 800ce36:	461f      	mov	r7, r3
 800ce38:	4614      	mov	r4, r2
 800ce3a:	4689      	mov	r9, r1
 800ce3c:	f835 0b02 	ldrh.w	r0, [r5], #2
 800ce40:	47d8      	blx	fp
 800ce42:	47d0      	blx	sl
 800ce44:	3c01      	subs	r4, #1
 800ce46:	f849 0b04 	str.w	r0, [r9], #4
 800ce4a:	d1f7      	bne.n	800ce3c <_Convert16+0x18>
 800ce4c:	2f1f      	cmp	r7, #31
 800ce4e:	d806      	bhi.n	800ce5e <_Convert16+0x3a>
 800ce50:	4630      	mov	r0, r6
 800ce52:	4641      	mov	r1, r8
 800ce54:	463a      	mov	r2, r7
 800ce56:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce5a:	f001 bf03 	b.w	800ec64 <GUI__CompactPixelIndices>
 800ce5e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ce62 <_Convert8>:
 800ce62:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce66:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800ce6a:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800ce6e:	4605      	mov	r5, r0
 800ce70:	460e      	mov	r6, r1
 800ce72:	4690      	mov	r8, r2
 800ce74:	461f      	mov	r7, r3
 800ce76:	4689      	mov	r9, r1
 800ce78:	4604      	mov	r4, r0
 800ce7a:	f814 0b01 	ldrb.w	r0, [r4], #1
 800ce7e:	47d8      	blx	fp
 800ce80:	47d0      	blx	sl
 800ce82:	1b2b      	subs	r3, r5, r4
 800ce84:	4443      	add	r3, r8
 800ce86:	f849 0b04 	str.w	r0, [r9], #4
 800ce8a:	2b00      	cmp	r3, #0
 800ce8c:	d1f5      	bne.n	800ce7a <_Convert8+0x18>
 800ce8e:	2f1f      	cmp	r7, #31
 800ce90:	d806      	bhi.n	800cea0 <_Convert8+0x3e>
 800ce92:	4630      	mov	r0, r6
 800ce94:	4641      	mov	r1, r8
 800ce96:	463a      	mov	r2, r7
 800ce98:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce9c:	f001 bee2 	b.w	800ec64 <GUI__CompactPixelIndices>
 800cea0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800cea4 <GUI_MEMDEV__WriteToActiveOpaque>:
 800cea4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cea8:	b09d      	sub	sp, #116	; 0x74
 800ceaa:	4606      	mov	r6, r0
 800ceac:	910f      	str	r1, [sp, #60]	; 0x3c
 800ceae:	920d      	str	r2, [sp, #52]	; 0x34
 800ceb0:	2800      	cmp	r0, #0
 800ceb2:	f000 8386 	beq.w	800d5c2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800ceb6:	f7fe fad7 	bl	800b468 <GUI_ALLOC_LockH>
 800ceba:	ab1c      	add	r3, sp, #112	; 0x70
 800cebc:	6944      	ldr	r4, [r0, #20]
 800cebe:	f843 0d1c 	str.w	r0, [r3, #-28]!
 800cec2:	4618      	mov	r0, r3
 800cec4:	f7fe fade 	bl	800b484 <GUI_ALLOC_UnlockH>
 800cec8:	4630      	mov	r0, r6
 800ceca:	f7fa f955 	bl	8007178 <GUI_MEMDEV_GetBitsPerPixel>
 800cece:	2808      	cmp	r0, #8
 800ced0:	4601      	mov	r1, r0
 800ced2:	dd02      	ble.n	800ceda <GUI_MEMDEV__WriteToActiveOpaque+0x36>
 800ced4:	2c00      	cmp	r4, #0
 800ced6:	f000 81c3 	beq.w	800d260 <GUI_MEMDEV__WriteToActiveOpaque+0x3bc>
 800ceda:	2201      	movs	r2, #1
 800cedc:	f04f 0800 	mov.w	r8, #0
 800cee0:	4630      	mov	r0, r6
 800cee2:	921b      	str	r2, [sp, #108]	; 0x6c
 800cee4:	920b      	str	r2, [sp, #44]	; 0x2c
 800cee6:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 800ceea:	f7fe fabd 	bl	800b468 <GUI_ALLOC_LockH>
 800ceee:	6803      	ldr	r3, [r0, #0]
 800cef0:	f8df a60c 	ldr.w	sl, [pc, #1548]	; 800d500 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>
 800cef4:	691b      	ldr	r3, [r3, #16]
 800cef6:	f9b0 100a 	ldrsh.w	r1, [r0, #10]
 800cefa:	685b      	ldr	r3, [r3, #4]
 800cefc:	930e      	str	r3, [sp, #56]	; 0x38
 800cefe:	f10d 0b70 	add.w	fp, sp, #112	; 0x70
 800cf02:	f8da 3000 	ldr.w	r3, [sl]
 800cf06:	f84b 0d14 	str.w	r0, [fp, #-20]!
 800cf0a:	6904      	ldr	r4, [r0, #16]
 800cf0c:	6945      	ldr	r5, [r0, #20]
 800cf0e:	f8d0 900c 	ldr.w	r9, [r0, #12]
 800cf12:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 800cf16:	7c58      	ldrb	r0, [r3, #17]
 800cf18:	9112      	str	r1, [sp, #72]	; 0x48
 800cf1a:	f7fb fb17 	bl	800854c <GUI_GetBitsPerPixelEx>
 800cf1e:	f8da 3000 	ldr.w	r3, [sl]
 800cf22:	9010      	str	r0, [sp, #64]	; 0x40
 800cf24:	7c58      	ldrb	r0, [r3, #17]
 800cf26:	f7fb fb2f 	bl	8008588 <GUI_GetpfIndex2ColorEx>
 800cf2a:	4603      	mov	r3, r0
 800cf2c:	4658      	mov	r0, fp
 800cf2e:	9309      	str	r3, [sp, #36]	; 0x24
 800cf30:	f7fe faa8 	bl	800b484 <GUI_ALLOC_UnlockH>
 800cf34:	2c08      	cmp	r4, #8
 800cf36:	4651      	mov	r1, sl
 800cf38:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cf3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cf3c:	d904      	bls.n	800cf48 <GUI_MEMDEV__WriteToActiveOpaque+0xa4>
 800cf3e:	2c10      	cmp	r4, #16
 800cf40:	bf8c      	ite	hi
 800cf42:	2204      	movhi	r2, #4
 800cf44:	2202      	movls	r2, #2
 800cf46:	e005      	b.n	800cf54 <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 800cf48:	2c01      	cmp	r4, #1
 800cf4a:	d103      	bne.n	800cf54 <GUI_MEMDEV__WriteToActiveOpaque+0xb0>
 800cf4c:	9411      	str	r4, [sp, #68]	; 0x44
 800cf4e:	f10d 0868 	add.w	r8, sp, #104	; 0x68
 800cf52:	e000      	b.n	800cf56 <GUI_MEMDEV__WriteToActiveOpaque+0xb2>
 800cf54:	9211      	str	r2, [sp, #68]	; 0x44
 800cf56:	980e      	ldr	r0, [sp, #56]	; 0x38
 800cf58:	4298      	cmp	r0, r3
 800cf5a:	f000 80e2 	beq.w	800d122 <GUI_MEMDEV__WriteToActiveOpaque+0x27e>
 800cf5e:	680b      	ldr	r3, [r1, #0]
 800cf60:	7c58      	ldrb	r0, [r3, #17]
 800cf62:	f7fb fb19 	bl	8008598 <GUI_GetpfColor2IndexEx>
 800cf66:	9013      	str	r0, [sp, #76]	; 0x4c
 800cf68:	00b8      	lsls	r0, r7, #2
 800cf6a:	f7fe fc49 	bl	800b800 <GUI_ALLOC_AllocNoInit>
 800cf6e:	900c      	str	r0, [sp, #48]	; 0x30
 800cf70:	2800      	cmp	r0, #0
 800cf72:	f000 8326 	beq.w	800d5c2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800cf76:	4630      	mov	r0, r6
 800cf78:	f7f9 fa96 	bl	80064a8 <GUI_MEMDEV_GetDataPtr>
 800cf7c:	4606      	mov	r6, r0
 800cf7e:	2d00      	cmp	r5, #0
 800cf80:	f000 80be 	beq.w	800d100 <GUI_MEMDEV__WriteToActiveOpaque+0x25c>
 800cf84:	4628      	mov	r0, r5
 800cf86:	f7fe fa6f 	bl	800b468 <GUI_ALLOC_LockH>
 800cf8a:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 800cf8e:	9018      	str	r0, [sp, #96]	; 0x60
 800cf90:	f04f 0a00 	mov.w	sl, #0
 800cf94:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800cf96:	4592      	cmp	sl, r2
 800cf98:	f280 80ae 	bge.w	800d0f8 <GUI_MEMDEV__WriteToActiveOpaque+0x254>
 800cf9c:	9818      	ldr	r0, [sp, #96]	; 0x60
 800cf9e:	2300      	movs	r3, #0
 800cfa0:	9319      	str	r3, [sp, #100]	; 0x64
 800cfa2:	6883      	ldr	r3, [r0, #8]
 800cfa4:	a919      	add	r1, sp, #100	; 0x64
 800cfa6:	695b      	ldr	r3, [r3, #20]
 800cfa8:	4652      	mov	r2, sl
 800cfaa:	4798      	blx	r3
 800cfac:	42b8      	cmp	r0, r7
 800cfae:	4605      	mov	r5, r0
 800cfb0:	d12f      	bne.n	800d012 <GUI_MEMDEV__WriteToActiveOpaque+0x16e>
 800cfb2:	980c      	ldr	r0, [sp, #48]	; 0x30
 800cfb4:	f7fe fa58 	bl	800b468 <GUI_ALLOC_LockH>
 800cfb8:	2c08      	cmp	r4, #8
 800cfba:	4601      	mov	r1, r0
 800cfbc:	9016      	str	r0, [sp, #88]	; 0x58
 800cfbe:	d909      	bls.n	800cfd4 <GUI_MEMDEV__WriteToActiveOpaque+0x130>
 800cfc0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800cfc2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800cfc4:	9200      	str	r2, [sp, #0]
 800cfc6:	9301      	str	r3, [sp, #4]
 800cfc8:	4630      	mov	r0, r6
 800cfca:	463a      	mov	r2, r7
 800cfcc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800cfce:	f7ff ff29 	bl	800ce24 <_Convert16>
 800cfd2:	e008      	b.n	800cfe6 <GUI_MEMDEV__WriteToActiveOpaque+0x142>
 800cfd4:	980e      	ldr	r0, [sp, #56]	; 0x38
 800cfd6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800cfd8:	9000      	str	r0, [sp, #0]
 800cfda:	9201      	str	r2, [sp, #4]
 800cfdc:	4630      	mov	r0, r6
 800cfde:	463a      	mov	r2, r7
 800cfe0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800cfe2:	f7ff ff3e 	bl	800ce62 <_Convert8>
 800cfe6:	2301      	movs	r3, #1
 800cfe8:	9810      	ldr	r0, [sp, #64]	; 0x40
 800cfea:	9002      	str	r0, [sp, #8]
 800cfec:	ad1c      	add	r5, sp, #112	; 0x70
 800cfee:	2200      	movs	r2, #0
 800cff0:	9300      	str	r3, [sp, #0]
 800cff2:	9301      	str	r3, [sp, #4]
 800cff4:	9203      	str	r2, [sp, #12]
 800cff6:	f855 2d18 	ldr.w	r2, [r5, #-24]!
 800cffa:	9204      	str	r2, [sp, #16]
 800cffc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800cffe:	f8cd 8014 	str.w	r8, [sp, #20]
 800d002:	4659      	mov	r1, fp
 800d004:	463a      	mov	r2, r7
 800d006:	f7fb fce3 	bl	80089d0 <LCD_DrawBitmap>
 800d00a:	4628      	mov	r0, r5
 800d00c:	f7fe fa3a 	bl	800b484 <GUI_ALLOC_UnlockH>
 800d010:	e060      	b.n	800d0d4 <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 800d012:	2c01      	cmp	r4, #1
 800d014:	d15c      	bne.n	800d0d0 <GUI_MEMDEV__WriteToActiveOpaque+0x22c>
 800d016:	2d00      	cmp	r5, #0
 800d018:	d05c      	beq.n	800d0d4 <GUI_MEMDEV__WriteToActiveOpaque+0x230>
 800d01a:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d01c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800d01e:	f8cd 900c 	str.w	r9, [sp, #12]
 800d022:	2208      	movs	r2, #8
 800d024:	fb90 f2f2 	sdiv	r2, r0, r2
 800d028:	4432      	add	r2, r6
 800d02a:	2301      	movs	r3, #1
 800d02c:	9204      	str	r2, [sp, #16]
 800d02e:	f000 0207 	and.w	r2, r0, #7
 800d032:	9300      	str	r3, [sp, #0]
 800d034:	4408      	add	r0, r1
 800d036:	9301      	str	r3, [sp, #4]
 800d038:	9302      	str	r3, [sp, #8]
 800d03a:	9206      	str	r2, [sp, #24]
 800d03c:	4659      	mov	r1, fp
 800d03e:	462a      	mov	r2, r5
 800d040:	f8cd 8014 	str.w	r8, [sp, #20]
 800d044:	f7fb fbe8 	bl	8008818 <LCD__DrawBitmap_1bpp>
 800d048:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d04a:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d04c:	441d      	add	r5, r3
 800d04e:	6883      	ldr	r3, [r0, #8]
 800d050:	9519      	str	r5, [sp, #100]	; 0x64
 800d052:	695b      	ldr	r3, [r3, #20]
 800d054:	a919      	add	r1, sp, #100	; 0x64
 800d056:	4652      	mov	r2, sl
 800d058:	4798      	blx	r3
 800d05a:	4605      	mov	r5, r0
 800d05c:	e7db      	b.n	800d016 <GUI_MEMDEV__WriteToActiveOpaque+0x172>
 800d05e:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d060:	f7fe fa02 	bl	800b468 <GUI_ALLOC_LockH>
 800d064:	2c08      	cmp	r4, #8
 800d066:	4601      	mov	r1, r0
 800d068:	9016      	str	r0, [sp, #88]	; 0x58
 800d06a:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d06c:	d938      	bls.n	800d0e0 <GUI_MEMDEV__WriteToActiveOpaque+0x23c>
 800d06e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d070:	9200      	str	r2, [sp, #0]
 800d072:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800d074:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800d076:	9301      	str	r3, [sp, #4]
 800d078:	fb00 6002 	mla	r0, r0, r2, r6
 800d07c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d07e:	462a      	mov	r2, r5
 800d080:	f7ff fed0 	bl	800ce24 <_Convert16>
 800d084:	2301      	movs	r3, #1
 800d086:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
 800d08a:	9810      	ldr	r0, [sp, #64]	; 0x40
 800d08c:	9300      	str	r3, [sp, #0]
 800d08e:	2200      	movs	r2, #0
 800d090:	9301      	str	r3, [sp, #4]
 800d092:	9002      	str	r0, [sp, #8]
 800d094:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800d096:	9203      	str	r2, [sp, #12]
 800d098:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d09a:	f85c 2d18 	ldr.w	r2, [ip, #-24]!
 800d09e:	9204      	str	r2, [sp, #16]
 800d0a0:	4408      	add	r0, r1
 800d0a2:	462a      	mov	r2, r5
 800d0a4:	4659      	mov	r1, fp
 800d0a6:	f8cd 8014 	str.w	r8, [sp, #20]
 800d0aa:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 800d0ae:	f7fb fc8f 	bl	80089d0 <LCD_DrawBitmap>
 800d0b2:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 800d0b6:	4660      	mov	r0, ip
 800d0b8:	f7fe f9e4 	bl	800b484 <GUI_ALLOC_UnlockH>
 800d0bc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d0be:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d0c0:	441d      	add	r5, r3
 800d0c2:	6883      	ldr	r3, [r0, #8]
 800d0c4:	9519      	str	r5, [sp, #100]	; 0x64
 800d0c6:	695b      	ldr	r3, [r3, #20]
 800d0c8:	a919      	add	r1, sp, #100	; 0x64
 800d0ca:	4652      	mov	r2, sl
 800d0cc:	4798      	blx	r3
 800d0ce:	4605      	mov	r5, r0
 800d0d0:	2d00      	cmp	r5, #0
 800d0d2:	d1c4      	bne.n	800d05e <GUI_MEMDEV__WriteToActiveOpaque+0x1ba>
 800d0d4:	444e      	add	r6, r9
 800d0d6:	f10a 0a01 	add.w	sl, sl, #1
 800d0da:	f10b 0b01 	add.w	fp, fp, #1
 800d0de:	e759      	b.n	800cf94 <GUI_MEMDEV__WriteToActiveOpaque+0xf0>
 800d0e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d0e2:	9300      	str	r3, [sp, #0]
 800d0e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d0e6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800d0e8:	9201      	str	r2, [sp, #4]
 800d0ea:	fb00 6003 	mla	r0, r0, r3, r6
 800d0ee:	462a      	mov	r2, r5
 800d0f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d0f2:	f7ff feb6 	bl	800ce62 <_Convert8>
 800d0f6:	e7c5      	b.n	800d084 <GUI_MEMDEV__WriteToActiveOpaque+0x1e0>
 800d0f8:	a818      	add	r0, sp, #96	; 0x60
 800d0fa:	f7fe f9c3 	bl	800b484 <GUI_ALLOC_UnlockH>
 800d0fe:	e00e      	b.n	800d11e <GUI_MEMDEV__WriteToActiveOpaque+0x27a>
 800d100:	2301      	movs	r3, #1
 800d102:	9300      	str	r3, [sp, #0]
 800d104:	9301      	str	r3, [sp, #4]
 800d106:	9004      	str	r0, [sp, #16]
 800d108:	9402      	str	r4, [sp, #8]
 800d10a:	f8cd 900c 	str.w	r9, [sp, #12]
 800d10e:	f8cd 8014 	str.w	r8, [sp, #20]
 800d112:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d114:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d116:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d118:	463a      	mov	r2, r7
 800d11a:	f7fb fc59 	bl	80089d0 <LCD_DrawBitmap>
 800d11e:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d120:	e24d      	b.n	800d5be <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 800d122:	4630      	mov	r0, r6
 800d124:	f7f9 f9c0 	bl	80064a8 <GUI_MEMDEV_GetDataPtr>
 800d128:	4606      	mov	r6, r0
 800d12a:	2d00      	cmp	r5, #0
 800d12c:	f000 808a 	beq.w	800d244 <GUI_MEMDEV__WriteToActiveOpaque+0x3a0>
 800d130:	4628      	mov	r0, r5
 800d132:	f7fe f999 	bl	800b468 <GUI_ALLOC_LockH>
 800d136:	2500      	movs	r5, #0
 800d138:	9018      	str	r0, [sp, #96]	; 0x60
 800d13a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d13c:	429d      	cmp	r5, r3
 800d13e:	da7d      	bge.n	800d23c <GUI_MEMDEV__WriteToActiveOpaque+0x398>
 800d140:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d142:	2300      	movs	r3, #0
 800d144:	9319      	str	r3, [sp, #100]	; 0x64
 800d146:	6883      	ldr	r3, [r0, #8]
 800d148:	a919      	add	r1, sp, #100	; 0x64
 800d14a:	695b      	ldr	r3, [r3, #20]
 800d14c:	462a      	mov	r2, r5
 800d14e:	4798      	blx	r3
 800d150:	42b8      	cmp	r0, r7
 800d152:	4682      	mov	sl, r0
 800d154:	d124      	bne.n	800d1a0 <GUI_MEMDEV__WriteToActiveOpaque+0x2fc>
 800d156:	46aa      	mov	sl, r5
 800d158:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d15a:	6883      	ldr	r3, [r0, #8]
 800d15c:	f10a 0b01 	add.w	fp, sl, #1
 800d160:	695b      	ldr	r3, [r3, #20]
 800d162:	a919      	add	r1, sp, #100	; 0x64
 800d164:	465a      	mov	r2, fp
 800d166:	4798      	blx	r3
 800d168:	42b8      	cmp	r0, r7
 800d16a:	d101      	bne.n	800d170 <GUI_MEMDEV__WriteToActiveOpaque+0x2cc>
 800d16c:	46da      	mov	sl, fp
 800d16e:	e7f3      	b.n	800d158 <GUI_MEMDEV__WriteToActiveOpaque+0x2b4>
 800d170:	ebc5 0b0a 	rsb	fp, r5, sl
 800d174:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d176:	9604      	str	r6, [sp, #16]
 800d178:	2301      	movs	r3, #1
 800d17a:	f10b 0b01 	add.w	fp, fp, #1
 800d17e:	9300      	str	r3, [sp, #0]
 800d180:	9301      	str	r3, [sp, #4]
 800d182:	4429      	add	r1, r5
 800d184:	9402      	str	r4, [sp, #8]
 800d186:	f8cd 900c 	str.w	r9, [sp, #12]
 800d18a:	f8cd 8014 	str.w	r8, [sp, #20]
 800d18e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d190:	463a      	mov	r2, r7
 800d192:	465b      	mov	r3, fp
 800d194:	f7fb fc1c 	bl	80089d0 <LCD_DrawBitmap>
 800d198:	fb09 660b 	mla	r6, r9, fp, r6
 800d19c:	4655      	mov	r5, sl
 800d19e:	e04b      	b.n	800d238 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 800d1a0:	2c01      	cmp	r4, #1
 800d1a2:	d127      	bne.n	800d1f4 <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 800d1a4:	f1ba 0f00 	cmp.w	sl, #0
 800d1a8:	d022      	beq.n	800d1f0 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 800d1aa:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d1ac:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800d1ae:	f8cd 900c 	str.w	r9, [sp, #12]
 800d1b2:	2208      	movs	r2, #8
 800d1b4:	fb90 f2f2 	sdiv	r2, r0, r2
 800d1b8:	4432      	add	r2, r6
 800d1ba:	9204      	str	r2, [sp, #16]
 800d1bc:	f000 0207 	and.w	r2, r0, #7
 800d1c0:	4408      	add	r0, r1
 800d1c2:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d1c4:	9206      	str	r2, [sp, #24]
 800d1c6:	2301      	movs	r3, #1
 800d1c8:	4652      	mov	r2, sl
 800d1ca:	9300      	str	r3, [sp, #0]
 800d1cc:	9301      	str	r3, [sp, #4]
 800d1ce:	9302      	str	r3, [sp, #8]
 800d1d0:	4429      	add	r1, r5
 800d1d2:	f8cd 8014 	str.w	r8, [sp, #20]
 800d1d6:	f7fb fb1f 	bl	8008818 <LCD__DrawBitmap_1bpp>
 800d1da:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d1dc:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d1de:	4453      	add	r3, sl
 800d1e0:	9319      	str	r3, [sp, #100]	; 0x64
 800d1e2:	6883      	ldr	r3, [r0, #8]
 800d1e4:	a919      	add	r1, sp, #100	; 0x64
 800d1e6:	695b      	ldr	r3, [r3, #20]
 800d1e8:	462a      	mov	r2, r5
 800d1ea:	4798      	blx	r3
 800d1ec:	4682      	mov	sl, r0
 800d1ee:	e7d9      	b.n	800d1a4 <GUI_MEMDEV__WriteToActiveOpaque+0x300>
 800d1f0:	444e      	add	r6, r9
 800d1f2:	e021      	b.n	800d238 <GUI_MEMDEV__WriteToActiveOpaque+0x394>
 800d1f4:	f1ba 0f00 	cmp.w	sl, #0
 800d1f8:	d0fa      	beq.n	800d1f0 <GUI_MEMDEV__WriteToActiveOpaque+0x34c>
 800d1fa:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d1fc:	9911      	ldr	r1, [sp, #68]	; 0x44
 800d1fe:	9402      	str	r4, [sp, #8]
 800d200:	fb00 6201 	mla	r2, r0, r1, r6
 800d204:	9204      	str	r2, [sp, #16]
 800d206:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d208:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800d20a:	f8cd 900c 	str.w	r9, [sp, #12]
 800d20e:	2301      	movs	r3, #1
 800d210:	4410      	add	r0, r2
 800d212:	9300      	str	r3, [sp, #0]
 800d214:	4652      	mov	r2, sl
 800d216:	9301      	str	r3, [sp, #4]
 800d218:	4429      	add	r1, r5
 800d21a:	f8cd 8014 	str.w	r8, [sp, #20]
 800d21e:	f7fb fbd7 	bl	80089d0 <LCD_DrawBitmap>
 800d222:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d224:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d226:	4453      	add	r3, sl
 800d228:	9319      	str	r3, [sp, #100]	; 0x64
 800d22a:	6883      	ldr	r3, [r0, #8]
 800d22c:	a919      	add	r1, sp, #100	; 0x64
 800d22e:	695b      	ldr	r3, [r3, #20]
 800d230:	462a      	mov	r2, r5
 800d232:	4798      	blx	r3
 800d234:	4682      	mov	sl, r0
 800d236:	e7dd      	b.n	800d1f4 <GUI_MEMDEV__WriteToActiveOpaque+0x350>
 800d238:	3501      	adds	r5, #1
 800d23a:	e77e      	b.n	800d13a <GUI_MEMDEV__WriteToActiveOpaque+0x296>
 800d23c:	a818      	add	r0, sp, #96	; 0x60
 800d23e:	f7fe f921 	bl	800b484 <GUI_ALLOC_UnlockH>
 800d242:	e1be      	b.n	800d5c2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d244:	2301      	movs	r3, #1
 800d246:	9300      	str	r3, [sp, #0]
 800d248:	9301      	str	r3, [sp, #4]
 800d24a:	9004      	str	r0, [sp, #16]
 800d24c:	9402      	str	r4, [sp, #8]
 800d24e:	f8cd 900c 	str.w	r9, [sp, #12]
 800d252:	f8cd 8014 	str.w	r8, [sp, #20]
 800d256:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d258:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d25a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d25c:	463a      	mov	r2, r7
 800d25e:	e041      	b.n	800d2e4 <GUI_MEMDEV__WriteToActiveOpaque+0x440>
 800d260:	4630      	mov	r0, r6
 800d262:	910a      	str	r1, [sp, #40]	; 0x28
 800d264:	f7fe f900 	bl	800b468 <GUI_ALLOC_LockH>
 800d268:	4682      	mov	sl, r0
 800d26a:	a81c      	add	r0, sp, #112	; 0x70
 800d26c:	f8ba 200a 	ldrh.w	r2, [sl, #10]
 800d270:	f840 ad10 	str.w	sl, [r0, #-16]!
 800d274:	f8da 4000 	ldr.w	r4, [sl]
 800d278:	9210      	str	r2, [sp, #64]	; 0x40
 800d27a:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800d27e:	f8ba 7008 	ldrh.w	r7, [sl, #8]
 800d282:	4c9e      	ldr	r4, [pc, #632]	; (800d4fc <GUI_MEMDEV__WriteToActiveOpaque+0x658>)
 800d284:	b213      	sxth	r3, r2
 800d286:	f8da 200c 	ldr.w	r2, [sl, #12]
 800d28a:	920b      	str	r2, [sp, #44]	; 0x2c
 800d28c:	9309      	str	r3, [sp, #36]	; 0x24
 800d28e:	f7fe f8f9 	bl	800b484 <GUI_ALLOC_UnlockH>
 800d292:	f8d9 0004 	ldr.w	r0, [r9, #4]
 800d296:	900e      	str	r0, [sp, #56]	; 0x38
 800d298:	4899      	ldr	r0, [pc, #612]	; (800d500 <GUI_MEMDEV__WriteToActiveOpaque+0x65c>)
 800d29a:	6800      	ldr	r0, [r0, #0]
 800d29c:	7c40      	ldrb	r0, [r0, #17]
 800d29e:	f854 4020 	ldr.w	r4, [r4, r0, lsl #2]
 800d2a2:	6925      	ldr	r5, [r4, #16]
 800d2a4:	f8d5 8000 	ldr.w	r8, [r5]
 800d2a8:	f7fb f950 	bl	800854c <GUI_GetBitsPerPixelEx>
 800d2ac:	2808      	cmp	r0, #8
 800d2ae:	fa0f fb87 	sxth.w	fp, r7
 800d2b2:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d2b4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d2b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d2b8:	d904      	bls.n	800d2c4 <GUI_MEMDEV__WriteToActiveOpaque+0x420>
 800d2ba:	2810      	cmp	r0, #16
 800d2bc:	bf8c      	ite	hi
 800d2be:	2404      	movhi	r4, #4
 800d2c0:	2402      	movls	r4, #2
 800d2c2:	e000      	b.n	800d2c6 <GUI_MEMDEV__WriteToActiveOpaque+0x422>
 800d2c4:	2401      	movs	r4, #1
 800d2c6:	45a9      	cmp	r9, r5
 800d2c8:	d10f      	bne.n	800d2ea <GUI_MEMDEV__WriteToActiveOpaque+0x446>
 800d2ca:	2001      	movs	r0, #1
 800d2cc:	9203      	str	r2, [sp, #12]
 800d2ce:	f10a 0218 	add.w	r2, sl, #24
 800d2d2:	9000      	str	r0, [sp, #0]
 800d2d4:	9001      	str	r0, [sp, #4]
 800d2d6:	9102      	str	r1, [sp, #8]
 800d2d8:	9204      	str	r2, [sp, #16]
 800d2da:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d2dc:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d2de:	2200      	movs	r2, #0
 800d2e0:	9205      	str	r2, [sp, #20]
 800d2e2:	465a      	mov	r2, fp
 800d2e4:	f7fb fb74 	bl	80089d0 <LCD_DrawBitmap>
 800d2e8:	e16b      	b.n	800d5c2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d2ea:	2920      	cmp	r1, #32
 800d2ec:	f040 808e 	bne.w	800d40c <GUI_MEMDEV__WriteToActiveOpaque+0x568>
 800d2f0:	fb0b f004 	mul.w	r0, fp, r4
 800d2f4:	f7fe fa84 	bl	800b800 <GUI_ALLOC_AllocNoInit>
 800d2f8:	900e      	str	r0, [sp, #56]	; 0x38
 800d2fa:	2800      	cmp	r0, #0
 800d2fc:	f000 8161 	beq.w	800d5c2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d300:	f7fe f8b2 	bl	800b468 <GUI_ALLOC_LockH>
 800d304:	901a      	str	r0, [sp, #104]	; 0x68
 800d306:	4630      	mov	r0, r6
 800d308:	f7fe f8ae 	bl	800b468 <GUI_ALLOC_LockH>
 800d30c:	9018      	str	r0, [sp, #96]	; 0x60
 800d30e:	692b      	ldr	r3, [r5, #16]
 800d310:	f100 0a18 	add.w	sl, r0, #24
 800d314:	ea4f 068b 	mov.w	r6, fp, lsl #2
 800d318:	ea4f 09c4 	mov.w	r9, r4, lsl #3
 800d31c:	2b00      	cmp	r3, #0
 800d31e:	d02f      	beq.n	800d380 <GUI_MEMDEV__WriteToActiveOpaque+0x4dc>
 800d320:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 800d324:	2c02      	cmp	r4, #2
 800d326:	d003      	beq.n	800d330 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 800d328:	2c04      	cmp	r4, #4
 800d32a:	d001      	beq.n	800d330 <GUI_MEMDEV__WriteToActiveOpaque+0x48c>
 800d32c:	2c01      	cmp	r4, #1
 800d32e:	d106      	bne.n	800d33e <GUI_MEMDEV__WriteToActiveOpaque+0x49a>
 800d330:	4650      	mov	r0, sl
 800d332:	692f      	ldr	r7, [r5, #16]
 800d334:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d336:	465a      	mov	r2, fp
 800d338:	4623      	mov	r3, r4
 800d33a:	47b8      	blx	r7
 800d33c:	44b2      	add	sl, r6
 800d33e:	2301      	movs	r3, #1
 800d340:	2200      	movs	r2, #0
 800d342:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d344:	9300      	str	r3, [sp, #0]
 800d346:	9301      	str	r3, [sp, #4]
 800d348:	9203      	str	r2, [sp, #12]
 800d34a:	9104      	str	r1, [sp, #16]
 800d34c:	9205      	str	r2, [sp, #20]
 800d34e:	4641      	mov	r1, r8
 800d350:	465a      	mov	r2, fp
 800d352:	f8cd 9008 	str.w	r9, [sp, #8]
 800d356:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d358:	f7fb fb3a 	bl	80089d0 <LCD_DrawBitmap>
 800d35c:	9910      	ldr	r1, [sp, #64]	; 0x40
 800d35e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800d360:	f108 0701 	add.w	r7, r8, #1
 800d364:	fa02 f381 	sxtah	r3, r2, r1
 800d368:	42bb      	cmp	r3, r7
 800d36a:	d107      	bne.n	800d37c <GUI_MEMDEV__WriteToActiveOpaque+0x4d8>
 800d36c:	a818      	add	r0, sp, #96	; 0x60
 800d36e:	f7fe f889 	bl	800b484 <GUI_ALLOC_UnlockH>
 800d372:	a81a      	add	r0, sp, #104	; 0x68
 800d374:	f7fe f886 	bl	800b484 <GUI_ALLOC_UnlockH>
 800d378:	980e      	ldr	r0, [sp, #56]	; 0x38
 800d37a:	e120      	b.n	800d5be <GUI_MEMDEV__WriteToActiveOpaque+0x71a>
 800d37c:	46b8      	mov	r8, r7
 800d37e:	e7d1      	b.n	800d324 <GUI_MEMDEV__WriteToActiveOpaque+0x480>
 800d380:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800d382:	2c02      	cmp	r4, #2
 800d384:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800d386:	d00e      	beq.n	800d3a6 <GUI_MEMDEV__WriteToActiveOpaque+0x502>
 800d388:	2c04      	cmp	r4, #4
 800d38a:	d018      	beq.n	800d3be <GUI_MEMDEV__WriteToActiveOpaque+0x51a>
 800d38c:	2c01      	cmp	r4, #1
 800d38e:	d125      	bne.n	800d3dc <GUI_MEMDEV__WriteToActiveOpaque+0x538>
 800d390:	2300      	movs	r3, #0
 800d392:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 800d396:	9309      	str	r3, [sp, #36]	; 0x24
 800d398:	47c0      	blx	r8
 800d39a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d39c:	54f8      	strb	r0, [r7, r3]
 800d39e:	3301      	adds	r3, #1
 800d3a0:	459b      	cmp	fp, r3
 800d3a2:	d1f6      	bne.n	800d392 <GUI_MEMDEV__WriteToActiveOpaque+0x4ee>
 800d3a4:	e019      	b.n	800d3da <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 800d3a6:	2300      	movs	r3, #0
 800d3a8:	f85a 0023 	ldr.w	r0, [sl, r3, lsl #2]
 800d3ac:	9309      	str	r3, [sp, #36]	; 0x24
 800d3ae:	47c0      	blx	r8
 800d3b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d3b2:	f827 0013 	strh.w	r0, [r7, r3, lsl #1]
 800d3b6:	3301      	adds	r3, #1
 800d3b8:	459b      	cmp	fp, r3
 800d3ba:	d1f5      	bne.n	800d3a8 <GUI_MEMDEV__WriteToActiveOpaque+0x504>
 800d3bc:	e00d      	b.n	800d3da <GUI_MEMDEV__WriteToActiveOpaque+0x536>
 800d3be:	465a      	mov	r2, fp
 800d3c0:	2300      	movs	r3, #0
 800d3c2:	f85a 0003 	ldr.w	r0, [sl, r3]
 800d3c6:	920b      	str	r2, [sp, #44]	; 0x2c
 800d3c8:	9309      	str	r3, [sp, #36]	; 0x24
 800d3ca:	47c0      	blx	r8
 800d3cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d3ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d3d0:	3a01      	subs	r2, #1
 800d3d2:	50f8      	str	r0, [r7, r3]
 800d3d4:	f103 0304 	add.w	r3, r3, #4
 800d3d8:	d1f3      	bne.n	800d3c2 <GUI_MEMDEV__WriteToActiveOpaque+0x51e>
 800d3da:	44b2      	add	sl, r6
 800d3dc:	2301      	movs	r3, #1
 800d3de:	2200      	movs	r2, #0
 800d3e0:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d3e2:	9300      	str	r3, [sp, #0]
 800d3e4:	9301      	str	r3, [sp, #4]
 800d3e6:	9203      	str	r2, [sp, #12]
 800d3e8:	9104      	str	r1, [sp, #16]
 800d3ea:	9205      	str	r2, [sp, #20]
 800d3ec:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d3ee:	f8cd 9008 	str.w	r9, [sp, #8]
 800d3f2:	4629      	mov	r1, r5
 800d3f4:	465a      	mov	r2, fp
 800d3f6:	f7fb faeb 	bl	80089d0 <LCD_DrawBitmap>
 800d3fa:	9810      	ldr	r0, [sp, #64]	; 0x40
 800d3fc:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d3fe:	1c6f      	adds	r7, r5, #1
 800d400:	fa01 f380 	sxtah	r3, r1, r0
 800d404:	42bb      	cmp	r3, r7
 800d406:	d0b1      	beq.n	800d36c <GUI_MEMDEV__WriteToActiveOpaque+0x4c8>
 800d408:	463d      	mov	r5, r7
 800d40a:	e7ba      	b.n	800d382 <GUI_MEMDEV__WriteToActiveOpaque+0x4de>
 800d40c:	2910      	cmp	r1, #16
 800d40e:	f040 80d8 	bne.w	800d5c2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d412:	fa0f fa87 	sxth.w	sl, r7
 800d416:	fb0a f004 	mul.w	r0, sl, r4
 800d41a:	f7fe f9f1 	bl	800b800 <GUI_ALLOC_AllocNoInit>
 800d41e:	9012      	str	r0, [sp, #72]	; 0x48
 800d420:	2800      	cmp	r0, #0
 800d422:	f000 80ce 	beq.w	800d5c2 <GUI_MEMDEV__WriteToActiveOpaque+0x71e>
 800d426:	f7fe f81f 	bl	800b468 <GUI_ALLOC_LockH>
 800d42a:	901a      	str	r0, [sp, #104]	; 0x68
 800d42c:	4630      	mov	r0, r6
 800d42e:	f7fe f81b 	bl	800b468 <GUI_ALLOC_LockH>
 800d432:	9018      	str	r0, [sp, #96]	; 0x60
 800d434:	692b      	ldr	r3, [r5, #16]
 800d436:	f100 0618 	add.w	r6, r0, #24
 800d43a:	b113      	cbz	r3, 800d442 <GUI_MEMDEV__WriteToActiveOpaque+0x59e>
 800d43c:	f8d9 3014 	ldr.w	r3, [r9, #20]
 800d440:	b92b      	cbnz	r3, 800d44e <GUI_MEMDEV__WriteToActiveOpaque+0x5aa>
 800d442:	00e2      	lsls	r2, r4, #3
 800d444:	b23f      	sxth	r7, r7
 800d446:	9211      	str	r2, [sp, #68]	; 0x44
 800d448:	007f      	lsls	r7, r7, #1
 800d44a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 800d44c:	e088      	b.n	800d560 <GUI_MEMDEV__WriteToActiveOpaque+0x6bc>
 800d44e:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 800d452:	0080      	lsls	r0, r0, #2
 800d454:	f7fe f9d4 	bl	800b800 <GUI_ALLOC_AllocNoInit>
 800d458:	9011      	str	r0, [sp, #68]	; 0x44
 800d45a:	b118      	cbz	r0, 800d464 <GUI_MEMDEV__WriteToActiveOpaque+0x5c0>
 800d45c:	f7fe f804 	bl	800b468 <GUI_ALLOC_LockH>
 800d460:	9019      	str	r0, [sp, #100]	; 0x64
 800d462:	e001      	b.n	800d468 <GUI_MEMDEV__WriteToActiveOpaque+0x5c4>
 800d464:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d466:	9319      	str	r3, [sp, #100]	; 0x64
 800d468:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d46a:	2b00      	cmp	r3, #0
 800d46c:	f000 80a0 	beq.w	800d5b0 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 800d470:	b23f      	sxth	r7, r7
 800d472:	007f      	lsls	r7, r7, #1
 800d474:	970e      	str	r7, [sp, #56]	; 0x38
 800d476:	00e7      	lsls	r7, r4, #3
 800d478:	9713      	str	r7, [sp, #76]	; 0x4c
 800d47a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800d47c:	970c      	str	r7, [sp, #48]	; 0x30
 800d47e:	2c02      	cmp	r4, #2
 800d480:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800d484:	d004      	beq.n	800d490 <GUI_MEMDEV__WriteToActiveOpaque+0x5ec>
 800d486:	2c04      	cmp	r4, #4
 800d488:	d007      	beq.n	800d49a <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 800d48a:	2c01      	cmp	r4, #1
 800d48c:	d114      	bne.n	800d4b8 <GUI_MEMDEV__WriteToActiveOpaque+0x614>
 800d48e:	e004      	b.n	800d49a <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 800d490:	4630      	mov	r0, r6
 800d492:	9919      	ldr	r1, [sp, #100]	; 0x64
 800d494:	4652      	mov	r2, sl
 800d496:	4623      	mov	r3, r4
 800d498:	e003      	b.n	800d4a2 <GUI_MEMDEV__WriteToActiveOpaque+0x5fe>
 800d49a:	9919      	ldr	r1, [sp, #100]	; 0x64
 800d49c:	4630      	mov	r0, r6
 800d49e:	4652      	mov	r2, sl
 800d4a0:	2302      	movs	r3, #2
 800d4a2:	f8d9 7014 	ldr.w	r7, [r9, #20]
 800d4a6:	47b8      	blx	r7
 800d4a8:	692f      	ldr	r7, [r5, #16]
 800d4aa:	9819      	ldr	r0, [sp, #100]	; 0x64
 800d4ac:	4641      	mov	r1, r8
 800d4ae:	4652      	mov	r2, sl
 800d4b0:	4623      	mov	r3, r4
 800d4b2:	47b8      	blx	r7
 800d4b4:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800d4b6:	443e      	add	r6, r7
 800d4b8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800d4ba:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d4bc:	9104      	str	r1, [sp, #16]
 800d4be:	2301      	movs	r3, #1
 800d4c0:	2200      	movs	r2, #0
 800d4c2:	f107 0801 	add.w	r8, r7, #1
 800d4c6:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 800d4c8:	9300      	str	r3, [sp, #0]
 800d4ca:	9301      	str	r3, [sp, #4]
 800d4cc:	9702      	str	r7, [sp, #8]
 800d4ce:	9203      	str	r2, [sp, #12]
 800d4d0:	9205      	str	r2, [sp, #20]
 800d4d2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d4d4:	990c      	ldr	r1, [sp, #48]	; 0x30
 800d4d6:	465a      	mov	r2, fp
 800d4d8:	f7fb fa7a 	bl	80089d0 <LCD_DrawBitmap>
 800d4dc:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800d4de:	980d      	ldr	r0, [sp, #52]	; 0x34
 800d4e0:	fa00 f387 	sxtah	r3, r0, r7
 800d4e4:	4543      	cmp	r3, r8
 800d4e6:	d002      	beq.n	800d4ee <GUI_MEMDEV__WriteToActiveOpaque+0x64a>
 800d4e8:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800d4ec:	e7c7      	b.n	800d47e <GUI_MEMDEV__WriteToActiveOpaque+0x5da>
 800d4ee:	a819      	add	r0, sp, #100	; 0x64
 800d4f0:	f7fd ffc8 	bl	800b484 <GUI_ALLOC_UnlockH>
 800d4f4:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d4f6:	f7fd fff1 	bl	800b4dc <GUI_ALLOC_Free>
 800d4fa:	e059      	b.n	800d5b0 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 800d4fc:	20002d28 	.word	0x20002d28
 800d500:	200000b8 	.word	0x200000b8
 800d504:	2c04      	cmp	r4, #4
 800d506:	d041      	beq.n	800d58c <GUI_MEMDEV__WriteToActiveOpaque+0x6e8>
 800d508:	2c01      	cmp	r4, #1
 800d50a:	d111      	bne.n	800d530 <GUI_MEMDEV__WriteToActiveOpaque+0x68c>
 800d50c:	464a      	mov	r2, r9
 800d50e:	4631      	mov	r1, r6
 800d510:	f831 0b02 	ldrh.w	r0, [r1], #2
 800d514:	910a      	str	r1, [sp, #40]	; 0x28
 800d516:	920b      	str	r2, [sp, #44]	; 0x2c
 800d518:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d51a:	4798      	blx	r3
 800d51c:	47c0      	blx	r8
 800d51e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d520:	f802 0b01 	strb.w	r0, [r2], #1
 800d524:	eb09 000a 	add.w	r0, r9, sl
 800d528:	4282      	cmp	r2, r0
 800d52a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d52c:	d1f0      	bne.n	800d510 <GUI_MEMDEV__WriteToActiveOpaque+0x66c>
 800d52e:	443e      	add	r6, r7
 800d530:	2301      	movs	r3, #1
 800d532:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d534:	991a      	ldr	r1, [sp, #104]	; 0x68
 800d536:	9300      	str	r3, [sp, #0]
 800d538:	2200      	movs	r2, #0
 800d53a:	9301      	str	r3, [sp, #4]
 800d53c:	9002      	str	r0, [sp, #8]
 800d53e:	9203      	str	r2, [sp, #12]
 800d540:	9104      	str	r1, [sp, #16]
 800d542:	9205      	str	r2, [sp, #20]
 800d544:	4629      	mov	r1, r5
 800d546:	465a      	mov	r2, fp
 800d548:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800d54a:	f7fb fa41 	bl	80089d0 <LCD_DrawBitmap>
 800d54e:	9910      	ldr	r1, [sp, #64]	; 0x40
 800d550:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800d552:	f105 0901 	add.w	r9, r5, #1
 800d556:	fa02 f381 	sxtah	r3, r2, r1
 800d55a:	454b      	cmp	r3, r9
 800d55c:	d028      	beq.n	800d5b0 <GUI_MEMDEV__WriteToActiveOpaque+0x70c>
 800d55e:	464d      	mov	r5, r9
 800d560:	2c02      	cmp	r4, #2
 800d562:	f8dd 9068 	ldr.w	r9, [sp, #104]	; 0x68
 800d566:	d1cd      	bne.n	800d504 <GUI_MEMDEV__WriteToActiveOpaque+0x660>
 800d568:	464b      	mov	r3, r9
 800d56a:	4631      	mov	r1, r6
 800d56c:	46d9      	mov	r9, fp
 800d56e:	f831 0b02 	ldrh.w	r0, [r1], #2
 800d572:	910a      	str	r1, [sp, #40]	; 0x28
 800d574:	9309      	str	r3, [sp, #36]	; 0x24
 800d576:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d578:	4790      	blx	r2
 800d57a:	47c0      	blx	r8
 800d57c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d57e:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d580:	f823 0b02 	strh.w	r0, [r3], #2
 800d584:	f1b9 0901 	subs.w	r9, r9, #1
 800d588:	d1f1      	bne.n	800d56e <GUI_MEMDEV__WriteToActiveOpaque+0x6ca>
 800d58a:	e7d0      	b.n	800d52e <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 800d58c:	464b      	mov	r3, r9
 800d58e:	4631      	mov	r1, r6
 800d590:	46d9      	mov	r9, fp
 800d592:	f831 0b02 	ldrh.w	r0, [r1], #2
 800d596:	910a      	str	r1, [sp, #40]	; 0x28
 800d598:	9309      	str	r3, [sp, #36]	; 0x24
 800d59a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d59c:	4790      	blx	r2
 800d59e:	47c0      	blx	r8
 800d5a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d5a2:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d5a4:	f843 0b04 	str.w	r0, [r3], #4
 800d5a8:	f1b9 0901 	subs.w	r9, r9, #1
 800d5ac:	d1f1      	bne.n	800d592 <GUI_MEMDEV__WriteToActiveOpaque+0x6ee>
 800d5ae:	e7be      	b.n	800d52e <GUI_MEMDEV__WriteToActiveOpaque+0x68a>
 800d5b0:	a818      	add	r0, sp, #96	; 0x60
 800d5b2:	f7fd ff67 	bl	800b484 <GUI_ALLOC_UnlockH>
 800d5b6:	a81a      	add	r0, sp, #104	; 0x68
 800d5b8:	f7fd ff64 	bl	800b484 <GUI_ALLOC_UnlockH>
 800d5bc:	9812      	ldr	r0, [sp, #72]	; 0x48
 800d5be:	f7fd ff8d 	bl	800b4dc <GUI_ALLOC_Free>
 800d5c2:	b01d      	add	sp, #116	; 0x74
 800d5c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d5c8 <GUI_MEMDEV__WriteToActiveAlpha>:
 800d5c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5cc:	4d5f      	ldr	r5, [pc, #380]	; (800d74c <GUI_MEMDEV__WriteToActiveAlpha+0x184>)
 800d5ce:	4f60      	ldr	r7, [pc, #384]	; (800d750 <GUI_MEMDEV__WriteToActiveAlpha+0x188>)
 800d5d0:	682b      	ldr	r3, [r5, #0]
 800d5d2:	7c5b      	ldrb	r3, [r3, #17]
 800d5d4:	b091      	sub	sp, #68	; 0x44
 800d5d6:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
 800d5da:	900d      	str	r0, [sp, #52]	; 0x34
 800d5dc:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800d5e0:	460e      	mov	r6, r1
 800d5e2:	4614      	mov	r4, r2
 800d5e4:	f7fd ff40 	bl	800b468 <GUI_ALLOC_LockH>
 800d5e8:	4602      	mov	r2, r0
 800d5ea:	a810      	add	r0, sp, #64	; 0x40
 800d5ec:	6813      	ldr	r3, [r2, #0]
 800d5ee:	f840 2d08 	str.w	r2, [r0, #-8]!
 800d5f2:	691b      	ldr	r3, [r3, #16]
 800d5f4:	f8b2 a008 	ldrh.w	sl, [r2, #8]
 800d5f8:	685b      	ldr	r3, [r3, #4]
 800d5fa:	f8b2 900a 	ldrh.w	r9, [r2, #10]
 800d5fe:	9309      	str	r3, [sp, #36]	; 0x24
 800d600:	f7fd ff40 	bl	800b484 <GUI_ALLOC_UnlockH>
 800d604:	682b      	ldr	r3, [r5, #0]
 800d606:	7c5b      	ldrb	r3, [r3, #17]
 800d608:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 800d60c:	68c3      	ldr	r3, [r0, #12]
 800d60e:	2108      	movs	r1, #8
 800d610:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d612:	4798      	blx	r3
 800d614:	2817      	cmp	r0, #23
 800d616:	bf88      	it	hi
 800d618:	2020      	movhi	r0, #32
 800d61a:	9008      	str	r0, [sp, #32]
 800d61c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800d620:	f8d8 2000 	ldr.w	r2, [r8]
 800d624:	910a      	str	r1, [sp, #40]	; 0x28
 800d626:	2000      	movs	r0, #0
 800d628:	920b      	str	r2, [sp, #44]	; 0x2c
 800d62a:	f7fb fef3 	bl	8009414 <GUI__AllocAlphaBuffer>
 800d62e:	2800      	cmp	r0, #0
 800d630:	f040 8089 	bne.w	800d746 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800d634:	682a      	ldr	r2, [r5, #0]
 800d636:	fa0f f78a 	sxth.w	r7, sl
 800d63a:	19f5      	adds	r5, r6, r7
 800d63c:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
 800d640:	3d01      	subs	r5, #1
 800d642:	1aed      	subs	r5, r5, r3
 800d644:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
 800d648:	2d00      	cmp	r5, #0
 800d64a:	bfcc      	ite	gt
 800d64c:	ebc5 0507 	rsbgt	r5, r5, r7
 800d650:	463d      	movle	r5, r7
 800d652:	42b3      	cmp	r3, r6
 800d654:	bfc3      	ittte	gt
 800d656:	ebc6 0103 	rsbgt	r1, r6, r3
 800d65a:	ebc1 0505 	rsbgt	r5, r1, r5
 800d65e:	461e      	movgt	r6, r3
 800d660:	2100      	movle	r1, #0
 800d662:	2d00      	cmp	r5, #0
 800d664:	dd6f      	ble.n	800d746 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800d666:	fa0f f389 	sxth.w	r3, r9
 800d66a:	18e0      	adds	r0, r4, r3
 800d66c:	f9b2 c00e 	ldrsh.w	ip, [r2, #14]
 800d670:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 800d674:	3801      	subs	r0, #1
 800d676:	ebcc 0000 	rsb	r0, ip, r0
 800d67a:	2800      	cmp	r0, #0
 800d67c:	bfc8      	it	gt
 800d67e:	ebc0 0303 	rsbgt	r3, r0, r3
 800d682:	4294      	cmp	r4, r2
 800d684:	bfbd      	ittte	lt
 800d686:	ebc4 0b02 	rsblt	fp, r4, r2
 800d68a:	ebcb 0303 	rsblt	r3, fp, r3
 800d68e:	4614      	movlt	r4, r2
 800d690:	f04f 0b00 	movge.w	fp, #0
 800d694:	2b00      	cmp	r3, #0
 800d696:	dd56      	ble.n	800d746 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800d698:	fb07 1b0b 	mla	fp, r7, fp, r1
 800d69c:	18e3      	adds	r3, r4, r3
 800d69e:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800d6a2:	930c      	str	r3, [sp, #48]	; 0x30
 800d6a4:	980d      	ldr	r0, [sp, #52]	; 0x34
 800d6a6:	f7f8 feff 	bl	80064a8 <GUI_MEMDEV_GetDataPtr>
 800d6aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d6ac:	9300      	str	r3, [sp, #0]
 800d6ae:	ab0f      	add	r3, sp, #60	; 0x3c
 800d6b0:	eb00 020b 	add.w	r2, r0, fp
 800d6b4:	9301      	str	r3, [sp, #4]
 800d6b6:	4630      	mov	r0, r6
 800d6b8:	4621      	mov	r1, r4
 800d6ba:	462b      	mov	r3, r5
 800d6bc:	f7fb fdc0 	bl	8009240 <GUI__DoAlphaBlending>
 800d6c0:	4681      	mov	r9, r0
 800d6c2:	2800      	cmp	r0, #0
 800d6c4:	d03f      	beq.n	800d746 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800d6c6:	4b23      	ldr	r3, [pc, #140]	; (800d754 <GUI_MEMDEV__WriteToActiveAlpha+0x18c>)
 800d6c8:	990a      	ldr	r1, [sp, #40]	; 0x28
 800d6ca:	4299      	cmp	r1, r3
 800d6cc:	d01e      	beq.n	800d70c <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 800d6ce:	4629      	mov	r1, r5
 800d6d0:	9a08      	ldr	r2, [sp, #32]
 800d6d2:	4643      	mov	r3, r8
 800d6d4:	f001 fc50 	bl	800ef78 <GUI__CompactPixelIndicesEx>
 800d6d8:	b9c0      	cbnz	r0, 800d70c <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 800d6da:	f8d8 c010 	ldr.w	ip, [r8, #16]
 800d6de:	f1bc 0f00 	cmp.w	ip, #0
 800d6e2:	d006      	beq.n	800d6f2 <GUI_MEMDEV__WriteToActiveAlpha+0x12a>
 800d6e4:	4648      	mov	r0, r9
 800d6e6:	4649      	mov	r1, r9
 800d6e8:	fa0f f28a 	sxth.w	r2, sl
 800d6ec:	2304      	movs	r3, #4
 800d6ee:	47e0      	blx	ip
 800d6f0:	e00c      	b.n	800d70c <GUI_MEMDEV__WriteToActiveAlpha+0x144>
 800d6f2:	464a      	mov	r2, r9
 800d6f4:	463b      	mov	r3, r7
 800d6f6:	6810      	ldr	r0, [r2, #0]
 800d6f8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800d6fa:	9206      	str	r2, [sp, #24]
 800d6fc:	9307      	str	r3, [sp, #28]
 800d6fe:	4788      	blx	r1
 800d700:	9b07      	ldr	r3, [sp, #28]
 800d702:	9a06      	ldr	r2, [sp, #24]
 800d704:	3b01      	subs	r3, #1
 800d706:	f842 0b04 	str.w	r0, [r2], #4
 800d70a:	d1f4      	bne.n	800d6f6 <GUI_MEMDEV__WriteToActiveAlpha+0x12e>
 800d70c:	9a08      	ldr	r2, [sp, #32]
 800d70e:	9202      	str	r2, [sp, #8]
 800d710:	2301      	movs	r3, #1
 800d712:	2200      	movs	r2, #0
 800d714:	f104 0c01 	add.w	ip, r4, #1
 800d718:	9300      	str	r3, [sp, #0]
 800d71a:	9301      	str	r3, [sp, #4]
 800d71c:	9203      	str	r2, [sp, #12]
 800d71e:	9205      	str	r2, [sp, #20]
 800d720:	f8cd 9010 	str.w	r9, [sp, #16]
 800d724:	4630      	mov	r0, r6
 800d726:	4621      	mov	r1, r4
 800d728:	462a      	mov	r2, r5
 800d72a:	f8cd c01c 	str.w	ip, [sp, #28]
 800d72e:	f7fb f94f 	bl	80089d0 <LCD_DrawBitmap>
 800d732:	2304      	movs	r3, #4
 800d734:	fb1a bb03 	smlabb	fp, sl, r3, fp
 800d738:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800d73c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d73e:	459c      	cmp	ip, r3
 800d740:	d001      	beq.n	800d746 <GUI_MEMDEV__WriteToActiveAlpha+0x17e>
 800d742:	4664      	mov	r4, ip
 800d744:	e7ae      	b.n	800d6a4 <GUI_MEMDEV__WriteToActiveAlpha+0xdc>
 800d746:	b011      	add	sp, #68	; 0x44
 800d748:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d74c:	200000b8 	.word	0x200000b8
 800d750:	20002d28 	.word	0x20002d28
 800d754:	0800ba6f 	.word	0x0800ba6f

0800d758 <GUI_MEMDEV_WriteAt>:
 800d758:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d75a:	460c      	mov	r4, r1
 800d75c:	4615      	mov	r5, r2
 800d75e:	4606      	mov	r6, r0
 800d760:	b330      	cbz	r0, 800d7b0 <GUI_MEMDEV_WriteAt+0x58>
 800d762:	f7fd fe81 	bl	800b468 <GUI_ALLOC_LockH>
 800d766:	4a13      	ldr	r2, [pc, #76]	; (800d7b4 <GUI_MEMDEV_WriteAt+0x5c>)
 800d768:	8943      	ldrh	r3, [r0, #10]
 800d76a:	9001      	str	r0, [sp, #4]
 800d76c:	4294      	cmp	r4, r2
 800d76e:	8902      	ldrh	r2, [r0, #8]
 800d770:	bf04      	itt	eq
 800d772:	f9b0 4004 	ldrsheq.w	r4, [r0, #4]
 800d776:	f9b0 5006 	ldrsheq.w	r5, [r0, #6]
 800d77a:	f8ad 4008 	strh.w	r4, [sp, #8]
 800d77e:	3a01      	subs	r2, #1
 800d780:	3b01      	subs	r3, #1
 800d782:	4422      	add	r2, r4
 800d784:	442b      	add	r3, r5
 800d786:	a801      	add	r0, sp, #4
 800d788:	f8ad 200c 	strh.w	r2, [sp, #12]
 800d78c:	f8ad 500a 	strh.w	r5, [sp, #10]
 800d790:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d794:	f7fd fe76 	bl	800b484 <GUI_ALLOC_UnlockH>
 800d798:	a802      	add	r0, sp, #8
 800d79a:	f7f8 fae9 	bl	8005d70 <WM__InitIVRSearch>
 800d79e:	b138      	cbz	r0, 800d7b0 <GUI_MEMDEV_WriteAt+0x58>
 800d7a0:	4630      	mov	r0, r6
 800d7a2:	4621      	mov	r1, r4
 800d7a4:	462a      	mov	r2, r5
 800d7a6:	f7f9 fc49 	bl	800703c <GUI_MEMDEV__WriteToActiveAt>
 800d7aa:	f7f8 fa1f 	bl	8005bec <WM__GetNextIVR>
 800d7ae:	e7f6      	b.n	800d79e <GUI_MEMDEV_WriteAt+0x46>
 800d7b0:	b004      	add	sp, #16
 800d7b2:	bd70      	pop	{r4, r5, r6, pc}
 800d7b4:	fffff001 	.word	0xfffff001

0800d7b8 <GUI_MEMDEV_Write>:
 800d7b8:	4901      	ldr	r1, [pc, #4]	; (800d7c0 <GUI_MEMDEV_Write+0x8>)
 800d7ba:	460a      	mov	r2, r1
 800d7bc:	f7ff bfcc 	b.w	800d758 <GUI_MEMDEV_WriteAt>
 800d7c0:	fffff001 	.word	0xfffff001

0800d7c4 <GUI_USAGE_BM_AddPixel>:
 800d7c4:	4603      	mov	r3, r0
 800d7c6:	b510      	push	{r4, lr}
 800d7c8:	f933 4b14 	ldrsh.w	r4, [r3], #20
 800d7cc:	1b09      	subs	r1, r1, r4
 800d7ce:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800d7d2:	6900      	ldr	r0, [r0, #16]
 800d7d4:	1b12      	subs	r2, r2, r4
 800d7d6:	fb00 3302 	mla	r3, r0, r2, r3
 800d7da:	10c8      	asrs	r0, r1, #3
 800d7dc:	2280      	movs	r2, #128	; 0x80
 800d7de:	f001 0107 	and.w	r1, r1, #7
 800d7e2:	fa42 f101 	asr.w	r1, r2, r1
 800d7e6:	5c1a      	ldrb	r2, [r3, r0]
 800d7e8:	4311      	orrs	r1, r2
 800d7ea:	5419      	strb	r1, [r3, r0]
 800d7ec:	bd10      	pop	{r4, pc}

0800d7ee <GUI_USAGE_BM_GetNextDirty>:
 800d7ee:	b570      	push	{r4, r5, r6, lr}
 800d7f0:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 800d7f4:	680b      	ldr	r3, [r1, #0]
 800d7f6:	8886      	ldrh	r6, [r0, #4]
 800d7f8:	42a2      	cmp	r2, r4
 800d7fa:	da41      	bge.n	800d880 <GUI_USAGE_BM_GetNextDirty+0x92>
 800d7fc:	b236      	sxth	r6, r6
 800d7fe:	42b3      	cmp	r3, r6
 800d800:	6904      	ldr	r4, [r0, #16]
 800d802:	da3d      	bge.n	800d880 <GUI_USAGE_BM_GetNextDirty+0x92>
 800d804:	3014      	adds	r0, #20
 800d806:	fb04 0202 	mla	r2, r4, r2, r0
 800d80a:	10dd      	asrs	r5, r3, #3
 800d80c:	1e70      	subs	r0, r6, #1
 800d80e:	1954      	adds	r4, r2, r5
 800d810:	ebc5 00e0 	rsb	r0, r5, r0, asr #3
 800d814:	5d55      	ldrb	r5, [r2, r5]
 800d816:	f003 0207 	and.w	r2, r3, #7
 800d81a:	fa05 f202 	lsl.w	r2, r5, r2
 800d81e:	3401      	adds	r4, #1
 800d820:	b2d2      	uxtb	r2, r2
 800d822:	b93a      	cbnz	r2, 800d834 <GUI_USAGE_BM_GetNextDirty+0x46>
 800d824:	b368      	cbz	r0, 800d882 <GUI_USAGE_BM_GetNextDirty+0x94>
 800d826:	3308      	adds	r3, #8
 800d828:	f814 2b01 	ldrb.w	r2, [r4], #1
 800d82c:	3801      	subs	r0, #1
 800d82e:	f023 0307 	bic.w	r3, r3, #7
 800d832:	e7f6      	b.n	800d822 <GUI_USAGE_BM_GetNextDirty+0x34>
 800d834:	0615      	lsls	r5, r2, #24
 800d836:	d403      	bmi.n	800d840 <GUI_USAGE_BM_GetNextDirty+0x52>
 800d838:	0052      	lsls	r2, r2, #1
 800d83a:	b2d2      	uxtb	r2, r2
 800d83c:	3301      	adds	r3, #1
 800d83e:	e7f9      	b.n	800d834 <GUI_USAGE_BM_GetNextDirty+0x46>
 800d840:	2aff      	cmp	r2, #255	; 0xff
 800d842:	461d      	mov	r5, r3
 800d844:	d005      	beq.n	800d852 <GUI_USAGE_BM_GetNextDirty+0x64>
 800d846:	0656      	lsls	r6, r2, #25
 800d848:	d504      	bpl.n	800d854 <GUI_USAGE_BM_GetNextDirty+0x66>
 800d84a:	0052      	lsls	r2, r2, #1
 800d84c:	b2d2      	uxtb	r2, r2
 800d84e:	3301      	adds	r3, #1
 800d850:	e7f9      	b.n	800d846 <GUI_USAGE_BM_GetNextDirty+0x58>
 800d852:	3307      	adds	r3, #7
 800d854:	f003 0207 	and.w	r2, r3, #7
 800d858:	2a07      	cmp	r2, #7
 800d85a:	d10d      	bne.n	800d878 <GUI_USAGE_BM_GetNextDirty+0x8a>
 800d85c:	3801      	subs	r0, #1
 800d85e:	d40b      	bmi.n	800d878 <GUI_USAGE_BM_GetNextDirty+0x8a>
 800d860:	f814 2b01 	ldrb.w	r2, [r4], #1
 800d864:	2aff      	cmp	r2, #255	; 0xff
 800d866:	d101      	bne.n	800d86c <GUI_USAGE_BM_GetNextDirty+0x7e>
 800d868:	3308      	adds	r3, #8
 800d86a:	e7f7      	b.n	800d85c <GUI_USAGE_BM_GetNextDirty+0x6e>
 800d86c:	0610      	lsls	r0, r2, #24
 800d86e:	d503      	bpl.n	800d878 <GUI_USAGE_BM_GetNextDirty+0x8a>
 800d870:	0052      	lsls	r2, r2, #1
 800d872:	b2d2      	uxtb	r2, r2
 800d874:	3301      	adds	r3, #1
 800d876:	e7f9      	b.n	800d86c <GUI_USAGE_BM_GetNextDirty+0x7e>
 800d878:	1b58      	subs	r0, r3, r5
 800d87a:	600d      	str	r5, [r1, #0]
 800d87c:	3001      	adds	r0, #1
 800d87e:	bd70      	pop	{r4, r5, r6, pc}
 800d880:	2000      	movs	r0, #0
 800d882:	bd70      	pop	{r4, r5, r6, pc}

0800d884 <_GUI_USAGE_BM_Delete>:
 800d884:	f7fd be2a 	b.w	800b4dc <GUI_ALLOC_Free>

0800d888 <GUI_USAGE_BM_Clear>:
 800d888:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800d88c:	6902      	ldr	r2, [r0, #16]
 800d88e:	2100      	movs	r1, #0
 800d890:	3014      	adds	r0, #20
 800d892:	435a      	muls	r2, r3
 800d894:	f002 ba22 	b.w	800fcdc <memset>

0800d898 <GUI_USAGE_BM_AddHLine>:
 800d898:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d89a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800d89e:	1b09      	subs	r1, r1, r4
 800d8a0:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800d8a4:	42a1      	cmp	r1, r4
 800d8a6:	da2f      	bge.n	800d908 <GUI_USAGE_BM_AddHLine+0x70>
 800d8a8:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 800d8ac:	440b      	add	r3, r1
 800d8ae:	f100 0414 	add.w	r4, r0, #20
 800d8b2:	3b01      	subs	r3, #1
 800d8b4:	6900      	ldr	r0, [r0, #16]
 800d8b6:	1b52      	subs	r2, r2, r5
 800d8b8:	43de      	mvns	r6, r3
 800d8ba:	fb00 4202 	mla	r2, r0, r2, r4
 800d8be:	f001 0707 	and.w	r7, r1, #7
 800d8c2:	10cc      	asrs	r4, r1, #3
 800d8c4:	f006 0607 	and.w	r6, r6, #7
 800d8c8:	21ff      	movs	r1, #255	; 0xff
 800d8ca:	fa41 f707 	asr.w	r7, r1, r7
 800d8ce:	fa01 f606 	lsl.w	r6, r1, r6
 800d8d2:	ebd4 03e3 	rsbs	r3, r4, r3, asr #3
 800d8d6:	eb02 0504 	add.w	r5, r2, r4
 800d8da:	b2ff      	uxtb	r7, r7
 800d8dc:	b2f6      	uxtb	r6, r6
 800d8de:	5d10      	ldrb	r0, [r2, r4]
 800d8e0:	d103      	bne.n	800d8ea <GUI_USAGE_BM_AddHLine+0x52>
 800d8e2:	403e      	ands	r6, r7
 800d8e4:	4330      	orrs	r0, r6
 800d8e6:	5510      	strb	r0, [r2, r4]
 800d8e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d8ea:	4338      	orrs	r0, r7
 800d8ec:	5510      	strb	r0, [r2, r4]
 800d8ee:	1e5c      	subs	r4, r3, #1
 800d8f0:	2c00      	cmp	r4, #0
 800d8f2:	f105 0501 	add.w	r5, r5, #1
 800d8f6:	dd04      	ble.n	800d902 <GUI_USAGE_BM_AddHLine+0x6a>
 800d8f8:	4628      	mov	r0, r5
 800d8fa:	4622      	mov	r2, r4
 800d8fc:	f002 f9ee 	bl	800fcdc <memset>
 800d900:	4425      	add	r5, r4
 800d902:	782b      	ldrb	r3, [r5, #0]
 800d904:	431e      	orrs	r6, r3
 800d906:	702e      	strb	r6, [r5, #0]
 800d908:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800d90c <GUI_USAGE_BM_Create>:
 800d90c:	e92d 4fd3 	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, sl, fp, lr}
 800d910:	f102 060f 	add.w	r6, r2, #15
 800d914:	1136      	asrs	r6, r6, #4
 800d916:	0076      	lsls	r6, r6, #1
 800d918:	4682      	mov	sl, r0
 800d91a:	fb06 f003 	mul.w	r0, r6, r3
 800d91e:	3014      	adds	r0, #20
 800d920:	4689      	mov	r9, r1
 800d922:	4690      	mov	r8, r2
 800d924:	461f      	mov	r7, r3
 800d926:	f7fd ff99 	bl	800b85c <GUI_ALLOC_AllocZero>
 800d92a:	4683      	mov	fp, r0
 800d92c:	b198      	cbz	r0, 800d956 <GUI_USAGE_BM_Create+0x4a>
 800d92e:	f7fd fd9b 	bl	800b468 <GUI_ALLOC_LockH>
 800d932:	4604      	mov	r4, r0
 800d934:	4b0a      	ldr	r3, [pc, #40]	; (800d960 <GUI_USAGE_BM_Create+0x54>)
 800d936:	60a3      	str	r3, [r4, #8]
 800d938:	a802      	add	r0, sp, #8
 800d93a:	2301      	movs	r3, #1
 800d93c:	f840 4d04 	str.w	r4, [r0, #-4]!
 800d940:	f8a4 8004 	strh.w	r8, [r4, #4]
 800d944:	f8a4 a000 	strh.w	sl, [r4]
 800d948:	f8a4 9002 	strh.w	r9, [r4, #2]
 800d94c:	80e7      	strh	r7, [r4, #6]
 800d94e:	81a3      	strh	r3, [r4, #12]
 800d950:	6126      	str	r6, [r4, #16]
 800d952:	f7fd fd97 	bl	800b484 <GUI_ALLOC_UnlockH>
 800d956:	4658      	mov	r0, fp
 800d958:	b002      	add	sp, #8
 800d95a:	e8bd 8fd0 	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
 800d95e:	bf00      	nop
 800d960:	08012090 	.word	0x08012090

0800d964 <GUI_USAGE_DecUseCnt>:
 800d964:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d966:	4605      	mov	r5, r0
 800d968:	f7fd fd7e 	bl	800b468 <GUI_ALLOC_LockH>
 800d96c:	4602      	mov	r2, r0
 800d96e:	a802      	add	r0, sp, #8
 800d970:	8994      	ldrh	r4, [r2, #12]
 800d972:	f840 2d04 	str.w	r2, [r0, #-4]!
 800d976:	3c01      	subs	r4, #1
 800d978:	b2a4      	uxth	r4, r4
 800d97a:	8194      	strh	r4, [r2, #12]
 800d97c:	f7fd fd82 	bl	800b484 <GUI_ALLOC_UnlockH>
 800d980:	b914      	cbnz	r4, 800d988 <GUI_USAGE_DecUseCnt+0x24>
 800d982:	4628      	mov	r0, r5
 800d984:	f7fd fdaa 	bl	800b4dc <GUI_ALLOC_Free>
 800d988:	b003      	add	sp, #12
 800d98a:	bd30      	pop	{r4, r5, pc}

0800d98c <GUI_USAGE_AddRect>:
 800d98c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d990:	4605      	mov	r5, r0
 800d992:	4688      	mov	r8, r1
 800d994:	4617      	mov	r7, r2
 800d996:	4699      	mov	r9, r3
 800d998:	68a8      	ldr	r0, [r5, #8]
 800d99a:	464b      	mov	r3, r9
 800d99c:	6846      	ldr	r6, [r0, #4]
 800d99e:	4641      	mov	r1, r8
 800d9a0:	4628      	mov	r0, r5
 800d9a2:	1c54      	adds	r4, r2, #1
 800d9a4:	47b0      	blx	r6
 800d9a6:	9b08      	ldr	r3, [sp, #32]
 800d9a8:	443b      	add	r3, r7
 800d9aa:	42a3      	cmp	r3, r4
 800d9ac:	d001      	beq.n	800d9b2 <GUI_USAGE_AddRect+0x26>
 800d9ae:	4622      	mov	r2, r4
 800d9b0:	e7f2      	b.n	800d998 <GUI_USAGE_AddRect+0xc>
 800d9b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

0800d9b8 <GUI_MEMDEV_ReduceYSize>:
 800d9b8:	b513      	push	{r0, r1, r4, lr}
 800d9ba:	460c      	mov	r4, r1
 800d9bc:	b918      	cbnz	r0, 800d9c6 <GUI_MEMDEV_ReduceYSize+0xe>
 800d9be:	4b08      	ldr	r3, [pc, #32]	; (800d9e0 <GUI_MEMDEV_ReduceYSize+0x28>)
 800d9c0:	681b      	ldr	r3, [r3, #0]
 800d9c2:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800d9c4:	b150      	cbz	r0, 800d9dc <GUI_MEMDEV_ReduceYSize+0x24>
 800d9c6:	f7fd fd4f 	bl	800b468 <GUI_ALLOC_LockH>
 800d9ca:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d9ce:	9001      	str	r0, [sp, #4]
 800d9d0:	429c      	cmp	r4, r3
 800d9d2:	bfb8      	it	lt
 800d9d4:	8144      	strhlt	r4, [r0, #10]
 800d9d6:	a801      	add	r0, sp, #4
 800d9d8:	f7fd fd54 	bl	800b484 <GUI_ALLOC_UnlockH>
 800d9dc:	b002      	add	sp, #8
 800d9de:	bd10      	pop	{r4, pc}
 800d9e0:	200000b8 	.word	0x200000b8

0800d9e4 <GUI_MEMDEV_Clear>:
 800d9e4:	b513      	push	{r0, r1, r4, lr}
 800d9e6:	b918      	cbnz	r0, 800d9f0 <GUI_MEMDEV_Clear+0xc>
 800d9e8:	4b0d      	ldr	r3, [pc, #52]	; (800da20 <GUI_MEMDEV_Clear+0x3c>)
 800d9ea:	681b      	ldr	r3, [r3, #0]
 800d9ec:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800d9ee:	b1a8      	cbz	r0, 800da1c <GUI_MEMDEV_Clear+0x38>
 800d9f0:	f7fd fd3a 	bl	800b468 <GUI_ALLOC_LockH>
 800d9f4:	ab02      	add	r3, sp, #8
 800d9f6:	6944      	ldr	r4, [r0, #20]
 800d9f8:	f843 0d08 	str.w	r0, [r3, #-8]!
 800d9fc:	4668      	mov	r0, sp
 800d9fe:	f7fd fd41 	bl	800b484 <GUI_ALLOC_UnlockH>
 800da02:	b15c      	cbz	r4, 800da1c <GUI_MEMDEV_Clear+0x38>
 800da04:	4620      	mov	r0, r4
 800da06:	f7fd fd2f 	bl	800b468 <GUI_ALLOC_LockH>
 800da0a:	ac02      	add	r4, sp, #8
 800da0c:	6883      	ldr	r3, [r0, #8]
 800da0e:	f844 0d04 	str.w	r0, [r4, #-4]!
 800da12:	689b      	ldr	r3, [r3, #8]
 800da14:	4798      	blx	r3
 800da16:	4620      	mov	r0, r4
 800da18:	f7fd fd34 	bl	800b484 <GUI_ALLOC_UnlockH>
 800da1c:	b002      	add	sp, #8
 800da1e:	bd10      	pop	{r4, pc}
 800da20:	200000b8 	.word	0x200000b8

0800da24 <_GetDevData>:
 800da24:	4802      	ldr	r0, [pc, #8]	; (800da30 <_GetDevData+0xc>)
 800da26:	2901      	cmp	r1, #1
 800da28:	bf18      	it	ne
 800da2a:	2000      	movne	r0, #0
 800da2c:	4770      	bx	lr
 800da2e:	bf00      	nop
 800da30:	080120e8 	.word	0x080120e8

0800da34 <_GetDevFunc>:
 800da34:	4802      	ldr	r0, [pc, #8]	; (800da40 <_GetDevFunc+0xc>)
 800da36:	2916      	cmp	r1, #22
 800da38:	bf18      	it	ne
 800da3a:	2000      	movne	r0, #0
 800da3c:	4770      	bx	lr
 800da3e:	bf00      	nop
 800da40:	0800cea5 	.word	0x0800cea5

0800da44 <_SetOrg>:
 800da44:	6800      	ldr	r0, [r0, #0]
 800da46:	b508      	push	{r3, lr}
 800da48:	b110      	cbz	r0, 800da50 <_SetOrg+0xc>
 800da4a:	68c3      	ldr	r3, [r0, #12]
 800da4c:	6a1b      	ldr	r3, [r3, #32]
 800da4e:	4798      	blx	r3
 800da50:	bd08      	pop	{r3, pc}

0800da52 <_GetRect>:
 800da52:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800da54:	6880      	ldr	r0, [r0, #8]
 800da56:	460c      	mov	r4, r1
 800da58:	f7fd fd06 	bl	800b468 <GUI_ALLOC_LockH>
 800da5c:	4603      	mov	r3, r0
 800da5e:	a802      	add	r0, sp, #8
 800da60:	8899      	ldrh	r1, [r3, #4]
 800da62:	88da      	ldrh	r2, [r3, #6]
 800da64:	891d      	ldrh	r5, [r3, #8]
 800da66:	f840 3d04 	str.w	r3, [r0, #-4]!
 800da6a:	895b      	ldrh	r3, [r3, #10]
 800da6c:	8021      	strh	r1, [r4, #0]
 800da6e:	8062      	strh	r2, [r4, #2]
 800da70:	4429      	add	r1, r5
 800da72:	441a      	add	r2, r3
 800da74:	3901      	subs	r1, #1
 800da76:	3a01      	subs	r2, #1
 800da78:	80a1      	strh	r1, [r4, #4]
 800da7a:	80e2      	strh	r2, [r4, #6]
 800da7c:	f7fd fd02 	bl	800b484 <GUI_ALLOC_UnlockH>
 800da80:	b003      	add	sp, #12
 800da82:	bd30      	pop	{r4, r5, pc}

0800da84 <_XY2PTR>:
 800da84:	4b0e      	ldr	r3, [pc, #56]	; (800dac0 <_XY2PTR+0x3c>)
 800da86:	681b      	ldr	r3, [r3, #0]
 800da88:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800da8a:	4605      	mov	r5, r0
 800da8c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800da8e:	460e      	mov	r6, r1
 800da90:	f7fd fcea 	bl	800b468 <GUI_ALLOC_LockH>
 800da94:	4603      	mov	r3, r0
 800da96:	a802      	add	r0, sp, #8
 800da98:	f9b3 4006 	ldrsh.w	r4, [r3, #6]
 800da9c:	f840 3d04 	str.w	r3, [r0, #-4]!
 800daa0:	f103 0118 	add.w	r1, r3, #24
 800daa4:	1b36      	subs	r6, r6, r4
 800daa6:	68dc      	ldr	r4, [r3, #12]
 800daa8:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800daac:	fb04 1406 	mla	r4, r4, r6, r1
 800dab0:	1aed      	subs	r5, r5, r3
 800dab2:	f7fd fce7 	bl	800b484 <GUI_ALLOC_UnlockH>
 800dab6:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800daba:	4620      	mov	r0, r4
 800dabc:	b002      	add	sp, #8
 800dabe:	bd70      	pop	{r4, r5, r6, pc}
 800dac0:	200000b8 	.word	0x200000b8

0800dac4 <_GetPixelIndex>:
 800dac4:	b508      	push	{r3, lr}
 800dac6:	4608      	mov	r0, r1
 800dac8:	4611      	mov	r1, r2
 800daca:	f7ff ffdb 	bl	800da84 <_XY2PTR>
 800dace:	8800      	ldrh	r0, [r0, #0]
 800dad0:	bd08      	pop	{r3, pc}
	...

0800dad4 <_XorPixel>:
 800dad4:	4b14      	ldr	r3, [pc, #80]	; (800db28 <_XorPixel+0x54>)
 800dad6:	681b      	ldr	r3, [r3, #0]
 800dad8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800dada:	4607      	mov	r7, r0
 800dadc:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800dade:	4615      	mov	r5, r2
 800dae0:	460e      	mov	r6, r1
 800dae2:	f7fd fcc1 	bl	800b468 <GUI_ALLOC_LockH>
 800dae6:	4629      	mov	r1, r5
 800dae8:	9000      	str	r0, [sp, #0]
 800daea:	4630      	mov	r0, r6
 800daec:	f7ff ffca 	bl	800da84 <_XY2PTR>
 800daf0:	693b      	ldr	r3, [r7, #16]
 800daf2:	4604      	mov	r4, r0
 800daf4:	689b      	ldr	r3, [r3, #8]
 800daf6:	4798      	blx	r3
 800daf8:	8823      	ldrh	r3, [r4, #0]
 800dafa:	4058      	eors	r0, r3
 800dafc:	9b00      	ldr	r3, [sp, #0]
 800dafe:	8020      	strh	r0, [r4, #0]
 800db00:	6958      	ldr	r0, [r3, #20]
 800db02:	b160      	cbz	r0, 800db1e <_XorPixel+0x4a>
 800db04:	f7fd fcb0 	bl	800b468 <GUI_ALLOC_LockH>
 800db08:	ac02      	add	r4, sp, #8
 800db0a:	6883      	ldr	r3, [r0, #8]
 800db0c:	f844 0d04 	str.w	r0, [r4, #-4]!
 800db10:	681b      	ldr	r3, [r3, #0]
 800db12:	4631      	mov	r1, r6
 800db14:	462a      	mov	r2, r5
 800db16:	4798      	blx	r3
 800db18:	4620      	mov	r0, r4
 800db1a:	f7fd fcb3 	bl	800b484 <GUI_ALLOC_UnlockH>
 800db1e:	4668      	mov	r0, sp
 800db20:	f7fd fcb0 	bl	800b484 <GUI_ALLOC_UnlockH>
 800db24:	b003      	add	sp, #12
 800db26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800db28:	200000b8 	.word	0x200000b8

0800db2c <_SetPixelIndex>:
 800db2c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800db2e:	461c      	mov	r4, r3
 800db30:	4b10      	ldr	r3, [pc, #64]	; (800db74 <_SetPixelIndex+0x48>)
 800db32:	681b      	ldr	r3, [r3, #0]
 800db34:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800db36:	460e      	mov	r6, r1
 800db38:	4615      	mov	r5, r2
 800db3a:	f7fd fc95 	bl	800b468 <GUI_ALLOC_LockH>
 800db3e:	4629      	mov	r1, r5
 800db40:	9000      	str	r0, [sp, #0]
 800db42:	4630      	mov	r0, r6
 800db44:	f7ff ff9e 	bl	800da84 <_XY2PTR>
 800db48:	9b00      	ldr	r3, [sp, #0]
 800db4a:	8004      	strh	r4, [r0, #0]
 800db4c:	6958      	ldr	r0, [r3, #20]
 800db4e:	b160      	cbz	r0, 800db6a <_SetPixelIndex+0x3e>
 800db50:	f7fd fc8a 	bl	800b468 <GUI_ALLOC_LockH>
 800db54:	ac02      	add	r4, sp, #8
 800db56:	6883      	ldr	r3, [r0, #8]
 800db58:	f844 0d04 	str.w	r0, [r4, #-4]!
 800db5c:	681b      	ldr	r3, [r3, #0]
 800db5e:	4631      	mov	r1, r6
 800db60:	462a      	mov	r2, r5
 800db62:	4798      	blx	r3
 800db64:	4620      	mov	r0, r4
 800db66:	f7fd fc8d 	bl	800b484 <GUI_ALLOC_UnlockH>
 800db6a:	4668      	mov	r0, sp
 800db6c:	f7fd fc8a 	bl	800b484 <GUI_ALLOC_UnlockH>
 800db70:	b002      	add	sp, #8
 800db72:	bd70      	pop	{r4, r5, r6, pc}
 800db74:	200000b8 	.word	0x200000b8

0800db78 <_DrawVLine>:
 800db78:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800db7c:	4d2c      	ldr	r5, [pc, #176]	; (800dc30 <_DrawVLine+0xb8>)
 800db7e:	461e      	mov	r6, r3
 800db80:	682b      	ldr	r3, [r5, #0]
 800db82:	4681      	mov	r9, r0
 800db84:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800db86:	460f      	mov	r7, r1
 800db88:	4614      	mov	r4, r2
 800db8a:	f7fd fc6d 	bl	800b468 <GUI_ALLOC_LockH>
 800db8e:	9000      	str	r0, [sp, #0]
 800db90:	6940      	ldr	r0, [r0, #20]
 800db92:	46aa      	mov	sl, r5
 800db94:	b108      	cbz	r0, 800db9a <_DrawVLine+0x22>
 800db96:	f7fd fc67 	bl	800b468 <GUI_ALLOC_LockH>
 800db9a:	9001      	str	r0, [sp, #4]
 800db9c:	4621      	mov	r1, r4
 800db9e:	4638      	mov	r0, r7
 800dba0:	f7ff ff70 	bl	800da84 <_XY2PTR>
 800dba4:	9b00      	ldr	r3, [sp, #0]
 800dba6:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800dbaa:	f8da 3000 	ldr.w	r3, [sl]
 800dbae:	7c1a      	ldrb	r2, [r3, #16]
 800dbb0:	07d2      	lsls	r2, r2, #31
 800dbb2:	4605      	mov	r5, r0
 800dbb4:	d51f      	bpl.n	800dbf6 <_DrawVLine+0x7e>
 800dbb6:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800dbba:	689b      	ldr	r3, [r3, #8]
 800dbbc:	4798      	blx	r3
 800dbbe:	fa1f f880 	uxth.w	r8, r0
 800dbc2:	9801      	ldr	r0, [sp, #4]
 800dbc4:	b120      	cbz	r0, 800dbd0 <_DrawVLine+0x58>
 800dbc6:	6883      	ldr	r3, [r0, #8]
 800dbc8:	4639      	mov	r1, r7
 800dbca:	681b      	ldr	r3, [r3, #0]
 800dbcc:	4622      	mov	r2, r4
 800dbce:	4798      	blx	r3
 800dbd0:	882b      	ldrh	r3, [r5, #0]
 800dbd2:	ea88 0303 	eor.w	r3, r8, r3
 800dbd6:	802b      	strh	r3, [r5, #0]
 800dbd8:	9b00      	ldr	r3, [sp, #0]
 800dbda:	3401      	adds	r4, #1
 800dbdc:	68db      	ldr	r3, [r3, #12]
 800dbde:	42b4      	cmp	r4, r6
 800dbe0:	441d      	add	r5, r3
 800dbe2:	ddee      	ble.n	800dbc2 <_DrawVLine+0x4a>
 800dbe4:	4668      	mov	r0, sp
 800dbe6:	f7fd fc4d 	bl	800b484 <GUI_ALLOC_UnlockH>
 800dbea:	9b01      	ldr	r3, [sp, #4]
 800dbec:	b1eb      	cbz	r3, 800dc2a <_DrawVLine+0xb2>
 800dbee:	a801      	add	r0, sp, #4
 800dbf0:	f7fd fc48 	bl	800b484 <GUI_ALLOC_UnlockH>
 800dbf4:	e019      	b.n	800dc2a <_DrawVLine+0xb2>
 800dbf6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dbf8:	f8d3 9000 	ldr.w	r9, [r3]
 800dbfc:	9b01      	ldr	r3, [sp, #4]
 800dbfe:	b163      	cbz	r3, 800dc1a <_DrawVLine+0xa2>
 800dc00:	9801      	ldr	r0, [sp, #4]
 800dc02:	6883      	ldr	r3, [r0, #8]
 800dc04:	4622      	mov	r2, r4
 800dc06:	681b      	ldr	r3, [r3, #0]
 800dc08:	4639      	mov	r1, r7
 800dc0a:	3401      	adds	r4, #1
 800dc0c:	4798      	blx	r3
 800dc0e:	42b4      	cmp	r4, r6
 800dc10:	f8a5 9000 	strh.w	r9, [r5]
 800dc14:	4445      	add	r5, r8
 800dc16:	ddf3      	ble.n	800dc00 <_DrawVLine+0x88>
 800dc18:	e7e4      	b.n	800dbe4 <_DrawVLine+0x6c>
 800dc1a:	1b34      	subs	r4, r6, r4
 800dc1c:	3401      	adds	r4, #1
 800dc1e:	3c01      	subs	r4, #1
 800dc20:	f8a5 9000 	strh.w	r9, [r5]
 800dc24:	4445      	add	r5, r8
 800dc26:	d1fa      	bne.n	800dc1e <_DrawVLine+0xa6>
 800dc28:	e7dc      	b.n	800dbe4 <_DrawVLine+0x6c>
 800dc2a:	b002      	add	sp, #8
 800dc2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dc30:	200000b8 	.word	0x200000b8

0800dc34 <_FillRect>:
 800dc34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc38:	4f2a      	ldr	r7, [pc, #168]	; (800dce4 <_FillRect+0xb0>)
 800dc3a:	4614      	mov	r4, r2
 800dc3c:	683a      	ldr	r2, [r7, #0]
 800dc3e:	4698      	mov	r8, r3
 800dc40:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 800dc42:	b087      	sub	sp, #28
 800dc44:	681b      	ldr	r3, [r3, #0]
 800dc46:	9302      	str	r3, [sp, #8]
 800dc48:	4682      	mov	sl, r0
 800dc4a:	6e10      	ldr	r0, [r2, #96]	; 0x60
 800dc4c:	460e      	mov	r6, r1
 800dc4e:	f7fd fc0b 	bl	800b468 <GUI_ALLOC_LockH>
 800dc52:	4621      	mov	r1, r4
 800dc54:	9004      	str	r0, [sp, #16]
 800dc56:	4630      	mov	r0, r6
 800dc58:	f7ff ff14 	bl	800da84 <_XY2PTR>
 800dc5c:	9a04      	ldr	r2, [sp, #16]
 800dc5e:	4605      	mov	r5, r0
 800dc60:	6950      	ldr	r0, [r2, #20]
 800dc62:	68d3      	ldr	r3, [r2, #12]
 800dc64:	9303      	str	r3, [sp, #12]
 800dc66:	ebc6 0908 	rsb	r9, r6, r8
 800dc6a:	f109 0801 	add.w	r8, r9, #1
 800dc6e:	46bb      	mov	fp, r7
 800dc70:	b180      	cbz	r0, 800dc94 <_FillRect+0x60>
 800dc72:	f7fd fbf9 	bl	800b468 <GUI_ALLOC_LockH>
 800dc76:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800dc78:	af06      	add	r7, sp, #24
 800dc7a:	1b13      	subs	r3, r2, r4
 800dc7c:	f847 0d04 	str.w	r0, [r7, #-4]!
 800dc80:	3301      	adds	r3, #1
 800dc82:	9300      	str	r3, [sp, #0]
 800dc84:	4631      	mov	r1, r6
 800dc86:	4622      	mov	r2, r4
 800dc88:	4643      	mov	r3, r8
 800dc8a:	f7ff fe7f 	bl	800d98c <GUI_USAGE_AddRect>
 800dc8e:	4638      	mov	r0, r7
 800dc90:	f7fd fbf8 	bl	800b484 <GUI_ALLOC_UnlockH>
 800dc94:	ea4f 0649 	mov.w	r6, r9, lsl #1
 800dc98:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800dc9a:	429c      	cmp	r4, r3
 800dc9c:	dc1c      	bgt.n	800dcd8 <_FillRect+0xa4>
 800dc9e:	f8db 3000 	ldr.w	r3, [fp]
 800dca2:	7c1b      	ldrb	r3, [r3, #16]
 800dca4:	07db      	lsls	r3, r3, #31
 800dca6:	d50d      	bpl.n	800dcc4 <_FillRect+0x90>
 800dca8:	f8da 3010 	ldr.w	r3, [sl, #16]
 800dcac:	689b      	ldr	r3, [r3, #8]
 800dcae:	4798      	blx	r3
 800dcb0:	19aa      	adds	r2, r5, r6
 800dcb2:	b280      	uxth	r0, r0
 800dcb4:	1eab      	subs	r3, r5, #2
 800dcb6:	8859      	ldrh	r1, [r3, #2]
 800dcb8:	4041      	eors	r1, r0
 800dcba:	f823 1f02 	strh.w	r1, [r3, #2]!
 800dcbe:	4293      	cmp	r3, r2
 800dcc0:	d1f9      	bne.n	800dcb6 <_FillRect+0x82>
 800dcc2:	e005      	b.n	800dcd0 <_FillRect+0x9c>
 800dcc4:	9b02      	ldr	r3, [sp, #8]
 800dcc6:	4628      	mov	r0, r5
 800dcc8:	b299      	uxth	r1, r3
 800dcca:	4642      	mov	r2, r8
 800dccc:	f7fb f8c9 	bl	8008e62 <GUI__memset16>
 800dcd0:	9a03      	ldr	r2, [sp, #12]
 800dcd2:	3401      	adds	r4, #1
 800dcd4:	4415      	add	r5, r2
 800dcd6:	e7df      	b.n	800dc98 <_FillRect+0x64>
 800dcd8:	a804      	add	r0, sp, #16
 800dcda:	f7fd fbd3 	bl	800b484 <GUI_ALLOC_UnlockH>
 800dcde:	b007      	add	sp, #28
 800dce0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dce4:	200000b8 	.word	0x200000b8

0800dce8 <_DrawHLine>:
 800dce8:	b507      	push	{r0, r1, r2, lr}
 800dcea:	9200      	str	r2, [sp, #0]
 800dcec:	f7ff ffa2 	bl	800dc34 <_FillRect>
 800dcf0:	b003      	add	sp, #12
 800dcf2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800dcf8 <_DrawBitmap>:
 800dcf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dcfc:	4c8b      	ldr	r4, [pc, #556]	; (800df2c <_DrawBitmap+0x234>)
 800dcfe:	b093      	sub	sp, #76	; 0x4c
 800dd00:	469b      	mov	fp, r3
 800dd02:	6823      	ldr	r3, [r4, #0]
 800dd04:	900d      	str	r0, [sp, #52]	; 0x34
 800dd06:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800dd08:	9207      	str	r2, [sp, #28]
 800dd0a:	460d      	mov	r5, r1
 800dd0c:	f8dd a07c 	ldr.w	sl, [sp, #124]	; 0x7c
 800dd10:	f7fd fbaa 	bl	800b468 <GUI_ALLOC_LockH>
 800dd14:	9010      	str	r0, [sp, #64]	; 0x40
 800dd16:	6940      	ldr	r0, [r0, #20]
 800dd18:	b108      	cbz	r0, 800dd1e <_DrawBitmap+0x26>
 800dd1a:	f7fd fba5 	bl	800b468 <GUI_ALLOC_LockH>
 800dd1e:	9011      	str	r0, [sp, #68]	; 0x44
 800dd20:	a812      	add	r0, sp, #72	; 0x48
 800dd22:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 800dd26:	68db      	ldr	r3, [r3, #12]
 800dd28:	9308      	str	r3, [sp, #32]
 800dd2a:	f7fd fbab 	bl	800b484 <GUI_ALLOC_UnlockH>
 800dd2e:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800dd30:	9811      	ldr	r0, [sp, #68]	; 0x44
 800dd32:	442e      	add	r6, r5
 800dd34:	9604      	str	r6, [sp, #16]
 800dd36:	b150      	cbz	r0, 800dd4e <_DrawBitmap+0x56>
 800dd38:	6823      	ldr	r3, [r4, #0]
 800dd3a:	7c1b      	ldrb	r3, [r3, #16]
 800dd3c:	0799      	lsls	r1, r3, #30
 800dd3e:	d106      	bne.n	800dd4e <_DrawBitmap+0x56>
 800dd40:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800dd42:	9700      	str	r7, [sp, #0]
 800dd44:	4631      	mov	r1, r6
 800dd46:	9a07      	ldr	r2, [sp, #28]
 800dd48:	465b      	mov	r3, fp
 800dd4a:	f7ff fe1f 	bl	800d98c <GUI_USAGE_AddRect>
 800dd4e:	9804      	ldr	r0, [sp, #16]
 800dd50:	9907      	ldr	r1, [sp, #28]
 800dd52:	f7ff fe97 	bl	800da84 <_XY2PTR>
 800dd56:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800dd58:	2e10      	cmp	r6, #16
 800dd5a:	4604      	mov	r4, r0
 800dd5c:	d13a      	bne.n	800ddd4 <_DrawBitmap+0xdc>
 800dd5e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800dd60:	b11b      	cbz	r3, 800dd6a <_DrawBitmap+0x72>
 800dd62:	ea4f 064b 	mov.w	r6, fp, lsl #1
 800dd66:	2500      	movs	r5, #0
 800dd68:	e014      	b.n	800dd94 <_DrawBitmap+0x9c>
 800dd6a:	4b71      	ldr	r3, [pc, #452]	; (800df30 <_DrawBitmap+0x238>)
 800dd6c:	681d      	ldr	r5, [r3, #0]
 800dd6e:	2d00      	cmp	r5, #0
 800dd70:	d0f7      	beq.n	800dd62 <_DrawBitmap+0x6a>
 800dd72:	9e08      	ldr	r6, [sp, #32]
 800dd74:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800dd76:	9600      	str	r6, [sp, #0]
 800dd78:	9701      	str	r7, [sp, #4]
 800dd7a:	4651      	mov	r1, sl
 800dd7c:	465a      	mov	r2, fp
 800dd7e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800dd80:	47a8      	blx	r5
 800dd82:	e349      	b.n	800e418 <_DrawBitmap+0x720>
 800dd84:	f1ba 0f00 	cmp.w	sl, #0
 800dd88:	d10a      	bne.n	800dda0 <_DrawBitmap+0xa8>
 800dd8a:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800dd8c:	44ba      	add	sl, r7
 800dd8e:	9f08      	ldr	r7, [sp, #32]
 800dd90:	3501      	adds	r5, #1
 800dd92:	443c      	add	r4, r7
 800dd94:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800dd96:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
 800dd9a:	42bd      	cmp	r5, r7
 800dd9c:	dbf2      	blt.n	800dd84 <_DrawBitmap+0x8c>
 800dd9e:	e014      	b.n	800ddca <_DrawBitmap+0xd2>
 800dda0:	2c00      	cmp	r4, #0
 800dda2:	d0f2      	beq.n	800dd8a <_DrawBitmap+0x92>
 800dda4:	4b63      	ldr	r3, [pc, #396]	; (800df34 <_DrawBitmap+0x23c>)
 800dda6:	4620      	mov	r0, r4
 800dda8:	681b      	ldr	r3, [r3, #0]
 800ddaa:	4651      	mov	r1, sl
 800ddac:	4632      	mov	r2, r6
 800ddae:	4798      	blx	r3
 800ddb0:	f1b8 0f00 	cmp.w	r8, #0
 800ddb4:	d0e9      	beq.n	800dd8a <_DrawBitmap+0x92>
 800ddb6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800ddba:	9a07      	ldr	r2, [sp, #28]
 800ddbc:	685f      	ldr	r7, [r3, #4]
 800ddbe:	9904      	ldr	r1, [sp, #16]
 800ddc0:	4640      	mov	r0, r8
 800ddc2:	442a      	add	r2, r5
 800ddc4:	465b      	mov	r3, fp
 800ddc6:	47b8      	blx	r7
 800ddc8:	e7df      	b.n	800dd8a <_DrawBitmap+0x92>
 800ddca:	f1b8 0f00 	cmp.w	r8, #0
 800ddce:	f040 8320 	bne.w	800e412 <_DrawBitmap+0x71a>
 800ddd2:	e321      	b.n	800e418 <_DrawBitmap+0x720>
 800ddd4:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800ddd6:	2e17      	cmp	r6, #23
 800ddd8:	dd38      	ble.n	800de4c <_DrawBitmap+0x154>
 800ddda:	2600      	movs	r6, #0
 800dddc:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800ddde:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800dde0:	42be      	cmp	r6, r7
 800dde2:	f280 809e 	bge.w	800df22 <_DrawBitmap+0x22a>
 800dde6:	9f07      	ldr	r7, [sp, #28]
 800dde8:	4437      	add	r7, r6
 800ddea:	f1ba 0f00 	cmp.w	sl, #0
 800ddee:	d027      	beq.n	800de40 <_DrawBitmap+0x148>
 800ddf0:	b334      	cbz	r4, 800de40 <_DrawBitmap+0x148>
 800ddf2:	b13d      	cbz	r5, 800de04 <_DrawBitmap+0x10c>
 800ddf4:	68ab      	ldr	r3, [r5, #8]
 800ddf6:	9904      	ldr	r1, [sp, #16]
 800ddf8:	f8d3 c004 	ldr.w	ip, [r3, #4]
 800ddfc:	4628      	mov	r0, r5
 800ddfe:	463a      	mov	r2, r7
 800de00:	465b      	mov	r3, fp
 800de02:	47e0      	blx	ip
 800de04:	1ea3      	subs	r3, r4, #2
 800de06:	f1aa 0904 	sub.w	r9, sl, #4
 800de0a:	9303      	str	r3, [sp, #12]
 800de0c:	46d8      	mov	r8, fp
 800de0e:	9b04      	ldr	r3, [sp, #16]
 800de10:	980d      	ldr	r0, [sp, #52]	; 0x34
 800de12:	445b      	add	r3, fp
 800de14:	ebc8 0103 	rsb	r1, r8, r3
 800de18:	6903      	ldr	r3, [r0, #16]
 800de1a:	f859 0f04 	ldr.w	r0, [r9, #4]!
 800de1e:	681b      	ldr	r3, [r3, #0]
 800de20:	9102      	str	r1, [sp, #8]
 800de22:	4798      	blx	r3
 800de24:	9b03      	ldr	r3, [sp, #12]
 800de26:	9902      	ldr	r1, [sp, #8]
 800de28:	f823 0f02 	strh.w	r0, [r3, #2]!
 800de2c:	9303      	str	r3, [sp, #12]
 800de2e:	b125      	cbz	r5, 800de3a <_DrawBitmap+0x142>
 800de30:	68ab      	ldr	r3, [r5, #8]
 800de32:	4628      	mov	r0, r5
 800de34:	681b      	ldr	r3, [r3, #0]
 800de36:	463a      	mov	r2, r7
 800de38:	4798      	blx	r3
 800de3a:	f1b8 0801 	subs.w	r8, r8, #1
 800de3e:	d1e6      	bne.n	800de0e <_DrawBitmap+0x116>
 800de40:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800de42:	44ba      	add	sl, r7
 800de44:	9f08      	ldr	r7, [sp, #32]
 800de46:	3601      	adds	r6, #1
 800de48:	443c      	add	r4, r7
 800de4a:	e7c7      	b.n	800dddc <_DrawBitmap+0xe4>
 800de4c:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800de4e:	2e08      	cmp	r6, #8
 800de50:	f100 0402 	add.w	r4, r0, #2
 800de54:	d170      	bne.n	800df38 <_DrawBitmap+0x240>
 800de56:	9e07      	ldr	r6, [sp, #28]
 800de58:	9f07      	ldr	r7, [sp, #28]
 800de5a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800de5c:	1bf3      	subs	r3, r6, r7
 800de5e:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 800de60:	42bb      	cmp	r3, r7
 800de62:	f1a4 0002 	sub.w	r0, r4, #2
 800de66:	da5c      	bge.n	800df22 <_DrawBitmap+0x22a>
 800de68:	4b30      	ldr	r3, [pc, #192]	; (800df2c <_DrawBitmap+0x234>)
 800de6a:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800de6c:	681b      	ldr	r3, [r3, #0]
 800de6e:	7c1b      	ldrb	r3, [r3, #16]
 800de70:	b367      	cbz	r7, 800decc <_DrawBitmap+0x1d4>
 800de72:	f013 0303 	ands.w	r3, r3, #3
 800de76:	d004      	beq.n	800de82 <_DrawBitmap+0x18a>
 800de78:	2b02      	cmp	r3, #2
 800de7a:	d14c      	bne.n	800df16 <_DrawBitmap+0x21e>
 800de7c:	46a0      	mov	r8, r4
 800de7e:	9f04      	ldr	r7, [sp, #16]
 800de80:	e01d      	b.n	800debe <_DrawBitmap+0x1c6>
 800de82:	f81a 2003 	ldrb.w	r2, [sl, r3]
 800de86:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800de88:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 800de8c:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 800de90:	3301      	adds	r3, #1
 800de92:	455b      	cmp	r3, fp
 800de94:	d1f5      	bne.n	800de82 <_DrawBitmap+0x18a>
 800de96:	e03e      	b.n	800df16 <_DrawBitmap+0x21e>
 800de98:	9921      	ldr	r1, [sp, #132]	; 0x84
 800de9a:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800de9e:	f828 3c02 	strh.w	r3, [r8, #-2]
 800dea2:	b12d      	cbz	r5, 800deb0 <_DrawBitmap+0x1b8>
 800dea4:	68ab      	ldr	r3, [r5, #8]
 800dea6:	4628      	mov	r0, r5
 800dea8:	681b      	ldr	r3, [r3, #0]
 800deaa:	4639      	mov	r1, r7
 800deac:	4632      	mov	r2, r6
 800deae:	4798      	blx	r3
 800deb0:	9b04      	ldr	r3, [sp, #16]
 800deb2:	3701      	adds	r7, #1
 800deb4:	445b      	add	r3, fp
 800deb6:	42bb      	cmp	r3, r7
 800deb8:	f108 0802 	add.w	r8, r8, #2
 800debc:	d02b      	beq.n	800df16 <_DrawBitmap+0x21e>
 800debe:	9804      	ldr	r0, [sp, #16]
 800dec0:	ebc0 030a 	rsb	r3, r0, sl
 800dec4:	5ddb      	ldrb	r3, [r3, r7]
 800dec6:	2b00      	cmp	r3, #0
 800dec8:	d0f2      	beq.n	800deb0 <_DrawBitmap+0x1b8>
 800deca:	e7e5      	b.n	800de98 <_DrawBitmap+0x1a0>
 800decc:	f013 0303 	ands.w	r3, r3, #3
 800ded0:	d004      	beq.n	800dedc <_DrawBitmap+0x1e4>
 800ded2:	2b02      	cmp	r3, #2
 800ded4:	d11f      	bne.n	800df16 <_DrawBitmap+0x21e>
 800ded6:	46a0      	mov	r8, r4
 800ded8:	9f04      	ldr	r7, [sp, #16]
 800deda:	e015      	b.n	800df08 <_DrawBitmap+0x210>
 800dedc:	4b15      	ldr	r3, [pc, #84]	; (800df34 <_DrawBitmap+0x23c>)
 800dede:	4651      	mov	r1, sl
 800dee0:	681b      	ldr	r3, [r3, #0]
 800dee2:	465a      	mov	r2, fp
 800dee4:	4798      	blx	r3
 800dee6:	e016      	b.n	800df16 <_DrawBitmap+0x21e>
 800dee8:	f828 3c02 	strh.w	r3, [r8, #-2]
 800deec:	b12d      	cbz	r5, 800defa <_DrawBitmap+0x202>
 800deee:	68ab      	ldr	r3, [r5, #8]
 800def0:	4628      	mov	r0, r5
 800def2:	681b      	ldr	r3, [r3, #0]
 800def4:	4639      	mov	r1, r7
 800def6:	4632      	mov	r2, r6
 800def8:	4798      	blx	r3
 800defa:	9b04      	ldr	r3, [sp, #16]
 800defc:	3701      	adds	r7, #1
 800defe:	445b      	add	r3, fp
 800df00:	42bb      	cmp	r3, r7
 800df02:	f108 0802 	add.w	r8, r8, #2
 800df06:	d006      	beq.n	800df16 <_DrawBitmap+0x21e>
 800df08:	9a04      	ldr	r2, [sp, #16]
 800df0a:	ebc2 030a 	rsb	r3, r2, sl
 800df0e:	5ddb      	ldrb	r3, [r3, r7]
 800df10:	2b00      	cmp	r3, #0
 800df12:	d0f2      	beq.n	800defa <_DrawBitmap+0x202>
 800df14:	e7e8      	b.n	800dee8 <_DrawBitmap+0x1f0>
 800df16:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800df18:	44ba      	add	sl, r7
 800df1a:	9f08      	ldr	r7, [sp, #32]
 800df1c:	3601      	adds	r6, #1
 800df1e:	443c      	add	r4, r7
 800df20:	e79a      	b.n	800de58 <_DrawBitmap+0x160>
 800df22:	2d00      	cmp	r5, #0
 800df24:	f040 8275 	bne.w	800e412 <_DrawBitmap+0x71a>
 800df28:	e276      	b.n	800e418 <_DrawBitmap+0x720>
 800df2a:	bf00      	nop
 800df2c:	200000b8 	.word	0x200000b8
 800df30:	20002b98 	.word	0x20002b98
 800df34:	200000a8 	.word	0x200000a8
 800df38:	9e21      	ldr	r6, [sp, #132]	; 0x84
 800df3a:	4bab      	ldr	r3, [pc, #684]	; (800e1e8 <_DrawBitmap+0x4f0>)
 800df3c:	9f20      	ldr	r7, [sp, #128]	; 0x80
 800df3e:	9409      	str	r4, [sp, #36]	; 0x24
 800df40:	2e00      	cmp	r6, #0
 800df42:	bf08      	it	eq
 800df44:	461e      	moveq	r6, r3
 800df46:	9621      	str	r6, [sp, #132]	; 0x84
 800df48:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800df4a:	0076      	lsls	r6, r6, #1
 800df4c:	960e      	str	r6, [sp, #56]	; 0x38
 800df4e:	00bf      	lsls	r7, r7, #2
 800df50:	9e07      	ldr	r6, [sp, #28]
 800df52:	970f      	str	r7, [sp, #60]	; 0x3c
 800df54:	9605      	str	r6, [sp, #20]
 800df56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800df58:	9e05      	ldr	r6, [sp, #20]
 800df5a:	9f07      	ldr	r7, [sp, #28]
 800df5c:	1e9c      	subs	r4, r3, #2
 800df5e:	1bf3      	subs	r3, r6, r7
 800df60:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 800df62:	42b3      	cmp	r3, r6
 800df64:	f280 8253 	bge.w	800e40e <_DrawBitmap+0x716>
 800df68:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800df6a:	2f02      	cmp	r7, #2
 800df6c:	f000 80d9 	beq.w	800e122 <_DrawBitmap+0x42a>
 800df70:	2f04      	cmp	r7, #4
 800df72:	f000 8178 	beq.w	800e266 <_DrawBitmap+0x56e>
 800df76:	2f01      	cmp	r7, #1
 800df78:	f040 823f 	bne.w	800e3fa <_DrawBitmap+0x702>
 800df7c:	f8df 9270 	ldr.w	r9, [pc, #624]	; 800e1f0 <_DrawBitmap+0x4f8>
 800df80:	f8d9 3000 	ldr.w	r3, [r9]
 800df84:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800df86:	f7fd fa6f 	bl	800b468 <GUI_ALLOC_LockH>
 800df8a:	f89a 3000 	ldrb.w	r3, [sl]
 800df8e:	4a97      	ldr	r2, [pc, #604]	; (800e1ec <_DrawBitmap+0x4f4>)
 800df90:	9010      	str	r0, [sp, #64]	; 0x40
 800df92:	5cd5      	ldrb	r5, [r2, r3]
 800df94:	f8d9 3000 	ldr.w	r3, [r9]
 800df98:	9820      	ldr	r0, [sp, #128]	; 0x80
 800df9a:	7c1b      	ldrb	r3, [r3, #16]
 800df9c:	9f11      	ldr	r7, [sp, #68]	; 0x44
 800df9e:	f003 0303 	and.w	r3, r3, #3
 800dfa2:	2b02      	cmp	r3, #2
 800dfa4:	465e      	mov	r6, fp
 800dfa6:	f1c0 0808 	rsb	r8, r0, #8
 800dfaa:	fa45 f500 	asr.w	r5, r5, r0
 800dfae:	d022      	beq.n	800dff6 <_DrawBitmap+0x2fe>
 800dfb0:	2b03      	cmp	r3, #3
 800dfb2:	d062      	beq.n	800e07a <_DrawBitmap+0x382>
 800dfb4:	2b01      	cmp	r3, #1
 800dfb6:	d060      	beq.n	800e07a <_DrawBitmap+0x382>
 800dfb8:	4652      	mov	r2, sl
 800dfba:	4546      	cmp	r6, r8
 800dfbc:	bf38      	it	cc
 800dfbe:	46b0      	movcc	r8, r6
 800dfc0:	ebc8 0606 	rsb	r6, r8, r6
 800dfc4:	4643      	mov	r3, r8
 800dfc6:	4621      	mov	r1, r4
 800dfc8:	f005 0001 	and.w	r0, r5, #1
 800dfcc:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800dfce:	3b01      	subs	r3, #1
 800dfd0:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 800dfd4:	f821 0b02 	strh.w	r0, [r1], #2
 800dfd8:	ea4f 0555 	mov.w	r5, r5, lsr #1
 800dfdc:	d1f4      	bne.n	800dfc8 <_DrawBitmap+0x2d0>
 800dfde:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800dfe2:	2e00      	cmp	r6, #0
 800dfe4:	f000 8099 	beq.w	800e11a <_DrawBitmap+0x422>
 800dfe8:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800dfec:	497f      	ldr	r1, [pc, #508]	; (800e1ec <_DrawBitmap+0x4f4>)
 800dfee:	f04f 0808 	mov.w	r8, #8
 800dff2:	5ccd      	ldrb	r5, [r1, r3]
 800dff4:	e7e1      	b.n	800dfba <_DrawBitmap+0x2c2>
 800dff6:	9821      	ldr	r0, [sp, #132]	; 0x84
 800dff8:	f8dd 9010 	ldr.w	r9, [sp, #16]
 800dffc:	f8b0 c004 	ldrh.w	ip, [r0, #4]
 800e000:	f8cd a018 	str.w	sl, [sp, #24]
 800e004:	4546      	cmp	r6, r8
 800e006:	bf38      	it	cc
 800e008:	46b0      	movcc	r8, r6
 800e00a:	ebc8 0606 	rsb	r6, r8, r6
 800e00e:	b32f      	cbz	r7, 800e05c <_DrawBitmap+0x364>
 800e010:	b91d      	cbnz	r5, 800e01a <_DrawBitmap+0x322>
 800e012:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e016:	44c1      	add	r9, r8
 800e018:	e024      	b.n	800e064 <_DrawBitmap+0x36c>
 800e01a:	07ea      	lsls	r2, r5, #31
 800e01c:	d50b      	bpl.n	800e036 <_DrawBitmap+0x33e>
 800e01e:	68bb      	ldr	r3, [r7, #8]
 800e020:	9a05      	ldr	r2, [sp, #20]
 800e022:	681b      	ldr	r3, [r3, #0]
 800e024:	f8cd c008 	str.w	ip, [sp, #8]
 800e028:	4638      	mov	r0, r7
 800e02a:	4649      	mov	r1, r9
 800e02c:	4798      	blx	r3
 800e02e:	f8dd c008 	ldr.w	ip, [sp, #8]
 800e032:	f8a4 c000 	strh.w	ip, [r4]
 800e036:	f1b8 0801 	subs.w	r8, r8, #1
 800e03a:	f109 0901 	add.w	r9, r9, #1
 800e03e:	f104 0402 	add.w	r4, r4, #2
 800e042:	d00f      	beq.n	800e064 <_DrawBitmap+0x36c>
 800e044:	086d      	lsrs	r5, r5, #1
 800e046:	e7e3      	b.n	800e010 <_DrawBitmap+0x318>
 800e048:	07eb      	lsls	r3, r5, #31
 800e04a:	bf48      	it	mi
 800e04c:	f8a4 c000 	strhmi.w	ip, [r4]
 800e050:	f1b8 0801 	subs.w	r8, r8, #1
 800e054:	f104 0402 	add.w	r4, r4, #2
 800e058:	d004      	beq.n	800e064 <_DrawBitmap+0x36c>
 800e05a:	086d      	lsrs	r5, r5, #1
 800e05c:	2d00      	cmp	r5, #0
 800e05e:	d1f3      	bne.n	800e048 <_DrawBitmap+0x350>
 800e060:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e064:	2e00      	cmp	r6, #0
 800e066:	d058      	beq.n	800e11a <_DrawBitmap+0x422>
 800e068:	9906      	ldr	r1, [sp, #24]
 800e06a:	4a60      	ldr	r2, [pc, #384]	; (800e1ec <_DrawBitmap+0x4f4>)
 800e06c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800e070:	9106      	str	r1, [sp, #24]
 800e072:	5cd5      	ldrb	r5, [r2, r3]
 800e074:	f04f 0808 	mov.w	r8, #8
 800e078:	e7c4      	b.n	800e004 <_DrawBitmap+0x30c>
 800e07a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e07c:	6913      	ldr	r3, [r2, #16]
 800e07e:	689b      	ldr	r3, [r3, #8]
 800e080:	4798      	blx	r3
 800e082:	9b04      	ldr	r3, [sp, #16]
 800e084:	930b      	str	r3, [sp, #44]	; 0x2c
 800e086:	b280      	uxth	r0, r0
 800e088:	900a      	str	r0, [sp, #40]	; 0x28
 800e08a:	f10a 0901 	add.w	r9, sl, #1
 800e08e:	4546      	cmp	r6, r8
 800e090:	bf38      	it	cc
 800e092:	46b0      	movcc	r8, r6
 800e094:	ebc8 0606 	rsb	r6, r8, r6
 800e098:	1ca3      	adds	r3, r4, #2
 800e09a:	b31f      	cbz	r7, 800e0e4 <_DrawBitmap+0x3ec>
 800e09c:	f8cd 8018 	str.w	r8, [sp, #24]
 800e0a0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800e0a2:	9a06      	ldr	r2, [sp, #24]
 800e0a4:	4440      	add	r0, r8
 800e0a6:	900c      	str	r0, [sp, #48]	; 0x30
 800e0a8:	1a81      	subs	r1, r0, r2
 800e0aa:	07e8      	lsls	r0, r5, #31
 800e0ac:	d50d      	bpl.n	800e0ca <_DrawBitmap+0x3d2>
 800e0ae:	68ba      	ldr	r2, [r7, #8]
 800e0b0:	4638      	mov	r0, r7
 800e0b2:	f8d2 c000 	ldr.w	ip, [r2]
 800e0b6:	9a05      	ldr	r2, [sp, #20]
 800e0b8:	9302      	str	r3, [sp, #8]
 800e0ba:	47e0      	blx	ip
 800e0bc:	9b02      	ldr	r3, [sp, #8]
 800e0be:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e0c0:	f833 2c02 	ldrh.w	r2, [r3, #-2]
 800e0c4:	4042      	eors	r2, r0
 800e0c6:	f823 2c02 	strh.w	r2, [r3, #-2]
 800e0ca:	9906      	ldr	r1, [sp, #24]
 800e0cc:	3901      	subs	r1, #1
 800e0ce:	ea4f 0555 	mov.w	r5, r5, lsr #1
 800e0d2:	f103 0302 	add.w	r3, r3, #2
 800e0d6:	9106      	str	r1, [sp, #24]
 800e0d8:	d1e2      	bne.n	800e0a0 <_DrawBitmap+0x3a8>
 800e0da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e0dc:	930b      	str	r3, [sp, #44]	; 0x2c
 800e0de:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e0e2:	e010      	b.n	800e106 <_DrawBitmap+0x40e>
 800e0e4:	4642      	mov	r2, r8
 800e0e6:	07e9      	lsls	r1, r5, #31
 800e0e8:	d505      	bpl.n	800e0f6 <_DrawBitmap+0x3fe>
 800e0ea:	f833 1c02 	ldrh.w	r1, [r3, #-2]
 800e0ee:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e0f0:	4041      	eors	r1, r0
 800e0f2:	f823 1c02 	strh.w	r1, [r3, #-2]
 800e0f6:	3a01      	subs	r2, #1
 800e0f8:	ea4f 0555 	mov.w	r5, r5, lsr #1
 800e0fc:	f103 0302 	add.w	r3, r3, #2
 800e100:	d1f1      	bne.n	800e0e6 <_DrawBitmap+0x3ee>
 800e102:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 800e106:	b146      	cbz	r6, 800e11a <_DrawBitmap+0x422>
 800e108:	f899 3000 	ldrb.w	r3, [r9]
 800e10c:	4a37      	ldr	r2, [pc, #220]	; (800e1ec <_DrawBitmap+0x4f4>)
 800e10e:	f109 0901 	add.w	r9, r9, #1
 800e112:	5cd5      	ldrb	r5, [r2, r3]
 800e114:	f04f 0808 	mov.w	r8, #8
 800e118:	e7b9      	b.n	800e08e <_DrawBitmap+0x396>
 800e11a:	a810      	add	r0, sp, #64	; 0x40
 800e11c:	f7fd f9b2 	bl	800b484 <GUI_ALLOC_UnlockH>
 800e120:	e16b      	b.n	800e3fa <_DrawBitmap+0x702>
 800e122:	4b33      	ldr	r3, [pc, #204]	; (800e1f0 <_DrawBitmap+0x4f8>)
 800e124:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800e126:	681b      	ldr	r3, [r3, #0]
 800e128:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800e12a:	7c1b      	ldrb	r3, [r3, #16]
 800e12c:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
 800e130:	f1c6 0504 	rsb	r5, r6, #4
 800e134:	f89a 6000 	ldrb.w	r6, [sl]
 800e138:	f003 0303 	and.w	r3, r3, #3
 800e13c:	40be      	lsls	r6, r7
 800e13e:	2b01      	cmp	r3, #1
 800e140:	b2ed      	uxtb	r5, r5
 800e142:	b2f6      	uxtb	r6, r6
 800e144:	d06a      	beq.n	800e21c <_DrawBitmap+0x524>
 800e146:	d308      	bcc.n	800e15a <_DrawBitmap+0x462>
 800e148:	2b02      	cmp	r3, #2
 800e14a:	f040 8156 	bne.w	800e3fa <_DrawBitmap+0x702>
 800e14e:	f8cd a018 	str.w	sl, [sp, #24]
 800e152:	465f      	mov	r7, fp
 800e154:	f8dd c010 	ldr.w	ip, [sp, #16]
 800e158:	e03e      	b.n	800e1d8 <_DrawBitmap+0x4e0>
 800e15a:	4652      	mov	r2, sl
 800e15c:	465b      	mov	r3, fp
 800e15e:	429d      	cmp	r5, r3
 800e160:	bfc8      	it	gt
 800e162:	b2dd      	uxtbgt	r5, r3
 800e164:	1b5b      	subs	r3, r3, r5
 800e166:	4629      	mov	r1, r5
 800e168:	4620      	mov	r0, r4
 800e16a:	ea4f 1c96 	mov.w	ip, r6, lsr #6
 800e16e:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e170:	3901      	subs	r1, #1
 800e172:	f857 c02c 	ldr.w	ip, [r7, ip, lsl #2]
 800e176:	f820 cb02 	strh.w	ip, [r0], #2
 800e17a:	00b6      	lsls	r6, r6, #2
 800e17c:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 800e180:	b2f6      	uxtb	r6, r6
 800e182:	d1f2      	bne.n	800e16a <_DrawBitmap+0x472>
 800e184:	3d01      	subs	r5, #1
 800e186:	b2ed      	uxtb	r5, r5
 800e188:	3501      	adds	r5, #1
 800e18a:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800e18e:	2b00      	cmp	r3, #0
 800e190:	f000 8133 	beq.w	800e3fa <_DrawBitmap+0x702>
 800e194:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800e198:	2504      	movs	r5, #4
 800e19a:	e7e0      	b.n	800e15e <_DrawBitmap+0x466>
 800e19c:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800e1a0:	eb08 010c 	add.w	r1, r8, ip
 800e1a4:	d126      	bne.n	800e1f4 <_DrawBitmap+0x4fc>
 800e1a6:	f108 0801 	add.w	r8, r8, #1
 800e1aa:	fa5f f388 	uxtb.w	r3, r8
 800e1ae:	00b6      	lsls	r6, r6, #2
 800e1b0:	429d      	cmp	r5, r3
 800e1b2:	b2f6      	uxtb	r6, r6
 800e1b4:	d1f2      	bne.n	800e19c <_DrawBitmap+0x4a4>
 800e1b6:	3d01      	subs	r5, #1
 800e1b8:	b2ed      	uxtb	r5, r5
 800e1ba:	1c6b      	adds	r3, r5, #1
 800e1bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e1c0:	f10c 0301 	add.w	r3, ip, #1
 800e1c4:	eb03 0c05 	add.w	ip, r3, r5
 800e1c8:	2f00      	cmp	r7, #0
 800e1ca:	f000 8116 	beq.w	800e3fa <_DrawBitmap+0x702>
 800e1ce:	9b06      	ldr	r3, [sp, #24]
 800e1d0:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800e1d4:	9306      	str	r3, [sp, #24]
 800e1d6:	2504      	movs	r5, #4
 800e1d8:	42bd      	cmp	r5, r7
 800e1da:	bfc8      	it	gt
 800e1dc:	b2fd      	uxtbgt	r5, r7
 800e1de:	1b7f      	subs	r7, r7, r5
 800e1e0:	f04f 0800 	mov.w	r8, #0
 800e1e4:	e7da      	b.n	800e19c <_DrawBitmap+0x4a4>
 800e1e6:	bf00      	nop
 800e1e8:	080120a8 	.word	0x080120a8
 800e1ec:	08011ec4 	.word	0x08011ec4
 800e1f0:	200000b8 	.word	0x200000b8
 800e1f4:	09b3      	lsrs	r3, r6, #6
 800e1f6:	9821      	ldr	r0, [sp, #132]	; 0x84
 800e1f8:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800e1fc:	f824 3018 	strh.w	r3, [r4, r8, lsl #1]
 800e200:	f1b9 0f00 	cmp.w	r9, #0
 800e204:	d0cf      	beq.n	800e1a6 <_DrawBitmap+0x4ae>
 800e206:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800e20a:	9a05      	ldr	r2, [sp, #20]
 800e20c:	681b      	ldr	r3, [r3, #0]
 800e20e:	f8cd c008 	str.w	ip, [sp, #8]
 800e212:	4648      	mov	r0, r9
 800e214:	4798      	blx	r3
 800e216:	f8dd c008 	ldr.w	ip, [sp, #8]
 800e21a:	e7c4      	b.n	800e1a6 <_DrawBitmap+0x4ae>
 800e21c:	4651      	mov	r1, sl
 800e21e:	465b      	mov	r3, fp
 800e220:	429d      	cmp	r5, r3
 800e222:	bfc8      	it	gt
 800e224:	b2dd      	uxtbgt	r5, r3
 800e226:	1b5b      	subs	r3, r3, r5
 800e228:	1ca2      	adds	r2, r4, #2
 800e22a:	4628      	mov	r0, r5
 800e22c:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800e230:	d005      	beq.n	800e23e <_DrawBitmap+0x546>
 800e232:	f832 7c02 	ldrh.w	r7, [r2, #-2]
 800e236:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 800e23a:	f822 7c02 	strh.w	r7, [r2, #-2]
 800e23e:	3801      	subs	r0, #1
 800e240:	00b6      	lsls	r6, r6, #2
 800e242:	f010 00ff 	ands.w	r0, r0, #255	; 0xff
 800e246:	b2f6      	uxtb	r6, r6
 800e248:	f102 0202 	add.w	r2, r2, #2
 800e24c:	d1ee      	bne.n	800e22c <_DrawBitmap+0x534>
 800e24e:	3d01      	subs	r5, #1
 800e250:	b2ed      	uxtb	r5, r5
 800e252:	3501      	adds	r5, #1
 800e254:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800e258:	2b00      	cmp	r3, #0
 800e25a:	f000 80ce 	beq.w	800e3fa <_DrawBitmap+0x702>
 800e25e:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 800e262:	2504      	movs	r5, #4
 800e264:	e7dc      	b.n	800e220 <_DrawBitmap+0x528>
 800e266:	4a6e      	ldr	r2, [pc, #440]	; (800e420 <_DrawBitmap+0x728>)
 800e268:	f89a 3000 	ldrb.w	r3, [sl]
 800e26c:	6812      	ldr	r2, [r2, #0]
 800e26e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800e270:	7c12      	ldrb	r2, [r2, #16]
 800e272:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800e274:	f002 0203 	and.w	r2, r2, #3
 800e278:	40bb      	lsls	r3, r7
 800e27a:	2a01      	cmp	r2, #1
 800e27c:	b2dd      	uxtb	r5, r3
 800e27e:	f000 8095 	beq.w	800e3ac <_DrawBitmap+0x6b4>
 800e282:	d302      	bcc.n	800e28a <_DrawBitmap+0x592>
 800e284:	2a02      	cmp	r2, #2
 800e286:	d036      	beq.n	800e2f6 <_DrawBitmap+0x5fe>
 800e288:	e0b7      	b.n	800e3fa <_DrawBitmap+0x702>
 800e28a:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800e28c:	b166      	cbz	r6, 800e2a8 <_DrawBitmap+0x5b0>
 800e28e:	092d      	lsrs	r5, r5, #4
 800e290:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e292:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 800e296:	8023      	strh	r3, [r4, #0]
 800e298:	f10a 0201 	add.w	r2, sl, #1
 800e29c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800e29e:	f89a 5001 	ldrb.w	r5, [sl, #1]
 800e2a2:	f10b 33ff 	add.w	r3, fp, #4294967295
 800e2a6:	e001      	b.n	800e2ac <_DrawBitmap+0x5b4>
 800e2a8:	465b      	mov	r3, fp
 800e2aa:	4652      	mov	r2, sl
 800e2ac:	2b01      	cmp	r3, #1
 800e2ae:	dd19      	ble.n	800e2e4 <_DrawBitmap+0x5ec>
 800e2b0:	1058      	asrs	r0, r3, #1
 800e2b2:	1d21      	adds	r1, r4, #4
 800e2b4:	f003 0301 	and.w	r3, r3, #1
 800e2b8:	eb02 0c00 	add.w	ip, r2, r0
 800e2bc:	092f      	lsrs	r7, r5, #4
 800e2be:	9e21      	ldr	r6, [sp, #132]	; 0x84
 800e2c0:	f005 050f 	and.w	r5, r5, #15
 800e2c4:	f856 7027 	ldr.w	r7, [r6, r7, lsl #2]
 800e2c8:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 800e2cc:	f821 7c04 	strh.w	r7, [r1, #-4]
 800e2d0:	f821 5c02 	strh.w	r5, [r1, #-2]
 800e2d4:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 800e2d8:	4562      	cmp	r2, ip
 800e2da:	f101 0104 	add.w	r1, r1, #4
 800e2de:	d1ed      	bne.n	800e2bc <_DrawBitmap+0x5c4>
 800e2e0:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 800e2e4:	2b00      	cmp	r3, #0
 800e2e6:	f000 8088 	beq.w	800e3fa <_DrawBitmap+0x702>
 800e2ea:	092d      	lsrs	r5, r5, #4
 800e2ec:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e2ee:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 800e2f2:	8023      	strh	r3, [r4, #0]
 800e2f4:	e081      	b.n	800e3fa <_DrawBitmap+0x702>
 800e2f6:	9f20      	ldr	r7, [sp, #128]	; 0x80
 800e2f8:	b1c7      	cbz	r7, 800e32c <_DrawBitmap+0x634>
 800e2fa:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 800e2fe:	d00b      	beq.n	800e318 <_DrawBitmap+0x620>
 800e300:	092d      	lsrs	r5, r5, #4
 800e302:	9f21      	ldr	r7, [sp, #132]	; 0x84
 800e304:	f857 3025 	ldr.w	r3, [r7, r5, lsl #2]
 800e308:	8023      	strh	r3, [r4, #0]
 800e30a:	b12e      	cbz	r6, 800e318 <_DrawBitmap+0x620>
 800e30c:	68b3      	ldr	r3, [r6, #8]
 800e30e:	9904      	ldr	r1, [sp, #16]
 800e310:	681b      	ldr	r3, [r3, #0]
 800e312:	9a05      	ldr	r2, [sp, #20]
 800e314:	4630      	mov	r0, r6
 800e316:	4798      	blx	r3
 800e318:	9804      	ldr	r0, [sp, #16]
 800e31a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800e31c:	f89a 5001 	ldrb.w	r5, [sl, #1]
 800e320:	1c47      	adds	r7, r0, #1
 800e322:	f10b 39ff 	add.w	r9, fp, #4294967295
 800e326:	f10a 0801 	add.w	r8, sl, #1
 800e32a:	e00f      	b.n	800e34c <_DrawBitmap+0x654>
 800e32c:	46d9      	mov	r9, fp
 800e32e:	46d0      	mov	r8, sl
 800e330:	9f04      	ldr	r7, [sp, #16]
 800e332:	e00b      	b.n	800e34c <_DrawBitmap+0x654>
 800e334:	f015 0ff0 	tst.w	r5, #240	; 0xf0
 800e338:	d10c      	bne.n	800e354 <_DrawBitmap+0x65c>
 800e33a:	f015 050f 	ands.w	r5, r5, #15
 800e33e:	d117      	bne.n	800e370 <_DrawBitmap+0x678>
 800e340:	f818 5f01 	ldrb.w	r5, [r8, #1]!
 800e344:	3404      	adds	r4, #4
 800e346:	3702      	adds	r7, #2
 800e348:	f1a9 0902 	sub.w	r9, r9, #2
 800e34c:	f1b9 0f01 	cmp.w	r9, #1
 800e350:	dcf0      	bgt.n	800e334 <_DrawBitmap+0x63c>
 800e352:	e01a      	b.n	800e38a <_DrawBitmap+0x692>
 800e354:	092b      	lsrs	r3, r5, #4
 800e356:	9921      	ldr	r1, [sp, #132]	; 0x84
 800e358:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800e35c:	8023      	strh	r3, [r4, #0]
 800e35e:	2e00      	cmp	r6, #0
 800e360:	d0eb      	beq.n	800e33a <_DrawBitmap+0x642>
 800e362:	68b3      	ldr	r3, [r6, #8]
 800e364:	9a05      	ldr	r2, [sp, #20]
 800e366:	681b      	ldr	r3, [r3, #0]
 800e368:	4630      	mov	r0, r6
 800e36a:	4639      	mov	r1, r7
 800e36c:	4798      	blx	r3
 800e36e:	e7e4      	b.n	800e33a <_DrawBitmap+0x642>
 800e370:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e372:	f852 3025 	ldr.w	r3, [r2, r5, lsl #2]
 800e376:	8063      	strh	r3, [r4, #2]
 800e378:	2e00      	cmp	r6, #0
 800e37a:	d0e1      	beq.n	800e340 <_DrawBitmap+0x648>
 800e37c:	68b3      	ldr	r3, [r6, #8]
 800e37e:	9a05      	ldr	r2, [sp, #20]
 800e380:	681b      	ldr	r3, [r3, #0]
 800e382:	4630      	mov	r0, r6
 800e384:	1c79      	adds	r1, r7, #1
 800e386:	4798      	blx	r3
 800e388:	e7da      	b.n	800e340 <_DrawBitmap+0x648>
 800e38a:	f1b9 0f00 	cmp.w	r9, #0
 800e38e:	d034      	beq.n	800e3fa <_DrawBitmap+0x702>
 800e390:	092d      	lsrs	r5, r5, #4
 800e392:	d032      	beq.n	800e3fa <_DrawBitmap+0x702>
 800e394:	9821      	ldr	r0, [sp, #132]	; 0x84
 800e396:	f850 3025 	ldr.w	r3, [r0, r5, lsl #2]
 800e39a:	8023      	strh	r3, [r4, #0]
 800e39c:	b36e      	cbz	r6, 800e3fa <_DrawBitmap+0x702>
 800e39e:	68b3      	ldr	r3, [r6, #8]
 800e3a0:	9a05      	ldr	r2, [sp, #20]
 800e3a2:	681b      	ldr	r3, [r3, #0]
 800e3a4:	4630      	mov	r0, r6
 800e3a6:	4639      	mov	r1, r7
 800e3a8:	4798      	blx	r3
 800e3aa:	e026      	b.n	800e3fa <_DrawBitmap+0x702>
 800e3ac:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800e3ae:	f1c6 0302 	rsb	r3, r6, #2
 800e3b2:	b2db      	uxtb	r3, r3
 800e3b4:	4650      	mov	r0, sl
 800e3b6:	465a      	mov	r2, fp
 800e3b8:	4293      	cmp	r3, r2
 800e3ba:	bfc8      	it	gt
 800e3bc:	b2d3      	uxtbgt	r3, r2
 800e3be:	1ad2      	subs	r2, r2, r3
 800e3c0:	1ca1      	adds	r1, r4, #2
 800e3c2:	461e      	mov	r6, r3
 800e3c4:	f015 0fc0 	tst.w	r5, #192	; 0xc0
 800e3c8:	d005      	beq.n	800e3d6 <_DrawBitmap+0x6de>
 800e3ca:	f831 7c02 	ldrh.w	r7, [r1, #-2]
 800e3ce:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 800e3d2:	f821 7c02 	strh.w	r7, [r1, #-2]
 800e3d6:	3e01      	subs	r6, #1
 800e3d8:	012d      	lsls	r5, r5, #4
 800e3da:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
 800e3de:	b2ed      	uxtb	r5, r5
 800e3e0:	f101 0102 	add.w	r1, r1, #2
 800e3e4:	d1ee      	bne.n	800e3c4 <_DrawBitmap+0x6cc>
 800e3e6:	3b01      	subs	r3, #1
 800e3e8:	b2db      	uxtb	r3, r3
 800e3ea:	3301      	adds	r3, #1
 800e3ec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e3f0:	b11a      	cbz	r2, 800e3fa <_DrawBitmap+0x702>
 800e3f2:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 800e3f6:	2302      	movs	r3, #2
 800e3f8:	e7de      	b.n	800e3b8 <_DrawBitmap+0x6c0>
 800e3fa:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800e3fc:	9b05      	ldr	r3, [sp, #20]
 800e3fe:	9e08      	ldr	r6, [sp, #32]
 800e400:	44ba      	add	sl, r7
 800e402:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800e404:	3301      	adds	r3, #1
 800e406:	4437      	add	r7, r6
 800e408:	9305      	str	r3, [sp, #20]
 800e40a:	9709      	str	r7, [sp, #36]	; 0x24
 800e40c:	e5a3      	b.n	800df56 <_DrawBitmap+0x25e>
 800e40e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e410:	b113      	cbz	r3, 800e418 <_DrawBitmap+0x720>
 800e412:	a811      	add	r0, sp, #68	; 0x44
 800e414:	f7fd f836 	bl	800b484 <GUI_ALLOC_UnlockH>
 800e418:	b013      	add	sp, #76	; 0x4c
 800e41a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e41e:	bf00      	nop
 800e420:	200000b8 	.word	0x200000b8

0800e424 <_GetDevProp>:
 800e424:	2908      	cmp	r1, #8
 800e426:	b508      	push	{r3, lr}
 800e428:	d008      	beq.n	800e43c <_GetDevProp+0x18>
 800e42a:	6800      	ldr	r0, [r0, #0]
 800e42c:	b118      	cbz	r0, 800e436 <_GetDevProp+0x12>
 800e42e:	68c3      	ldr	r3, [r0, #12]
 800e430:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e432:	4798      	blx	r3
 800e434:	bd08      	pop	{r3, pc}
 800e436:	f04f 30ff 	mov.w	r0, #4294967295
 800e43a:	bd08      	pop	{r3, pc}
 800e43c:	2010      	movs	r0, #16
 800e43e:	bd08      	pop	{r3, pc}

0800e440 <LCD_SelectLCD>:
 800e440:	b510      	push	{r4, lr}
 800e442:	4b0d      	ldr	r3, [pc, #52]	; (800e478 <LCD_SelectLCD+0x38>)
 800e444:	681a      	ldr	r2, [r3, #0]
 800e446:	7c51      	ldrb	r1, [r2, #17]
 800e448:	4a0c      	ldr	r2, [pc, #48]	; (800e47c <LCD_SelectLCD+0x3c>)
 800e44a:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 800e44e:	461c      	mov	r4, r3
 800e450:	b140      	cbz	r0, 800e464 <LCD_SelectLCD+0x24>
 800e452:	68c3      	ldr	r3, [r0, #12]
 800e454:	b113      	cbz	r3, 800e45c <LCD_SelectLCD+0x1c>
 800e456:	681b      	ldr	r3, [r3, #0]
 800e458:	2b04      	cmp	r3, #4
 800e45a:	d001      	beq.n	800e460 <LCD_SelectLCD+0x20>
 800e45c:	6800      	ldr	r0, [r0, #0]
 800e45e:	e7f7      	b.n	800e450 <LCD_SelectLCD+0x10>
 800e460:	f7fc f87c 	bl	800a55c <GUI_DEVICE_Unlink>
 800e464:	6823      	ldr	r3, [r4, #0]
 800e466:	2200      	movs	r2, #0
 800e468:	661a      	str	r2, [r3, #96]	; 0x60
 800e46a:	f103 0208 	add.w	r2, r3, #8
 800e46e:	615a      	str	r2, [r3, #20]
 800e470:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e474:	f7fa bbb8 	b.w	8008be8 <LCD_SetClipRectMax>
 800e478:	200000b8 	.word	0x200000b8
 800e47c:	20002d28 	.word	0x20002d28

0800e480 <LCD_ReadRectEx>:
 800e480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e484:	b087      	sub	sp, #28
 800e486:	4617      	mov	r7, r2
 800e488:	9304      	str	r3, [sp, #16]
 800e48a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e48c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800e48e:	68da      	ldr	r2, [r3, #12]
 800e490:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800e492:	f8d2 8014 	ldr.w	r8, [r2, #20]
 800e496:	4606      	mov	r6, r0
 800e498:	460d      	mov	r5, r1
 800e49a:	b973      	cbnz	r3, 800e4ba <LCD_ReadRectEx+0x3a>
 800e49c:	4b71      	ldr	r3, [pc, #452]	; (800e664 <LCD_ReadRectEx+0x1e4>)
 800e49e:	681b      	ldr	r3, [r3, #0]
 800e4a0:	7c58      	ldrb	r0, [r3, #17]
 800e4a2:	f7fa f853 	bl	800854c <GUI_GetBitsPerPixelEx>
 800e4a6:	2808      	cmp	r0, #8
 800e4a8:	4682      	mov	sl, r0
 800e4aa:	dd15      	ble.n	800e4d8 <LCD_ReadRectEx+0x58>
 800e4ac:	2810      	cmp	r0, #16
 800e4ae:	bfcc      	ite	gt
 800e4b0:	f04f 0904 	movgt.w	r9, #4
 800e4b4:	f04f 0902 	movle.w	r9, #2
 800e4b8:	e010      	b.n	800e4dc <LCD_ReadRectEx+0x5c>
 800e4ba:	a811      	add	r0, sp, #68	; 0x44
 800e4bc:	2101      	movs	r1, #1
 800e4be:	4798      	blx	r3
 800e4c0:	4684      	mov	ip, r0
 800e4c2:	2800      	cmp	r0, #0
 800e4c4:	d0ea      	beq.n	800e49c <LCD_ReadRectEx+0x1c>
 800e4c6:	9b04      	ldr	r3, [sp, #16]
 800e4c8:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e4ca:	e88d 0018 	stmia.w	sp, {r3, r4}
 800e4ce:	4631      	mov	r1, r6
 800e4d0:	462a      	mov	r2, r5
 800e4d2:	463b      	mov	r3, r7
 800e4d4:	47e0      	blx	ip
 800e4d6:	e0c1      	b.n	800e65c <LCD_ReadRectEx+0x1dc>
 800e4d8:	f04f 0901 	mov.w	r9, #1
 800e4dc:	f04f 0b00 	mov.w	fp, #0
 800e4e0:	9b04      	ldr	r3, [sp, #16]
 800e4e2:	429d      	cmp	r5, r3
 800e4e4:	f300 80ba 	bgt.w	800e65c <LCD_ReadRectEx+0x1dc>
 800e4e8:	f1b9 0f02 	cmp.w	r9, #2
 800e4ec:	d009      	beq.n	800e502 <LCD_ReadRectEx+0x82>
 800e4ee:	f1b9 0f04 	cmp.w	r9, #4
 800e4f2:	d004      	beq.n	800e4fe <LCD_ReadRectEx+0x7e>
 800e4f4:	f1b9 0f01 	cmp.w	r9, #1
 800e4f8:	f040 80ae 	bne.w	800e658 <LCD_ReadRectEx+0x1d8>
 800e4fc:	e003      	b.n	800e506 <LCD_ReadRectEx+0x86>
 800e4fe:	46b4      	mov	ip, r6
 800e500:	e09b      	b.n	800e63a <LCD_ReadRectEx+0x1ba>
 800e502:	46b4      	mov	ip, r6
 800e504:	e08a      	b.n	800e61c <LCD_ReadRectEx+0x19c>
 800e506:	f10a 32ff 	add.w	r2, sl, #4294967295
 800e50a:	2a07      	cmp	r2, #7
 800e50c:	f200 80a4 	bhi.w	800e658 <LCD_ReadRectEx+0x1d8>
 800e510:	e8df f002 	tbb	[pc, r2]
 800e514:	0606080a 	.word	0x0606080a
 800e518:	04040404 	.word	0x04040404
 800e51c:	46b4      	mov	ip, r6
 800e51e:	e066      	b.n	800e5ee <LCD_ReadRectEx+0x16e>
 800e520:	46b4      	mov	ip, r6
 800e522:	e047      	b.n	800e5b4 <LCD_ReadRectEx+0x134>
 800e524:	46b4      	mov	ip, r6
 800e526:	e022      	b.n	800e56e <LCD_ReadRectEx+0xee>
 800e528:	46b4      	mov	ip, r6
 800e52a:	45bc      	cmp	ip, r7
 800e52c:	f300 8094 	bgt.w	800e658 <LCD_ReadRectEx+0x1d8>
 800e530:	4661      	mov	r1, ip
 800e532:	462a      	mov	r2, r5
 800e534:	f8cd c00c 	str.w	ip, [sp, #12]
 800e538:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e53a:	47c0      	blx	r8
 800e53c:	f1cb 0207 	rsb	r2, fp, #7
 800e540:	fa00 f202 	lsl.w	r2, r0, r2
 800e544:	f64f 717f 	movw	r1, #65407	; 0xff7f
 800e548:	7820      	ldrb	r0, [r4, #0]
 800e54a:	fa41 f10b 	asr.w	r1, r1, fp
 800e54e:	4001      	ands	r1, r0
 800e550:	430a      	orrs	r2, r1
 800e552:	7022      	strb	r2, [r4, #0]
 800e554:	f10b 0301 	add.w	r3, fp, #1
 800e558:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e55c:	f023 0207 	bic.w	r2, r3, #7
 800e560:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 800e564:	fa43 fb02 	asr.w	fp, r3, r2
 800e568:	f10c 0c01 	add.w	ip, ip, #1
 800e56c:	e7dd      	b.n	800e52a <LCD_ReadRectEx+0xaa>
 800e56e:	45bc      	cmp	ip, r7
 800e570:	dc72      	bgt.n	800e658 <LCD_ReadRectEx+0x1d8>
 800e572:	4661      	mov	r1, ip
 800e574:	462a      	mov	r2, r5
 800e576:	f8cd c00c 	str.w	ip, [sp, #12]
 800e57a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e57c:	47c0      	blx	r8
 800e57e:	ea4f 024b 	mov.w	r2, fp, lsl #1
 800e582:	f1c2 0106 	rsb	r1, r2, #6
 800e586:	fa00 f101 	lsl.w	r1, r0, r1
 800e58a:	f64f 703f 	movw	r0, #65343	; 0xff3f
 800e58e:	fa40 f202 	asr.w	r2, r0, r2
 800e592:	7820      	ldrb	r0, [r4, #0]
 800e594:	4002      	ands	r2, r0
 800e596:	4311      	orrs	r1, r2
 800e598:	7021      	strb	r1, [r4, #0]
 800e59a:	f10b 0301 	add.w	r3, fp, #1
 800e59e:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e5a2:	f023 0203 	bic.w	r2, r3, #3
 800e5a6:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 800e5aa:	fa43 fb02 	asr.w	fp, r3, r2
 800e5ae:	f10c 0c01 	add.w	ip, ip, #1
 800e5b2:	e7dc      	b.n	800e56e <LCD_ReadRectEx+0xee>
 800e5b4:	45bc      	cmp	ip, r7
 800e5b6:	dc4f      	bgt.n	800e658 <LCD_ReadRectEx+0x1d8>
 800e5b8:	4661      	mov	r1, ip
 800e5ba:	462a      	mov	r2, r5
 800e5bc:	f8cd c00c 	str.w	ip, [sp, #12]
 800e5c0:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e5c2:	47c0      	blx	r8
 800e5c4:	ea4f 028b 	mov.w	r2, fp, lsl #2
 800e5c8:	f1c2 0104 	rsb	r1, r2, #4
 800e5cc:	fa00 f101 	lsl.w	r1, r0, r1
 800e5d0:	200f      	movs	r0, #15
 800e5d2:	fa00 f202 	lsl.w	r2, r0, r2
 800e5d6:	7820      	ldrb	r0, [r4, #0]
 800e5d8:	4002      	ands	r2, r0
 800e5da:	4311      	orrs	r1, r2
 800e5dc:	7021      	strb	r1, [r4, #0]
 800e5de:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e5e2:	445c      	add	r4, fp
 800e5e4:	f10c 0c01 	add.w	ip, ip, #1
 800e5e8:	f08b 0b01 	eor.w	fp, fp, #1
 800e5ec:	e7e2      	b.n	800e5b4 <LCD_ReadRectEx+0x134>
 800e5ee:	4273      	negs	r3, r6
 800e5f0:	1ba2      	subs	r2, r4, r6
 800e5f2:	45bc      	cmp	ip, r7
 800e5f4:	9305      	str	r3, [sp, #20]
 800e5f6:	4462      	add	r2, ip
 800e5f8:	dc0e      	bgt.n	800e618 <LCD_ReadRectEx+0x198>
 800e5fa:	4661      	mov	r1, ip
 800e5fc:	462a      	mov	r2, r5
 800e5fe:	f8cd c00c 	str.w	ip, [sp, #12]
 800e602:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e604:	47c0      	blx	r8
 800e606:	9a05      	ldr	r2, [sp, #20]
 800e608:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e60c:	4422      	add	r2, r4
 800e60e:	f802 000c 	strb.w	r0, [r2, ip]
 800e612:	f10c 0c01 	add.w	ip, ip, #1
 800e616:	e7ea      	b.n	800e5ee <LCD_ReadRectEx+0x16e>
 800e618:	4614      	mov	r4, r2
 800e61a:	e01d      	b.n	800e658 <LCD_ReadRectEx+0x1d8>
 800e61c:	45bc      	cmp	ip, r7
 800e61e:	dc1b      	bgt.n	800e658 <LCD_ReadRectEx+0x1d8>
 800e620:	4661      	mov	r1, ip
 800e622:	f8cd c00c 	str.w	ip, [sp, #12]
 800e626:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e628:	462a      	mov	r2, r5
 800e62a:	47c0      	blx	r8
 800e62c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e630:	f824 0b02 	strh.w	r0, [r4], #2
 800e634:	f10c 0c01 	add.w	ip, ip, #1
 800e638:	e7f0      	b.n	800e61c <LCD_ReadRectEx+0x19c>
 800e63a:	45bc      	cmp	ip, r7
 800e63c:	dc0c      	bgt.n	800e658 <LCD_ReadRectEx+0x1d8>
 800e63e:	4661      	mov	r1, ip
 800e640:	f8cd c00c 	str.w	ip, [sp, #12]
 800e644:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e646:	462a      	mov	r2, r5
 800e648:	47c0      	blx	r8
 800e64a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800e64e:	f844 0b04 	str.w	r0, [r4], #4
 800e652:	f10c 0c01 	add.w	ip, ip, #1
 800e656:	e7f0      	b.n	800e63a <LCD_ReadRectEx+0x1ba>
 800e658:	3501      	adds	r5, #1
 800e65a:	e741      	b.n	800e4e0 <LCD_ReadRectEx+0x60>
 800e65c:	b007      	add	sp, #28
 800e65e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e662:	bf00      	nop
 800e664:	200000b8 	.word	0x200000b8

0800e668 <GUI_ReadRectEx>:
 800e668:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e66a:	4d16      	ldr	r5, [pc, #88]	; (800e6c4 <GUI_ReadRectEx+0x5c>)
 800e66c:	9e05      	ldr	r6, [sp, #20]
 800e66e:	682d      	ldr	r5, [r5, #0]
 800e670:	9c06      	ldr	r4, [sp, #24]
 800e672:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 800e676:	42b8      	cmp	r0, r7
 800e678:	bfb8      	it	lt
 800e67a:	4638      	movlt	r0, r7
 800e67c:	f9b5 700c 	ldrsh.w	r7, [r5, #12]
 800e680:	42ba      	cmp	r2, r7
 800e682:	bfa8      	it	ge
 800e684:	463a      	movge	r2, r7
 800e686:	4282      	cmp	r2, r0
 800e688:	db1b      	blt.n	800e6c2 <GUI_ReadRectEx+0x5a>
 800e68a:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800e68e:	f9b5 500e 	ldrsh.w	r5, [r5, #14]
 800e692:	42b9      	cmp	r1, r7
 800e694:	bfb8      	it	lt
 800e696:	4639      	movlt	r1, r7
 800e698:	42ab      	cmp	r3, r5
 800e69a:	bfa8      	it	ge
 800e69c:	462b      	movge	r3, r5
 800e69e:	428b      	cmp	r3, r1
 800e6a0:	db0f      	blt.n	800e6c2 <GUI_ReadRectEx+0x5a>
 800e6a2:	68e5      	ldr	r5, [r4, #12]
 800e6a4:	682d      	ldr	r5, [r5, #0]
 800e6a6:	f035 0704 	bics.w	r7, r5, #4
 800e6aa:	d105      	bne.n	800e6b8 <GUI_ReadRectEx+0x50>
 800e6ac:	9605      	str	r6, [sp, #20]
 800e6ae:	9406      	str	r4, [sp, #24]
 800e6b0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e6b4:	f7ff bee4 	b.w	800e480 <LCD_ReadRectEx>
 800e6b8:	6825      	ldr	r5, [r4, #0]
 800e6ba:	2d00      	cmp	r5, #0
 800e6bc:	d0f6      	beq.n	800e6ac <GUI_ReadRectEx+0x44>
 800e6be:	462c      	mov	r4, r5
 800e6c0:	e7ef      	b.n	800e6a2 <GUI_ReadRectEx+0x3a>
 800e6c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e6c4:	200000b8 	.word	0x200000b8

0800e6c8 <LCD_GetBkColorIndex>:
 800e6c8:	4b02      	ldr	r3, [pc, #8]	; (800e6d4 <LCD_GetBkColorIndex+0xc>)
 800e6ca:	681b      	ldr	r3, [r3, #0]
 800e6cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e6ce:	6818      	ldr	r0, [r3, #0]
 800e6d0:	4770      	bx	lr
 800e6d2:	bf00      	nop
 800e6d4:	200000b8 	.word	0x200000b8

0800e6d8 <LCD_GetColorIndex>:
 800e6d8:	4b02      	ldr	r3, [pc, #8]	; (800e6e4 <LCD_GetColorIndex+0xc>)
 800e6da:	681b      	ldr	r3, [r3, #0]
 800e6dc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e6de:	6818      	ldr	r0, [r3, #0]
 800e6e0:	4770      	bx	lr
 800e6e2:	bf00      	nop
 800e6e4:	200000b8 	.word	0x200000b8

0800e6e8 <_OnExit>:
 800e6e8:	b510      	push	{r4, lr}
 800e6ea:	4c04      	ldr	r4, [pc, #16]	; (800e6fc <_OnExit+0x14>)
 800e6ec:	6820      	ldr	r0, [r4, #0]
 800e6ee:	f7fc fea7 	bl	800b440 <GUI_ALLOC_FreeFixedBlock>
 800e6f2:	4a03      	ldr	r2, [pc, #12]	; (800e700 <_OnExit+0x18>)
 800e6f4:	2300      	movs	r3, #0
 800e6f6:	6023      	str	r3, [r4, #0]
 800e6f8:	6013      	str	r3, [r2, #0]
 800e6fa:	bd10      	pop	{r4, pc}
 800e6fc:	20002e28 	.word	0x20002e28
 800e700:	20002b9c 	.word	0x20002b9c

0800e704 <LCD_InitColors>:
 800e704:	b538      	push	{r3, r4, r5, lr}
 800e706:	4d09      	ldr	r5, [pc, #36]	; (800e72c <LCD_InitColors+0x28>)
 800e708:	682c      	ldr	r4, [r5, #0]
 800e70a:	b95c      	cbnz	r4, 800e724 <LCD_InitColors+0x20>
 800e70c:	4b08      	ldr	r3, [pc, #32]	; (800e730 <LCD_InitColors+0x2c>)
 800e70e:	6818      	ldr	r0, [r3, #0]
 800e710:	0080      	lsls	r0, r0, #2
 800e712:	f7fc ff79 	bl	800b608 <GUI_ALLOC_GetFixedBlock>
 800e716:	6028      	str	r0, [r5, #0]
 800e718:	b130      	cbz	r0, 800e728 <LCD_InitColors+0x24>
 800e71a:	4806      	ldr	r0, [pc, #24]	; (800e734 <LCD_InitColors+0x30>)
 800e71c:	4b06      	ldr	r3, [pc, #24]	; (800e738 <LCD_InitColors+0x34>)
 800e71e:	6003      	str	r3, [r0, #0]
 800e720:	f7fc f83e 	bl	800a7a0 <GUI__RegisterExit>
 800e724:	2000      	movs	r0, #0
 800e726:	bd38      	pop	{r3, r4, r5, pc}
 800e728:	2001      	movs	r0, #1
 800e72a:	bd38      	pop	{r3, r4, r5, pc}
 800e72c:	20002e28 	.word	0x20002e28
 800e730:	20000184 	.word	0x20000184
 800e734:	20002ba0 	.word	0x20002ba0
 800e738:	0800e6e9 	.word	0x0800e6e9

0800e73c <LCD_InitLUT>:
 800e73c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e740:	f001 fa5b 	bl	800fbfa <LCD_GetNumLayers>
 800e744:	2400      	movs	r4, #0
 800e746:	4680      	mov	r8, r0
 800e748:	4544      	cmp	r4, r8
 800e74a:	da2c      	bge.n	800e7a6 <LCD_InitLUT+0x6a>
 800e74c:	4620      	mov	r0, r4
 800e74e:	f7fb fecd 	bl	800a4ec <GUI_DEVICE__GetpDriver>
 800e752:	b330      	cbz	r0, 800e7a2 <LCD_InitLUT+0x66>
 800e754:	4e15      	ldr	r6, [pc, #84]	; (800e7ac <LCD_InitLUT+0x70>)
 800e756:	6833      	ldr	r3, [r6, #0]
 800e758:	4620      	mov	r0, r4
 800e75a:	f893 9011 	ldrb.w	r9, [r3, #17]
 800e75e:	745c      	strb	r4, [r3, #17]
 800e760:	f7f9 fed6 	bl	8008510 <LCD_GetBitsPerPixelEx>
 800e764:	2808      	cmp	r0, #8
 800e766:	dd03      	ble.n	800e770 <LCD_InitLUT+0x34>
 800e768:	6833      	ldr	r3, [r6, #0]
 800e76a:	f883 9011 	strb.w	r9, [r3, #17]
 800e76e:	e018      	b.n	800e7a2 <LCD_InitLUT+0x66>
 800e770:	4b0f      	ldr	r3, [pc, #60]	; (800e7b0 <LCD_InitLUT+0x74>)
 800e772:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 800e776:	691a      	ldr	r2, [r3, #16]
 800e778:	4b0e      	ldr	r3, [pc, #56]	; (800e7b4 <LCD_InitLUT+0x78>)
 800e77a:	429a      	cmp	r2, r3
 800e77c:	d0f4      	beq.n	800e768 <LCD_InitLUT+0x2c>
 800e77e:	4620      	mov	r0, r4
 800e780:	f7f9 fec9 	bl	8008516 <LCD_GetNumColorsEx>
 800e784:	2500      	movs	r5, #0
 800e786:	4682      	mov	sl, r0
 800e788:	4555      	cmp	r5, sl
 800e78a:	daed      	bge.n	800e768 <LCD_InitLUT+0x2c>
 800e78c:	b2ef      	uxtb	r7, r5
 800e78e:	4638      	mov	r0, r7
 800e790:	f7fa fa9e 	bl	8008cd0 <LCD_Index2Color>
 800e794:	4639      	mov	r1, r7
 800e796:	4602      	mov	r2, r0
 800e798:	4620      	mov	r0, r4
 800e79a:	f7f9 fe75 	bl	8008488 <LCD_SetLUTEntryEx>
 800e79e:	3501      	adds	r5, #1
 800e7a0:	e7f2      	b.n	800e788 <LCD_InitLUT+0x4c>
 800e7a2:	3401      	adds	r4, #1
 800e7a4:	e7d0      	b.n	800e748 <LCD_InitLUT+0xc>
 800e7a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e7aa:	bf00      	nop
 800e7ac:	200000b8 	.word	0x200000b8
 800e7b0:	20002d28 	.word	0x20002d28
 800e7b4:	08012b90 	.word	0x08012b90

0800e7b8 <LCD_AA_SetAndMask>:
 800e7b8:	4b02      	ldr	r3, [pc, #8]	; (800e7c4 <LCD_AA_SetAndMask+0xc>)
 800e7ba:	681a      	ldr	r2, [r3, #0]
 800e7bc:	6018      	str	r0, [r3, #0]
 800e7be:	4610      	mov	r0, r2
 800e7c0:	4770      	bx	lr
 800e7c2:	bf00      	nop
 800e7c4:	20000188 	.word	0x20000188

0800e7c8 <_GetWordWrap>:
 800e7c8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800e7cc:	2500      	movs	r5, #0
 800e7ce:	9001      	str	r0, [sp, #4]
 800e7d0:	4689      	mov	r9, r1
 800e7d2:	4690      	mov	r8, r2
 800e7d4:	46aa      	mov	sl, r5
 800e7d6:	462e      	mov	r6, r5
 800e7d8:	462c      	mov	r4, r5
 800e7da:	462f      	mov	r7, r5
 800e7dc:	a801      	add	r0, sp, #4
 800e7de:	f7fa fe3d 	bl	800945c <GUI_UC__GetCharCodeInc>
 800e7e2:	2d00      	cmp	r5, #0
 800e7e4:	bf08      	it	eq
 800e7e6:	4605      	moveq	r5, r0
 800e7e8:	b108      	cbz	r0, 800e7ee <_GetWordWrap+0x26>
 800e7ea:	280a      	cmp	r0, #10
 800e7ec:	d10b      	bne.n	800e806 <_GetWordWrap+0x3e>
 800e7ee:	4626      	mov	r6, r4
 800e7f0:	2e00      	cmp	r6, #0
 800e7f2:	bf18      	it	ne
 800e7f4:	4634      	movne	r4, r6
 800e7f6:	f1b8 0f00 	cmp.w	r8, #0
 800e7fa:	d025      	beq.n	800e848 <_GetWordWrap+0x80>
 800e7fc:	ebca 0707 	rsb	r7, sl, r7
 800e800:	f8c8 7000 	str.w	r7, [r8]
 800e804:	e020      	b.n	800e848 <_GetWordWrap+0x80>
 800e806:	2820      	cmp	r0, #32
 800e808:	d01c      	beq.n	800e844 <_GetWordWrap+0x7c>
 800e80a:	2d20      	cmp	r5, #32
 800e80c:	d00e      	beq.n	800e82c <_GetWordWrap+0x64>
 800e80e:	4b10      	ldr	r3, [pc, #64]	; (800e850 <_GetWordWrap+0x88>)
 800e810:	6819      	ldr	r1, [r3, #0]
 800e812:	4b10      	ldr	r3, [pc, #64]	; (800e854 <_GetWordWrap+0x8c>)
 800e814:	681a      	ldr	r2, [r3, #0]
 800e816:	2300      	movs	r3, #0
 800e818:	4293      	cmp	r3, r2
 800e81a:	da09      	bge.n	800e830 <_GetWordWrap+0x68>
 800e81c:	f831 e013 	ldrh.w	lr, [r1, r3, lsl #1]
 800e820:	4586      	cmp	lr, r0
 800e822:	d101      	bne.n	800e828 <_GetWordWrap+0x60>
 800e824:	1c66      	adds	r6, r4, #1
 800e826:	e003      	b.n	800e830 <_GetWordWrap+0x68>
 800e828:	3301      	adds	r3, #1
 800e82a:	e7f5      	b.n	800e818 <_GetWordWrap+0x50>
 800e82c:	4626      	mov	r6, r4
 800e82e:	2500      	movs	r5, #0
 800e830:	f7fc fd22 	bl	800b278 <GUI_GetCharDistX>
 800e834:	4407      	add	r7, r0
 800e836:	454f      	cmp	r7, r9
 800e838:	4682      	mov	sl, r0
 800e83a:	dd01      	ble.n	800e840 <_GetWordWrap+0x78>
 800e83c:	2c00      	cmp	r4, #0
 800e83e:	d1d7      	bne.n	800e7f0 <_GetWordWrap+0x28>
 800e840:	3401      	adds	r4, #1
 800e842:	e7cb      	b.n	800e7dc <_GetWordWrap+0x14>
 800e844:	4626      	mov	r6, r4
 800e846:	e7f3      	b.n	800e830 <_GetWordWrap+0x68>
 800e848:	4620      	mov	r0, r4
 800e84a:	b002      	add	sp, #8
 800e84c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e850:	20002ba8 	.word	0x20002ba8
 800e854:	20002bac 	.word	0x20002bac

0800e858 <_GetCharWrap>:
 800e858:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e85a:	2400      	movs	r4, #0
 800e85c:	9001      	str	r0, [sp, #4]
 800e85e:	460e      	mov	r6, r1
 800e860:	4625      	mov	r5, r4
 800e862:	a801      	add	r0, sp, #4
 800e864:	f7fa fdfa 	bl	800945c <GUI_UC__GetCharCodeInc>
 800e868:	4607      	mov	r7, r0
 800e86a:	b148      	cbz	r0, 800e880 <_GetCharWrap+0x28>
 800e86c:	f7fc fd04 	bl	800b278 <GUI_GetCharDistX>
 800e870:	4405      	add	r5, r0
 800e872:	b10c      	cbz	r4, 800e878 <_GetCharWrap+0x20>
 800e874:	42b5      	cmp	r5, r6
 800e876:	dc03      	bgt.n	800e880 <_GetCharWrap+0x28>
 800e878:	2f0a      	cmp	r7, #10
 800e87a:	d001      	beq.n	800e880 <_GetCharWrap+0x28>
 800e87c:	3401      	adds	r4, #1
 800e87e:	e7f0      	b.n	800e862 <_GetCharWrap+0xa>
 800e880:	4620      	mov	r0, r4
 800e882:	b003      	add	sp, #12
 800e884:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800e888 <_WrapGetNumCharsDisp>:
 800e888:	2a01      	cmp	r2, #1
 800e88a:	b510      	push	{r4, lr}
 800e88c:	d005      	beq.n	800e89a <_WrapGetNumCharsDisp+0x12>
 800e88e:	2a02      	cmp	r2, #2
 800e890:	d108      	bne.n	800e8a4 <_WrapGetNumCharsDisp+0x1c>
 800e892:	4b07      	ldr	r3, [pc, #28]	; (800e8b0 <_WrapGetNumCharsDisp+0x28>)
 800e894:	681b      	ldr	r3, [r3, #0]
 800e896:	4798      	blx	r3
 800e898:	bd10      	pop	{r4, pc}
 800e89a:	4a06      	ldr	r2, [pc, #24]	; (800e8b4 <_WrapGetNumCharsDisp+0x2c>)
 800e89c:	6814      	ldr	r4, [r2, #0]
 800e89e:	461a      	mov	r2, r3
 800e8a0:	47a0      	blx	r4
 800e8a2:	bd10      	pop	{r4, pc}
 800e8a4:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800e8a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e8ac:	f7fc bc12 	b.w	800b0d4 <GUI__GetLineNumChars>
 800e8b0:	2000018c 	.word	0x2000018c
 800e8b4:	20000190 	.word	0x20000190

0800e8b8 <GUI__WrapGetNumCharsDisp>:
 800e8b8:	2300      	movs	r3, #0
 800e8ba:	f7ff bfe5 	b.w	800e888 <_WrapGetNumCharsDisp>

0800e8be <GUI__WrapGetNumCharsToNextLine>:
 800e8be:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e8c0:	b085      	sub	sp, #20
 800e8c2:	ab03      	add	r3, sp, #12
 800e8c4:	4617      	mov	r7, r2
 800e8c6:	460e      	mov	r6, r1
 800e8c8:	9001      	str	r0, [sp, #4]
 800e8ca:	f7ff ffdd 	bl	800e888 <_WrapGetNumCharsDisp>
 800e8ce:	9d01      	ldr	r5, [sp, #4]
 800e8d0:	4604      	mov	r4, r0
 800e8d2:	4621      	mov	r1, r4
 800e8d4:	4628      	mov	r0, r5
 800e8d6:	f7fa fdd5 	bl	8009484 <GUI_UC__NumChars2NumBytes>
 800e8da:	4428      	add	r0, r5
 800e8dc:	ad04      	add	r5, sp, #16
 800e8de:	f845 0d0c 	str.w	r0, [r5, #-12]!
 800e8e2:	4628      	mov	r0, r5
 800e8e4:	f7fa fdba 	bl	800945c <GUI_UC__GetCharCodeInc>
 800e8e8:	280a      	cmp	r0, #10
 800e8ea:	d101      	bne.n	800e8f0 <GUI__WrapGetNumCharsToNextLine+0x32>
 800e8ec:	3401      	adds	r4, #1
 800e8ee:	e012      	b.n	800e916 <GUI__WrapGetNumCharsToNextLine+0x58>
 800e8f0:	2f01      	cmp	r7, #1
 800e8f2:	d110      	bne.n	800e916 <GUI__WrapGetNumCharsToNextLine+0x58>
 800e8f4:	2820      	cmp	r0, #32
 800e8f6:	d10e      	bne.n	800e916 <GUI__WrapGetNumCharsToNextLine+0x58>
 800e8f8:	f7fc fcbe 	bl	800b278 <GUI_GetCharDistX>
 800e8fc:	4607      	mov	r7, r0
 800e8fe:	9b03      	ldr	r3, [sp, #12]
 800e900:	429e      	cmp	r6, r3
 800e902:	db08      	blt.n	800e916 <GUI__WrapGetNumCharsToNextLine+0x58>
 800e904:	443b      	add	r3, r7
 800e906:	4628      	mov	r0, r5
 800e908:	9303      	str	r3, [sp, #12]
 800e90a:	f7fa fda7 	bl	800945c <GUI_UC__GetCharCodeInc>
 800e90e:	2820      	cmp	r0, #32
 800e910:	f104 0401 	add.w	r4, r4, #1
 800e914:	d0f3      	beq.n	800e8fe <GUI__WrapGetNumCharsToNextLine+0x40>
 800e916:	4620      	mov	r0, r4
 800e918:	b005      	add	sp, #20
 800e91a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e91c <GUI__WrapGetNumBytesToNextLine>:
 800e91c:	b510      	push	{r4, lr}
 800e91e:	4604      	mov	r4, r0
 800e920:	f7ff ffcd 	bl	800e8be <GUI__WrapGetNumCharsToNextLine>
 800e924:	4601      	mov	r1, r0
 800e926:	4620      	mov	r0, r4
 800e928:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e92c:	f7fa bdaa 	b.w	8009484 <GUI_UC__NumChars2NumBytes>

0800e930 <GUI__ExpandPixelIndicesEx>:
 800e930:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e934:	1e0c      	subs	r4, r1, #0
 800e936:	4605      	mov	r5, r0
 800e938:	f340 80b3 	ble.w	800eaa2 <GUI__ExpandPixelIndicesEx+0x172>
 800e93c:	2a08      	cmp	r2, #8
 800e93e:	685f      	ldr	r7, [r3, #4]
 800e940:	dd04      	ble.n	800e94c <GUI__ExpandPixelIndicesEx+0x1c>
 800e942:	2a10      	cmp	r2, #16
 800e944:	f340 8098 	ble.w	800ea78 <GUI__ExpandPixelIndicesEx+0x148>
 800e948:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e94c:	3a01      	subs	r2, #1
 800e94e:	2a07      	cmp	r2, #7
 800e950:	f200 80a7 	bhi.w	800eaa2 <GUI__ExpandPixelIndicesEx+0x172>
 800e954:	e8df f002 	tbb	[pc, r2]
 800e958:	58a52d04 	.word	0x58a52d04
 800e95c:	83a5a5a5 	.word	0x83a5a5a5
 800e960:	1e66      	subs	r6, r4, #1
 800e962:	10f2      	asrs	r2, r6, #3
 800e964:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 800e968:	3b01      	subs	r3, #1
 800e96a:	eb05 0802 	add.w	r8, r5, r2
 800e96e:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 800e972:	f006 0607 	and.w	r6, r6, #7
 800e976:	f815 a002 	ldrb.w	sl, [r5, r2]
 800e97a:	2580      	movs	r5, #128	; 0x80
 800e97c:	4135      	asrs	r5, r6
 800e97e:	f108 38ff 	add.w	r8, r8, #4294967295
 800e982:	b2ed      	uxtb	r5, r5
 800e984:	f1c6 0307 	rsb	r3, r6, #7
 800e988:	ea0a 0005 	and.w	r0, sl, r5
 800e98c:	4118      	asrs	r0, r3
 800e98e:	47b8      	blx	r7
 800e990:	f849 0904 	str.w	r0, [r9], #-4
 800e994:	b936      	cbnz	r6, 800e9a4 <GUI__ExpandPixelIndicesEx+0x74>
 800e996:	f898 a000 	ldrb.w	sl, [r8]
 800e99a:	2501      	movs	r5, #1
 800e99c:	f108 38ff 	add.w	r8, r8, #4294967295
 800e9a0:	2607      	movs	r6, #7
 800e9a2:	e002      	b.n	800e9aa <GUI__ExpandPixelIndicesEx+0x7a>
 800e9a4:	006d      	lsls	r5, r5, #1
 800e9a6:	3e01      	subs	r6, #1
 800e9a8:	b2ed      	uxtb	r5, r5
 800e9aa:	3c01      	subs	r4, #1
 800e9ac:	d1ea      	bne.n	800e984 <GUI__ExpandPixelIndicesEx+0x54>
 800e9ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e9b2:	1e66      	subs	r6, r4, #1
 800e9b4:	10b2      	asrs	r2, r6, #2
 800e9b6:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 800e9ba:	3b01      	subs	r3, #1
 800e9bc:	f006 0603 	and.w	r6, r6, #3
 800e9c0:	eb05 0802 	add.w	r8, r5, r2
 800e9c4:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 800e9c8:	f815 a002 	ldrb.w	sl, [r5, r2]
 800e9cc:	0073      	lsls	r3, r6, #1
 800e9ce:	25c0      	movs	r5, #192	; 0xc0
 800e9d0:	411d      	asrs	r5, r3
 800e9d2:	f108 38ff 	add.w	r8, r8, #4294967295
 800e9d6:	b2ed      	uxtb	r5, r5
 800e9d8:	0073      	lsls	r3, r6, #1
 800e9da:	f1c3 0306 	rsb	r3, r3, #6
 800e9de:	ea0a 0005 	and.w	r0, sl, r5
 800e9e2:	4118      	asrs	r0, r3
 800e9e4:	47b8      	blx	r7
 800e9e6:	f849 0904 	str.w	r0, [r9], #-4
 800e9ea:	b936      	cbnz	r6, 800e9fa <GUI__ExpandPixelIndicesEx+0xca>
 800e9ec:	2503      	movs	r5, #3
 800e9ee:	f898 a000 	ldrb.w	sl, [r8]
 800e9f2:	462e      	mov	r6, r5
 800e9f4:	f108 38ff 	add.w	r8, r8, #4294967295
 800e9f8:	e002      	b.n	800ea00 <GUI__ExpandPixelIndicesEx+0xd0>
 800e9fa:	00ad      	lsls	r5, r5, #2
 800e9fc:	3e01      	subs	r6, #1
 800e9fe:	b2ed      	uxtb	r5, r5
 800ea00:	3c01      	subs	r4, #1
 800ea02:	d1e9      	bne.n	800e9d8 <GUI__ExpandPixelIndicesEx+0xa8>
 800ea04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ea08:	1e66      	subs	r6, r4, #1
 800ea0a:	1072      	asrs	r2, r6, #1
 800ea0c:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 800ea10:	3b01      	subs	r3, #1
 800ea12:	f006 0601 	and.w	r6, r6, #1
 800ea16:	eb05 0802 	add.w	r8, r5, r2
 800ea1a:	eb05 0983 	add.w	r9, r5, r3, lsl #2
 800ea1e:	f815 a002 	ldrb.w	sl, [r5, r2]
 800ea22:	00b3      	lsls	r3, r6, #2
 800ea24:	25f0      	movs	r5, #240	; 0xf0
 800ea26:	411d      	asrs	r5, r3
 800ea28:	f108 38ff 	add.w	r8, r8, #4294967295
 800ea2c:	b2ed      	uxtb	r5, r5
 800ea2e:	00b3      	lsls	r3, r6, #2
 800ea30:	f1c3 0304 	rsb	r3, r3, #4
 800ea34:	ea0a 0005 	and.w	r0, sl, r5
 800ea38:	4118      	asrs	r0, r3
 800ea3a:	47b8      	blx	r7
 800ea3c:	f849 0904 	str.w	r0, [r9], #-4
 800ea40:	b936      	cbnz	r6, 800ea50 <GUI__ExpandPixelIndicesEx+0x120>
 800ea42:	f898 a000 	ldrb.w	sl, [r8]
 800ea46:	250f      	movs	r5, #15
 800ea48:	f108 38ff 	add.w	r8, r8, #4294967295
 800ea4c:	2601      	movs	r6, #1
 800ea4e:	e002      	b.n	800ea56 <GUI__ExpandPixelIndicesEx+0x126>
 800ea50:	012d      	lsls	r5, r5, #4
 800ea52:	b2ed      	uxtb	r5, r5
 800ea54:	2600      	movs	r6, #0
 800ea56:	3c01      	subs	r4, #1
 800ea58:	d1e9      	bne.n	800ea2e <GUI__ExpandPixelIndicesEx+0xfe>
 800ea5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ea5e:	192e      	adds	r6, r5, r4
 800ea60:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 800ea64:	1b34      	subs	r4, r6, r4
 800ea66:	f816 0d01 	ldrb.w	r0, [r6, #-1]!
 800ea6a:	47b8      	blx	r7
 800ea6c:	42a6      	cmp	r6, r4
 800ea6e:	f845 0d04 	str.w	r0, [r5, #-4]!
 800ea72:	d1f8      	bne.n	800ea66 <GUI__ExpandPixelIndicesEx+0x136>
 800ea74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ea78:	695e      	ldr	r6, [r3, #20]
 800ea7a:	b12e      	cbz	r6, 800ea88 <GUI__ExpandPixelIndicesEx+0x158>
 800ea7c:	4629      	mov	r1, r5
 800ea7e:	4622      	mov	r2, r4
 800ea80:	2302      	movs	r3, #2
 800ea82:	47b0      	blx	r6
 800ea84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ea88:	0064      	lsls	r4, r4, #1
 800ea8a:	4425      	add	r5, r4
 800ea8c:	192e      	adds	r6, r5, r4
 800ea8e:	1b2c      	subs	r4, r5, r4
 800ea90:	f835 0d02 	ldrh.w	r0, [r5, #-2]!
 800ea94:	47b8      	blx	r7
 800ea96:	42a5      	cmp	r5, r4
 800ea98:	f846 0d04 	str.w	r0, [r6, #-4]!
 800ea9c:	d1f8      	bne.n	800ea90 <GUI__ExpandPixelIndicesEx+0x160>
 800ea9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eaa2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800eaa6 <_GetTwinArcPara>:
 800eaa6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800eaaa:	fb01 f901 	mul.w	r9, r1, r1
 800eaae:	1e47      	subs	r7, r0, #1
 800eab0:	4604      	mov	r4, r0
 800eab2:	4340      	muls	r0, r0
 800eab4:	ebc9 0000 	rsb	r0, r9, r0
 800eab8:	460d      	mov	r5, r1
 800eaba:	4692      	mov	sl, r2
 800eabc:	4698      	mov	r8, r3
 800eabe:	9e08      	ldr	r6, [sp, #32]
 800eac0:	f7fa fa0b 	bl	8008eda <GUI__sqrt32>
 800eac4:	42bd      	cmp	r5, r7
 800eac6:	f8ca 0000 	str.w	r0, [sl]
 800eaca:	da10      	bge.n	800eaee <_GetTwinArcPara+0x48>
 800eacc:	fb07 f007 	mul.w	r0, r7, r7
 800ead0:	ebc9 0000 	rsb	r0, r9, r0
 800ead4:	f7fa fa01 	bl	8008eda <GUI__sqrt32>
 800ead8:	3c02      	subs	r4, #2
 800eada:	42a5      	cmp	r5, r4
 800eadc:	f8c8 0000 	str.w	r0, [r8]
 800eae0:	da03      	bge.n	800eaea <_GetTwinArcPara+0x44>
 800eae2:	3801      	subs	r0, #1
 800eae4:	6030      	str	r0, [r6, #0]
 800eae6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eaea:	2300      	movs	r3, #0
 800eaec:	e002      	b.n	800eaf4 <_GetTwinArcPara+0x4e>
 800eaee:	2300      	movs	r3, #0
 800eaf0:	f8c8 3000 	str.w	r3, [r8]
 800eaf4:	6033      	str	r3, [r6, #0]
 800eaf6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800eafc <GUI__DrawTwinArc2>:
 800eafc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb00:	461c      	mov	r4, r3
 800eb02:	4b57      	ldr	r3, [pc, #348]	; (800ec60 <GUI__DrawTwinArc2+0x164>)
 800eb04:	681b      	ldr	r3, [r3, #0]
 800eb06:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 800eb08:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800eb0a:	b08b      	sub	sp, #44	; 0x2c
 800eb0c:	4415      	add	r5, r2
 800eb0e:	1e63      	subs	r3, r4, #1
 800eb10:	19c6      	adds	r6, r0, r7
 800eb12:	442b      	add	r3, r5
 800eb14:	440f      	add	r7, r1
 800eb16:	a808      	add	r0, sp, #32
 800eb18:	f8ad 6020 	strh.w	r6, [sp, #32]
 800eb1c:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800eb20:	f8ad 5022 	strh.w	r5, [sp, #34]	; 0x22
 800eb24:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800eb28:	f7f7 f922 	bl	8005d70 <WM__InitIVRSearch>
 800eb2c:	2800      	cmp	r0, #0
 800eb2e:	f000 8094 	beq.w	800ec5a <GUI__DrawTwinArc2+0x15e>
 800eb32:	2c00      	cmp	r4, #0
 800eb34:	dc02      	bgt.n	800eb3c <GUI__DrawTwinArc2+0x40>
 800eb36:	f7f7 f859 	bl	8005bec <WM__GetNextIVR>
 800eb3a:	e7f7      	b.n	800eb2c <GUI__DrawTwinArc2+0x30>
 800eb3c:	9814      	ldr	r0, [sp, #80]	; 0x50
 800eb3e:	f7fc f832 	bl	800aba6 <GUI_SetColor>
 800eb42:	f104 38ff 	add.w	r8, r4, #4294967295
 800eb46:	4641      	mov	r1, r8
 800eb48:	f118 38ff 	adds.w	r8, r8, #4294967295
 800eb4c:	d324      	bcc.n	800eb98 <GUI__DrawTwinArc2+0x9c>
 800eb4e:	ab07      	add	r3, sp, #28
 800eb50:	9300      	str	r3, [sp, #0]
 800eb52:	4620      	mov	r0, r4
 800eb54:	aa05      	add	r2, sp, #20
 800eb56:	ab06      	add	r3, sp, #24
 800eb58:	f7ff ffa5 	bl	800eaa6 <_GetTwinArcPara>
 800eb5c:	f104 39ff 	add.w	r9, r4, #4294967295
 800eb60:	f8dd a018 	ldr.w	sl, [sp, #24]
 800eb64:	9905      	ldr	r1, [sp, #20]
 800eb66:	1930      	adds	r0, r6, r4
 800eb68:	44a9      	add	r9, r5
 800eb6a:	ebc8 0909 	rsb	r9, r8, r9
 800eb6e:	ebc4 0b07 	rsb	fp, r4, r7
 800eb72:	ebca 0200 	rsb	r2, sl, r0
 800eb76:	eb0b 0301 	add.w	r3, fp, r1
 800eb7a:	1a40      	subs	r0, r0, r1
 800eb7c:	3a01      	subs	r2, #1
 800eb7e:	4649      	mov	r1, r9
 800eb80:	9302      	str	r3, [sp, #8]
 800eb82:	f7f9 fdd1 	bl	8008728 <LCD_DrawHLine>
 800eb86:	9b02      	ldr	r3, [sp, #8]
 800eb88:	eb0b 000a 	add.w	r0, fp, sl
 800eb8c:	3001      	adds	r0, #1
 800eb8e:	4649      	mov	r1, r9
 800eb90:	461a      	mov	r2, r3
 800eb92:	f7f9 fdc9 	bl	8008728 <LCD_DrawHLine>
 800eb96:	e7d6      	b.n	800eb46 <GUI__DrawTwinArc2+0x4a>
 800eb98:	2c01      	cmp	r4, #1
 800eb9a:	d0cc      	beq.n	800eb36 <GUI__DrawTwinArc2+0x3a>
 800eb9c:	9815      	ldr	r0, [sp, #84]	; 0x54
 800eb9e:	f7fc f802 	bl	800aba6 <GUI_SetColor>
 800eba2:	f1a4 0902 	sub.w	r9, r4, #2
 800eba6:	eb05 0b04 	add.w	fp, r5, r4
 800ebaa:	f105 0802 	add.w	r8, r5, #2
 800ebae:	f1b9 0f00 	cmp.w	r9, #0
 800ebb2:	d027      	beq.n	800ec04 <GUI__DrawTwinArc2+0x108>
 800ebb4:	ab07      	add	r3, sp, #28
 800ebb6:	4649      	mov	r1, r9
 800ebb8:	9300      	str	r3, [sp, #0]
 800ebba:	4620      	mov	r0, r4
 800ebbc:	aa05      	add	r2, sp, #20
 800ebbe:	ab06      	add	r3, sp, #24
 800ebc0:	f7ff ff71 	bl	800eaa6 <_GetTwinArcPara>
 800ebc4:	f8dd a01c 	ldr.w	sl, [sp, #28]
 800ebc8:	9906      	ldr	r1, [sp, #24]
 800ebca:	1930      	adds	r0, r6, r4
 800ebcc:	1b3b      	subs	r3, r7, r4
 800ebce:	ebca 0200 	rsb	r2, sl, r0
 800ebd2:	eb03 0c01 	add.w	ip, r3, r1
 800ebd6:	1a40      	subs	r0, r0, r1
 800ebd8:	3a01      	subs	r2, #1
 800ebda:	4641      	mov	r1, r8
 800ebdc:	9302      	str	r3, [sp, #8]
 800ebde:	f8cd c00c 	str.w	ip, [sp, #12]
 800ebe2:	f7f9 fda1 	bl	8008728 <LCD_DrawHLine>
 800ebe6:	9b02      	ldr	r3, [sp, #8]
 800ebe8:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800ebec:	eb03 000a 	add.w	r0, r3, sl
 800ebf0:	4641      	mov	r1, r8
 800ebf2:	3001      	adds	r0, #1
 800ebf4:	4662      	mov	r2, ip
 800ebf6:	f7f9 fd97 	bl	8008728 <LCD_DrawHLine>
 800ebfa:	f109 39ff 	add.w	r9, r9, #4294967295
 800ebfe:	f108 0801 	add.w	r8, r8, #1
 800ec02:	e7d4      	b.n	800ebae <GUI__DrawTwinArc2+0xb2>
 800ec04:	2c02      	cmp	r4, #2
 800ec06:	d096      	beq.n	800eb36 <GUI__DrawTwinArc2+0x3a>
 800ec08:	9816      	ldr	r0, [sp, #88]	; 0x58
 800ec0a:	f7fb ffcc 	bl	800aba6 <GUI_SetColor>
 800ec0e:	f1c4 0303 	rsb	r3, r4, #3
 800ec12:	f1a4 0803 	sub.w	r8, r4, #3
 800ec16:	449b      	add	fp, r3
 800ec18:	f1b8 0f00 	cmp.w	r8, #0
 800ec1c:	d08b      	beq.n	800eb36 <GUI__DrawTwinArc2+0x3a>
 800ec1e:	ab07      	add	r3, sp, #28
 800ec20:	4641      	mov	r1, r8
 800ec22:	9300      	str	r3, [sp, #0]
 800ec24:	4620      	mov	r0, r4
 800ec26:	ab06      	add	r3, sp, #24
 800ec28:	aa05      	add	r2, sp, #20
 800ec2a:	f7ff ff3c 	bl	800eaa6 <_GetTwinArcPara>
 800ec2e:	9807      	ldr	r0, [sp, #28]
 800ec30:	1932      	adds	r2, r6, r4
 800ec32:	ebc4 0907 	rsb	r9, r4, r7
 800ec36:	4659      	mov	r1, fp
 800ec38:	eb09 0a00 	add.w	sl, r9, r0
 800ec3c:	1a10      	subs	r0, r2, r0
 800ec3e:	3a01      	subs	r2, #1
 800ec40:	f7f9 fd72 	bl	8008728 <LCD_DrawHLine>
 800ec44:	4659      	mov	r1, fp
 800ec46:	f109 0001 	add.w	r0, r9, #1
 800ec4a:	4652      	mov	r2, sl
 800ec4c:	f7f9 fd6c 	bl	8008728 <LCD_DrawHLine>
 800ec50:	f108 38ff 	add.w	r8, r8, #4294967295
 800ec54:	f10b 0b01 	add.w	fp, fp, #1
 800ec58:	e7de      	b.n	800ec18 <GUI__DrawTwinArc2+0x11c>
 800ec5a:	b00b      	add	sp, #44	; 0x2c
 800ec5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec60:	200000b8 	.word	0x200000b8

0800ec64 <GUI__CompactPixelIndices>:
 800ec64:	2a08      	cmp	r2, #8
 800ec66:	b510      	push	{r4, lr}
 800ec68:	dd0e      	ble.n	800ec88 <GUI__CompactPixelIndices+0x24>
 800ec6a:	2a10      	cmp	r2, #16
 800ec6c:	dc0a      	bgt.n	800ec84 <GUI__CompactPixelIndices+0x20>
 800ec6e:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800ec72:	4603      	mov	r3, r0
 800ec74:	f850 2b04 	ldr.w	r2, [r0], #4
 800ec78:	f823 2b02 	strh.w	r2, [r3], #2
 800ec7c:	428b      	cmp	r3, r1
 800ec7e:	d1f9      	bne.n	800ec74 <GUI__CompactPixelIndices+0x10>
 800ec80:	2001      	movs	r0, #1
 800ec82:	bd10      	pop	{r4, pc}
 800ec84:	2000      	movs	r0, #0
 800ec86:	bd10      	pop	{r4, pc}
 800ec88:	2a02      	cmp	r2, #2
 800ec8a:	d06d      	beq.n	800ed68 <GUI__CompactPixelIndices+0x104>
 800ec8c:	2a04      	cmp	r2, #4
 800ec8e:	d054      	beq.n	800ed3a <GUI__CompactPixelIndices+0xd6>
 800ec90:	2a01      	cmp	r2, #1
 800ec92:	f040 8095 	bne.w	800edc0 <GUI__CompactPixelIndices+0x15c>
 800ec96:	4604      	mov	r4, r0
 800ec98:	6803      	ldr	r3, [r0, #0]
 800ec9a:	2901      	cmp	r1, #1
 800ec9c:	ea4f 13c3 	mov.w	r3, r3, lsl #7
 800eca0:	b2db      	uxtb	r3, r3
 800eca2:	d047      	beq.n	800ed34 <GUI__CompactPixelIndices+0xd0>
 800eca4:	6842      	ldr	r2, [r0, #4]
 800eca6:	2902      	cmp	r1, #2
 800eca8:	f002 0201 	and.w	r2, r2, #1
 800ecac:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800ecb0:	d102      	bne.n	800ecb8 <GUI__CompactPixelIndices+0x54>
 800ecb2:	f100 0208 	add.w	r2, r0, #8
 800ecb6:	e03e      	b.n	800ed36 <GUI__CompactPixelIndices+0xd2>
 800ecb8:	6882      	ldr	r2, [r0, #8]
 800ecba:	2903      	cmp	r1, #3
 800ecbc:	f002 0201 	and.w	r2, r2, #1
 800ecc0:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800ecc4:	d102      	bne.n	800eccc <GUI__CompactPixelIndices+0x68>
 800ecc6:	f100 020c 	add.w	r2, r0, #12
 800ecca:	e034      	b.n	800ed36 <GUI__CompactPixelIndices+0xd2>
 800eccc:	68c2      	ldr	r2, [r0, #12]
 800ecce:	2904      	cmp	r1, #4
 800ecd0:	f002 0201 	and.w	r2, r2, #1
 800ecd4:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 800ecd8:	d102      	bne.n	800ece0 <GUI__CompactPixelIndices+0x7c>
 800ecda:	f100 0210 	add.w	r2, r0, #16
 800ecde:	e02a      	b.n	800ed36 <GUI__CompactPixelIndices+0xd2>
 800ece0:	6902      	ldr	r2, [r0, #16]
 800ece2:	2905      	cmp	r1, #5
 800ece4:	f002 0201 	and.w	r2, r2, #1
 800ece8:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800ecec:	d102      	bne.n	800ecf4 <GUI__CompactPixelIndices+0x90>
 800ecee:	f100 0214 	add.w	r2, r0, #20
 800ecf2:	e020      	b.n	800ed36 <GUI__CompactPixelIndices+0xd2>
 800ecf4:	6942      	ldr	r2, [r0, #20]
 800ecf6:	2906      	cmp	r1, #6
 800ecf8:	f002 0201 	and.w	r2, r2, #1
 800ecfc:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 800ed00:	d102      	bne.n	800ed08 <GUI__CompactPixelIndices+0xa4>
 800ed02:	f100 0218 	add.w	r2, r0, #24
 800ed06:	e016      	b.n	800ed36 <GUI__CompactPixelIndices+0xd2>
 800ed08:	6982      	ldr	r2, [r0, #24]
 800ed0a:	3907      	subs	r1, #7
 800ed0c:	f002 0201 	and.w	r2, r2, #1
 800ed10:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 800ed14:	d102      	bne.n	800ed1c <GUI__CompactPixelIndices+0xb8>
 800ed16:	f100 021c 	add.w	r2, r0, #28
 800ed1a:	e005      	b.n	800ed28 <GUI__CompactPixelIndices+0xc4>
 800ed1c:	f100 0220 	add.w	r2, r0, #32
 800ed20:	69c0      	ldr	r0, [r0, #28]
 800ed22:	f000 0001 	and.w	r0, r0, #1
 800ed26:	4303      	orrs	r3, r0
 800ed28:	f804 3b01 	strb.w	r3, [r4], #1
 800ed2c:	2900      	cmp	r1, #0
 800ed2e:	d0a7      	beq.n	800ec80 <GUI__CompactPixelIndices+0x1c>
 800ed30:	4610      	mov	r0, r2
 800ed32:	e7b1      	b.n	800ec98 <GUI__CompactPixelIndices+0x34>
 800ed34:	1d02      	adds	r2, r0, #4
 800ed36:	2100      	movs	r1, #0
 800ed38:	e7f6      	b.n	800ed28 <GUI__CompactPixelIndices+0xc4>
 800ed3a:	4602      	mov	r2, r0
 800ed3c:	6803      	ldr	r3, [r0, #0]
 800ed3e:	2901      	cmp	r1, #1
 800ed40:	ea4f 1303 	mov.w	r3, r3, lsl #4
 800ed44:	b2db      	uxtb	r3, r3
 800ed46:	d102      	bne.n	800ed4e <GUI__CompactPixelIndices+0xea>
 800ed48:	1d04      	adds	r4, r0, #4
 800ed4a:	2100      	movs	r1, #0
 800ed4c:	e006      	b.n	800ed5c <GUI__CompactPixelIndices+0xf8>
 800ed4e:	f100 0408 	add.w	r4, r0, #8
 800ed52:	6840      	ldr	r0, [r0, #4]
 800ed54:	f000 000f 	and.w	r0, r0, #15
 800ed58:	4303      	orrs	r3, r0
 800ed5a:	3902      	subs	r1, #2
 800ed5c:	f802 3b01 	strb.w	r3, [r2], #1
 800ed60:	2900      	cmp	r1, #0
 800ed62:	d08d      	beq.n	800ec80 <GUI__CompactPixelIndices+0x1c>
 800ed64:	4620      	mov	r0, r4
 800ed66:	e7e9      	b.n	800ed3c <GUI__CompactPixelIndices+0xd8>
 800ed68:	4604      	mov	r4, r0
 800ed6a:	6803      	ldr	r3, [r0, #0]
 800ed6c:	2901      	cmp	r1, #1
 800ed6e:	ea4f 1383 	mov.w	r3, r3, lsl #6
 800ed72:	b2db      	uxtb	r3, r3
 800ed74:	d021      	beq.n	800edba <GUI__CompactPixelIndices+0x156>
 800ed76:	6842      	ldr	r2, [r0, #4]
 800ed78:	2902      	cmp	r1, #2
 800ed7a:	f002 0203 	and.w	r2, r2, #3
 800ed7e:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 800ed82:	d102      	bne.n	800ed8a <GUI__CompactPixelIndices+0x126>
 800ed84:	f100 0208 	add.w	r2, r0, #8
 800ed88:	e018      	b.n	800edbc <GUI__CompactPixelIndices+0x158>
 800ed8a:	6882      	ldr	r2, [r0, #8]
 800ed8c:	2903      	cmp	r1, #3
 800ed8e:	f002 0203 	and.w	r2, r2, #3
 800ed92:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 800ed96:	d102      	bne.n	800ed9e <GUI__CompactPixelIndices+0x13a>
 800ed98:	f100 020c 	add.w	r2, r0, #12
 800ed9c:	e00e      	b.n	800edbc <GUI__CompactPixelIndices+0x158>
 800ed9e:	f100 0210 	add.w	r2, r0, #16
 800eda2:	68c0      	ldr	r0, [r0, #12]
 800eda4:	f000 0003 	and.w	r0, r0, #3
 800eda8:	4303      	orrs	r3, r0
 800edaa:	3904      	subs	r1, #4
 800edac:	f804 3b01 	strb.w	r3, [r4], #1
 800edb0:	2900      	cmp	r1, #0
 800edb2:	f43f af65 	beq.w	800ec80 <GUI__CompactPixelIndices+0x1c>
 800edb6:	4610      	mov	r0, r2
 800edb8:	e7d7      	b.n	800ed6a <GUI__CompactPixelIndices+0x106>
 800edba:	1d02      	adds	r2, r0, #4
 800edbc:	2100      	movs	r1, #0
 800edbe:	e7f5      	b.n	800edac <GUI__CompactPixelIndices+0x148>
 800edc0:	2300      	movs	r3, #0
 800edc2:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 800edc6:	54c2      	strb	r2, [r0, r3]
 800edc8:	3301      	adds	r3, #1
 800edca:	428b      	cmp	r3, r1
 800edcc:	d1f9      	bne.n	800edc2 <GUI__CompactPixelIndices+0x15e>
 800edce:	e757      	b.n	800ec80 <GUI__CompactPixelIndices+0x1c>

0800edd0 <GUI__ConvertColor2Index>:
 800edd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800edd4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800edd8:	681e      	ldr	r6, [r3, #0]
 800edda:	f1b8 0f00 	cmp.w	r8, #0
 800edde:	bf08      	it	eq
 800ede0:	4680      	moveq	r8, r0
 800ede2:	2a08      	cmp	r2, #8
 800ede4:	4604      	mov	r4, r0
 800ede6:	460d      	mov	r5, r1
 800ede8:	dd05      	ble.n	800edf6 <GUI__ConvertColor2Index+0x26>
 800edea:	2a10      	cmp	r2, #16
 800edec:	f340 80b6 	ble.w	800ef5c <GUI__ConvertColor2Index+0x18c>
 800edf0:	2000      	movs	r0, #0
 800edf2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800edf6:	3a01      	subs	r2, #1
 800edf8:	2a07      	cmp	r2, #7
 800edfa:	f200 80a4 	bhi.w	800ef46 <GUI__ConvertColor2Index+0x176>
 800edfe:	e8df f002 	tbb	[pc, r2]
 800ee02:	6111      	.short	0x6111
 800ee04:	a2a287a2 	.word	0xa2a287a2
 800ee08:	92a2      	.short	0x92a2
 800ee0a:	69e0      	ldr	r0, [r4, #28]
 800ee0c:	47b0      	blx	r6
 800ee0e:	4338      	orrs	r0, r7
 800ee10:	f104 0920 	add.w	r9, r4, #32
 800ee14:	b2c7      	uxtb	r7, r0
 800ee16:	3d08      	subs	r5, #8
 800ee18:	f808 7b01 	strb.w	r7, [r8], #1
 800ee1c:	2d00      	cmp	r5, #0
 800ee1e:	f000 8092 	beq.w	800ef46 <GUI__ConvertColor2Index+0x176>
 800ee22:	464c      	mov	r4, r9
 800ee24:	6820      	ldr	r0, [r4, #0]
 800ee26:	47b0      	blx	r6
 800ee28:	2d01      	cmp	r5, #1
 800ee2a:	ea4f 10c0 	mov.w	r0, r0, lsl #7
 800ee2e:	b2c7      	uxtb	r7, r0
 800ee30:	f000 808c 	beq.w	800ef4c <GUI__ConvertColor2Index+0x17c>
 800ee34:	6860      	ldr	r0, [r4, #4]
 800ee36:	47b0      	blx	r6
 800ee38:	2d02      	cmp	r5, #2
 800ee3a:	ea47 1080 	orr.w	r0, r7, r0, lsl #6
 800ee3e:	b2c7      	uxtb	r7, r0
 800ee40:	d102      	bne.n	800ee48 <GUI__ConvertColor2Index+0x78>
 800ee42:	f104 0908 	add.w	r9, r4, #8
 800ee46:	e083      	b.n	800ef50 <GUI__ConvertColor2Index+0x180>
 800ee48:	68a0      	ldr	r0, [r4, #8]
 800ee4a:	47b0      	blx	r6
 800ee4c:	2d03      	cmp	r5, #3
 800ee4e:	ea47 1040 	orr.w	r0, r7, r0, lsl #5
 800ee52:	b2c7      	uxtb	r7, r0
 800ee54:	d102      	bne.n	800ee5c <GUI__ConvertColor2Index+0x8c>
 800ee56:	f104 090c 	add.w	r9, r4, #12
 800ee5a:	e079      	b.n	800ef50 <GUI__ConvertColor2Index+0x180>
 800ee5c:	68e0      	ldr	r0, [r4, #12]
 800ee5e:	47b0      	blx	r6
 800ee60:	2d04      	cmp	r5, #4
 800ee62:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 800ee66:	b2c7      	uxtb	r7, r0
 800ee68:	d102      	bne.n	800ee70 <GUI__ConvertColor2Index+0xa0>
 800ee6a:	f104 0910 	add.w	r9, r4, #16
 800ee6e:	e06f      	b.n	800ef50 <GUI__ConvertColor2Index+0x180>
 800ee70:	6920      	ldr	r0, [r4, #16]
 800ee72:	47b0      	blx	r6
 800ee74:	2d05      	cmp	r5, #5
 800ee76:	ea47 00c0 	orr.w	r0, r7, r0, lsl #3
 800ee7a:	b2c7      	uxtb	r7, r0
 800ee7c:	d102      	bne.n	800ee84 <GUI__ConvertColor2Index+0xb4>
 800ee7e:	f104 0914 	add.w	r9, r4, #20
 800ee82:	e065      	b.n	800ef50 <GUI__ConvertColor2Index+0x180>
 800ee84:	6960      	ldr	r0, [r4, #20]
 800ee86:	47b0      	blx	r6
 800ee88:	2d06      	cmp	r5, #6
 800ee8a:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 800ee8e:	b2c7      	uxtb	r7, r0
 800ee90:	d102      	bne.n	800ee98 <GUI__ConvertColor2Index+0xc8>
 800ee92:	f104 0918 	add.w	r9, r4, #24
 800ee96:	e05b      	b.n	800ef50 <GUI__ConvertColor2Index+0x180>
 800ee98:	69a0      	ldr	r0, [r4, #24]
 800ee9a:	47b0      	blx	r6
 800ee9c:	2d07      	cmp	r5, #7
 800ee9e:	ea47 0040 	orr.w	r0, r7, r0, lsl #1
 800eea2:	b2c7      	uxtb	r7, r0
 800eea4:	d1b1      	bne.n	800ee0a <GUI__ConvertColor2Index+0x3a>
 800eea6:	f104 091c 	add.w	r9, r4, #28
 800eeaa:	e051      	b.n	800ef50 <GUI__ConvertColor2Index+0x180>
 800eeac:	68e0      	ldr	r0, [r4, #12]
 800eeae:	47b0      	blx	r6
 800eeb0:	4338      	orrs	r0, r7
 800eeb2:	f104 0910 	add.w	r9, r4, #16
 800eeb6:	b2c7      	uxtb	r7, r0
 800eeb8:	3d04      	subs	r5, #4
 800eeba:	f808 7b01 	strb.w	r7, [r8], #1
 800eebe:	2d00      	cmp	r5, #0
 800eec0:	d041      	beq.n	800ef46 <GUI__ConvertColor2Index+0x176>
 800eec2:	464c      	mov	r4, r9
 800eec4:	6820      	ldr	r0, [r4, #0]
 800eec6:	47b0      	blx	r6
 800eec8:	2d01      	cmp	r5, #1
 800eeca:	ea4f 1080 	mov.w	r0, r0, lsl #6
 800eece:	b2c7      	uxtb	r7, r0
 800eed0:	d040      	beq.n	800ef54 <GUI__ConvertColor2Index+0x184>
 800eed2:	6860      	ldr	r0, [r4, #4]
 800eed4:	47b0      	blx	r6
 800eed6:	2d02      	cmp	r5, #2
 800eed8:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 800eedc:	b2c7      	uxtb	r7, r0
 800eede:	d102      	bne.n	800eee6 <GUI__ConvertColor2Index+0x116>
 800eee0:	f104 0908 	add.w	r9, r4, #8
 800eee4:	e038      	b.n	800ef58 <GUI__ConvertColor2Index+0x188>
 800eee6:	68a0      	ldr	r0, [r4, #8]
 800eee8:	47b0      	blx	r6
 800eeea:	2d03      	cmp	r5, #3
 800eeec:	ea47 0080 	orr.w	r0, r7, r0, lsl #2
 800eef0:	b2c7      	uxtb	r7, r0
 800eef2:	d1db      	bne.n	800eeac <GUI__ConvertColor2Index+0xdc>
 800eef4:	f104 090c 	add.w	r9, r4, #12
 800eef8:	e02e      	b.n	800ef58 <GUI__ConvertColor2Index+0x188>
 800eefa:	6860      	ldr	r0, [r4, #4]
 800eefc:	47b0      	blx	r6
 800eefe:	4338      	orrs	r0, r7
 800ef00:	f104 0908 	add.w	r9, r4, #8
 800ef04:	b2c7      	uxtb	r7, r0
 800ef06:	3d02      	subs	r5, #2
 800ef08:	f808 7b01 	strb.w	r7, [r8], #1
 800ef0c:	b1dd      	cbz	r5, 800ef46 <GUI__ConvertColor2Index+0x176>
 800ef0e:	464c      	mov	r4, r9
 800ef10:	6820      	ldr	r0, [r4, #0]
 800ef12:	47b0      	blx	r6
 800ef14:	2d01      	cmp	r5, #1
 800ef16:	ea4f 1000 	mov.w	r0, r0, lsl #4
 800ef1a:	b2c7      	uxtb	r7, r0
 800ef1c:	d1ed      	bne.n	800eefa <GUI__ConvertColor2Index+0x12a>
 800ef1e:	f104 0904 	add.w	r9, r4, #4
 800ef22:	2500      	movs	r5, #0
 800ef24:	e7f0      	b.n	800ef08 <GUI__ConvertColor2Index+0x138>
 800ef26:	691f      	ldr	r7, [r3, #16]
 800ef28:	b12f      	cbz	r7, 800ef36 <GUI__ConvertColor2Index+0x166>
 800ef2a:	4620      	mov	r0, r4
 800ef2c:	4641      	mov	r1, r8
 800ef2e:	462a      	mov	r2, r5
 800ef30:	2301      	movs	r3, #1
 800ef32:	47b8      	blx	r7
 800ef34:	e007      	b.n	800ef46 <GUI__ConvertColor2Index+0x176>
 800ef36:	f854 0027 	ldr.w	r0, [r4, r7, lsl #2]
 800ef3a:	47b0      	blx	r6
 800ef3c:	f808 0007 	strb.w	r0, [r8, r7]
 800ef40:	3701      	adds	r7, #1
 800ef42:	42bd      	cmp	r5, r7
 800ef44:	d1f7      	bne.n	800ef36 <GUI__ConvertColor2Index+0x166>
 800ef46:	2001      	movs	r0, #1
 800ef48:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ef4c:	f104 0904 	add.w	r9, r4, #4
 800ef50:	2500      	movs	r5, #0
 800ef52:	e761      	b.n	800ee18 <GUI__ConvertColor2Index+0x48>
 800ef54:	f104 0904 	add.w	r9, r4, #4
 800ef58:	2500      	movs	r5, #0
 800ef5a:	e7ae      	b.n	800eeba <GUI__ConvertColor2Index+0xea>
 800ef5c:	691f      	ldr	r7, [r3, #16]
 800ef5e:	b11f      	cbz	r7, 800ef68 <GUI__ConvertColor2Index+0x198>
 800ef60:	4641      	mov	r1, r8
 800ef62:	462a      	mov	r2, r5
 800ef64:	2302      	movs	r3, #2
 800ef66:	e7e4      	b.n	800ef32 <GUI__ConvertColor2Index+0x162>
 800ef68:	f854 0b04 	ldr.w	r0, [r4], #4
 800ef6c:	47b0      	blx	r6
 800ef6e:	3d01      	subs	r5, #1
 800ef70:	f828 0b02 	strh.w	r0, [r8], #2
 800ef74:	d1f8      	bne.n	800ef68 <GUI__ConvertColor2Index+0x198>
 800ef76:	e7e6      	b.n	800ef46 <GUI__ConvertColor2Index+0x176>

0800ef78 <GUI__CompactPixelIndicesEx>:
 800ef78:	b513      	push	{r0, r1, r4, lr}
 800ef7a:	2400      	movs	r4, #0
 800ef7c:	9400      	str	r4, [sp, #0]
 800ef7e:	f7ff ff27 	bl	800edd0 <GUI__ConvertColor2Index>
 800ef82:	b002      	add	sp, #8
 800ef84:	bd10      	pop	{r4, pc}

0800ef86 <_GetCharCode>:
 800ef86:	7800      	ldrb	r0, [r0, #0]
 800ef88:	4770      	bx	lr

0800ef8a <_GetCharSize>:
 800ef8a:	2001      	movs	r0, #1
 800ef8c:	4770      	bx	lr

0800ef8e <_CalcSizeOfChar>:
 800ef8e:	2001      	movs	r0, #1
 800ef90:	4770      	bx	lr

0800ef92 <_Encode>:
 800ef92:	7001      	strb	r1, [r0, #0]
 800ef94:	2001      	movs	r0, #1
 800ef96:	4770      	bx	lr

0800ef98 <_Add>:
 800ef98:	4a0f      	ldr	r2, [pc, #60]	; (800efd8 <_Add+0x40>)
 800ef9a:	6813      	ldr	r3, [r2, #0]
 800ef9c:	2b0b      	cmp	r3, #11
 800ef9e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800efa0:	4617      	mov	r7, r2
 800efa2:	dc18      	bgt.n	800efd6 <_Add+0x3e>
 800efa4:	2b00      	cmp	r3, #0
 800efa6:	4c0d      	ldr	r4, [pc, #52]	; (800efdc <_Add+0x44>)
 800efa8:	dc01      	bgt.n	800efae <_Add+0x16>
 800efaa:	2200      	movs	r2, #0
 800efac:	e00f      	b.n	800efce <_Add+0x36>
 800efae:	eb04 0143 	add.w	r1, r4, r3, lsl #1
 800efb2:	461a      	mov	r2, r3
 800efb4:	f831 6d02 	ldrh.w	r6, [r1, #-2]!
 800efb8:	fa0f fc86 	sxth.w	ip, r6
 800efbc:	4584      	cmp	ip, r0
 800efbe:	f102 35ff 	add.w	r5, r2, #4294967295
 800efc2:	db04      	blt.n	800efce <_Add+0x36>
 800efc4:	804e      	strh	r6, [r1, #2]
 800efc6:	2d00      	cmp	r5, #0
 800efc8:	d0ef      	beq.n	800efaa <_Add+0x12>
 800efca:	462a      	mov	r2, r5
 800efcc:	e7f2      	b.n	800efb4 <_Add+0x1c>
 800efce:	3301      	adds	r3, #1
 800efd0:	f824 0012 	strh.w	r0, [r4, r2, lsl #1]
 800efd4:	603b      	str	r3, [r7, #0]
 800efd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800efd8:	20002bb0 	.word	0x20002bb0
 800efdc:	20002bb4 	.word	0x20002bb4

0800efe0 <GL_FillPolygon>:
 800efe0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800efe4:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 800f1a0 <GL_FillPolygon+0x1c0>
 800efe8:	9101      	str	r1, [sp, #4]
 800efea:	4692      	mov	sl, r2
 800efec:	4606      	mov	r6, r0
 800efee:	f643 74ff 	movw	r4, #16383	; 0x3fff
 800eff2:	2200      	movs	r2, #0
 800eff4:	9901      	ldr	r1, [sp, #4]
 800eff6:	428a      	cmp	r2, r1
 800eff8:	da0b      	bge.n	800f012 <GL_FillPolygon+0x32>
 800effa:	eb06 0182 	add.w	r1, r6, r2, lsl #2
 800effe:	3201      	adds	r2, #1
 800f000:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800f004:	428c      	cmp	r4, r1
 800f006:	bfa8      	it	ge
 800f008:	460c      	movge	r4, r1
 800f00a:	4589      	cmp	r9, r1
 800f00c:	bfb8      	it	lt
 800f00e:	4689      	movlt	r9, r1
 800f010:	e7f0      	b.n	800eff4 <GL_FillPolygon+0x14>
 800f012:	4960      	ldr	r1, [pc, #384]	; (800f194 <GL_FillPolygon+0x1b4>)
 800f014:	680a      	ldr	r2, [r1, #0]
 800f016:	6952      	ldr	r2, [r2, #20]
 800f018:	468b      	mov	fp, r1
 800f01a:	b15a      	cbz	r2, 800f034 <GL_FillPolygon+0x54>
 800f01c:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
 800f020:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 800f024:	1ac9      	subs	r1, r1, r3
 800f026:	1ad2      	subs	r2, r2, r3
 800f028:	4589      	cmp	r9, r1
 800f02a:	bfa8      	it	ge
 800f02c:	4689      	movge	r9, r1
 800f02e:	4294      	cmp	r4, r2
 800f030:	bfb8      	it	lt
 800f032:	4614      	movlt	r4, r2
 800f034:	eb04 0803 	add.w	r8, r4, r3
 800f038:	454c      	cmp	r4, r9
 800f03a:	f300 80a7 	bgt.w	800f18c <GL_FillPolygon+0x1ac>
 800f03e:	4b56      	ldr	r3, [pc, #344]	; (800f198 <GL_FillPolygon+0x1b8>)
 800f040:	2700      	movs	r7, #0
 800f042:	601f      	str	r7, [r3, #0]
 800f044:	4635      	mov	r5, r6
 800f046:	9901      	ldr	r1, [sp, #4]
 800f048:	428f      	cmp	r7, r1
 800f04a:	da55      	bge.n	800f0f8 <GL_FillPolygon+0x118>
 800f04c:	9b01      	ldr	r3, [sp, #4]
 800f04e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f052:	1e59      	subs	r1, r3, #1
 800f054:	428f      	cmp	r7, r1
 800f056:	bfb4      	ite	lt
 800f058:	f107 0c01 	addlt.w	ip, r7, #1
 800f05c:	f04f 0c00 	movge.w	ip, #0
 800f060:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800f064:	eb06 030c 	add.w	r3, r6, ip
 800f068:	42a2      	cmp	r2, r4
 800f06a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f06e:	d136      	bne.n	800f0de <GL_FillPolygon+0xfe>
 800f070:	42a3      	cmp	r3, r4
 800f072:	d002      	beq.n	800f07a <GL_FillPolygon+0x9a>
 800f074:	463a      	mov	r2, r7
 800f076:	2000      	movs	r0, #0
 800f078:	e01b      	b.n	800f0b2 <GL_FillPolygon+0xd2>
 800f07a:	f9b5 e000 	ldrsh.w	lr, [r5]
 800f07e:	f936 200c 	ldrsh.w	r2, [r6, ip]
 800f082:	f8db 3000 	ldr.w	r3, [fp]
 800f086:	44d6      	add	lr, sl
 800f088:	4452      	add	r2, sl
 800f08a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f08c:	4596      	cmp	lr, r2
 800f08e:	681b      	ldr	r3, [r3, #0]
 800f090:	da02      	bge.n	800f098 <GL_FillPolygon+0xb8>
 800f092:	4670      	mov	r0, lr
 800f094:	4641      	mov	r1, r8
 800f096:	e020      	b.n	800f0da <GL_FillPolygon+0xfa>
 800f098:	4610      	mov	r0, r2
 800f09a:	4641      	mov	r1, r8
 800f09c:	4672      	mov	r2, lr
 800f09e:	e01c      	b.n	800f0da <GL_FillPolygon+0xfa>
 800f0a0:	b152      	cbz	r2, 800f0b8 <GL_FillPolygon+0xd8>
 800f0a2:	3a01      	subs	r2, #1
 800f0a4:	eb06 0c82 	add.w	ip, r6, r2, lsl #2
 800f0a8:	f9bc c002 	ldrsh.w	ip, [ip, #2]
 800f0ac:	45a4      	cmp	ip, r4
 800f0ae:	d105      	bne.n	800f0bc <GL_FillPolygon+0xdc>
 800f0b0:	3001      	adds	r0, #1
 800f0b2:	4288      	cmp	r0, r1
 800f0b4:	dbf4      	blt.n	800f0a0 <GL_FillPolygon+0xc0>
 800f0b6:	e01c      	b.n	800f0f2 <GL_FillPolygon+0x112>
 800f0b8:	460a      	mov	r2, r1
 800f0ba:	e7f3      	b.n	800f0a4 <GL_FillPolygon+0xc4>
 800f0bc:	ebc4 0c0c 	rsb	ip, r4, ip
 800f0c0:	1b1b      	subs	r3, r3, r4
 800f0c2:	ea9c 0f03 	teq	ip, r3
 800f0c6:	f9b5 0000 	ldrsh.w	r0, [r5]
 800f0ca:	d44d      	bmi.n	800f168 <GL_FillPolygon+0x188>
 800f0cc:	f8db 3000 	ldr.w	r3, [fp]
 800f0d0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f0d2:	4450      	add	r0, sl
 800f0d4:	681b      	ldr	r3, [r3, #0]
 800f0d6:	4641      	mov	r1, r8
 800f0d8:	4602      	mov	r2, r0
 800f0da:	4798      	blx	r3
 800f0dc:	e009      	b.n	800f0f2 <GL_FillPolygon+0x112>
 800f0de:	42a3      	cmp	r3, r4
 800f0e0:	d007      	beq.n	800f0f2 <GL_FillPolygon+0x112>
 800f0e2:	db44      	blt.n	800f16e <GL_FillPolygon+0x18e>
 800f0e4:	42a2      	cmp	r2, r4
 800f0e6:	dd27      	ble.n	800f138 <GL_FillPolygon+0x158>
 800f0e8:	42a3      	cmp	r3, r4
 800f0ea:	dd42      	ble.n	800f172 <GL_FillPolygon+0x192>
 800f0ec:	e001      	b.n	800f0f2 <GL_FillPolygon+0x112>
 800f0ee:	42a3      	cmp	r3, r4
 800f0f0:	dd49      	ble.n	800f186 <GL_FillPolygon+0x1a6>
 800f0f2:	3701      	adds	r7, #1
 800f0f4:	3504      	adds	r5, #4
 800f0f6:	e7a6      	b.n	800f046 <GL_FillPolygon+0x66>
 800f0f8:	2500      	movs	r5, #0
 800f0fa:	4628      	mov	r0, r5
 800f0fc:	462f      	mov	r7, r5
 800f0fe:	4b26      	ldr	r3, [pc, #152]	; (800f198 <GL_FillPolygon+0x1b8>)
 800f100:	681b      	ldr	r3, [r3, #0]
 800f102:	429f      	cmp	r7, r3
 800f104:	da14      	bge.n	800f130 <GL_FillPolygon+0x150>
 800f106:	4b25      	ldr	r3, [pc, #148]	; (800f19c <GL_FillPolygon+0x1bc>)
 800f108:	f933 3017 	ldrsh.w	r3, [r3, r7, lsl #1]
 800f10c:	b15d      	cbz	r5, 800f126 <GL_FillPolygon+0x146>
 800f10e:	f8db 2000 	ldr.w	r2, [fp]
 800f112:	6e52      	ldr	r2, [r2, #100]	; 0x64
 800f114:	4450      	add	r0, sl
 800f116:	f8d2 c000 	ldr.w	ip, [r2]
 800f11a:	9300      	str	r3, [sp, #0]
 800f11c:	eb0a 0203 	add.w	r2, sl, r3
 800f120:	4641      	mov	r1, r8
 800f122:	47e0      	blx	ip
 800f124:	9b00      	ldr	r3, [sp, #0]
 800f126:	f085 0501 	eor.w	r5, r5, #1
 800f12a:	3701      	adds	r7, #1
 800f12c:	4618      	mov	r0, r3
 800f12e:	e7e6      	b.n	800f0fe <GL_FillPolygon+0x11e>
 800f130:	3401      	adds	r4, #1
 800f132:	f108 0801 	add.w	r8, r8, #1
 800f136:	e77f      	b.n	800f038 <GL_FillPolygon+0x58>
 800f138:	429a      	cmp	r2, r3
 800f13a:	dcd8      	bgt.n	800f0ee <GL_FillPolygon+0x10e>
 800f13c:	f9b5 1000 	ldrsh.w	r1, [r5]
 800f140:	f936 000c 	ldrsh.w	r0, [r6, ip]
 800f144:	ebc2 0e04 	rsb	lr, r2, r4
 800f148:	1a40      	subs	r0, r0, r1
 800f14a:	fb0e f000 	mul.w	r0, lr, r0
 800f14e:	2800      	cmp	r0, #0
 800f150:	ebc2 0303 	rsb	r3, r2, r3
 800f154:	bfdb      	ittet	le
 800f156:	105a      	asrle	r2, r3, #1
 800f158:	f1c2 0201 	rsble	r2, r2, #1
 800f15c:	eb00 0063 	addgt.w	r0, r0, r3, asr #1
 800f160:	1880      	addle	r0, r0, r2
 800f162:	fb90 f0f3 	sdiv	r0, r0, r3
 800f166:	4408      	add	r0, r1
 800f168:	f7ff ff16 	bl	800ef98 <_Add>
 800f16c:	e7c1      	b.n	800f0f2 <GL_FillPolygon+0x112>
 800f16e:	42a2      	cmp	r2, r4
 800f170:	dbbf      	blt.n	800f0f2 <GL_FillPolygon+0x112>
 800f172:	429a      	cmp	r2, r3
 800f174:	ddbd      	ble.n	800f0f2 <GL_FillPolygon+0x112>
 800f176:	4696      	mov	lr, r2
 800f178:	f936 100c 	ldrsh.w	r1, [r6, ip]
 800f17c:	f9b5 0000 	ldrsh.w	r0, [r5]
 800f180:	461a      	mov	r2, r3
 800f182:	4673      	mov	r3, lr
 800f184:	e7de      	b.n	800f144 <GL_FillPolygon+0x164>
 800f186:	42a2      	cmp	r2, r4
 800f188:	daf5      	bge.n	800f176 <GL_FillPolygon+0x196>
 800f18a:	e7b2      	b.n	800f0f2 <GL_FillPolygon+0x112>
 800f18c:	b003      	add	sp, #12
 800f18e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f192:	bf00      	nop
 800f194:	200000b8 	.word	0x200000b8
 800f198:	20002bb0 	.word	0x20002bb0
 800f19c:	20002bb4 	.word	0x20002bb4
 800f1a0:	ffffc001 	.word	0xffffc001

0800f1a4 <_DrawGradient>:
 800f1a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f1a8:	b08f      	sub	sp, #60	; 0x3c
 800f1aa:	4688      	mov	r8, r1
 800f1ac:	4614      	mov	r4, r2
 800f1ae:	991a      	ldr	r1, [sp, #104]	; 0x68
 800f1b0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800f1b2:	f8dd a060 	ldr.w	sl, [sp, #96]	; 0x60
 800f1b6:	f8dd b064 	ldr.w	fp, [sp, #100]	; 0x64
 800f1ba:	9104      	str	r1, [sp, #16]
 800f1bc:	4605      	mov	r5, r0
 800f1be:	461e      	mov	r6, r3
 800f1c0:	9203      	str	r2, [sp, #12]
 800f1c2:	f7fb fc1c 	bl	800a9fe <GUI_GetColor>
 800f1c6:	45da      	cmp	sl, fp
 800f1c8:	9009      	str	r0, [sp, #36]	; 0x24
 800f1ca:	d109      	bne.n	800f1e0 <_DrawGradient+0x3c>
 800f1cc:	4650      	mov	r0, sl
 800f1ce:	f7f9 fdcf 	bl	8008d70 <LCD_SetColor>
 800f1d2:	9b03      	ldr	r3, [sp, #12]
 800f1d4:	b113      	cbz	r3, 800f1dc <_DrawGradient+0x38>
 800f1d6:	4628      	mov	r0, r5
 800f1d8:	4641      	mov	r1, r8
 800f1da:	e09d      	b.n	800f318 <_DrawGradient+0x174>
 800f1dc:	4640      	mov	r0, r8
 800f1de:	e0a1      	b.n	800f324 <_DrawGradient+0x180>
 800f1e0:	ebb6 0708 	subs.w	r7, r6, r8
 800f1e4:	f000 80b2 	beq.w	800f34c <_DrawGradient+0x1a8>
 800f1e8:	fa5f f28a 	uxtb.w	r2, sl
 800f1ec:	fa5f f38b 	uxtb.w	r3, fp
 800f1f0:	1a9b      	subs	r3, r3, r2
 800f1f2:	930a      	str	r3, [sp, #40]	; 0x28
 800f1f4:	2302      	movs	r3, #2
 800f1f6:	fb97 f3f3 	sdiv	r3, r7, r3
 800f1fa:	fb02 3207 	mla	r2, r2, r7, r3
 800f1fe:	f3cb 2107 	ubfx	r1, fp, #8, #8
 800f202:	9205      	str	r2, [sp, #20]
 800f204:	f3ca 2207 	ubfx	r2, sl, #8, #8
 800f208:	1a89      	subs	r1, r1, r2
 800f20a:	fb02 3207 	mla	r2, r2, r7, r3
 800f20e:	910b      	str	r1, [sp, #44]	; 0x2c
 800f210:	9206      	str	r2, [sp, #24]
 800f212:	f3cb 4107 	ubfx	r1, fp, #16, #8
 800f216:	f3ca 4207 	ubfx	r2, sl, #16, #8
 800f21a:	ea4f 6a1a 	mov.w	sl, sl, lsr #24
 800f21e:	1a89      	subs	r1, r1, r2
 800f220:	ebca 6b1b 	rsb	fp, sl, fp, lsr #24
 800f224:	fb02 3207 	mla	r2, r2, r7, r3
 800f228:	fb0a 3a07 	mla	sl, sl, r7, r3
 800f22c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f22e:	910c      	str	r1, [sp, #48]	; 0x30
 800f230:	9207      	str	r2, [sp, #28]
 800f232:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
 800f236:	f8cd a020 	str.w	sl, [sp, #32]
 800f23a:	f108 33ff 	add.w	r3, r8, #4294967295
 800f23e:	f04f 0901 	mov.w	r9, #1
 800f242:	f103 0a01 	add.w	sl, r3, #1
 800f246:	45b2      	cmp	sl, r6
 800f248:	dc5b      	bgt.n	800f302 <_DrawGradient+0x15e>
 800f24a:	f8dd c014 	ldr.w	ip, [sp, #20]
 800f24e:	f8dd e028 	ldr.w	lr, [sp, #40]	; 0x28
 800f252:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f254:	fb9c fcf7 	sdiv	ip, ip, r7
 800f258:	f8cd c004 	str.w	ip, [sp, #4]
 800f25c:	f8dd c014 	ldr.w	ip, [sp, #20]
 800f260:	44f4      	add	ip, lr
 800f262:	f8cd c014 	str.w	ip, [sp, #20]
 800f266:	f8dd e02c 	ldr.w	lr, [sp, #44]	; 0x2c
 800f26a:	f8dd c018 	ldr.w	ip, [sp, #24]
 800f26e:	fb9c f1f7 	sdiv	r1, ip, r7
 800f272:	44f4      	add	ip, lr
 800f274:	f8cd c018 	str.w	ip, [sp, #24]
 800f278:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 800f27c:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800f280:	fb9c fbf7 	sdiv	fp, ip, r7
 800f284:	44f4      	add	ip, lr
 800f286:	f8cd c01c 	str.w	ip, [sp, #28]
 800f28a:	f8dd c020 	ldr.w	ip, [sp, #32]
 800f28e:	fb9c fef7 	sdiv	lr, ip, r7
 800f292:	4494      	add	ip, r2
 800f294:	f8cd c020 	str.w	ip, [sp, #32]
 800f298:	f8dd c004 	ldr.w	ip, [sp, #4]
 800f29c:	ea4f 4b0b 	mov.w	fp, fp, lsl #16
 800f2a0:	ea4b 6b0e 	orr.w	fp, fp, lr, lsl #24
 800f2a4:	ea4c 2201 	orr.w	r2, ip, r1, lsl #8
 800f2a8:	45c2      	cmp	sl, r8
 800f2aa:	ea4b 0b02 	orr.w	fp, fp, r2
 800f2ae:	dd25      	ble.n	800f2fc <_DrawGradient+0x158>
 800f2b0:	4583      	cmp	fp, r0
 800f2b2:	d102      	bne.n	800f2ba <_DrawGradient+0x116>
 800f2b4:	f109 0901 	add.w	r9, r9, #1
 800f2b8:	e020      	b.n	800f2fc <_DrawGradient+0x158>
 800f2ba:	9302      	str	r3, [sp, #8]
 800f2bc:	f7f9 fd58 	bl	8008d70 <LCD_SetColor>
 800f2c0:	f1b9 0f01 	cmp.w	r9, #1
 800f2c4:	9b02      	ldr	r3, [sp, #8]
 800f2c6:	d00f      	beq.n	800f2e8 <_DrawGradient+0x144>
 800f2c8:	9a03      	ldr	r2, [sp, #12]
 800f2ca:	ebc9 010a 	rsb	r1, r9, sl
 800f2ce:	b112      	cbz	r2, 800f2d6 <_DrawGradient+0x132>
 800f2d0:	4628      	mov	r0, r5
 800f2d2:	4622      	mov	r2, r4
 800f2d4:	e003      	b.n	800f2de <_DrawGradient+0x13a>
 800f2d6:	4608      	mov	r0, r1
 800f2d8:	461a      	mov	r2, r3
 800f2da:	4629      	mov	r1, r5
 800f2dc:	4623      	mov	r3, r4
 800f2de:	f7f9 fa6f 	bl	80087c0 <LCD_FillRect>
 800f2e2:	f04f 0901 	mov.w	r9, #1
 800f2e6:	e009      	b.n	800f2fc <_DrawGradient+0x158>
 800f2e8:	9903      	ldr	r1, [sp, #12]
 800f2ea:	b111      	cbz	r1, 800f2f2 <_DrawGradient+0x14e>
 800f2ec:	4628      	mov	r0, r5
 800f2ee:	4619      	mov	r1, r3
 800f2f0:	e001      	b.n	800f2f6 <_DrawGradient+0x152>
 800f2f2:	4618      	mov	r0, r3
 800f2f4:	4629      	mov	r1, r5
 800f2f6:	4622      	mov	r2, r4
 800f2f8:	9b04      	ldr	r3, [sp, #16]
 800f2fa:	4798      	blx	r3
 800f2fc:	4653      	mov	r3, sl
 800f2fe:	4658      	mov	r0, fp
 800f300:	e79f      	b.n	800f242 <_DrawGradient+0x9e>
 800f302:	f7f9 fd35 	bl	8008d70 <LCD_SetColor>
 800f306:	f1b9 0f01 	cmp.w	r9, #1
 800f30a:	d00f      	beq.n	800f32c <_DrawGradient+0x188>
 800f30c:	9a03      	ldr	r2, [sp, #12]
 800f30e:	ebc9 0106 	rsb	r1, r9, r6
 800f312:	b132      	cbz	r2, 800f322 <_DrawGradient+0x17e>
 800f314:	4628      	mov	r0, r5
 800f316:	3101      	adds	r1, #1
 800f318:	4622      	mov	r2, r4
 800f31a:	4633      	mov	r3, r6
 800f31c:	f7f9 fa50 	bl	80087c0 <LCD_FillRect>
 800f320:	e00e      	b.n	800f340 <_DrawGradient+0x19c>
 800f322:	1c48      	adds	r0, r1, #1
 800f324:	4629      	mov	r1, r5
 800f326:	4632      	mov	r2, r6
 800f328:	4623      	mov	r3, r4
 800f32a:	e7f7      	b.n	800f31c <_DrawGradient+0x178>
 800f32c:	9b03      	ldr	r3, [sp, #12]
 800f32e:	b113      	cbz	r3, 800f336 <_DrawGradient+0x192>
 800f330:	4628      	mov	r0, r5
 800f332:	4631      	mov	r1, r6
 800f334:	e001      	b.n	800f33a <_DrawGradient+0x196>
 800f336:	4630      	mov	r0, r6
 800f338:	4629      	mov	r1, r5
 800f33a:	4622      	mov	r2, r4
 800f33c:	9b04      	ldr	r3, [sp, #16]
 800f33e:	4798      	blx	r3
 800f340:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f342:	b00f      	add	sp, #60	; 0x3c
 800f344:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f348:	f7f9 bd12 	b.w	8008d70 <LCD_SetColor>
 800f34c:	b00f      	add	sp, #60	; 0x3c
 800f34e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800f354 <GUI_DrawGradientV>:
 800f354:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f358:	4c15      	ldr	r4, [pc, #84]	; (800f3b0 <GUI_DrawGradientV+0x5c>)
 800f35a:	6824      	ldr	r4, [r4, #0]
 800f35c:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800f35e:	6d24      	ldr	r4, [r4, #80]	; 0x50
 800f360:	b087      	sub	sp, #28
 800f362:	eb00 0905 	add.w	r9, r0, r5
 800f366:	eb01 0804 	add.w	r8, r1, r4
 800f36a:	4415      	add	r5, r2
 800f36c:	441c      	add	r4, r3
 800f36e:	a804      	add	r0, sp, #16
 800f370:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800f372:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800f374:	f8ad 9010 	strh.w	r9, [sp, #16]
 800f378:	f8ad 5014 	strh.w	r5, [sp, #20]
 800f37c:	f8ad 8012 	strh.w	r8, [sp, #18]
 800f380:	f8ad 4016 	strh.w	r4, [sp, #22]
 800f384:	f7f6 fcf4 	bl	8005d70 <WM__InitIVRSearch>
 800f388:	b170      	cbz	r0, 800f3a8 <GUI_DrawGradientV+0x54>
 800f38a:	4b0a      	ldr	r3, [pc, #40]	; (800f3b4 <GUI_DrawGradientV+0x60>)
 800f38c:	9302      	str	r3, [sp, #8]
 800f38e:	2301      	movs	r3, #1
 800f390:	9303      	str	r3, [sp, #12]
 800f392:	4648      	mov	r0, r9
 800f394:	4641      	mov	r1, r8
 800f396:	462a      	mov	r2, r5
 800f398:	4623      	mov	r3, r4
 800f39a:	9700      	str	r7, [sp, #0]
 800f39c:	9601      	str	r6, [sp, #4]
 800f39e:	f7ff ff01 	bl	800f1a4 <_DrawGradient>
 800f3a2:	f7f6 fc23 	bl	8005bec <WM__GetNextIVR>
 800f3a6:	e7ef      	b.n	800f388 <GUI_DrawGradientV+0x34>
 800f3a8:	b007      	add	sp, #28
 800f3aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f3ae:	bf00      	nop
 800f3b0:	200000b8 	.word	0x200000b8
 800f3b4:	08008729 	.word	0x08008729

0800f3b8 <GUI_DrawGradientH>:
 800f3b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f3bc:	4c15      	ldr	r4, [pc, #84]	; (800f414 <GUI_DrawGradientH+0x5c>)
 800f3be:	6825      	ldr	r5, [r4, #0]
 800f3c0:	6cec      	ldr	r4, [r5, #76]	; 0x4c
 800f3c2:	6d2d      	ldr	r5, [r5, #80]	; 0x50
 800f3c4:	b087      	sub	sp, #28
 800f3c6:	eb00 0804 	add.w	r8, r0, r4
 800f3ca:	eb01 0905 	add.w	r9, r1, r5
 800f3ce:	4414      	add	r4, r2
 800f3d0:	441d      	add	r5, r3
 800f3d2:	a804      	add	r0, sp, #16
 800f3d4:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800f3d6:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800f3d8:	f8ad 8010 	strh.w	r8, [sp, #16]
 800f3dc:	f8ad 4014 	strh.w	r4, [sp, #20]
 800f3e0:	f8ad 9012 	strh.w	r9, [sp, #18]
 800f3e4:	f8ad 5016 	strh.w	r5, [sp, #22]
 800f3e8:	f7f6 fcc2 	bl	8005d70 <WM__InitIVRSearch>
 800f3ec:	b170      	cbz	r0, 800f40c <GUI_DrawGradientH+0x54>
 800f3ee:	4b0a      	ldr	r3, [pc, #40]	; (800f418 <GUI_DrawGradientH+0x60>)
 800f3f0:	9302      	str	r3, [sp, #8]
 800f3f2:	2300      	movs	r3, #0
 800f3f4:	9303      	str	r3, [sp, #12]
 800f3f6:	4648      	mov	r0, r9
 800f3f8:	4641      	mov	r1, r8
 800f3fa:	462a      	mov	r2, r5
 800f3fc:	4623      	mov	r3, r4
 800f3fe:	9700      	str	r7, [sp, #0]
 800f400:	9601      	str	r6, [sp, #4]
 800f402:	f7ff fecf 	bl	800f1a4 <_DrawGradient>
 800f406:	f7f6 fbf1 	bl	8005bec <WM__GetNextIVR>
 800f40a:	e7ef      	b.n	800f3ec <GUI_DrawGradientH+0x34>
 800f40c:	b007      	add	sp, #28
 800f40e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f412:	bf00      	nop
 800f414:	200000b8 	.word	0x200000b8
 800f418:	08008775 	.word	0x08008775

0800f41c <_GetIndexMask_0>:
 800f41c:	b508      	push	{r3, lr}
 800f41e:	f7f9 f88d 	bl	800853c <LCD_GetNumColors>
 800f422:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 800f426:	d010      	beq.n	800f44a <_GetIndexMask_0+0x2e>
 800f428:	287f      	cmp	r0, #127	; 0x7f
 800f42a:	d810      	bhi.n	800f44e <_GetIndexMask_0+0x32>
 800f42c:	283f      	cmp	r0, #63	; 0x3f
 800f42e:	d810      	bhi.n	800f452 <_GetIndexMask_0+0x36>
 800f430:	281f      	cmp	r0, #31
 800f432:	d810      	bhi.n	800f456 <_GetIndexMask_0+0x3a>
 800f434:	280f      	cmp	r0, #15
 800f436:	d810      	bhi.n	800f45a <_GetIndexMask_0+0x3e>
 800f438:	2807      	cmp	r0, #7
 800f43a:	d810      	bhi.n	800f45e <_GetIndexMask_0+0x42>
 800f43c:	2803      	cmp	r0, #3
 800f43e:	d810      	bhi.n	800f462 <_GetIndexMask_0+0x46>
 800f440:	2801      	cmp	r0, #1
 800f442:	bf94      	ite	ls
 800f444:	2000      	movls	r0, #0
 800f446:	2001      	movhi	r0, #1
 800f448:	e00c      	b.n	800f464 <_GetIndexMask_0+0x48>
 800f44a:	2008      	movs	r0, #8
 800f44c:	e00a      	b.n	800f464 <_GetIndexMask_0+0x48>
 800f44e:	2007      	movs	r0, #7
 800f450:	e008      	b.n	800f464 <_GetIndexMask_0+0x48>
 800f452:	2006      	movs	r0, #6
 800f454:	e006      	b.n	800f464 <_GetIndexMask_0+0x48>
 800f456:	2005      	movs	r0, #5
 800f458:	e004      	b.n	800f464 <_GetIndexMask_0+0x48>
 800f45a:	2004      	movs	r0, #4
 800f45c:	e002      	b.n	800f464 <_GetIndexMask_0+0x48>
 800f45e:	2003      	movs	r0, #3
 800f460:	e000      	b.n	800f464 <_GetIndexMask_0+0x48>
 800f462:	2002      	movs	r0, #2
 800f464:	2301      	movs	r3, #1
 800f466:	fa03 f000 	lsl.w	r0, r3, r0
 800f46a:	3801      	subs	r0, #1
 800f46c:	bd08      	pop	{r3, pc}

0800f46e <_Index2Color_0>:
 800f46e:	b538      	push	{r3, r4, r5, lr}
 800f470:	4604      	mov	r4, r0
 800f472:	f7f9 f863 	bl	800853c <LCD_GetNumColors>
 800f476:	4605      	mov	r5, r0
 800f478:	f7f9 f87e 	bl	8008578 <LCD_GetPalette>
 800f47c:	42ac      	cmp	r4, r5
 800f47e:	d203      	bcs.n	800f488 <_Index2Color_0+0x1a>
 800f480:	b118      	cbz	r0, 800f48a <_Index2Color_0+0x1c>
 800f482:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800f486:	bd38      	pop	{r3, r4, r5, pc}
 800f488:	2000      	movs	r0, #0
 800f48a:	bd38      	pop	{r3, r4, r5, pc}

0800f48c <_Color2Index_0>:
 800f48c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f490:	4682      	mov	sl, r0
 800f492:	f7f9 f853 	bl	800853c <LCD_GetNumColors>
 800f496:	4681      	mov	r9, r0
 800f498:	f7f9 f86e 	bl	8008578 <LCD_GetPalette>
 800f49c:	4605      	mov	r5, r0
 800f49e:	b1e0      	cbz	r0, 800f4da <_Color2Index_0+0x4e>
 800f4a0:	2300      	movs	r3, #0
 800f4a2:	f855 2023 	ldr.w	r2, [r5, r3, lsl #2]
 800f4a6:	4592      	cmp	sl, r2
 800f4a8:	d019      	beq.n	800f4de <_Color2Index_0+0x52>
 800f4aa:	3301      	adds	r3, #1
 800f4ac:	454b      	cmp	r3, r9
 800f4ae:	dbf8      	blt.n	800f4a2 <_Color2Index_0+0x16>
 800f4b0:	2700      	movs	r7, #0
 800f4b2:	f06f 487f 	mvn.w	r8, #4278190080	; 0xff000000
 800f4b6:	463c      	mov	r4, r7
 800f4b8:	f855 1024 	ldr.w	r1, [r5, r4, lsl #2]
 800f4bc:	4650      	mov	r0, sl
 800f4be:	f7fb fa6b 	bl	800a998 <GUI_CalcColorDist>
 800f4c2:	4626      	mov	r6, r4
 800f4c4:	4540      	cmp	r0, r8
 800f4c6:	f104 0401 	add.w	r4, r4, #1
 800f4ca:	bf24      	itt	cs
 800f4cc:	4640      	movcs	r0, r8
 800f4ce:	463e      	movcs	r6, r7
 800f4d0:	454c      	cmp	r4, r9
 800f4d2:	da07      	bge.n	800f4e4 <_Color2Index_0+0x58>
 800f4d4:	4680      	mov	r8, r0
 800f4d6:	4637      	mov	r7, r6
 800f4d8:	e7ee      	b.n	800f4b8 <_Color2Index_0+0x2c>
 800f4da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f4de:	4618      	mov	r0, r3
 800f4e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f4e4:	4630      	mov	r0, r6
 800f4e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800f4ec <_DrawDownRect>:
 800f4ec:	b510      	push	{r4, lr}
 800f4ee:	b09c      	sub	sp, #112	; 0x70
 800f4f0:	4604      	mov	r4, r0
 800f4f2:	4668      	mov	r0, sp
 800f4f4:	f7fb fb38 	bl	800ab68 <GUI_SaveContext_W>
 800f4f8:	4b09      	ldr	r3, [pc, #36]	; (800f520 <_DrawDownRect+0x34>)
 800f4fa:	6818      	ldr	r0, [r3, #0]
 800f4fc:	f7f9 fc38 	bl	8008d70 <LCD_SetColor>
 800f500:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f504:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f508:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f50c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f510:	f7fc f9ea 	bl	800b8e8 <GUI_DrawRect>
 800f514:	4668      	mov	r0, sp
 800f516:	f7fb fb31 	bl	800ab7c <GUI_RestoreContext>
 800f51a:	b01c      	add	sp, #112	; 0x70
 800f51c:	bd10      	pop	{r4, pc}
 800f51e:	bf00      	nop
 800f520:	20002bcc 	.word	0x20002bcc

0800f524 <_DrawUpRect>:
 800f524:	b510      	push	{r4, lr}
 800f526:	b09c      	sub	sp, #112	; 0x70
 800f528:	4604      	mov	r4, r0
 800f52a:	4668      	mov	r0, sp
 800f52c:	f7fb fb1c 	bl	800ab68 <GUI_SaveContext_W>
 800f530:	4b09      	ldr	r3, [pc, #36]	; (800f558 <_DrawUpRect+0x34>)
 800f532:	6818      	ldr	r0, [r3, #0]
 800f534:	f7f9 fc1c 	bl	8008d70 <LCD_SetColor>
 800f538:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f53c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f540:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f544:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f548:	f7fc f9ce 	bl	800b8e8 <GUI_DrawRect>
 800f54c:	4668      	mov	r0, sp
 800f54e:	f7fb fb15 	bl	800ab7c <GUI_RestoreContext>
 800f552:	b01c      	add	sp, #112	; 0x70
 800f554:	bd10      	pop	{r4, pc}
 800f556:	bf00      	nop
 800f558:	20002bcc 	.word	0x20002bcc

0800f55c <_DrawDown>:
 800f55c:	b507      	push	{r0, r1, r2, lr}
 800f55e:	4668      	mov	r0, sp
 800f560:	f7f5 f8d4 	bl	800470c <WM_GetClientRect>
 800f564:	4668      	mov	r0, sp
 800f566:	f7ff ffc1 	bl	800f4ec <_DrawDownRect>
 800f56a:	b003      	add	sp, #12
 800f56c:	f85d fb04 	ldr.w	pc, [sp], #4

0800f570 <_DrawUp>:
 800f570:	b507      	push	{r0, r1, r2, lr}
 800f572:	4668      	mov	r0, sp
 800f574:	f7f5 f8ca 	bl	800470c <WM_GetClientRect>
 800f578:	4668      	mov	r0, sp
 800f57a:	f7ff ffd3 	bl	800f524 <_DrawUpRect>
 800f57e:	b003      	add	sp, #12
 800f580:	f85d fb04 	ldr.w	pc, [sp], #4

0800f584 <_GetArrowPara>:
 800f584:	b510      	push	{r4, lr}
 800f586:	b121      	cbz	r1, 800f592 <_GetArrowPara+0xe>
 800f588:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800f58c:	f9b0 1000 	ldrsh.w	r1, [r0]
 800f590:	e003      	b.n	800f59a <_GetArrowPara+0x16>
 800f592:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 800f596:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f59a:	1a61      	subs	r1, r4, r1
 800f59c:	3101      	adds	r1, #1
 800f59e:	1f0c      	subs	r4, r1, #4
 800f5a0:	2003      	movs	r0, #3
 800f5a2:	fb94 f0f0 	sdiv	r0, r4, r0
 800f5a6:	6010      	str	r0, [r2, #0]
 800f5a8:	1a08      	subs	r0, r1, r0
 800f5aa:	eba1 0160 	sub.w	r1, r1, r0, asr #1
 800f5ae:	3901      	subs	r1, #1
 800f5b0:	6019      	str	r1, [r3, #0]
 800f5b2:	bd10      	pop	{r4, pc}

0800f5b4 <_DrawGraspH>:
 800f5b4:	b570      	push	{r4, r5, r6, lr}
 800f5b6:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f5ba:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 800f5be:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 800f5c2:	441e      	add	r6, r3
 800f5c4:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800f5c8:	6a88      	ldr	r0, [r1, #40]	; 0x28
 800f5ca:	1b5c      	subs	r4, r3, r5
 800f5cc:	3403      	adds	r4, #3
 800f5ce:	10a4      	asrs	r4, r4, #2
 800f5d0:	4425      	add	r5, r4
 800f5d2:	1076      	asrs	r6, r6, #1
 800f5d4:	1b1c      	subs	r4, r3, r4
 800f5d6:	f7fb fae6 	bl	800aba6 <GUI_SetColor>
 800f5da:	4630      	mov	r0, r6
 800f5dc:	4629      	mov	r1, r5
 800f5de:	4622      	mov	r2, r4
 800f5e0:	f7fa fc1a 	bl	8009e18 <GUI_DrawVLine>
 800f5e4:	1cb0      	adds	r0, r6, #2
 800f5e6:	4629      	mov	r1, r5
 800f5e8:	4622      	mov	r2, r4
 800f5ea:	f7fa fc15 	bl	8009e18 <GUI_DrawVLine>
 800f5ee:	1d30      	adds	r0, r6, #4
 800f5f0:	4629      	mov	r1, r5
 800f5f2:	4622      	mov	r2, r4
 800f5f4:	f7fa fc10 	bl	8009e18 <GUI_DrawVLine>
 800f5f8:	1eb0      	subs	r0, r6, #2
 800f5fa:	4629      	mov	r1, r5
 800f5fc:	4622      	mov	r2, r4
 800f5fe:	f7fa fc0b 	bl	8009e18 <GUI_DrawVLine>
 800f602:	1f30      	subs	r0, r6, #4
 800f604:	4629      	mov	r1, r5
 800f606:	4622      	mov	r2, r4
 800f608:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f60c:	f7fa bc04 	b.w	8009e18 <GUI_DrawVLine>

0800f610 <_DrawGraspV>:
 800f610:	b570      	push	{r4, r5, r6, lr}
 800f612:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800f616:	f9b0 6006 	ldrsh.w	r6, [r0, #6]
 800f61a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f61e:	441e      	add	r6, r3
 800f620:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f624:	6a88      	ldr	r0, [r1, #40]	; 0x28
 800f626:	1b5c      	subs	r4, r3, r5
 800f628:	3403      	adds	r4, #3
 800f62a:	10a4      	asrs	r4, r4, #2
 800f62c:	4425      	add	r5, r4
 800f62e:	1076      	asrs	r6, r6, #1
 800f630:	1b1c      	subs	r4, r3, r4
 800f632:	f7fb fab8 	bl	800aba6 <GUI_SetColor>
 800f636:	4630      	mov	r0, r6
 800f638:	4629      	mov	r1, r5
 800f63a:	4622      	mov	r2, r4
 800f63c:	f7fa fb92 	bl	8009d64 <GUI_DrawHLine>
 800f640:	1cb0      	adds	r0, r6, #2
 800f642:	4629      	mov	r1, r5
 800f644:	4622      	mov	r2, r4
 800f646:	f7fa fb8d 	bl	8009d64 <GUI_DrawHLine>
 800f64a:	1d30      	adds	r0, r6, #4
 800f64c:	4629      	mov	r1, r5
 800f64e:	4622      	mov	r2, r4
 800f650:	f7fa fb88 	bl	8009d64 <GUI_DrawHLine>
 800f654:	1eb0      	subs	r0, r6, #2
 800f656:	4629      	mov	r1, r5
 800f658:	4622      	mov	r2, r4
 800f65a:	f7fa fb83 	bl	8009d64 <GUI_DrawHLine>
 800f65e:	1f30      	subs	r0, r6, #4
 800f660:	4629      	mov	r1, r5
 800f662:	4622      	mov	r2, r4
 800f664:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f668:	f7fa bb7c 	b.w	8009d64 <GUI_DrawHLine>

0800f66c <_DrawFrame>:
 800f66c:	b538      	push	{r3, r4, r5, lr}
 800f66e:	4604      	mov	r4, r0
 800f670:	6808      	ldr	r0, [r1, #0]
 800f672:	460d      	mov	r5, r1
 800f674:	f7fb fa97 	bl	800aba6 <GUI_SetColor>
 800f678:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f67c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f680:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 800f684:	3101      	adds	r1, #1
 800f686:	3a01      	subs	r2, #1
 800f688:	f7fa fb6c 	bl	8009d64 <GUI_DrawHLine>
 800f68c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f690:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f694:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 800f698:	3101      	adds	r1, #1
 800f69a:	3a01      	subs	r2, #1
 800f69c:	f7fa fb62 	bl	8009d64 <GUI_DrawHLine>
 800f6a0:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f6a4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f6a8:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f6ac:	3101      	adds	r1, #1
 800f6ae:	3a01      	subs	r2, #1
 800f6b0:	f7fa fbb2 	bl	8009e18 <GUI_DrawVLine>
 800f6b4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f6b8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f6bc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f6c0:	3101      	adds	r1, #1
 800f6c2:	3a01      	subs	r2, #1
 800f6c4:	f7fa fba8 	bl	8009e18 <GUI_DrawVLine>
 800f6c8:	6868      	ldr	r0, [r5, #4]
 800f6ca:	f7fb fa6c 	bl	800aba6 <GUI_SetColor>
 800f6ce:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 800f6d2:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f6d6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f6da:	3001      	adds	r0, #1
 800f6dc:	3101      	adds	r1, #1
 800f6de:	3a01      	subs	r2, #1
 800f6e0:	f7fa fb40 	bl	8009d64 <GUI_DrawHLine>
 800f6e4:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 800f6e8:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f6ec:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f6f0:	3801      	subs	r0, #1
 800f6f2:	3101      	adds	r1, #1
 800f6f4:	3a01      	subs	r2, #1
 800f6f6:	f7fa fb35 	bl	8009d64 <GUI_DrawHLine>
 800f6fa:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f6fe:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f702:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f706:	3001      	adds	r0, #1
 800f708:	3102      	adds	r1, #2
 800f70a:	3a02      	subs	r2, #2
 800f70c:	f7fa fb84 	bl	8009e18 <GUI_DrawVLine>
 800f710:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f714:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f718:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f71c:	3102      	adds	r1, #2
 800f71e:	3a02      	subs	r2, #2
 800f720:	3801      	subs	r0, #1
 800f722:	f7fa fb79 	bl	8009e18 <GUI_DrawVLine>
 800f726:	68a8      	ldr	r0, [r5, #8]
 800f728:	f7fb fa3d 	bl	800aba6 <GUI_SetColor>
 800f72c:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f730:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f734:	f7fa fb3a 	bl	8009dac <GUI_DrawPixel>
 800f738:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f73c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800f740:	f7fa fb34 	bl	8009dac <GUI_DrawPixel>
 800f744:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f748:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f74c:	f7fa fb2e 	bl	8009dac <GUI_DrawPixel>
 800f750:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f754:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800f758:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f75c:	f7fa bb26 	b.w	8009dac <GUI_DrawPixel>

0800f760 <_DrawBackgroundH>:
 800f760:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f762:	4604      	mov	r4, r0
 800f764:	460d      	mov	r5, r1
 800f766:	f7ff ff81 	bl	800f66c <_DrawFrame>
 800f76a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f76e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f772:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f776:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f77a:	68ee      	ldr	r6, [r5, #12]
 800f77c:	9600      	str	r6, [sp, #0]
 800f77e:	440b      	add	r3, r1
 800f780:	692e      	ldr	r6, [r5, #16]
 800f782:	9601      	str	r6, [sp, #4]
 800f784:	3002      	adds	r0, #2
 800f786:	3102      	adds	r1, #2
 800f788:	3a02      	subs	r2, #2
 800f78a:	105b      	asrs	r3, r3, #1
 800f78c:	f7ff fde2 	bl	800f354 <GUI_DrawGradientV>
 800f790:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f794:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f798:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f79c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f7a0:	696c      	ldr	r4, [r5, #20]
 800f7a2:	9400      	str	r4, [sp, #0]
 800f7a4:	4419      	add	r1, r3
 800f7a6:	69ac      	ldr	r4, [r5, #24]
 800f7a8:	9401      	str	r4, [sp, #4]
 800f7aa:	1049      	asrs	r1, r1, #1
 800f7ac:	3002      	adds	r0, #2
 800f7ae:	3101      	adds	r1, #1
 800f7b0:	3a02      	subs	r2, #2
 800f7b2:	3b02      	subs	r3, #2
 800f7b4:	f7ff fdce 	bl	800f354 <GUI_DrawGradientV>
 800f7b8:	b002      	add	sp, #8
 800f7ba:	bd70      	pop	{r4, r5, r6, pc}

0800f7bc <_DrawBackgroundV>:
 800f7bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f7be:	4604      	mov	r4, r0
 800f7c0:	460d      	mov	r5, r1
 800f7c2:	f7ff ff53 	bl	800f66c <_DrawFrame>
 800f7c6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f7ca:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f7ce:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f7d2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f7d6:	68ee      	ldr	r6, [r5, #12]
 800f7d8:	9600      	str	r6, [sp, #0]
 800f7da:	4402      	add	r2, r0
 800f7dc:	692e      	ldr	r6, [r5, #16]
 800f7de:	9601      	str	r6, [sp, #4]
 800f7e0:	3002      	adds	r0, #2
 800f7e2:	3102      	adds	r1, #2
 800f7e4:	1052      	asrs	r2, r2, #1
 800f7e6:	3b02      	subs	r3, #2
 800f7e8:	f7ff fde6 	bl	800f3b8 <GUI_DrawGradientH>
 800f7ec:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f7f0:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f7f4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f7f8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f7fc:	696c      	ldr	r4, [r5, #20]
 800f7fe:	9400      	str	r4, [sp, #0]
 800f800:	4410      	add	r0, r2
 800f802:	69ac      	ldr	r4, [r5, #24]
 800f804:	9401      	str	r4, [sp, #4]
 800f806:	1040      	asrs	r0, r0, #1
 800f808:	3001      	adds	r0, #1
 800f80a:	3102      	adds	r1, #2
 800f80c:	3a02      	subs	r2, #2
 800f80e:	3b02      	subs	r3, #2
 800f810:	f7ff fdd2 	bl	800f3b8 <GUI_DrawGradientH>
 800f814:	b002      	add	sp, #8
 800f816:	bd70      	pop	{r4, r5, r6, pc}

0800f818 <SCROLLBAR_DrawSkinFlex>:
 800f818:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f81c:	4604      	mov	r4, r0
 800f81e:	b08b      	sub	sp, #44	; 0x2c
 800f820:	6800      	ldr	r0, [r0, #0]
 800f822:	f7fb fe21 	bl	800b468 <GUI_ALLOC_LockH>
 800f826:	4607      	mov	r7, r0
 800f828:	a80a      	add	r0, sp, #40	; 0x28
 800f82a:	ae06      	add	r6, sp, #24
 800f82c:	f840 7d1c 	str.w	r7, [r0, #-28]!
 800f830:	f7fb fe28 	bl	800b484 <GUI_ALLOC_UnlockH>
 800f834:	6923      	ldr	r3, [r4, #16]
 800f836:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f83a:	6963      	ldr	r3, [r4, #20]
 800f83c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f840:	69a3      	ldr	r3, [r4, #24]
 800f842:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f846:	69e3      	ldr	r3, [r4, #28]
 800f848:	f8ad 301e 	strh.w	r3, [sp, #30]
 800f84c:	6a25      	ldr	r5, [r4, #32]
 800f84e:	e896 0003 	ldmia.w	r6, {r0, r1}
 800f852:	682b      	ldr	r3, [r5, #0]
 800f854:	f10d 0820 	add.w	r8, sp, #32
 800f858:	e888 0003 	stmia.w	r8, {r0, r1}
 800f85c:	b153      	cbz	r3, 800f874 <SCROLLBAR_DrawSkinFlex+0x5c>
 800f85e:	4638      	mov	r0, r7
 800f860:	4631      	mov	r1, r6
 800f862:	4632      	mov	r2, r6
 800f864:	f7fc f94d 	bl	800bb02 <WIDGET__RotateRect90>
 800f868:	f8df 913c 	ldr.w	r9, [pc, #316]	; 800f9a8 <SCROLLBAR_DrawSkinFlex+0x190>
 800f86c:	f8df c13c 	ldr.w	ip, [pc, #316]	; 800f9ac <SCROLLBAR_DrawSkinFlex+0x194>
 800f870:	4b49      	ldr	r3, [pc, #292]	; (800f998 <SCROLLBAR_DrawSkinFlex+0x180>)
 800f872:	e004      	b.n	800f87e <SCROLLBAR_DrawSkinFlex+0x66>
 800f874:	f8df 9138 	ldr.w	r9, [pc, #312]	; 800f9b0 <SCROLLBAR_DrawSkinFlex+0x198>
 800f878:	f8df c138 	ldr.w	ip, [pc, #312]	; 800f9b4 <SCROLLBAR_DrawSkinFlex+0x19c>
 800f87c:	4b47      	ldr	r3, [pc, #284]	; (800f99c <SCROLLBAR_DrawSkinFlex+0x184>)
 800f87e:	6862      	ldr	r2, [r4, #4]
 800f880:	3a08      	subs	r2, #8
 800f882:	2a11      	cmp	r2, #17
 800f884:	f200 8083 	bhi.w	800f98e <SCROLLBAR_DrawSkinFlex+0x176>
 800f888:	e8df f002 	tbb	[pc, r2]
 800f88c:	81815f13 	.word	0x81815f13
 800f890:	81818134 	.word	0x81818134
 800f894:	43813434 	.word	0x43813434
 800f898:	81818181 	.word	0x81818181
 800f89c:	0981      	.short	0x0981
 800f89e:	682b      	ldr	r3, [r5, #0]
 800f8a0:	b113      	cbz	r3, 800f8a8 <SCROLLBAR_DrawSkinFlex+0x90>
 800f8a2:	69a0      	ldr	r0, [r4, #24]
 800f8a4:	6923      	ldr	r3, [r4, #16]
 800f8a6:	e001      	b.n	800f8ac <SCROLLBAR_DrawSkinFlex+0x94>
 800f8a8:	69e0      	ldr	r0, [r4, #28]
 800f8aa:	6963      	ldr	r3, [r4, #20]
 800f8ac:	1ac0      	subs	r0, r0, r3
 800f8ae:	3001      	adds	r0, #1
 800f8b0:	e06e      	b.n	800f990 <SCROLLBAR_DrawSkinFlex+0x178>
 800f8b2:	686a      	ldr	r2, [r5, #4]
 800f8b4:	493a      	ldr	r1, [pc, #232]	; (800f9a0 <SCROLLBAR_DrawSkinFlex+0x188>)
 800f8b6:	4c3b      	ldr	r4, [pc, #236]	; (800f9a4 <SCROLLBAR_DrawSkinFlex+0x18c>)
 800f8b8:	2a02      	cmp	r2, #2
 800f8ba:	bf08      	it	eq
 800f8bc:	460c      	moveq	r4, r1
 800f8be:	4630      	mov	r0, r6
 800f8c0:	4621      	mov	r1, r4
 800f8c2:	4798      	blx	r3
 800f8c4:	6829      	ldr	r1, [r5, #0]
 800f8c6:	aa04      	add	r2, sp, #16
 800f8c8:	ab05      	add	r3, sp, #20
 800f8ca:	4640      	mov	r0, r8
 800f8cc:	f7ff fe5a 	bl	800f584 <_GetArrowPara>
 800f8d0:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800f8d2:	f7fb f968 	bl	800aba6 <GUI_SetColor>
 800f8d6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800f8da:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 800f8de:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 800f8e2:	1ad2      	subs	r2, r2, r3
 800f8e4:	f04f 33ff 	mov.w	r3, #4294967295
 800f8e8:	9300      	str	r3, [sp, #0]
 800f8ea:	9b05      	ldr	r3, [sp, #20]
 800f8ec:	3201      	adds	r2, #1
 800f8ee:	4638      	mov	r0, r7
 800f8f0:	4419      	add	r1, r3
 800f8f2:	e048      	b.n	800f986 <SCROLLBAR_DrawSkinFlex+0x16e>
 800f8f4:	4c2b      	ldr	r4, [pc, #172]	; (800f9a4 <SCROLLBAR_DrawSkinFlex+0x18c>)
 800f8f6:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 800f8fa:	69e5      	ldr	r5, [r4, #28]
 800f8fc:	9500      	str	r5, [sp, #0]
 800f8fe:	6a24      	ldr	r4, [r4, #32]
 800f900:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 800f904:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 800f908:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800f90c:	9401      	str	r4, [sp, #4]
 800f90e:	47e0      	blx	ip
 800f910:	e03d      	b.n	800f98e <SCROLLBAR_DrawSkinFlex+0x176>
 800f912:	686a      	ldr	r2, [r5, #4]
 800f914:	4922      	ldr	r1, [pc, #136]	; (800f9a0 <SCROLLBAR_DrawSkinFlex+0x188>)
 800f916:	4c23      	ldr	r4, [pc, #140]	; (800f9a4 <SCROLLBAR_DrawSkinFlex+0x18c>)
 800f918:	2a03      	cmp	r2, #3
 800f91a:	bf08      	it	eq
 800f91c:	460c      	moveq	r4, r1
 800f91e:	4630      	mov	r0, r6
 800f920:	4621      	mov	r1, r4
 800f922:	4798      	blx	r3
 800f924:	682b      	ldr	r3, [r5, #0]
 800f926:	b123      	cbz	r3, 800f932 <SCROLLBAR_DrawSkinFlex+0x11a>
 800f928:	f9bd 201e 	ldrsh.w	r2, [sp, #30]
 800f92c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800f930:	e003      	b.n	800f93a <SCROLLBAR_DrawSkinFlex+0x122>
 800f932:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 800f936:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f93a:	1ad3      	subs	r3, r2, r3
 800f93c:	3301      	adds	r3, #1
 800f93e:	2b0e      	cmp	r3, #14
 800f940:	dd25      	ble.n	800f98e <SCROLLBAR_DrawSkinFlex+0x176>
 800f942:	4630      	mov	r0, r6
 800f944:	4621      	mov	r1, r4
 800f946:	47c8      	blx	r9
 800f948:	e021      	b.n	800f98e <SCROLLBAR_DrawSkinFlex+0x176>
 800f94a:	686a      	ldr	r2, [r5, #4]
 800f94c:	4914      	ldr	r1, [pc, #80]	; (800f9a0 <SCROLLBAR_DrawSkinFlex+0x188>)
 800f94e:	4c15      	ldr	r4, [pc, #84]	; (800f9a4 <SCROLLBAR_DrawSkinFlex+0x18c>)
 800f950:	2a01      	cmp	r2, #1
 800f952:	bf08      	it	eq
 800f954:	460c      	moveq	r4, r1
 800f956:	4630      	mov	r0, r6
 800f958:	4621      	mov	r1, r4
 800f95a:	4798      	blx	r3
 800f95c:	6829      	ldr	r1, [r5, #0]
 800f95e:	aa04      	add	r2, sp, #16
 800f960:	ab05      	add	r3, sp, #20
 800f962:	4640      	mov	r0, r8
 800f964:	f7ff fe0e 	bl	800f584 <_GetArrowPara>
 800f968:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800f96a:	f7fb f91c 	bl	800aba6 <GUI_SetColor>
 800f96e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800f972:	f9bd 2026 	ldrsh.w	r2, [sp, #38]	; 0x26
 800f976:	f9bd 1024 	ldrsh.w	r1, [sp, #36]	; 0x24
 800f97a:	1ad2      	subs	r2, r2, r3
 800f97c:	2301      	movs	r3, #1
 800f97e:	9300      	str	r3, [sp, #0]
 800f980:	9b05      	ldr	r3, [sp, #20]
 800f982:	4638      	mov	r0, r7
 800f984:	1ac9      	subs	r1, r1, r3
 800f986:	1052      	asrs	r2, r2, #1
 800f988:	9b04      	ldr	r3, [sp, #16]
 800f98a:	f7fc f9eb 	bl	800bd64 <WIDGET__DrawTriangle>
 800f98e:	2000      	movs	r0, #0
 800f990:	b00b      	add	sp, #44	; 0x2c
 800f992:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f996:	bf00      	nop
 800f998:	0800f7bd 	.word	0x0800f7bd
 800f99c:	0800f761 	.word	0x0800f761
 800f9a0:	20000194 	.word	0x20000194
 800f9a4:	200001c0 	.word	0x200001c0
 800f9a8:	0800f611 	.word	0x0800f611
 800f9ac:	0800f3b9 	.word	0x0800f3b9
 800f9b0:	0800f5b5 	.word	0x0800f5b5
 800f9b4:	0800f355 	.word	0x0800f355

0800f9b8 <_Create>:
 800f9b8:	b530      	push	{r4, r5, lr}
 800f9ba:	b08d      	sub	sp, #52	; 0x34
 800f9bc:	4605      	mov	r5, r0
 800f9be:	f7fb fd53 	bl	800b468 <GUI_ALLOC_LockH>
 800f9c2:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800f9c4:	6c04      	ldr	r4, [r0, #64]	; 0x40
 800f9c6:	9000      	str	r0, [sp, #0]
 800f9c8:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800f9cc:	9301      	str	r3, [sp, #4]
 800f9ce:	4b07      	ldr	r3, [pc, #28]	; (800f9ec <_Create+0x34>)
 800f9d0:	6483      	str	r3, [r0, #72]	; 0x48
 800f9d2:	4668      	mov	r0, sp
 800f9d4:	f7fb fd56 	bl	800b484 <GUI_ALLOC_UnlockH>
 800f9d8:	2300      	movs	r3, #0
 800f9da:	9304      	str	r3, [sp, #16]
 800f9dc:	ab01      	add	r3, sp, #4
 800f9de:	9503      	str	r5, [sp, #12]
 800f9e0:	930b      	str	r3, [sp, #44]	; 0x2c
 800f9e2:	a803      	add	r0, sp, #12
 800f9e4:	47a0      	blx	r4
 800f9e6:	b00d      	add	sp, #52	; 0x34
 800f9e8:	bd30      	pop	{r4, r5, pc}
 800f9ea:	bf00      	nop
 800f9ec:	0800f9f1 	.word	0x0800f9f1

0800f9f0 <_CalcPositions>:
 800f9f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f9f4:	b090      	sub	sp, #64	; 0x40
 800f9f6:	4605      	mov	r5, r0
 800f9f8:	460c      	mov	r4, r1
 800f9fa:	f7fb fd35 	bl	800b468 <GUI_ALLOC_LockH>
 800f9fe:	4603      	mov	r3, r0
 800fa00:	9000      	str	r0, [sp, #0]
 800fa02:	c803      	ldmia	r0, {r0, r1}
 800fa04:	ae03      	add	r6, sp, #12
 800fa06:	e886 0003 	stmia.w	r6, {r0, r1}
 800fa0a:	8e58      	ldrh	r0, [r3, #50]	; 0x32
 800fa0c:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 800fa10:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 800fa14:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800fa18:	f9bd 700e 	ldrsh.w	r7, [sp, #14]
 800fa1c:	920e      	str	r2, [sp, #56]	; 0x38
 800fa1e:	f000 0008 	and.w	r0, r0, #8
 800fa22:	2800      	cmp	r0, #0
 800fa24:	bf0c      	ite	eq
 800fa26:	4608      	moveq	r0, r1
 800fa28:	4610      	movne	r0, r2
 800fa2a:	61a0      	str	r0, [r4, #24]
 800fa2c:	bf0c      	ite	eq
 800fa2e:	2000      	moveq	r0, #0
 800fa30:	2001      	movne	r0, #1
 800fa32:	aa01      	add	r2, sp, #4
 800fa34:	9001      	str	r0, [sp, #4]
 800fa36:	2019      	movs	r0, #25
 800fa38:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800fa3a:	9008      	str	r0, [sp, #32]
 800fa3c:	9507      	str	r5, [sp, #28]
 800fa3e:	920f      	str	r2, [sp, #60]	; 0x3c
 800fa40:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 800fa44:	970c      	str	r7, [sp, #48]	; 0x30
 800fa46:	910d      	str	r1, [sp, #52]	; 0x34
 800fa48:	a807      	add	r0, sp, #28
 800fa4a:	4798      	blx	r3
 800fa4c:	9b00      	ldr	r3, [sp, #0]
 800fa4e:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 800fa52:	2aff      	cmp	r2, #255	; 0xff
 800fa54:	4605      	mov	r5, r0
 800fa56:	d111      	bne.n	800fa7c <_CalcPositions+0x8c>
 800fa58:	6998      	ldr	r0, [r3, #24]
 800fa5a:	f7f4 ff7f 	bl	800495c <WM_GetScrollbarV>
 800fa5e:	b168      	cbz	r0, 800fa7c <_CalcPositions+0x8c>
 800fa60:	a905      	add	r1, sp, #20
 800fa62:	f7f4 ff94 	bl	800498e <WM_GetWindowRectEx>
 800fa66:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800fa6a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800fa6e:	429a      	cmp	r2, r3
 800fa70:	d104      	bne.n	800fa7c <_CalcPositions+0x8c>
 800fa72:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800fa76:	3b01      	subs	r3, #1
 800fa78:	f8ad 3010 	strh.w	r3, [sp, #16]
 800fa7c:	9b00      	ldr	r3, [sp, #0]
 800fa7e:	f9b3 2030 	ldrsh.w	r2, [r3, #48]	; 0x30
 800fa82:	2afe      	cmp	r2, #254	; 0xfe
 800fa84:	d111      	bne.n	800faaa <_CalcPositions+0xba>
 800fa86:	6998      	ldr	r0, [r3, #24]
 800fa88:	f7f4 ff63 	bl	8004952 <WM_GetScrollbarH>
 800fa8c:	b168      	cbz	r0, 800faaa <_CalcPositions+0xba>
 800fa8e:	a905      	add	r1, sp, #20
 800fa90:	f7f4 ff7d 	bl	800498e <WM_GetWindowRectEx>
 800fa94:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 800fa98:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800fa9c:	429a      	cmp	r2, r3
 800fa9e:	d104      	bne.n	800faaa <_CalcPositions+0xba>
 800faa0:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800faa4:	3b01      	subs	r3, #1
 800faa6:	f8ad 3012 	strh.w	r3, [sp, #18]
 800faaa:	427a      	negs	r2, r7
 800faac:	4630      	mov	r0, r6
 800faae:	f1c8 0100 	rsb	r1, r8, #0
 800fab2:	f7fa fff0 	bl	800aa96 <GUI_MoveRect>
 800fab6:	9800      	ldr	r0, [sp, #0]
 800fab8:	4631      	mov	r1, r6
 800faba:	f7fc f9ac 	bl	800be16 <SCROLLBAR__Rect2VRect>
 800fabe:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800fac2:	f9bd a010 	ldrsh.w	sl, [sp, #16]
 800fac6:	9b00      	ldr	r3, [sp, #0]
 800fac8:	ebc2 0a0a 	rsb	sl, r2, sl
 800facc:	f8d3 904c 	ldr.w	r9, [r3, #76]	; 0x4c
 800fad0:	6d58      	ldr	r0, [r3, #84]	; 0x54
 800fad2:	f10a 0601 	add.w	r6, sl, #1
 800fad6:	eba6 0645 	sub.w	r6, r6, r5, lsl #1
 800fada:	4649      	mov	r1, r9
 800fadc:	4370      	muls	r0, r6
 800fade:	f7f9 f94f 	bl	8008d80 <GUI__DivideRound32>
 800fae2:	4b17      	ldr	r3, [pc, #92]	; (800fb40 <_CalcPositions+0x150>)
 800fae4:	f8c4 a014 	str.w	sl, [r4, #20]
 800fae8:	f9b3 3000 	ldrsh.w	r3, [r3]
 800faec:	1c5a      	adds	r2, r3, #1
 800faee:	4282      	cmp	r2, r0
 800faf0:	bfa8      	it	ge
 800faf2:	1c98      	addge	r0, r3, #2
 800faf4:	42b0      	cmp	r0, r6
 800faf6:	bfb4      	ite	lt
 800faf8:	4607      	movlt	r7, r0
 800fafa:	4637      	movge	r7, r6
 800fafc:	ebc7 0806 	rsb	r8, r7, r6
 800fb00:	442e      	add	r6, r5
 800fb02:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800fb06:	6126      	str	r6, [r4, #16]
 800fb08:	ae10      	add	r6, sp, #64	; 0x40
 800fb0a:	6023      	str	r3, [r4, #0]
 800fb0c:	1e6b      	subs	r3, r5, #1
 800fb0e:	6063      	str	r3, [r4, #4]
 800fb10:	f856 3d40 	ldr.w	r3, [r6, #-64]!
 800fb14:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800fb16:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800fb18:	fb00 f008 	mul.w	r0, r0, r8
 800fb1c:	ebc1 0109 	rsb	r1, r1, r9
 800fb20:	f7f9 f92e 	bl	8008d80 <GUI__DivideRound32>
 800fb24:	4428      	add	r0, r5
 800fb26:	19c5      	adds	r5, r0, r7
 800fb28:	3d01      	subs	r5, #1
 800fb2a:	60a0      	str	r0, [r4, #8]
 800fb2c:	60e5      	str	r5, [r4, #12]
 800fb2e:	f8c4 801c 	str.w	r8, [r4, #28]
 800fb32:	6227      	str	r7, [r4, #32]
 800fb34:	4668      	mov	r0, sp
 800fb36:	f7fb fca5 	bl	800b484 <GUI_ALLOC_UnlockH>
 800fb3a:	b010      	add	sp, #64	; 0x40
 800fb3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fb40:	200000e2 	.word	0x200000e2

0800fb44 <_Paint>:
 800fb44:	b570      	push	{r4, r5, r6, lr}
 800fb46:	b098      	sub	sp, #96	; 0x60
 800fb48:	4606      	mov	r6, r0
 800fb4a:	f7fb fc8d 	bl	800b468 <GUI_ALLOC_LockH>
 800fb4e:	6d83      	ldr	r3, [r0, #88]	; 0x58
 800fb50:	9305      	str	r3, [sp, #20]
 800fb52:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800fb54:	6c04      	ldr	r4, [r0, #64]	; 0x40
 800fb56:	9001      	str	r0, [sp, #4]
 800fb58:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800fb5c:	a906      	add	r1, sp, #24
 800fb5e:	4605      	mov	r5, r0
 800fb60:	4630      	mov	r0, r6
 800fb62:	9304      	str	r3, [sp, #16]
 800fb64:	f7ff ff44 	bl	800f9f0 <_CalcPositions>
 800fb68:	a801      	add	r0, sp, #4
 800fb6a:	f7fb fc8b 	bl	800b484 <GUI_ALLOC_UnlockH>
 800fb6e:	a902      	add	r1, sp, #8
 800fb70:	4628      	mov	r0, r5
 800fb72:	f7fb ffd8 	bl	800bb26 <WIDGET__GetClientRect>
 800fb76:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800fb7a:	9314      	str	r3, [sp, #80]	; 0x50
 800fb7c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800fb80:	9316      	str	r3, [sp, #88]	; 0x58
 800fb82:	ab04      	add	r3, sp, #16
 800fb84:	9317      	str	r3, [sp, #92]	; 0x5c
 800fb86:	2308      	movs	r3, #8
 800fb88:	9310      	str	r3, [sp, #64]	; 0x40
 800fb8a:	9b06      	ldr	r3, [sp, #24]
 800fb8c:	9313      	str	r3, [sp, #76]	; 0x4c
 800fb8e:	9b07      	ldr	r3, [sp, #28]
 800fb90:	9315      	str	r3, [sp, #84]	; 0x54
 800fb92:	960f      	str	r6, [sp, #60]	; 0x3c
 800fb94:	a80f      	add	r0, sp, #60	; 0x3c
 800fb96:	47a0      	blx	r4
 800fb98:	2310      	movs	r3, #16
 800fb9a:	9310      	str	r3, [sp, #64]	; 0x40
 800fb9c:	9b07      	ldr	r3, [sp, #28]
 800fb9e:	3301      	adds	r3, #1
 800fba0:	9313      	str	r3, [sp, #76]	; 0x4c
 800fba2:	9b08      	ldr	r3, [sp, #32]
 800fba4:	3b01      	subs	r3, #1
 800fba6:	9315      	str	r3, [sp, #84]	; 0x54
 800fba8:	a80f      	add	r0, sp, #60	; 0x3c
 800fbaa:	47a0      	blx	r4
 800fbac:	2311      	movs	r3, #17
 800fbae:	9310      	str	r3, [sp, #64]	; 0x40
 800fbb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fbb2:	3301      	adds	r3, #1
 800fbb4:	9313      	str	r3, [sp, #76]	; 0x4c
 800fbb6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fbb8:	3b01      	subs	r3, #1
 800fbba:	9315      	str	r3, [sp, #84]	; 0x54
 800fbbc:	a80f      	add	r0, sp, #60	; 0x3c
 800fbbe:	47a0      	blx	r4
 800fbc0:	2313      	movs	r3, #19
 800fbc2:	9310      	str	r3, [sp, #64]	; 0x40
 800fbc4:	9b08      	ldr	r3, [sp, #32]
 800fbc6:	9313      	str	r3, [sp, #76]	; 0x4c
 800fbc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fbca:	9315      	str	r3, [sp, #84]	; 0x54
 800fbcc:	a80f      	add	r0, sp, #60	; 0x3c
 800fbce:	47a0      	blx	r4
 800fbd0:	2309      	movs	r3, #9
 800fbd2:	9310      	str	r3, [sp, #64]	; 0x40
 800fbd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fbd6:	9313      	str	r3, [sp, #76]	; 0x4c
 800fbd8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800fbda:	9315      	str	r3, [sp, #84]	; 0x54
 800fbdc:	a80f      	add	r0, sp, #60	; 0x3c
 800fbde:	47a0      	blx	r4
 800fbe0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fbe2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fbe4:	429a      	cmp	r2, r3
 800fbe6:	d006      	beq.n	800fbf6 <_Paint+0xb2>
 800fbe8:	210c      	movs	r1, #12
 800fbea:	3201      	adds	r2, #1
 800fbec:	9110      	str	r1, [sp, #64]	; 0x40
 800fbee:	9213      	str	r2, [sp, #76]	; 0x4c
 800fbf0:	9315      	str	r3, [sp, #84]	; 0x54
 800fbf2:	a80f      	add	r0, sp, #60	; 0x3c
 800fbf4:	47a0      	blx	r4
 800fbf6:	b018      	add	sp, #96	; 0x60
 800fbf8:	bd70      	pop	{r4, r5, r6, pc}

0800fbfa <LCD_GetNumLayers>:
 800fbfa:	b510      	push	{r4, lr}
 800fbfc:	2000      	movs	r0, #0
 800fbfe:	f7fa fc75 	bl	800a4ec <GUI_DEVICE__GetpDriver>
 800fc02:	1c04      	adds	r4, r0, #0
 800fc04:	f04f 0001 	mov.w	r0, #1
 800fc08:	bf18      	it	ne
 800fc0a:	2401      	movne	r4, #1
 800fc0c:	f7fa fc6e 	bl	800a4ec <GUI_DEVICE__GetpDriver>
 800fc10:	b100      	cbz	r0, 800fc14 <LCD_GetNumLayers+0x1a>
 800fc12:	3401      	adds	r4, #1
 800fc14:	4620      	mov	r0, r4
 800fc16:	bd10      	pop	{r4, pc}

0800fc18 <__libc_init_array>:
 800fc18:	b570      	push	{r4, r5, r6, lr}
 800fc1a:	4e0d      	ldr	r6, [pc, #52]	; (800fc50 <__libc_init_array+0x38>)
 800fc1c:	4c0d      	ldr	r4, [pc, #52]	; (800fc54 <__libc_init_array+0x3c>)
 800fc1e:	1ba4      	subs	r4, r4, r6
 800fc20:	10a4      	asrs	r4, r4, #2
 800fc22:	2500      	movs	r5, #0
 800fc24:	42a5      	cmp	r5, r4
 800fc26:	d109      	bne.n	800fc3c <__libc_init_array+0x24>
 800fc28:	4e0b      	ldr	r6, [pc, #44]	; (800fc58 <__libc_init_array+0x40>)
 800fc2a:	4c0c      	ldr	r4, [pc, #48]	; (800fc5c <__libc_init_array+0x44>)
 800fc2c:	f000 f8a4 	bl	800fd78 <_init>
 800fc30:	1ba4      	subs	r4, r4, r6
 800fc32:	10a4      	asrs	r4, r4, #2
 800fc34:	2500      	movs	r5, #0
 800fc36:	42a5      	cmp	r5, r4
 800fc38:	d105      	bne.n	800fc46 <__libc_init_array+0x2e>
 800fc3a:	bd70      	pop	{r4, r5, r6, pc}
 800fc3c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800fc40:	4798      	blx	r3
 800fc42:	3501      	adds	r5, #1
 800fc44:	e7ee      	b.n	800fc24 <__libc_init_array+0xc>
 800fc46:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800fc4a:	4798      	blx	r3
 800fc4c:	3501      	adds	r5, #1
 800fc4e:	e7f2      	b.n	800fc36 <__libc_init_array+0x1e>
 800fc50:	08012bf4 	.word	0x08012bf4
 800fc54:	08012bf4 	.word	0x08012bf4
 800fc58:	08012bf4 	.word	0x08012bf4
 800fc5c:	08012bf8 	.word	0x08012bf8

0800fc60 <__itoa>:
 800fc60:	1e93      	subs	r3, r2, #2
 800fc62:	2b22      	cmp	r3, #34	; 0x22
 800fc64:	b510      	push	{r4, lr}
 800fc66:	460c      	mov	r4, r1
 800fc68:	d904      	bls.n	800fc74 <__itoa+0x14>
 800fc6a:	2300      	movs	r3, #0
 800fc6c:	700b      	strb	r3, [r1, #0]
 800fc6e:	461c      	mov	r4, r3
 800fc70:	4620      	mov	r0, r4
 800fc72:	bd10      	pop	{r4, pc}
 800fc74:	2a0a      	cmp	r2, #10
 800fc76:	d109      	bne.n	800fc8c <__itoa+0x2c>
 800fc78:	2800      	cmp	r0, #0
 800fc7a:	da07      	bge.n	800fc8c <__itoa+0x2c>
 800fc7c:	232d      	movs	r3, #45	; 0x2d
 800fc7e:	700b      	strb	r3, [r1, #0]
 800fc80:	4240      	negs	r0, r0
 800fc82:	2101      	movs	r1, #1
 800fc84:	4421      	add	r1, r4
 800fc86:	f000 f839 	bl	800fcfc <__utoa>
 800fc8a:	e7f1      	b.n	800fc70 <__itoa+0x10>
 800fc8c:	2100      	movs	r1, #0
 800fc8e:	e7f9      	b.n	800fc84 <__itoa+0x24>

0800fc90 <itoa>:
 800fc90:	f7ff bfe6 	b.w	800fc60 <__itoa>

0800fc94 <memcpy>:
 800fc94:	b510      	push	{r4, lr}
 800fc96:	1e43      	subs	r3, r0, #1
 800fc98:	440a      	add	r2, r1
 800fc9a:	4291      	cmp	r1, r2
 800fc9c:	d100      	bne.n	800fca0 <memcpy+0xc>
 800fc9e:	bd10      	pop	{r4, pc}
 800fca0:	f811 4b01 	ldrb.w	r4, [r1], #1
 800fca4:	f803 4f01 	strb.w	r4, [r3, #1]!
 800fca8:	e7f7      	b.n	800fc9a <memcpy+0x6>

0800fcaa <memmove>:
 800fcaa:	4288      	cmp	r0, r1
 800fcac:	b510      	push	{r4, lr}
 800fcae:	eb01 0302 	add.w	r3, r1, r2
 800fcb2:	d807      	bhi.n	800fcc4 <memmove+0x1a>
 800fcb4:	1e42      	subs	r2, r0, #1
 800fcb6:	4299      	cmp	r1, r3
 800fcb8:	d00a      	beq.n	800fcd0 <memmove+0x26>
 800fcba:	f811 4b01 	ldrb.w	r4, [r1], #1
 800fcbe:	f802 4f01 	strb.w	r4, [r2, #1]!
 800fcc2:	e7f8      	b.n	800fcb6 <memmove+0xc>
 800fcc4:	4283      	cmp	r3, r0
 800fcc6:	d9f5      	bls.n	800fcb4 <memmove+0xa>
 800fcc8:	1881      	adds	r1, r0, r2
 800fcca:	1ad2      	subs	r2, r2, r3
 800fccc:	42d3      	cmn	r3, r2
 800fcce:	d100      	bne.n	800fcd2 <memmove+0x28>
 800fcd0:	bd10      	pop	{r4, pc}
 800fcd2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800fcd6:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800fcda:	e7f7      	b.n	800fccc <memmove+0x22>

0800fcdc <memset>:
 800fcdc:	4402      	add	r2, r0
 800fcde:	4603      	mov	r3, r0
 800fce0:	4293      	cmp	r3, r2
 800fce2:	d100      	bne.n	800fce6 <memset+0xa>
 800fce4:	4770      	bx	lr
 800fce6:	f803 1b01 	strb.w	r1, [r3], #1
 800fcea:	e7f9      	b.n	800fce0 <memset+0x4>

0800fcec <strcpy>:
 800fcec:	4603      	mov	r3, r0
 800fcee:	f811 2b01 	ldrb.w	r2, [r1], #1
 800fcf2:	f803 2b01 	strb.w	r2, [r3], #1
 800fcf6:	2a00      	cmp	r2, #0
 800fcf8:	d1f9      	bne.n	800fcee <strcpy+0x2>
 800fcfa:	4770      	bx	lr

0800fcfc <__utoa>:
 800fcfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fcfe:	4b1d      	ldr	r3, [pc, #116]	; (800fd74 <__utoa+0x78>)
 800fd00:	b08b      	sub	sp, #44	; 0x2c
 800fd02:	4605      	mov	r5, r0
 800fd04:	460c      	mov	r4, r1
 800fd06:	466e      	mov	r6, sp
 800fd08:	f103 0c20 	add.w	ip, r3, #32
 800fd0c:	6818      	ldr	r0, [r3, #0]
 800fd0e:	6859      	ldr	r1, [r3, #4]
 800fd10:	4637      	mov	r7, r6
 800fd12:	c703      	stmia	r7!, {r0, r1}
 800fd14:	3308      	adds	r3, #8
 800fd16:	4563      	cmp	r3, ip
 800fd18:	463e      	mov	r6, r7
 800fd1a:	d1f7      	bne.n	800fd0c <__utoa+0x10>
 800fd1c:	6818      	ldr	r0, [r3, #0]
 800fd1e:	791b      	ldrb	r3, [r3, #4]
 800fd20:	713b      	strb	r3, [r7, #4]
 800fd22:	1e93      	subs	r3, r2, #2
 800fd24:	2b22      	cmp	r3, #34	; 0x22
 800fd26:	6038      	str	r0, [r7, #0]
 800fd28:	f04f 0300 	mov.w	r3, #0
 800fd2c:	d904      	bls.n	800fd38 <__utoa+0x3c>
 800fd2e:	7023      	strb	r3, [r4, #0]
 800fd30:	461c      	mov	r4, r3
 800fd32:	4620      	mov	r0, r4
 800fd34:	b00b      	add	sp, #44	; 0x2c
 800fd36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fd38:	1e66      	subs	r6, r4, #1
 800fd3a:	fbb5 f0f2 	udiv	r0, r5, r2
 800fd3e:	af0a      	add	r7, sp, #40	; 0x28
 800fd40:	fb02 5510 	mls	r5, r2, r0, r5
 800fd44:	443d      	add	r5, r7
 800fd46:	1c59      	adds	r1, r3, #1
 800fd48:	f815 5c28 	ldrb.w	r5, [r5, #-40]
 800fd4c:	f806 5f01 	strb.w	r5, [r6, #1]!
 800fd50:	4605      	mov	r5, r0
 800fd52:	b968      	cbnz	r0, 800fd70 <__utoa+0x74>
 800fd54:	5460      	strb	r0, [r4, r1]
 800fd56:	4423      	add	r3, r4
 800fd58:	4622      	mov	r2, r4
 800fd5a:	1b19      	subs	r1, r3, r4
 800fd5c:	1b10      	subs	r0, r2, r4
 800fd5e:	4281      	cmp	r1, r0
 800fd60:	dde7      	ble.n	800fd32 <__utoa+0x36>
 800fd62:	7811      	ldrb	r1, [r2, #0]
 800fd64:	7818      	ldrb	r0, [r3, #0]
 800fd66:	f802 0b01 	strb.w	r0, [r2], #1
 800fd6a:	f803 1901 	strb.w	r1, [r3], #-1
 800fd6e:	e7f4      	b.n	800fd5a <__utoa+0x5e>
 800fd70:	460b      	mov	r3, r1
 800fd72:	e7e2      	b.n	800fd3a <__utoa+0x3e>
 800fd74:	08012bc4 	.word	0x08012bc4

0800fd78 <_init>:
 800fd78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fd7a:	bf00      	nop
 800fd7c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800fd7e:	bc08      	pop	{r3}
 800fd80:	469e      	mov	lr, r3
 800fd82:	4770      	bx	lr

0800fd84 <_fini>:
 800fd84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fd86:	bf00      	nop
 800fd88:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800fd8a:	bc08      	pop	{r3}
 800fd8c:	469e      	mov	lr, r3
 800fd8e:	4770      	bx	lr
